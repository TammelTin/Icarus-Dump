// Class Icarus.TraitBehaviour
// Size: 0xc0 (Inherited: 0xb0)
struct UTraitBehaviour : UActorComponent {
	struct UTraitBehaviours* OwningComponent; // 0xb0(0x08)
	bool bBehaviourDelegatesBound; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	void OnTraitAnimNotify(struct FAnimNotifyEvent Notify, struct AActor* AnimInstancePawn); // Function Icarus.TraitBehaviour.OnTraitAnimNotify // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16dc9b0
	void OnRep_OwningComponent(); // Function Icarus.TraitBehaviour.OnRep_OwningComponent // (Native|Event|Protected|BlueprintEvent) // @ game+0x1500cd0
};

// Class Icarus.ActionableBehaviour
// Size: 0x2c0 (Inherited: 0xc0)
struct UActionableBehaviour : UTraitBehaviour {
	struct TArray<enum class EActionableEventType> ActionEventTypes; // 0xc0(0x10)
	struct FActionsRowHandle ActionRowHandle; // 0xd0(0x18)
	struct TMap<enum class EActionableEventType, struct FStaminaActionCostsRowHandle> StaminaCosts; // 0xe8(0x50)
	struct FMulticastInlineDelegate OnCooldownElapsed; // 0x138(0x10)
	struct FModifierStatesRowHandle ModifierRowHandle; // 0x148(0x18)
	char pad_160[0x50]; // 0x160(0x50)
	struct UCharacterState* OwnerActorState; // 0x1b0(0x08)
	struct AActor* OwnerActor; // 0x1b8(0x08)
	char pad_1C0[0xf8]; // 0x1c0(0xf8)
	struct UIcarusAnimInstance* AnimatingMeshAnimInstance; // 0x2b8(0x08)

	void PerformActionFromMenu(struct AActor* InvokingActor); // Function Icarus.ActionableBehaviour.PerformActionFromMenu // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void PerformAction(struct AActor* InvokingActor, enum class EActionableEventType OnActionType, enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.PerformAction // (Native|Event|Public|BlueprintEvent) // @ game+0x14d07d0
	void OnUsedFromMenu(struct AActor* InvokingActor); // Function Icarus.ActionableBehaviour.OnUsedFromMenu // (Final|Native|Public) // @ game+0x14d0740
	void OnActionNotify(struct FName NotifyName); // Function Icarus.ActionableBehaviour.OnActionNotify // (Final|Native|Private) // @ game+0x14d0570
	void OnActionInsufficientStamina(enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.OnActionInsufficientStamina // (Native|Event|Public|BlueprintEvent) // @ game+0x14d04f0
	void OnActionInsufficientDurability(enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.OnActionInsufficientDurability // (Native|Event|Public|BlueprintEvent) // @ game+0x14d0470
	void OnActionHit(struct AActor* InvokingActor, struct UPrimitiveComponent* OverlappedComponent, struct FHitResult SweepResult); // Function Icarus.ActionableBehaviour.OnActionHit // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x14d02e0
	void OnActionAborted(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.OnActionAborted // (Native|Event|Public|BlueprintEvent) // @ game+0x14d0260
	void OnAction(struct AActor* InvokingActor, enum class EActionableEventType OnActionType, enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.OnAction // (Final|Native|Public) // @ game+0x14d0150
	void NetMulti_OnActionInsufficientStamina(enum class EActionableTrigger ActionTrigger); // Function Icarus.ActionableBehaviour.NetMulti_OnActionInsufficientStamina // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14cfec0
	void Multicast_NotifyCurrentActionAborted(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.Multicast_NotifyCurrentActionAborted // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x14cfd20
	bool IsActionAborted(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.IsActionAborted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf610
	bool HasCooldownElapsed(enum class EActionableEventType ActionType); // Function Icarus.ActionableBehaviour.HasCooldownElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf460
	struct FStaminaCost GetStaminaCostForEventType(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.GetStaminaCostForEventType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf350
	struct TArray<struct FRowHandle> GetGenericData(); // Function Icarus.ActionableBehaviour.GetGenericData // (Final|Native|Public|BlueprintCallable) // @ game+0x14cf2d0
	float GetCooldownSpeedMultiplier(); // Function Icarus.ActionableBehaviour.GetCooldownSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf2a0
	float GetCooldownDuration(); // Function Icarus.ActionableBehaviour.GetCooldownDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf270
	struct USkeletalMeshComponent* GetAnimatingMesh(); // Function Icarus.ActionableBehaviour.GetAnimatingMesh // (Native|Event|Public|BlueprintEvent) // @ game+0x14cf1a0
	bool GetActionData(struct FActionData OutData); // Function Icarus.ActionableBehaviour.GetActionData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ceaf0
	struct UActionableComponent* GetActionableComponent(); // Function Icarus.ActionableBehaviour.GetActionableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ced70
	void CheckCurrentActionAborted(struct UActorState* ActorStateIn, int32_t UID); // Function Icarus.ActionableBehaviour.CheckCurrentActionAborted // (Final|Native|Private) // @ game+0x14ce7f0
	void CancelStaminaActionForEventType(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.CancelStaminaActionForEventType // (Final|Native|Public|BlueprintCallable) // @ game+0x14ce650
	bool BP_ShouldApplyEndStaminaCost(enum class EActionableEventType EventType); // Function Icarus.ActionableBehaviour.BP_ShouldApplyEndStaminaCost // (Native|Event|Public|BlueprintEvent) // @ game+0x14ce3e0
	void BeginActionCooldown(enum class EActionableEventType ActionableEvent); // Function Icarus.ActionableBehaviour.BeginActionCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x14ce470
	void ActionComplete(enum class EActionableEventType ActionType); // Function Icarus.ActionableBehaviour.ActionComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x14ce060
	void AbortAction(enum class EActionableEventType EventType, bool bApplyEndActionStaminaCost); // Function Icarus.ActionableBehaviour.AbortAction // (Final|Native|Public|BlueprintCallable) // @ game+0x14cde40
};

// Class Icarus.TraitComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTraitComponent : UActorComponent {
	struct FMulticastSparseDelegate DynamicDataUpdated; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FRowHandle DataRowHandle; // 0xb4(0x18)
	char pad_CC[0x4]; // 0xcc(0x04)

	void OnRep_DataRowHandle(); // Function Icarus.TraitComponent.OnRep_DataRowHandle // (Final|Native|Protected) // @ game+0x16dcb30
	void OnDataSet(); // Function Icarus.TraitComponent.OnDataSet // (Native|Event|Protected|BlueprintEvent) // @ game+0x1500cd0
	void OnAnimNotify(struct FAnimNotifyEvent Notify, struct AActor* AnimInstancePawn); // Function Icarus.TraitComponent.OnAnimNotify // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16dc9b0
	struct UTraitComponent* GetTraitClassFromData(struct FRowHandle ItemDataRow); // Function Icarus.TraitComponent.GetTraitClassFromData // (Native|Public) // @ game+0x16db980
	struct AIcarusItem* GetOwnerIcarusItem(); // Function Icarus.TraitComponent.GetOwnerIcarusItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16db440
	struct AIcarusActor* GetOwnerIcarusActor(); // Function Icarus.TraitComponent.GetOwnerIcarusActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16db410
};

// Class Icarus.TraitBehaviours
// Size: 0xe8 (Inherited: 0xd0)
struct UTraitBehaviours : UTraitComponent {
	struct FMulticastSparseDelegate OnTraitAnimNotify; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct TArray<struct UTraitBehaviour*> OwnedBehaviours; // 0xd8(0x10)

	void RegisterBehaviour(struct UTraitBehaviour* Behaviour); // Function Icarus.TraitBehaviours.RegisterBehaviour // (Native|Event|Public|BlueprintEvent) // @ game+0x166e0f0
	struct UTraitBehaviour* GetFirstBehaviourOfType(struct UTraitBehaviour* Class); // Function Icarus.TraitBehaviours.GetFirstBehaviourOfType // (Final|Native|Public|BlueprintCallable) // @ game+0x16db370
	struct TArray<struct UTraitBehaviour*> GetBehaviours(); // Function Icarus.TraitBehaviours.GetBehaviours // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16db2e0
	void CreateBehaviours(); // Function Icarus.TraitBehaviours.CreateBehaviours // (Native|Event|Protected|BlueprintEvent) // @ game+0x15069f0
	struct UTraitBehaviour* CreateBehaviour(struct UTraitBehaviour* BehaviourClass); // Function Icarus.TraitBehaviours.CreateBehaviour // (Final|Native|Protected|BlueprintCallable) // @ game+0x16dade0
};

// Class Icarus.ActionableComponent
// Size: 0x158 (Inherited: 0xe8)
struct UActionableComponent : UTraitBehaviours {
	struct FMulticastSparseDelegate OnAction; // 0xe8(0x01)
	struct FMulticastSparseDelegate OnUsedFromMenu; // 0xe9(0x01)
	struct FMulticastSparseDelegate OnActionHit; // 0xea(0x01)
	struct FMulticastSparseDelegate OnAssociatedItemUpdated; // 0xeb(0x01)
	char pad_EC[0x54]; // 0xec(0x54)
	int32_t AssociatedItemInventoryId; // 0x140(0x04)
	int32_t AssociatedItemInventorySlot; // 0x144(0x04)
	int32_t DynamicState; // 0x148(0x04)
	int32_t GunCurrentMagSize; // 0x14c(0x04)
	int32_t CurrentAmmoType; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)

	void UseFromMenu(struct AActor* InvokingActor); // Function Icarus.ActionableComponent.UseFromMenu // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x14d1560
	void SetNewAssociatedItem(int32_t NewAssociatedItemInventoryId, int32_t NewAssocaitedItemSlot); // Function Icarus.ActionableComponent.SetNewAssociatedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x14d1200
	void SetGunCurrentMagSize(int32_t NewGunCurrentMagSize); // Function Icarus.ActionableComponent.SetGunCurrentMagSize // (Final|Native|Public|BlueprintCallable) // @ game+0x14d1120
	void SetDynamicState(int32_t NewDynamicState); // Function Icarus.ActionableComponent.SetDynamicState // (Final|Native|Public|BlueprintCallable) // @ game+0x14d1090
	void SetCurrentAmmoType(int32_t NewCurrentAmmoType); // Function Icarus.ActionableComponent.SetCurrentAmmoType // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0fb0
	void SetAssociatedItemInventorySlot(int32_t NewAssociatedItemInventorySlot); // Function Icarus.ActionableComponent.SetAssociatedItemInventorySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0e80
	void SetAssociatedItemInventoryId(int32_t NewAssociatedItemInventoryId); // Function Icarus.ActionableComponent.SetAssociatedItemInventoryId // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0d50
	void Server_OwningClientActionableHitNamed(struct AActor* InvokingActor, struct AActor* OverlappedComponentOwner, struct FName OverlappedComponentName, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Server_OwningClientActionableHitNamed // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14d0bc0
	void Server_OwningClientActionableHit(struct AActor* InvokingActor, struct UPrimitiveComponent* OverlappedComponent, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Server_OwningClientActionableHit // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14d0a40
	void OnRep_CurrentAmmoType(); // Function Icarus.ActionableComponent.OnRep_CurrentAmmoType // (Final|Native|Public) // @ game+0x14d0720
	void OnHeldTimerExpired(struct AActor* InvokingActor, enum class EActionableEventType ActionType, bool bClientPrediction); // Function Icarus.ActionableComponent.OnHeldTimerExpired // (Final|Native|Public) // @ game+0x14d0600
	void Multicast_ActionableHitNamed(struct AActor* InvokingActor, struct AActor* OverlappedComponentOwner, struct FName OverlappedComponentName, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Multicast_ActionableHitNamed // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x14cfb90
	void Multicast_ActionableHit(struct AActor* InvokingActor, struct UPrimitiveComponent* OverlappedComponent, struct FHitResult SweepResult); // Function Icarus.ActionableComponent.Multicast_ActionableHit // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x14cfa10
	struct UActionableBehaviour* GetBehaviourForActionType(enum class EActionableEventType EventType); // Function Icarus.ActionableComponent.GetBehaviourForActionType // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cf1d0
	bool GetActionData(struct FActionsRowHandle ActionRowHandle, struct FActionData OutData); // Function Icarus.ActionableComponent.GetActionData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cebb0
	bool GetActionableData(struct FActionableData OutData); // Function Icarus.ActionableComponent.GetActionableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ceda0
	void Action(struct AActor* InvokingActor, enum class EActionableEventType ActionType, enum class EActionableTrigger ActionTrigger, bool bClientPrediction); // Function Icarus.ActionableComponent.Action // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x14cdf10
};

// Class Icarus.ActionableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UActionableLibrary : URowLibrary {

	struct FActionableRowHandle StructToRowHandle(struct FActionableEnum EnumValue); // Function Icarus.ActionableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d14b0
	struct FName StructToName(struct FActionableEnum EnumValue); // Function Icarus.ActionableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d1410
	int32_t StructToInt(struct FActionableEnum EnumValue); // Function Icarus.ActionableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d1370
	struct FActionableEnum RowHandleToStruct(struct FActionableRowHandle RowHandle); // Function Icarus.ActionableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d0980
	void RemoveRowFromActionableTable(struct FName Name); // Function Icarus.ActionableLibrary.RemoveRowFromActionableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14d0900
	void RefreshConstants(); // Function Icarus.ActionableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14d08e0
	int32_t NumRows(); // Function Icarus.ActionableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d0120
	bool NotEqual_EnumName(struct FActionableEnum A, struct FName B); // Function Icarus.ActionableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d0030
	bool NotEqual_EnumEnum(struct FActionableEnum A, struct FActionableEnum B); // Function Icarus.ActionableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cff40
	struct FActionableEnum NameToStruct(struct FName NameValue); // Function Icarus.ActionableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cfe30
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ActionableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14cfda0
	struct FActionableRowHandle MakeLiteralActionable(struct FActionableRowHandle RowHandle); // Function Icarus.ActionableLibrary.MakeLiteralActionable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cf940
	struct FActionableRowHandle MakeActionableFromIndex(int32_t Index); // Function Icarus.ActionableLibrary.MakeActionableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cf8b0
	struct FActionableEnum MakeActionableEnum(struct FActionableEnum Enum); // Function Icarus.ActionableLibrary.MakeActionableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cf830
	struct FActionableRowHandle MakeActionable(struct FName RowName); // Function Icarus.ActionableLibrary.MakeActionable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cf790
	bool IsValidName(struct FName NameValue); // Function Icarus.ActionableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14cf700
	struct FActionableEnum IntToStruct(int32_t IntValue); // Function Icarus.ActionableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14cf580
	struct FName IntToName(int32_t IntValue); // Function Icarus.ActionableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14cf4f0
	void GetActionableStruct(struct FActionableRowHandle RowHandle, struct FActionableData Actionable, enum class EValid Paths); // Function Icarus.ActionableLibrary.GetActionableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14cef90
	bool EqualEqual_FActionableRowHandleFActionableRowHandle(struct FActionableRowHandle RowHandleA, struct FActionableRowHandle RowHandleB); // Function Icarus.ActionableLibrary.EqualEqual_FActionableRowHandleFActionableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ce9b0
	bool EqualEqual_EnumEnum(struct FActionableEnum A, struct FActionableEnum B); // Function Icarus.ActionableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ce8c0
	struct FActionableRowHandle CastToActionableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ActionableLibrary.CastToActionableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ce6d0
	void BreakActionableEnum(struct FActionableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ActionableLibrary.BreakActionableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14ce4f0
	void AddRowToActionableTable(struct FName Name, struct FActionableData Data, struct FActionableRowHandle NewRow); // Function Icarus.ActionableLibrary.AddRowToActionableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ce0e0
};

// Class Icarus.ActionableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UActionableTable : UIcarusDataTable {
};

// Class Icarus.ActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UActionsLibrary : URowLibrary {

	struct FActionsRowHandle StructToRowHandle(struct FActionsEnum EnumValue); // Function Icarus.ActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d7590
	struct FName StructToName(struct FActionsEnum EnumValue); // Function Icarus.ActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d7450
	int32_t StructToInt(struct FActionsEnum EnumValue); // Function Icarus.ActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d7310
	struct FActionsEnum RowHandleToStruct(struct FActionsRowHandle RowHandle); // Function Icarus.ActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6e70
	void RemoveRowFromActionsTable(struct FName Name); // Function Icarus.ActionsLibrary.RemoveRowFromActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14d6d30
	void RefreshConstants(); // Function Icarus.ActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14d6c60
	int32_t NumRows(); // Function Icarus.ActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6ab0
	bool NotEqual_EnumName(struct FActionsEnum A, struct FName B); // Function Icarus.ActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d68d0
	bool NotEqual_EnumEnum(struct FActionsEnum A, struct FActionsEnum B); // Function Icarus.ActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d66f0
	struct FActionsEnum NameToStruct(struct FName NameValue); // Function Icarus.ActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d65d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14d64b0
	struct FActionsRowHandle MakeLiteralActions(struct FActionsRowHandle RowHandle); // Function Icarus.ActionsLibrary.MakeLiteralActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d61b0
	struct FActionsRowHandle MakeActionsFromIndex(int32_t Index); // Function Icarus.ActionsLibrary.MakeActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d5f70
	struct FActionsEnum MakeActionsEnum(struct FActionsEnum Enum); // Function Icarus.ActionsLibrary.MakeActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d5ef0
	struct FActionsRowHandle MakeActions(struct FName RowName); // Function Icarus.ActionsLibrary.MakeActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d5e50
	bool IsValidName(struct FName NameValue); // Function Icarus.ActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14d5d10
	struct FActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.ActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d5b30
	struct FName IntToName(int32_t IntValue); // Function Icarus.ActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14d5a10
	void GetActionsStruct(struct FActionsRowHandle RowHandle, struct FActionData Actions, enum class EValid Paths); // Function Icarus.ActionsLibrary.GetActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d5640
	bool EqualEqual_FActionsRowHandleFActionsRowHandle(struct FActionsRowHandle RowHandleA, struct FActionsRowHandle RowHandleB); // Function Icarus.ActionsLibrary.EqualEqual_FActionsRowHandleFActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d53c0
	bool EqualEqual_EnumEnum(struct FActionsEnum A, struct FActionsEnum B); // Function Icarus.ActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d51e0
	struct FActionsRowHandle CastToActionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ActionsLibrary.CastToActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d4f70
	void BreakActionsEnum(struct FActionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ActionsLibrary.BreakActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14d4c80
	void AddRowToActionsTable(struct FName Name, struct FActionData Data, struct FActionsRowHandle NewRow); // Function Icarus.ActionsLibrary.AddRowToActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d48e0
};

// Class Icarus.ActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UActionsTable : UIcarusDataTable {
};

// Class Icarus.ActorState
// Size: 0x1f8 (Inherited: 0xb0)
struct UActorState : UActorComponent {
	struct FIcarusDamagePacket LastDamagePacket; // 0xb0(0xc0)
	char pad_170[0x8]; // 0x170(0x08)
	struct FMulticastInlineDelegate OnActorStateReady; // 0x178(0x10)
	struct FMulticastSparseDelegate OnActorDeath; // 0x188(0x01)
	struct FMulticastSparseDelegate OnAliveStateChanged; // 0x189(0x01)
	struct FMulticastSparseDelegate OnDamaged; // 0x18a(0x01)
	struct FMulticastSparseDelegate OnHealthUpdated; // 0x18b(0x01)
	struct FMulticastSparseDelegate OnShelterUpdated; // 0x18c(0x01)
	struct FMulticastSparseDelegate BiomeUpdated; // 0x18d(0x01)
	char pad_18E[0x2]; // 0x18e(0x02)
	int32_t Health; // 0x190(0x04)
	int32_t MaxHealth; // 0x194(0x04)
	float Shelter; // 0x198(0x04)
	int32_t ExternalTemperature; // 0x19c(0x04)
	struct FBiomesRowHandle CurrentBiome; // 0x1a0(0x18)
	enum class EAliveState CurrentAliveState; // 0x1b8(0x01)
	char pad_1B9[0x7]; // 0x1b9(0x07)
	struct UIcarusStatContainer* OwnerStatContainer; // 0x1c0(0x08)
	char pad_1C8[0xc]; // 0x1c8(0x0c)
	struct FBiomesRowHandle BiomeOverride; // 0x1d4(0x18)
	bool BlockBiomeUpdate; // 0x1ec(0x01)
	char pad_1ED[0x7]; // 0x1ed(0x07)
	bool bHasHealthRegen; // 0x1f4(0x01)
	char pad_1F5[0x3]; // 0x1f5(0x03)

	void WeatherTimeTick(float Delta); // Function Icarus.ActorState.WeatherTimeTick // (Final|Native|Private) // @ game+0x14d7880
	void TakeDamage(struct FIcarusDamagePacket DamagePacket); // Function Icarus.ActorState.TakeDamage // (Final|Native|Public) // @ game+0x14d76f0
	void StatContainerUpdated(); // Function Icarus.ActorState.StatContainerUpdated // (Native|Public) // @ game+0x14d72f0
	void SetShelter(float Amount); // Function Icarus.ActorState.SetShelter // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7270
	void SetHealth(int32_t Amount); // Function Icarus.ActorState.SetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x14d71e0
	void SetBlockBiomeUpdate(bool bLock); // Function Icarus.ActorState.SetBlockBiomeUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x14d7150
	void SetBiomeOverride(struct FBiomesRowHandle Biome); // Function Icarus.ActorState.SetBiomeOverride // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14d70a0
	void SetBiome(struct FBiomesRowHandle Biome); // Function Icarus.ActorState.SetBiome // (Final|Native|Public) // @ game+0x14d6ff0
	void Respawn(); // Function Icarus.ActorState.Respawn // (Native|Public|BlueprintCallable) // @ game+0x14d6e50
	void RequestBiomeUpdate(); // Function Icarus.ActorState.RequestBiomeUpdate // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14d6e30
	void RegenTick(float DeltaTime); // Function Icarus.ActorState.RegenTick // (Native|Public) // @ game+0x14d6ca0
	void RecalculateHealthRegenRate(); // Function Icarus.ActorState.RecalculateHealthRegenRate // (Final|Native|Protected) // @ game+0x14d6c40
	void RecalculateCurrentHealth(); // Function Icarus.ActorState.RecalculateCurrentHealth // (Final|Native|Protected) // @ game+0x14d6c20
	void OnRep_Health(); // Function Icarus.ActorState.OnRep_Health // (Final|Native|Protected) // @ game+0x14d6c00
	void OnRep_CurrentBiome(); // Function Icarus.ActorState.OnRep_CurrentBiome // (Final|Native|Protected) // @ game+0x14d6be0
	void OnRep_CurrentAliveState(); // Function Icarus.ActorState.OnRep_CurrentAliveState // (Final|Native|Protected) // @ game+0x14d6bc0
	void OnCurrentBiomeUpdated(struct FBiomesRowHandle NewBiome); // Function Icarus.ActorState.OnCurrentBiomeUpdated // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x14d6b10
	void Multicast_OnDamaged(int32_t InDamage, struct FDamageEvent DamageEvent, struct AController* Instigator, struct AActor* DamageCauser); // Function Icarus.ActorState.Multicast_OnDamaged // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14d6350
	void Kill(); // Function Icarus.ActorState.Kill // (Final|Native|Public|BlueprintCallable) // @ game+0x14d5e30
	bool IsAlive(); // Function Icarus.ActorState.IsAlive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d5ce0
	void InternalTick(float DeltaTime); // Function Icarus.ActorState.InternalTick // (Native|Protected) // @ game+0x14d5c50
	float GetShelter(); // Function Icarus.ActorState.GetShelter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d59e0
	int32_t GetMaxHealth(); // Function Icarus.ActorState.GetMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d59b0
	int32_t GetHealth(); // Function Icarus.ActorState.GetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d5980
	int32_t GetEnvironmentalTemperature(); // Function Icarus.ActorState.GetEnvironmentalTemperature // (Final|Native|Public) // @ game+0x14d5950
	int32_t ConsumeNextUID(); // Function Icarus.ActorState.ConsumeNextUID // (Final|Native|Public) // @ game+0x14d51b0
	bool CanRegenerateHealth(); // Function Icarus.ActorState.CanRegenerateHealth // (Native|Public|Const) // @ game+0x14d4f40
	void AddHealth(int32_t Amount); // Function Icarus.ActorState.AddHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x14d4850
};

// Class Icarus.IcarusStateRecorderComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UIcarusStateRecorderComponent : UActorComponent {
	bool bBeginRecordingImmediately; // 0xb0(0x01)
	bool bRetainOnDestroy; // 0xb1(0x01)
	enum class EStateRecorderOwnerResolvePolicy OwnerResolvePolicy; // 0xb2(0x01)
	char pad_B3[0x1]; // 0xb3(0x01)
	struct FName ActorClassName; // 0xb4(0x08)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct FString ActorPathName; // 0xc0(0x10)
	bool bIsRecordingGameState; // 0xd0(0x01)
	bool bHasRecordedValidState; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)

	void OnResolvedOwnerEndPlay(struct AActor* ResolvedOwner, enum class EEndPlayReason EndPlayReason); // Function Icarus.IcarusStateRecorderComponent.OnResolvedOwnerEndPlay // (Final|Native|Public) // @ game+0x15fb7f0
	void EndRecording(); // Function Icarus.IcarusStateRecorderComponent.EndRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x15fa970
	void BeginRecording(); // Function Icarus.IcarusStateRecorderComponent.BeginRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x15fa930
};

// Class Icarus.ActorStateRecorderComponent
// Size: 0x150 (Inherited: 0xd8)
struct UActorStateRecorderComponent : UIcarusStateRecorderComponent {
	char pad_D8[0x8]; // 0xd8(0x08)
	struct FTransform ActorTransform; // 0xe0(0x30)
	struct TArray<struct FInventorySaveData> SavedInventories; // 0x110(0x10)
	struct FFLODActorComponentSaveData FLODComponentData; // 0x120(0x1c)
	int32_t IcarusActorGUID; // 0x13c(0x04)
	struct FName ObjectFName; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)
};

// Class Icarus.AfflictionChanceLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAfflictionChanceLibrary : URowLibrary {

	struct FAfflictionChanceRowHandle StructToRowHandle(struct FAfflictionChanceEnum EnumValue); // Function Icarus.AfflictionChanceLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d7640
	struct FName StructToName(struct FAfflictionChanceEnum EnumValue); // Function Icarus.AfflictionChanceLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d74f0
	int32_t StructToInt(struct FAfflictionChanceEnum EnumValue); // Function Icarus.AfflictionChanceLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d73b0
	struct FAfflictionChanceEnum RowHandleToStruct(struct FAfflictionChanceRowHandle RowHandle); // Function Icarus.AfflictionChanceLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6f30
	void RemoveRowFromAfflictionChanceTable(struct FName Name); // Function Icarus.AfflictionChanceLibrary.RemoveRowFromAfflictionChanceTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14d6db0
	void RefreshConstants(); // Function Icarus.AfflictionChanceLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14d6c80
	int32_t NumRows(); // Function Icarus.AfflictionChanceLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6ae0
	bool NotEqual_EnumName(struct FAfflictionChanceEnum A, struct FName B); // Function Icarus.AfflictionChanceLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d69c0
	bool NotEqual_EnumEnum(struct FAfflictionChanceEnum A, struct FAfflictionChanceEnum B); // Function Icarus.AfflictionChanceLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d67e0
	struct FAfflictionChanceEnum NameToStruct(struct FName NameValue); // Function Icarus.AfflictionChanceLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6660
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AfflictionChanceLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14d6540
	struct FAfflictionChanceRowHandle MakeLiteralAfflictionChance(struct FAfflictionChanceRowHandle RowHandle); // Function Icarus.AfflictionChanceLibrary.MakeLiteralAfflictionChance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6280
	struct FAfflictionChanceRowHandle MakeAfflictionChanceFromIndex(int32_t Index); // Function Icarus.AfflictionChanceLibrary.MakeAfflictionChanceFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6120
	struct FAfflictionChanceEnum MakeAfflictionChanceEnum(struct FAfflictionChanceEnum Enum); // Function Icarus.AfflictionChanceLibrary.MakeAfflictionChanceEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d60a0
	struct FAfflictionChanceRowHandle MakeAfflictionChance(struct FName RowName); // Function Icarus.AfflictionChanceLibrary.MakeAfflictionChance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d6000
	bool IsValidName(struct FName NameValue); // Function Icarus.AfflictionChanceLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14d5da0
	struct FAfflictionChanceEnum IntToStruct(int32_t IntValue); // Function Icarus.AfflictionChanceLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d5bc0
	struct FName IntToName(int32_t IntValue); // Function Icarus.AfflictionChanceLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14d5aa0
	void GetAfflictionChanceStruct(struct FAfflictionChanceRowHandle RowHandle, struct FAfflictionChance AfflictionChance, enum class EValid Paths); // Function Icarus.AfflictionChanceLibrary.GetAfflictionChanceStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d57c0
	bool EqualEqual_FAfflictionChanceRowHandleFAfflictionChanceRowHandle(struct FAfflictionChanceRowHandle RowHandleA, struct FAfflictionChanceRowHandle RowHandleB); // Function Icarus.AfflictionChanceLibrary.EqualEqual_FAfflictionChanceRowHandleFAfflictionChanceRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d5500
	bool EqualEqual_EnumEnum(struct FAfflictionChanceEnum A, struct FAfflictionChanceEnum B); // Function Icarus.AfflictionChanceLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14d52d0
	struct FAfflictionChanceRowHandle CastToAfflictionChanceRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AfflictionChanceLibrary.CastToAfflictionChanceRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d5090
	void BreakAfflictionChanceEnum(struct FAfflictionChanceEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AfflictionChanceLibrary.BreakAfflictionChanceEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14d4de0
	void AddRowToAfflictionChanceTable(struct FName Name, struct FAfflictionChance Data, struct FAfflictionChanceRowHandle NewRow); // Function Icarus.AfflictionChanceLibrary.AddRowToAfflictionChanceTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14d4a50
};

// Class Icarus.AfflictionChanceTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAfflictionChanceTable : UIcarusDataTable {
};

// Class Icarus.AIAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIAudioDataLibrary : URowLibrary {

	struct FAIAudioDataRowHandle StructToRowHandle(struct FAIAudioDataEnum EnumValue); // Function Icarus.AIAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd9c0
	struct FName StructToName(struct FAIAudioDataEnum EnumValue); // Function Icarus.AIAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd7e0
	int32_t StructToInt(struct FAIAudioDataEnum EnumValue); // Function Icarus.AIAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd600
	struct FAIAudioDataEnum RowHandleToStruct(struct FAIAudioDataRowHandle RowHandle); // Function Icarus.AIAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd3c0
	void RemoveRowFromAIAudioDataTable(struct FName Name); // Function Icarus.AIAudioDataLibrary.RemoveRowFromAIAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14dd240
	void RefreshConstants(); // Function Icarus.AIAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14dd1e0
	int32_t NumRows(); // Function Icarus.AIAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd150
	bool NotEqual_EnumName(struct FAIAudioDataEnum A, struct FName B); // Function Icarus.AIAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dce80
	bool NotEqual_EnumEnum(struct FAIAudioDataEnum A, struct FAIAudioDataEnum B); // Function Icarus.AIAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dcbb0
	struct FAIAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.AIAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dca00
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AIAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14dc850
	struct FAIAudioDataRowHandle MakeLiteralAIAudioData(struct FAIAudioDataRowHandle RowHandle); // Function Icarus.AIAudioDataLibrary.MakeLiteralAIAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc5e0
	struct FAIAudioDataRowHandle MakeAIAudioDataFromIndex(int32_t Index); // Function Icarus.AIAudioDataLibrary.MakeAIAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc1f0
	struct FAIAudioDataEnum MakeAIAudioDataEnum(struct FAIAudioDataEnum Enum); // Function Icarus.AIAudioDataLibrary.MakeAIAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc170
	struct FAIAudioDataRowHandle MakeAIAudioData(struct FName RowName); // Function Icarus.AIAudioDataLibrary.MakeAIAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc0d0
	bool IsValidName(struct FName NameValue); // Function Icarus.AIAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14dbf20
	struct FAIAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.AIAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dbd70
	struct FName IntToName(int32_t IntValue); // Function Icarus.AIAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14dbbc0
	void GetAIAudioDataStruct(struct FAIAudioDataRowHandle RowHandle, struct FAIAudioData AIAudioData, enum class EValid Paths); // Function Icarus.AIAudioDataLibrary.GetAIAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14db650
	bool EqualEqual_FAIAudioDataRowHandleFAIAudioDataRowHandle(struct FAIAudioDataRowHandle RowHandleA, struct FAIAudioDataRowHandle RowHandleB); // Function Icarus.AIAudioDataLibrary.EqualEqual_FAIAudioDataRowHandleFAIAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14db290
	bool EqualEqual_EnumEnum(struct FAIAudioDataEnum A, struct FAIAudioDataEnum B); // Function Icarus.AIAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dafc0
	struct FAIAudioDataRowHandle CastToAIAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AIAudioDataLibrary.CastToAIAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14dac60
	void BreakAIAudioDataEnum(struct FAIAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AIAudioDataLibrary.BreakAIAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14da840
	void AddRowToAIAudioDataTable(struct FName Name, struct FAIAudioData Data, struct FAIAudioDataRowHandle NewRow); // Function Icarus.AIAudioDataLibrary.AddRowToAIAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14da050
};

// Class Icarus.AIAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIAudioDataTable : UIcarusDataTable {
};

// Class Icarus.AICreatureTypeLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAICreatureTypeLibrary : URowLibrary {

	struct FAICreatureTypeRowHandle StructToRowHandle(struct FAICreatureTypeEnum EnumValue); // Function Icarus.AICreatureTypeLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dda70
	struct FName StructToName(struct FAICreatureTypeEnum EnumValue); // Function Icarus.AICreatureTypeLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd880
	int32_t StructToInt(struct FAICreatureTypeEnum EnumValue); // Function Icarus.AICreatureTypeLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd6a0
	struct FAICreatureTypeEnum RowHandleToStruct(struct FAICreatureTypeRowHandle RowHandle); // Function Icarus.AICreatureTypeLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd480
	void RemoveRowFromAICreatureTypeTable(struct FName Name); // Function Icarus.AICreatureTypeLibrary.RemoveRowFromAICreatureTypeTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14dd2c0
	void RefreshConstants(); // Function Icarus.AICreatureTypeLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14dd200
	int32_t NumRows(); // Function Icarus.AICreatureTypeLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd180
	bool NotEqual_EnumName(struct FAICreatureTypeEnum A, struct FName B); // Function Icarus.AICreatureTypeLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dcf70
	bool NotEqual_EnumEnum(struct FAICreatureTypeEnum A, struct FAICreatureTypeEnum B); // Function Icarus.AICreatureTypeLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dcca0
	struct FAICreatureTypeEnum NameToStruct(struct FName NameValue); // Function Icarus.AICreatureTypeLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dca90
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AICreatureTypeLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14dc8e0
	struct FAICreatureTypeRowHandle MakeLiteralAICreatureType(struct FAICreatureTypeRowHandle RowHandle); // Function Icarus.AICreatureTypeLibrary.MakeLiteralAICreatureType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc6b0
	struct FAICreatureTypeRowHandle MakeAICreatureTypeFromIndex(int32_t Index); // Function Icarus.AICreatureTypeLibrary.MakeAICreatureTypeFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc3a0
	struct FAICreatureTypeEnum MakeAICreatureTypeEnum(struct FAICreatureTypeEnum Enum); // Function Icarus.AICreatureTypeLibrary.MakeAICreatureTypeEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc320
	struct FAICreatureTypeRowHandle MakeAICreatureType(struct FName RowName); // Function Icarus.AICreatureTypeLibrary.MakeAICreatureType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc280
	bool IsValidName(struct FName NameValue); // Function Icarus.AICreatureTypeLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14dbfb0
	struct FAICreatureTypeEnum IntToStruct(int32_t IntValue); // Function Icarus.AICreatureTypeLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dbe00
	struct FName IntToName(int32_t IntValue); // Function Icarus.AICreatureTypeLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14dbc50
	void GetAICreatureTypeStruct(struct FAICreatureTypeRowHandle RowHandle, struct FAICreatureType AICreatureType, enum class EValid Paths); // Function Icarus.AICreatureTypeLibrary.GetAICreatureTypeStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14db850
	bool EqualEqual_FAICreatureTypeRowHandleFAICreatureTypeRowHandle(struct FAICreatureTypeRowHandle RowHandleA, struct FAICreatureTypeRowHandle RowHandleB); // Function Icarus.AICreatureTypeLibrary.EqualEqual_FAICreatureTypeRowHandleFAICreatureTypeRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14db3d0
	bool EqualEqual_EnumEnum(struct FAICreatureTypeEnum A, struct FAICreatureTypeEnum B); // Function Icarus.AICreatureTypeLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14db0b0
	struct FAICreatureTypeRowHandle CastToAICreatureTypeRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AICreatureTypeLibrary.CastToAICreatureTypeRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14dad80
	void BreakAICreatureTypeEnum(struct FAICreatureTypeEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AICreatureTypeLibrary.BreakAICreatureTypeEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14da9a0
	void AddRowToAICreatureTypeTable(struct FName Name, struct FAICreatureType Data, struct FAICreatureTypeRowHandle NewRow); // Function Icarus.AICreatureTypeLibrary.AddRowToAICreatureTypeTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14da3d0
};

// Class Icarus.AICreatureTypeTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAICreatureTypeTable : UIcarusDataTable {
};

// Class Icarus.AIDescriptorsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIDescriptorsLibrary : URowLibrary {

	struct FAIDescriptorsRowHandle StructToRowHandle(struct FAIDescriptorsEnum EnumValue); // Function Icarus.AIDescriptorsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ddb20
	struct FName StructToName(struct FAIDescriptorsEnum EnumValue); // Function Icarus.AIDescriptorsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd920
	int32_t StructToInt(struct FAIDescriptorsEnum EnumValue); // Function Icarus.AIDescriptorsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd740
	struct FAIDescriptorsEnum RowHandleToStruct(struct FAIDescriptorsRowHandle RowHandle); // Function Icarus.AIDescriptorsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd540
	void RemoveRowFromAIDescriptorsTable(struct FName Name); // Function Icarus.AIDescriptorsLibrary.RemoveRowFromAIDescriptorsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14dd340
	void RefreshConstants(); // Function Icarus.AIDescriptorsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14dd220
	int32_t NumRows(); // Function Icarus.AIDescriptorsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd1b0
	bool NotEqual_EnumName(struct FAIDescriptorsEnum A, struct FName B); // Function Icarus.AIDescriptorsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dd060
	bool NotEqual_EnumEnum(struct FAIDescriptorsEnum A, struct FAIDescriptorsEnum B); // Function Icarus.AIDescriptorsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dcd90
	struct FAIDescriptorsEnum NameToStruct(struct FName NameValue); // Function Icarus.AIDescriptorsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dcb20
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AIDescriptorsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14dc970
	struct FAIDescriptorsRowHandle MakeLiteralAIDescriptors(struct FAIDescriptorsRowHandle RowHandle); // Function Icarus.AIDescriptorsLibrary.MakeLiteralAIDescriptors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc780
	struct FAIDescriptorsRowHandle MakeAIDescriptorsFromIndex(int32_t Index); // Function Icarus.AIDescriptorsLibrary.MakeAIDescriptorsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc550
	struct FAIDescriptorsEnum MakeAIDescriptorsEnum(struct FAIDescriptorsEnum Enum); // Function Icarus.AIDescriptorsLibrary.MakeAIDescriptorsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc4d0
	struct FAIDescriptorsRowHandle MakeAIDescriptors(struct FName RowName); // Function Icarus.AIDescriptorsLibrary.MakeAIDescriptors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dc430
	bool IsValidName(struct FName NameValue); // Function Icarus.AIDescriptorsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14dc040
	struct FAIDescriptorsEnum IntToStruct(int32_t IntValue); // Function Icarus.AIDescriptorsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14dbe90
	struct FName IntToName(int32_t IntValue); // Function Icarus.AIDescriptorsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14dbce0
	void GetAIDescriptorsStruct(struct FAIDescriptorsRowHandle RowHandle, struct FAIDescriptor AIDescriptors, enum class EValid Paths); // Function Icarus.AIDescriptorsLibrary.GetAIDescriptorsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14dba40
	bool EqualEqual_FAIDescriptorsRowHandleFAIDescriptorsRowHandle(struct FAIDescriptorsRowHandle RowHandleA, struct FAIDescriptorsRowHandle RowHandleB); // Function Icarus.AIDescriptorsLibrary.EqualEqual_FAIDescriptorsRowHandleFAIDescriptorsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14db510
	bool EqualEqual_EnumEnum(struct FAIDescriptorsEnum A, struct FAIDescriptorsEnum B); // Function Icarus.AIDescriptorsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14db1a0
	struct FAIDescriptorsRowHandle CastToAIDescriptorsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AIDescriptorsLibrary.CastToAIDescriptorsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14daea0
	void BreakAIDescriptorsEnum(struct FAIDescriptorsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AIDescriptorsLibrary.BreakAIDescriptorsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14dab00
	void AddRowToAIDescriptorsTable(struct FName Name, struct FAIDescriptor Data, struct FAIDescriptorsRowHandle NewRow); // Function Icarus.AIDescriptorsLibrary.AddRowToAIDescriptorsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14da660
};

// Class Icarus.AIDescriptorsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIDescriptorsTable : UIcarusDataTable {
};

// Class Icarus.AIGrowthLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIGrowthLibrary : URowLibrary {

	struct FAIGrowthRowHandle StructToRowHandle(struct FAIGrowthEnum EnumValue); // Function Icarus.AIGrowthLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3bd0
	struct FName StructToName(struct FAIGrowthEnum EnumValue); // Function Icarus.AIGrowthLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e39f0
	int32_t StructToInt(struct FAIGrowthEnum EnumValue); // Function Icarus.AIGrowthLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3810
	struct FAIGrowthEnum RowHandleToStruct(struct FAIGrowthRowHandle RowHandle); // Function Icarus.AIGrowthLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e35d0
	void RemoveRowFromAIGrowthTable(struct FName Name); // Function Icarus.AIGrowthLibrary.RemoveRowFromAIGrowthTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e3450
	void RefreshConstants(); // Function Icarus.AIGrowthLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14e33f0
	int32_t NumRows(); // Function Icarus.AIGrowthLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3360
	bool NotEqual_EnumName(struct FAIGrowthEnum A, struct FName B); // Function Icarus.AIGrowthLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3090
	bool NotEqual_EnumEnum(struct FAIGrowthEnum A, struct FAIGrowthEnum B); // Function Icarus.AIGrowthLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2dc0
	struct FAIGrowthEnum NameToStruct(struct FName NameValue); // Function Icarus.AIGrowthLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2c10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AIGrowthLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14e2a60
	struct FAIGrowthRowHandle MakeLiteralAIGrowth(struct FAIGrowthRowHandle RowHandle); // Function Icarus.AIGrowthLibrary.MakeLiteralAIGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e27f0
	struct FAIGrowthRowHandle MakeAIGrowthFromIndex(int32_t Index); // Function Icarus.AIGrowthLibrary.MakeAIGrowthFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2400
	struct FAIGrowthEnum MakeAIGrowthEnum(struct FAIGrowthEnum Enum); // Function Icarus.AIGrowthLibrary.MakeAIGrowthEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2380
	struct FAIGrowthRowHandle MakeAIGrowth(struct FName RowName); // Function Icarus.AIGrowthLibrary.MakeAIGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e22e0
	bool IsValidName(struct FName NameValue); // Function Icarus.AIGrowthLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14e2130
	struct FAIGrowthEnum IntToStruct(int32_t IntValue); // Function Icarus.AIGrowthLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e1f80
	struct FName IntToName(int32_t IntValue); // Function Icarus.AIGrowthLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14e1dd0
	void GetAIGrowthStruct(struct FAIGrowthRowHandle RowHandle, struct FAIGrowth AIGrowth, enum class EValid Paths); // Function Icarus.AIGrowthLibrary.GetAIGrowthStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e1850
	bool EqualEqual_FAIGrowthRowHandleFAIGrowthRowHandle(struct FAIGrowthRowHandle RowHandleA, struct FAIGrowthRowHandle RowHandleB); // Function Icarus.AIGrowthLibrary.EqualEqual_FAIGrowthRowHandleFAIGrowthRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e1490
	bool EqualEqual_EnumEnum(struct FAIGrowthEnum A, struct FAIGrowthEnum B); // Function Icarus.AIGrowthLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e11c0
	struct FAIGrowthRowHandle CastToAIGrowthRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AIGrowthLibrary.CastToAIGrowthRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e0e60
	void BreakAIGrowthEnum(struct FAIGrowthEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AIGrowthLibrary.BreakAIGrowthEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0a40
	void AddRowToAIGrowthTable(struct FName Name, struct FAIGrowth Data, struct FAIGrowthRowHandle NewRow); // Function Icarus.AIGrowthLibrary.AddRowToAIGrowthTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e0280
};

// Class Icarus.AIGrowthTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIGrowthTable : UIcarusDataTable {
};

// Class Icarus.AIRelationshipsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAIRelationshipsLibrary : URowLibrary {

	struct FAIRelationshipsRowHandle StructToRowHandle(struct FAIRelationshipsEnum EnumValue); // Function Icarus.AIRelationshipsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3c80
	struct FName StructToName(struct FAIRelationshipsEnum EnumValue); // Function Icarus.AIRelationshipsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3a90
	int32_t StructToInt(struct FAIRelationshipsEnum EnumValue); // Function Icarus.AIRelationshipsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e38b0
	struct FAIRelationshipsEnum RowHandleToStruct(struct FAIRelationshipsRowHandle RowHandle); // Function Icarus.AIRelationshipsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3690
	void RemoveRowFromAIRelationshipsTable(struct FName Name); // Function Icarus.AIRelationshipsLibrary.RemoveRowFromAIRelationshipsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e34d0
	void RefreshConstants(); // Function Icarus.AIRelationshipsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14e3410
	int32_t NumRows(); // Function Icarus.AIRelationshipsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3390
	bool NotEqual_EnumName(struct FAIRelationshipsEnum A, struct FName B); // Function Icarus.AIRelationshipsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3180
	bool NotEqual_EnumEnum(struct FAIRelationshipsEnum A, struct FAIRelationshipsEnum B); // Function Icarus.AIRelationshipsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2eb0
	struct FAIRelationshipsEnum NameToStruct(struct FName NameValue); // Function Icarus.AIRelationshipsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2ca0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AIRelationshipsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14e2af0
	struct FAIRelationshipsRowHandle MakeLiteralAIRelationships(struct FAIRelationshipsRowHandle RowHandle); // Function Icarus.AIRelationshipsLibrary.MakeLiteralAIRelationships // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e28c0
	struct FAIRelationshipsRowHandle MakeAIRelationshipsFromIndex(int32_t Index); // Function Icarus.AIRelationshipsLibrary.MakeAIRelationshipsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e25b0
	struct FAIRelationshipsEnum MakeAIRelationshipsEnum(struct FAIRelationshipsEnum Enum); // Function Icarus.AIRelationshipsLibrary.MakeAIRelationshipsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2530
	struct FAIRelationshipsRowHandle MakeAIRelationships(struct FName RowName); // Function Icarus.AIRelationshipsLibrary.MakeAIRelationships // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2490
	bool IsValidName(struct FName NameValue); // Function Icarus.AIRelationshipsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14e21c0
	struct FAIRelationshipsEnum IntToStruct(int32_t IntValue); // Function Icarus.AIRelationshipsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2010
	struct FName IntToName(int32_t IntValue); // Function Icarus.AIRelationshipsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14e1e60
	void GetAIRelationshipsStruct(struct FAIRelationshipsRowHandle RowHandle, struct FAIRelationshipData AIRelationships, enum class EValid Paths); // Function Icarus.AIRelationshipsLibrary.GetAIRelationshipsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e1a70
	bool EqualEqual_FAIRelationshipsRowHandleFAIRelationshipsRowHandle(struct FAIRelationshipsRowHandle RowHandleA, struct FAIRelationshipsRowHandle RowHandleB); // Function Icarus.AIRelationshipsLibrary.EqualEqual_FAIRelationshipsRowHandleFAIRelationshipsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e15d0
	bool EqualEqual_EnumEnum(struct FAIRelationshipsEnum A, struct FAIRelationshipsEnum B); // Function Icarus.AIRelationshipsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e12b0
	struct FAIRelationshipsRowHandle CastToAIRelationshipsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AIRelationshipsLibrary.CastToAIRelationshipsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e0f80
	void BreakAIRelationshipsEnum(struct FAIRelationshipsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AIRelationshipsLibrary.BreakAIRelationshipsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0ba0
	void AddRowToAIRelationshipsTable(struct FName Name, struct FAIRelationshipData Data, struct FAIRelationshipsRowHandle NewRow); // Function Icarus.AIRelationshipsLibrary.AddRowToAIRelationshipsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e05c0
};

// Class Icarus.AIRelationshipsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAIRelationshipsTable : UIcarusDataTable {
};

// Class Icarus.AISetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISetupLibrary : URowLibrary {

	struct FAISetupRowHandle StructToRowHandle(struct FAISetupEnum EnumValue); // Function Icarus.AISetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3d30
	struct FName StructToName(struct FAISetupEnum EnumValue); // Function Icarus.AISetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3b30
	int32_t StructToInt(struct FAISetupEnum EnumValue); // Function Icarus.AISetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3950
	struct FAISetupEnum RowHandleToStruct(struct FAISetupRowHandle RowHandle); // Function Icarus.AISetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3750
	void RemoveRowFromAISetupTable(struct FName Name); // Function Icarus.AISetupLibrary.RemoveRowFromAISetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e3550
	void RefreshConstants(); // Function Icarus.AISetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14e3430
	int32_t NumRows(); // Function Icarus.AISetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e33c0
	bool NotEqual_EnumName(struct FAISetupEnum A, struct FName B); // Function Icarus.AISetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e3270
	bool NotEqual_EnumEnum(struct FAISetupEnum A, struct FAISetupEnum B); // Function Icarus.AISetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2fa0
	struct FAISetupEnum NameToStruct(struct FName NameValue); // Function Icarus.AISetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2d30
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AISetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14e2b80
	struct FAISetupRowHandle MakeLiteralAISetup(struct FAISetupRowHandle RowHandle); // Function Icarus.AISetupLibrary.MakeLiteralAISetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2990
	struct FAISetupRowHandle MakeAISetupFromIndex(int32_t Index); // Function Icarus.AISetupLibrary.MakeAISetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2760
	struct FAISetupEnum MakeAISetupEnum(struct FAISetupEnum Enum); // Function Icarus.AISetupLibrary.MakeAISetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e26e0
	struct FAISetupRowHandle MakeAISetup(struct FName RowName); // Function Icarus.AISetupLibrary.MakeAISetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e2640
	bool IsValidName(struct FName NameValue); // Function Icarus.AISetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14e2250
	struct FAISetupEnum IntToStruct(int32_t IntValue); // Function Icarus.AISetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e20a0
	struct FName IntToName(int32_t IntValue); // Function Icarus.AISetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14e1ef0
	void GetAISetupStruct(struct FAISetupRowHandle RowHandle, struct FAISetup AISetup, enum class EValid Paths); // Function Icarus.AISetupLibrary.GetAISetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e1c30
	bool EqualEqual_FAISetupRowHandleFAISetupRowHandle(struct FAISetupRowHandle RowHandleA, struct FAISetupRowHandle RowHandleB); // Function Icarus.AISetupLibrary.EqualEqual_FAISetupRowHandleFAISetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e1710
	bool EqualEqual_EnumEnum(struct FAISetupEnum A, struct FAISetupEnum B); // Function Icarus.AISetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e13a0
	struct FAISetupRowHandle CastToAISetupRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AISetupLibrary.CastToAISetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e10a0
	void BreakAISetupEnum(struct FAISetupEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AISetupLibrary.BreakAISetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e0d00
	void AddRowToAISetupTable(struct FName Name, struct FAISetup Data, struct FAISetupRowHandle NewRow); // Function Icarus.AISetupLibrary.AddRowToAISetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e08b0
};

// Class Icarus.AISetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISetupTable : UIcarusDataTable {
};

// Class Icarus.AISpawnConfigLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISpawnConfigLibrary : URowLibrary {

	struct FAISpawnConfigRowHandle StructToRowHandle(struct FAISpawnConfigEnum EnumValue); // Function Icarus.AISpawnConfigLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9700
	struct FName StructToName(struct FAISpawnConfigEnum EnumValue); // Function Icarus.AISpawnConfigLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e95c0
	int32_t StructToInt(struct FAISpawnConfigEnum EnumValue); // Function Icarus.AISpawnConfigLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9480
	struct FAISpawnConfigEnum RowHandleToStruct(struct FAISpawnConfigRowHandle RowHandle); // Function Icarus.AISpawnConfigLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e92e0
	void RemoveRowFromAISpawnConfigTable(struct FName Name); // Function Icarus.AISpawnConfigLibrary.RemoveRowFromAISpawnConfigTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e91e0
	void RefreshConstants(); // Function Icarus.AISpawnConfigLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14e91a0
	int32_t NumRows(); // Function Icarus.AISpawnConfigLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9060
	bool NotEqual_EnumName(struct FAISpawnConfigEnum A, struct FName B); // Function Icarus.AISpawnConfigLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8e80
	bool NotEqual_EnumEnum(struct FAISpawnConfigEnum A, struct FAISpawnConfigEnum B); // Function Icarus.AISpawnConfigLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8ca0
	struct FAISpawnConfigEnum NameToStruct(struct FName NameValue); // Function Icarus.AISpawnConfigLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8b80
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AISpawnConfigLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14e8a60
	struct FAISpawnConfigRowHandle MakeLiteralAISpawnConfig(struct FAISpawnConfigRowHandle RowHandle); // Function Icarus.AISpawnConfigLibrary.MakeLiteralAISpawnConfig // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e88c0
	struct FAISpawnConfigRowHandle MakeAISpawnConfigFromIndex(int32_t Index); // Function Icarus.AISpawnConfigLibrary.MakeAISpawnConfigFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8680
	struct FAISpawnConfigEnum MakeAISpawnConfigEnum(struct FAISpawnConfigEnum Enum); // Function Icarus.AISpawnConfigLibrary.MakeAISpawnConfigEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8600
	struct FAISpawnConfigRowHandle MakeAISpawnConfig(struct FName RowName); // Function Icarus.AISpawnConfigLibrary.MakeAISpawnConfig // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8560
	bool IsValidName(struct FName NameValue); // Function Icarus.AISpawnConfigLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14e8440
	struct FAISpawnConfigEnum IntToStruct(int32_t IntValue); // Function Icarus.AISpawnConfigLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8050
	struct FName IntToName(int32_t IntValue); // Function Icarus.AISpawnConfigLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14e7f30
	void GetAISpawnConfigStruct(struct FAISpawnConfigRowHandle RowHandle, struct FAISpawnConfigData AISpawnConfig, enum class EValid Paths); // Function Icarus.AISpawnConfigLibrary.GetAISpawnConfigStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e79e0
	bool EqualEqual_FAISpawnConfigRowHandleFAISpawnConfigRowHandle(struct FAISpawnConfigRowHandle RowHandleA, struct FAISpawnConfigRowHandle RowHandleB); // Function Icarus.AISpawnConfigLibrary.EqualEqual_FAISpawnConfigRowHandleFAISpawnConfigRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7720
	bool EqualEqual_EnumEnum(struct FAISpawnConfigEnum A, struct FAISpawnConfigEnum B); // Function Icarus.AISpawnConfigLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7540
	struct FAISpawnConfigRowHandle CastToAISpawnConfigRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AISpawnConfigLibrary.CastToAISpawnConfigRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e7300
	void BreakAISpawnConfigEnum(struct FAISpawnConfigEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AISpawnConfigLibrary.BreakAISpawnConfigEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e7040
	void AddRowToAISpawnConfigTable(struct FName Name, struct FAISpawnConfigData Data, struct FAISpawnConfigRowHandle NewRow); // Function Icarus.AISpawnConfigLibrary.AddRowToAISpawnConfigTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e6bf0
};

// Class Icarus.AISpawnConfigTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISpawnConfigTable : UIcarusDataTable {
};

// Class Icarus.AISpawner
// Size: 0x3a8 (Inherited: 0x220)
struct AAISpawner : AActor {
	struct TArray<struct FTileSpawnData> WorldSpawnData; // 0x220(0x10)
	struct UEnvQuery* Template; // 0x230(0x08)
	int32_t NumberOfCachedSpawnPoints; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FMulticastInlineDelegate GenerationComplete; // 0x240(0x10)
	int32_t SelectedTile; // 0x250(0x04)
	struct FAISpawnConfigRowHandle SpawnConfig; // 0x254(0x18)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct TArray<struct UIcarusAISpawnFilter*> SpawnRules; // 0x270(0x10)
	struct UIcarusStatContainer* StatContainer; // 0x280(0x08)
	struct FWorldData WorldData; // 0x288(0x110)
	struct AIcarusEQSTestingPawn* TestingPawn; // 0x398(0x08)
	char pad_3A0[0x8]; // 0x3a0(0x08)

	void WorldStatsSet(); // Function Icarus.AISpawner.WorldStatsSet // (Final|Native|Private) // @ game+0x14e9880
	void VisualiseTilePosition(); // Function Icarus.AISpawner.VisualiseTilePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x14e9860
	void SpawnPointGenerationComplete(); // Function Icarus.AISpawner.SpawnPointGenerationComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x14e9460
	bool PerformNextTileEQS(); // Function Icarus.AISpawner.PerformNextTileEQS // (Final|Native|Private) // @ game+0x14e9170
	void OnEQSQueryCompleted(struct TArray<struct FVector> EQSResults); // Function Icarus.AISpawner.OnEQSQueryCompleted // (Final|Native|Private|HasOutParms) // @ game+0x14e90c0
	bool IsSpawnPointValid(struct FVector InLocation, struct FAISetupEnum InAISetup); // Function Icarus.AISpawner.IsSpawnPointValid // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x14e8340
	void GenerateSingleTileSpawnPoints(); // Function Icarus.AISpawner.GenerateSingleTileSpawnPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x14e79c0
	void GenerateCachedSpawnPoints(); // Function Icarus.AISpawner.GenerateCachedSpawnPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x14e79a0
};

// Class Icarus.AISpawnRulesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAISpawnRulesLibrary : URowLibrary {

	struct FAISpawnRulesRowHandle StructToRowHandle(struct FAISpawnRulesEnum EnumValue); // Function Icarus.AISpawnRulesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e97b0
	struct FName StructToName(struct FAISpawnRulesEnum EnumValue); // Function Icarus.AISpawnRulesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9660
	int32_t StructToInt(struct FAISpawnRulesEnum EnumValue); // Function Icarus.AISpawnRulesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9520
	struct FAISpawnRulesEnum RowHandleToStruct(struct FAISpawnRulesRowHandle RowHandle); // Function Icarus.AISpawnRulesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e93a0
	void RemoveRowFromAISpawnRulesTable(struct FName Name); // Function Icarus.AISpawnRulesLibrary.RemoveRowFromAISpawnRulesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e9260
	void RefreshConstants(); // Function Icarus.AISpawnRulesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14e91c0
	int32_t NumRows(); // Function Icarus.AISpawnRulesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e9090
	bool NotEqual_EnumName(struct FAISpawnRulesEnum A, struct FName B); // Function Icarus.AISpawnRulesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8f70
	bool NotEqual_EnumEnum(struct FAISpawnRulesEnum A, struct FAISpawnRulesEnum B); // Function Icarus.AISpawnRulesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8d90
	struct FAISpawnRulesEnum NameToStruct(struct FName NameValue); // Function Icarus.AISpawnRulesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8c10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AISpawnRulesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14e8af0
	struct FAISpawnRulesRowHandle MakeLiteralAISpawnRules(struct FAISpawnRulesRowHandle RowHandle); // Function Icarus.AISpawnRulesLibrary.MakeLiteralAISpawnRules // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8990
	struct FAISpawnRulesRowHandle MakeAISpawnRulesFromIndex(int32_t Index); // Function Icarus.AISpawnRulesLibrary.MakeAISpawnRulesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8830
	struct FAISpawnRulesEnum MakeAISpawnRulesEnum(struct FAISpawnRulesEnum Enum); // Function Icarus.AISpawnRulesLibrary.MakeAISpawnRulesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e87b0
	struct FAISpawnRulesRowHandle MakeAISpawnRules(struct FName RowName); // Function Icarus.AISpawnRulesLibrary.MakeAISpawnRules // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e8710
	bool IsValidName(struct FName NameValue); // Function Icarus.AISpawnRulesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14e84d0
	struct FAISpawnRulesEnum IntToStruct(int32_t IntValue); // Function Icarus.AISpawnRulesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e80e0
	struct FName IntToName(int32_t IntValue); // Function Icarus.AISpawnRulesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14e7fc0
	void GetAISpawnRulesStruct(struct FAISpawnRulesRowHandle RowHandle, struct FAISpawnRuleData AISpawnRules, enum class EValid Paths); // Function Icarus.AISpawnRulesLibrary.GetAISpawnRulesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e7b80
	bool EqualEqual_FAISpawnRulesRowHandleFAISpawnRulesRowHandle(struct FAISpawnRulesRowHandle RowHandleA, struct FAISpawnRulesRowHandle RowHandleB); // Function Icarus.AISpawnRulesLibrary.EqualEqual_FAISpawnRulesRowHandleFAISpawnRulesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7860
	bool EqualEqual_EnumEnum(struct FAISpawnRulesEnum A, struct FAISpawnRulesEnum B); // Function Icarus.AISpawnRulesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7630
	struct FAISpawnRulesRowHandle CastToAISpawnRulesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AISpawnRulesLibrary.CastToAISpawnRulesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e7420
	void BreakAISpawnRulesEnum(struct FAISpawnRulesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AISpawnRulesLibrary.BreakAISpawnRulesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14e71a0
	void AddRowToAISpawnRulesTable(struct FName Name, struct FAISpawnRuleData Data, struct FAISpawnRulesRowHandle NewRow); // Function Icarus.AISpawnRulesLibrary.AddRowToAISpawnRulesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e6d80
};

// Class Icarus.AISpawnRulesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAISpawnRulesTable : UIcarusDataTable {
};

// Class Icarus.AITargetable
// Size: 0x28 (Inherited: 0x28)
struct UAITargetable : UInterface {

	bool IsHidden(); // Function Icarus.AITargetable.IsHidden // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14e81a0
	bool IsActorAlive(); // Function Icarus.AITargetable.IsActorAlive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14e8170
	struct FVector GetTargetLocation(); // Function Icarus.AITargetable.GetTargetLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14e7e60
	int32_t GetTargetAlertness(); // Function Icarus.AITargetable.GetTargetAlertness // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14e7e30
	struct FAIRelationshipsRowHandle GetRelationshipData(); // Function Icarus.AITargetable.GetRelationshipData // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14e7df0
	struct TArray<struct FCriticalHitLocation> GetCriticalHitBones(); // Function Icarus.AITargetable.GetCriticalHitBones // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14e7d70
};

// Class Icarus.AITargetableFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAITargetableFunctionLibrary : UBlueprintFunctionLibrary {

	void IsHostileTowards(struct AActor* SelfTargetable, struct AActor* OtherActorTargetable, enum class ERelationshipType OutRelationshipSwitch, enum class ERelationshipType OutRelationshipType); // Function Icarus.AITargetableFunctionLibrary.IsHostileTowards // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14e81d0
	enum class EStealthAttackType GetTargetStealth(struct AActor* TargetableActor); // Function Icarus.AITargetableFunctionLibrary.GetTargetStealth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14e7ea0
};

// Class Icarus.VocalisationComponent
// Size: 0x110 (Inherited: 0xb0)
struct UVocalisationComponent : UActorComponent {
	struct UFMODAudioComponent* AudioComponent; // 0xb0(0x08)
	char pad_B8[0x58]; // 0xb8(0x58)

	enum class EVocalisationPlayResult TryPlayVocalisation(struct FVocalisationsRowHandle Vocalisation); // Function Icarus.VocalisationComponent.TryPlayVocalisation // (Final|Native|Public|BlueprintCallable) // @ game+0x16fa340
	void OnEventStopped(); // Function Icarus.VocalisationComponent.OnEventStopped // (Final|Native|Protected) // @ game+0x16f9c80
	void Initialise(struct USceneComponent* TargetComponent, struct FName TargetSocket); // Function Icarus.VocalisationComponent.Initialise // (Native|Public|BlueprintCallable) // @ game+0x16f8b90
	float GetVocalisationLength(struct FVocalisationsRowHandle Vocalisation); // Function Icarus.VocalisationComponent.GetVocalisationLength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8940
	float GetCurrentVocalisationLength(); // Function Icarus.VocalisationComponent.GetCurrentVocalisationLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f8710
};

// Class Icarus.AIVocalisationComponent
// Size: 0x120 (Inherited: 0x110)
struct UAIVocalisationComponent : UVocalisationComponent {
	char pad_110[0x10]; // 0x110(0x10)

	void SetAIState(enum class EAIAudioState State); // Function Icarus.AIVocalisationComponent.SetAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x14f01d0
	void PlayAIVocalisation(enum class EAIVocalisationType Type); // Function Icarus.AIVocalisationComponent.PlayAIVocalisation // (Final|Native|Public|BlueprintCallable) // @ game+0x14efd30
};

// Class Icarus.AmmoTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAmmoTypesLibrary : URowLibrary {

	struct FAmmoTypesRowHandle StructToRowHandle(struct FAmmoTypesEnum EnumValue); // Function Icarus.AmmoTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0610
	struct FName StructToName(struct FAmmoTypesEnum EnumValue); // Function Icarus.AmmoTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0430
	int32_t StructToInt(struct FAmmoTypesEnum EnumValue); // Function Icarus.AmmoTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0250
	struct FAmmoTypesEnum RowHandleToStruct(struct FAmmoTypesRowHandle RowHandle); // Function Icarus.AmmoTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eff90
	void RemoveRowFromAmmoTypesTable(struct FName Name); // Function Icarus.AmmoTypesLibrary.RemoveRowFromAmmoTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14efe10
	void RefreshConstants(); // Function Icarus.AmmoTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14efdb0
	int32_t NumRows(); // Function Icarus.AmmoTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14efca0
	bool NotEqual_EnumName(struct FAmmoTypesEnum A, struct FName B); // Function Icarus.AmmoTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef9d0
	bool NotEqual_EnumEnum(struct FAmmoTypesEnum A, struct FAmmoTypesEnum B); // Function Icarus.AmmoTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef700
	struct FAmmoTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.AmmoTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef550
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AmmoTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14ef3a0
	struct FAmmoTypesRowHandle MakeLiteralAmmoTypes(struct FAmmoTypesRowHandle RowHandle); // Function Icarus.AmmoTypesLibrary.MakeLiteralAmmoTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef130
	struct FAmmoTypesRowHandle MakeAmmoTypesFromIndex(int32_t Index); // Function Icarus.AmmoTypesLibrary.MakeAmmoTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eed40
	struct FAmmoTypesEnum MakeAmmoTypesEnum(struct FAmmoTypesEnum Enum); // Function Icarus.AmmoTypesLibrary.MakeAmmoTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eecc0
	struct FAmmoTypesRowHandle MakeAmmoTypes(struct FName RowName); // Function Icarus.AmmoTypesLibrary.MakeAmmoTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eec20
	bool IsValidName(struct FName NameValue); // Function Icarus.AmmoTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14eea70
	struct FAmmoTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.AmmoTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ee8c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.AmmoTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14ee710
	void GetAmmoTypesStruct(struct FAmmoTypesRowHandle RowHandle, struct FAmmoTypeData AmmoTypes, enum class EValid Paths); // Function Icarus.AmmoTypesLibrary.GetAmmoTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14edf00
	bool EqualEqual_FAmmoTypesRowHandleFAmmoTypesRowHandle(struct FAmmoTypesRowHandle RowHandleA, struct FAmmoTypesRowHandle RowHandleB); // Function Icarus.AmmoTypesLibrary.EqualEqual_FAmmoTypesRowHandleFAmmoTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14edb40
	bool EqualEqual_EnumEnum(struct FAmmoTypesEnum A, struct FAmmoTypesEnum B); // Function Icarus.AmmoTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ed870
	struct FAmmoTypesRowHandle CastToAmmoTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AmmoTypesLibrary.CastToAmmoTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ed510
	void BreakAmmoTypesEnum(struct FAmmoTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AmmoTypesLibrary.BreakAmmoTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14ed0f0
	void AddRowToAmmoTypesTable(struct FName Name, struct FAmmoTypeData Data, struct FAmmoTypesRowHandle NewRow); // Function Icarus.AmmoTypesLibrary.AddRowToAmmoTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ec9a0
};

// Class Icarus.AmmoTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAmmoTypesTable : UIcarusDataTable {
};

// Class Icarus.AnimNotify_IcarusPlaySound
// Size: 0x58 (Inherited: 0x38)
struct UAnimNotify_IcarusPlaySound : UAnimNotify {
	struct UFMODEvent* FMODEvent; // 0x38(0x08)
	bool bFollow; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName AttachSocket; // 0x44(0x08)
	bool bUseListenerRotation; // 0x4c(0x01)
	bool bUseOcclusion; // 0x4d(0x01)
	char pad_4E[0x2]; // 0x4e(0x02)
	struct FName OcclusionTrace; // 0x50(0x08)
};

// Class Icarus.AnimNotify_PlaySoundPlayer
// Size: 0x50 (Inherited: 0x38)
struct UAnimNotify_PlaySoundPlayer : UAnimNotify {
	struct UFMODEvent* FMODEvent; // 0x38(0x08)
	bool bUseItemAnimData; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName ItemAnimName; // 0x44(0x08)
	int32_t ItemAnimIndex; // 0x4c(0x04)

	struct UFMODEvent* GetFMODEvent(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.AnimNotify_PlaySoundPlayer.GetFMODEvent // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x14ee670
};

// Class Icarus.ArmourComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UArmourComponent : UTraitComponent {

	bool GetArmourData(struct FArmourData OutData); // Function Icarus.ArmourComponent.GetArmourData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ee110
};

// Class Icarus.ArmourLibrary
// Size: 0x28 (Inherited: 0x28)
struct UArmourLibrary : URowLibrary {

	struct FArmourRowHandle StructToRowHandle(struct FArmourEnum EnumValue); // Function Icarus.ArmourLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f06c0
	struct FName StructToName(struct FArmourEnum EnumValue); // Function Icarus.ArmourLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f04d0
	int32_t StructToInt(struct FArmourEnum EnumValue); // Function Icarus.ArmourLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f02f0
	struct FArmourEnum RowHandleToStruct(struct FArmourRowHandle RowHandle); // Function Icarus.ArmourLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0050
	void RemoveRowFromArmourTable(struct FName Name); // Function Icarus.ArmourLibrary.RemoveRowFromArmourTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14eff10
	void RefreshConstants(); // Function Icarus.ArmourLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14efdd0
	int32_t NumRows(); // Function Icarus.ArmourLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14efcd0
	bool NotEqual_EnumName(struct FArmourEnum A, struct FName B); // Function Icarus.ArmourLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14efac0
	bool NotEqual_EnumEnum(struct FArmourEnum A, struct FArmourEnum B); // Function Icarus.ArmourLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef7f0
	struct FArmourEnum NameToStruct(struct FName NameValue); // Function Icarus.ArmourLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef5e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ArmourLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14ef430
	struct FArmourRowHandle MakeLiteralArmour(struct FArmourRowHandle RowHandle); // Function Icarus.ArmourLibrary.MakeLiteralArmour // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef200
	struct FArmourRowHandle MakeArmourFromIndex(int32_t Index); // Function Icarus.ArmourLibrary.MakeArmourFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eeef0
	struct FArmourEnum MakeArmourEnum(struct FArmourEnum Enum); // Function Icarus.ArmourLibrary.MakeArmourEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eee70
	struct FArmourRowHandle MakeArmour(struct FName RowName); // Function Icarus.ArmourLibrary.MakeArmour // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eedd0
	bool IsValidName(struct FName NameValue); // Function Icarus.ArmourLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14eeb00
	struct FArmourEnum IntToStruct(int32_t IntValue); // Function Icarus.ArmourLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ee950
	struct FName IntToName(int32_t IntValue); // Function Icarus.ArmourLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14ee7a0
	void GetArmourStruct(struct FArmourRowHandle RowHandle, struct FArmourData Armour, enum class EValid Paths); // Function Icarus.ArmourLibrary.GetArmourStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ee4d0
	bool EqualEqual_FArmourRowHandleFArmourRowHandle(struct FArmourRowHandle RowHandleA, struct FArmourRowHandle RowHandleB); // Function Icarus.ArmourLibrary.EqualEqual_FArmourRowHandleFArmourRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14edc80
	bool EqualEqual_EnumEnum(struct FArmourEnum A, struct FArmourEnum B); // Function Icarus.ArmourLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ed960
	struct FArmourRowHandle CastToArmourRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ArmourLibrary.CastToArmourRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ed630
	void BreakArmourEnum(struct FArmourEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ArmourLibrary.BreakArmourEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14ed250
	void AddRowToArmourTable(struct FName Name, struct FArmourData Data, struct FArmourRowHandle NewRow); // Function Icarus.ArmourLibrary.AddRowToArmourTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ecf60
};

// Class Icarus.ArmourSetBonusLibrary
// Size: 0x28 (Inherited: 0x28)
struct UArmourSetBonusLibrary : URowLibrary {

	struct FArmourSetBonusRowHandle StructToRowHandle(struct FArmourSetBonusEnum EnumValue); // Function Icarus.ArmourSetBonusLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0770
	struct FName StructToName(struct FArmourSetBonusEnum EnumValue); // Function Icarus.ArmourSetBonusLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0570
	int32_t StructToInt(struct FArmourSetBonusEnum EnumValue); // Function Icarus.ArmourSetBonusLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0390
	struct FArmourSetBonusEnum RowHandleToStruct(struct FArmourSetBonusRowHandle RowHandle); // Function Icarus.ArmourSetBonusLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f0110
	void RemoveRowFromArmourSetBonusTable(struct FName Name); // Function Icarus.ArmourSetBonusLibrary.RemoveRowFromArmourSetBonusTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14efe90
	void RefreshConstants(); // Function Icarus.ArmourSetBonusLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14efdf0
	int32_t NumRows(); // Function Icarus.ArmourSetBonusLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14efd00
	bool NotEqual_EnumName(struct FArmourSetBonusEnum A, struct FName B); // Function Icarus.ArmourSetBonusLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14efbb0
	bool NotEqual_EnumEnum(struct FArmourSetBonusEnum A, struct FArmourSetBonusEnum B); // Function Icarus.ArmourSetBonusLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef8e0
	struct FArmourSetBonusEnum NameToStruct(struct FName NameValue); // Function Icarus.ArmourSetBonusLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef670
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ArmourSetBonusLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14ef4c0
	struct FArmourSetBonusRowHandle MakeLiteralArmourSetBonus(struct FArmourSetBonusRowHandle RowHandle); // Function Icarus.ArmourSetBonusLibrary.MakeLiteralArmourSetBonus // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef2d0
	struct FArmourSetBonusRowHandle MakeArmourSetBonusFromIndex(int32_t Index); // Function Icarus.ArmourSetBonusLibrary.MakeArmourSetBonusFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef0a0
	struct FArmourSetBonusEnum MakeArmourSetBonusEnum(struct FArmourSetBonusEnum Enum); // Function Icarus.ArmourSetBonusLibrary.MakeArmourSetBonusEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ef020
	struct FArmourSetBonusRowHandle MakeArmourSetBonus(struct FName RowName); // Function Icarus.ArmourSetBonusLibrary.MakeArmourSetBonus // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eef80
	bool IsValidName(struct FName NameValue); // Function Icarus.ArmourSetBonusLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14eeb90
	struct FArmourSetBonusEnum IntToStruct(int32_t IntValue); // Function Icarus.ArmourSetBonusLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14ee9e0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ArmourSetBonusLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14ee830
	void GetArmourSetBonusStruct(struct FArmourSetBonusRowHandle RowHandle, struct FArmourSetBonus ArmourSetBonus, enum class EValid Paths); // Function Icarus.ArmourSetBonusLibrary.GetArmourSetBonusStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ee280
	bool EqualEqual_FArmourSetBonusRowHandleFArmourSetBonusRowHandle(struct FArmourSetBonusRowHandle RowHandleA, struct FArmourSetBonusRowHandle RowHandleB); // Function Icarus.ArmourSetBonusLibrary.EqualEqual_FArmourSetBonusRowHandleFArmourSetBonusRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eddc0
	bool EqualEqual_EnumEnum(struct FArmourSetBonusEnum A, struct FArmourSetBonusEnum B); // Function Icarus.ArmourSetBonusLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14eda50
	struct FArmourSetBonusRowHandle CastToArmourSetBonusRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ArmourSetBonusLibrary.CastToArmourSetBonusRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ed750
	void BreakArmourSetBonusEnum(struct FArmourSetBonusEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ArmourSetBonusLibrary.BreakArmourSetBonusEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14ed3b0
	void AddRowToArmourSetBonusTable(struct FName Name, struct FArmourSetBonus Data, struct FArmourSetBonusRowHandle NewRow); // Function Icarus.ArmourSetBonusLibrary.AddRowToArmourSetBonusTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14ecc60
};

// Class Icarus.ArmourSetBonusTable
// Size: 0xb8 (Inherited: 0xb8)
struct UArmourSetBonusTable : UIcarusDataTable {
};

// Class Icarus.ArmourSetsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UArmourSetsLibrary : URowLibrary {

	struct FArmourSetsRowHandle StructToRowHandle(struct FArmourSetsEnum EnumValue); // Function Icarus.ArmourSetsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5870
	struct FName StructToName(struct FArmourSetsEnum EnumValue); // Function Icarus.ArmourSetsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5730
	int32_t StructToInt(struct FArmourSetsEnum EnumValue); // Function Icarus.ArmourSetsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f55f0
	struct FArmourSetsEnum RowHandleToStruct(struct FArmourSetsRowHandle RowHandle); // Function Icarus.ArmourSetsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5360
	void RemoveRowFromArmourSetsTable(struct FName Name); // Function Icarus.ArmourSetsLibrary.RemoveRowFromArmourSetsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14f5260
	void RefreshConstants(); // Function Icarus.ArmourSetsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14f5150
	int32_t NumRows(); // Function Icarus.ArmourSetsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5070
	bool NotEqual_EnumName(struct FArmourSetsEnum A, struct FName B); // Function Icarus.ArmourSetsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4e90
	bool NotEqual_EnumEnum(struct FArmourSetsEnum A, struct FArmourSetsEnum B); // Function Icarus.ArmourSetsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4cb0
	struct FArmourSetsEnum NameToStruct(struct FName NameValue); // Function Icarus.ArmourSetsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4b90
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ArmourSetsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14f4a70
	struct FArmourSetsRowHandle MakeLiteralArmourSets(struct FArmourSetsRowHandle RowHandle); // Function Icarus.ArmourSetsLibrary.MakeLiteralArmourSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f48d0
	struct FArmourSetsRowHandle MakeArmourSetsFromIndex(int32_t Index); // Function Icarus.ArmourSetsLibrary.MakeArmourSetsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4690
	struct FArmourSetsEnum MakeArmourSetsEnum(struct FArmourSetsEnum Enum); // Function Icarus.ArmourSetsLibrary.MakeArmourSetsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4610
	struct FArmourSetsRowHandle MakeArmourSets(struct FName RowName); // Function Icarus.ArmourSetsLibrary.MakeArmourSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4570
	bool IsValidName(struct FName NameValue); // Function Icarus.ArmourSetsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14f4450
	struct FArmourSetsEnum IntToStruct(int32_t IntValue); // Function Icarus.ArmourSetsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4330
	struct FName IntToName(int32_t IntValue); // Function Icarus.ArmourSetsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14f4210
	void GetArmourSetsStruct(struct FArmourSetsRowHandle RowHandle, struct FArmourSet ArmourSets, enum class EValid Paths); // Function Icarus.ArmourSetsLibrary.GetArmourSetsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14f3ce0
	bool EqualEqual_FArmourSetsRowHandleFArmourSetsRowHandle(struct FArmourSetsRowHandle RowHandleA, struct FArmourSetsRowHandle RowHandleB); // Function Icarus.ArmourSetsLibrary.EqualEqual_FArmourSetsRowHandleFArmourSetsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f3a60
	bool EqualEqual_EnumEnum(struct FArmourSetsEnum A, struct FArmourSetsEnum B); // Function Icarus.ArmourSetsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f3880
	struct FArmourSetsRowHandle CastToArmourSetsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ArmourSetsLibrary.CastToArmourSetsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14f3640
	void BreakArmourSetsEnum(struct FArmourSetsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ArmourSetsLibrary.BreakArmourSetsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14f3380
	void AddRowToArmourSetsTable(struct FName Name, struct FArmourSet Data, struct FArmourSetsRowHandle NewRow); // Function Icarus.ArmourSetsLibrary.AddRowToArmourSetsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14f2fb0
};

// Class Icarus.ArmourSetsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UArmourSetsTable : UIcarusDataTable {
};

// Class Icarus.ArmourTable
// Size: 0xb8 (Inherited: 0xb8)
struct UArmourTable : UIcarusDataTable {
};

// Class Icarus.AssetReferencesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAssetReferencesLibrary : URowLibrary {

	struct FAssetReferencesRowHandle StructToRowHandle(struct FAssetReferencesEnum EnumValue); // Function Icarus.AssetReferencesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5920
	struct FName StructToName(struct FAssetReferencesEnum EnumValue); // Function Icarus.AssetReferencesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f57d0
	int32_t StructToInt(struct FAssetReferencesEnum EnumValue); // Function Icarus.AssetReferencesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5690
	struct FAssetReferencesEnum RowHandleToStruct(struct FAssetReferencesRowHandle RowHandle); // Function Icarus.AssetReferencesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f5420
	void RemoveRowFromAssetReferencesTable(struct FName Name); // Function Icarus.AssetReferencesLibrary.RemoveRowFromAssetReferencesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14f52e0
	void RefreshConstants(); // Function Icarus.AssetReferencesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x14f5170
	int32_t NumRows(); // Function Icarus.AssetReferencesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f50a0
	bool NotEqual_EnumName(struct FAssetReferencesEnum A, struct FName B); // Function Icarus.AssetReferencesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4f80
	bool NotEqual_EnumEnum(struct FAssetReferencesEnum A, struct FAssetReferencesEnum B); // Function Icarus.AssetReferencesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4da0
	struct FAssetReferencesEnum NameToStruct(struct FName NameValue); // Function Icarus.AssetReferencesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4c20
	int32_t NameToInt(struct FName NameValue); // Function Icarus.AssetReferencesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x14f4b00
	struct FAssetReferencesRowHandle MakeLiteralAssetReferences(struct FAssetReferencesRowHandle RowHandle); // Function Icarus.AssetReferencesLibrary.MakeLiteralAssetReferences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f49a0
	struct FAssetReferencesRowHandle MakeAssetReferencesFromIndex(int32_t Index); // Function Icarus.AssetReferencesLibrary.MakeAssetReferencesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4840
	struct FAssetReferencesEnum MakeAssetReferencesEnum(struct FAssetReferencesEnum Enum); // Function Icarus.AssetReferencesLibrary.MakeAssetReferencesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f47c0
	struct FAssetReferencesRowHandle MakeAssetReferences(struct FName RowName); // Function Icarus.AssetReferencesLibrary.MakeAssetReferences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f4720
	bool IsValidName(struct FName NameValue); // Function Icarus.AssetReferencesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x14f44e0
	struct FAssetReferencesEnum IntToStruct(int32_t IntValue); // Function Icarus.AssetReferencesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f43c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.AssetReferencesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x14f42a0
	void GetAssetReferencesStruct(struct FAssetReferencesRowHandle RowHandle, struct FAssetReferenceData AssetReferences, enum class EValid Paths); // Function Icarus.AssetReferencesLibrary.GetAssetReferencesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14f3e70
	bool EqualEqual_FAssetReferencesRowHandleFAssetReferencesRowHandle(struct FAssetReferencesRowHandle RowHandleA, struct FAssetReferencesRowHandle RowHandleB); // Function Icarus.AssetReferencesLibrary.EqualEqual_FAssetReferencesRowHandleFAssetReferencesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f3ba0
	bool EqualEqual_EnumEnum(struct FAssetReferencesEnum A, struct FAssetReferencesEnum B); // Function Icarus.AssetReferencesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f3970
	struct FAssetReferencesRowHandle CastToAssetReferencesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.AssetReferencesLibrary.CastToAssetReferencesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14f3760
	void BreakAssetReferencesEnum(struct FAssetReferencesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.AssetReferencesLibrary.BreakAssetReferencesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14f34e0
	void AddRowToAssetReferencesTable(struct FName Name, struct FAssetReferenceData Data, struct FAssetReferencesRowHandle NewRow); // Function Icarus.AssetReferencesLibrary.AddRowToAssetReferencesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14f31e0
};

// Class Icarus.AssetReferencesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UAssetReferencesTable : UIcarusDataTable {
};

// Class Icarus.AtmosphereController
// Size: 0x220 (Inherited: 0x220)
struct AAtmosphereController : AInfo {
};

// Class Icarus.AudioContextComponent
// Size: 0x160 (Inherited: 0xb0)
struct UAudioContextComponent : UActorComponent {
	float MaxUpdateDistance; // 0xb0(0x04)
	float OcclusionShelterContextThreshold; // 0xb4(0x04)
	struct FMulticastInlineDelegate OnEnteredCave; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnExitedCave; // 0xc8(0x10)
	char pad_D8[0x1]; // 0xd8(0x01)
	enum class EAudioShelterState ShelterState; // 0xd9(0x01)
	char pad_DA[0x16]; // 0xda(0x16)
	struct UAudioOcclusionComponent* OcclusionComponent; // 0xf0(0x08)
	struct TArray<struct FAudioContextSubscriber> Subscribers; // 0xf8(0x10)
	struct TMap<struct ACave*, struct FAudioContextCaveColliderSet> CaveOverlaps; // 0x108(0x50)
	char pad_158[0x8]; // 0x158(0x08)

	void SubscribeAudioComponentToUpdates(struct UFMODAudioComponent* AudioComponent, bool bUsesOcclusionParameter, struct FName OcclusionTraceName, bool bUsesWaterImmersionParameter); // Function Icarus.AudioContextComponent.SubscribeAudioComponentToUpdates // (Final|Native|Public|BlueprintCallable) // @ game+0x14f59d0
	void SetCaveOverlapOnceByLocation(struct FVector Location); // Function Icarus.AudioContextComponent.SetCaveOverlapOnceByLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x14f5560
	void RemoveCaveOverlap(struct ACave* Cave, struct UPrimitiveComponent* Collider); // Function Icarus.AudioContextComponent.RemoveCaveOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x14f5190
	enum class EAudioShelterState GetShelterState(); // Function Icarus.AudioContextComponent.GetShelterState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f41e0
	enum class EOcclusionShelterContextFMODParam GetOcclusionShelterContextFMODParam(float OcclusionValue); // Function Icarus.AudioContextComponent.GetOcclusionShelterContextFMODParam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f4150
	float GetListenerCaveSpaceCorrelation(); // Function Icarus.AudioContextComponent.GetListenerCaveSpaceCorrelation // (Final|Native|Public|BlueprintCallable) // @ game+0x14f4120
	float GetCurrentWaterImmersion(); // Function Icarus.AudioContextComponent.GetCurrentWaterImmersion // (Native|Public|BlueprintCallable) // @ game+0x14f40e0
	float GetCurrentOcclusion(struct FName TracePointName); // Function Icarus.AudioContextComponent.GetCurrentOcclusion // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x14f4040
	enum class ECaveContextFMODParam GetCaveContextFMODParam(); // Function Icarus.AudioContextComponent.GetCaveContextFMODParam // (Final|Native|Public|BlueprintCallable) // @ game+0x14f4010
	void AddCaveOverlap(struct ACave* Cave, struct UPrimitiveComponent* Collider); // Function Icarus.AudioContextComponent.AddCaveOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x14f2ee0
};

// Class Icarus.AudioContextCreatureComponent
// Size: 0x168 (Inherited: 0x160)
struct UAudioContextCreatureComponent : UAudioContextComponent {
	struct UCreatureAudioComponent* CreatureAudio; // 0x160(0x08)
};

// Class Icarus.AudioContextPlayerComponent
// Size: 0x170 (Inherited: 0x160)
struct UAudioContextPlayerComponent : UAudioContextComponent {
	float ShelterStateLowThreshold; // 0x160(0x04)
	float ShelterStateHighThreshold; // 0x164(0x04)
	struct UPlayerMovementAudioComponent* PlayerMovementAudioComponent; // 0x168(0x08)

	void ServerSetNewShelter(enum class EAudioShelterState NewShelterState); // Function Icarus.AudioContextPlayerComponent.ServerSetNewShelter // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14f54e0
	void OnShelterUpdated(float NewShelter); // Function Icarus.AudioContextPlayerComponent.OnShelterUpdated // (Final|Native|Private) // @ game+0x14f50d0
};

// Class Icarus.AudioOccluderInterface
// Size: 0x28 (Inherited: 0x28)
struct UAudioOccluderInterface : UInterface {

	float GetOcclusionValue(); // Function Icarus.AudioOccluderInterface.GetOcclusionValue // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x14fa000
};

// Class Icarus.AudioOcclusionComponent
// Size: 0x270 (Inherited: 0x200)
struct UAudioOcclusionComponent : USceneComponent {
	bool bDebug; // 0x1f8(0x01)
	char pad_201[0x6f]; // 0x201(0x6f)

	struct TArray<struct FAudioOcclusionTracePoint> GetTracePoints(struct FVector ListenerLocation); // Function Icarus.AudioOcclusionComponent.GetTracePoints // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x14fa0b0
};

// Class Icarus.AudioOcclusionSocketTraceComponent
// Size: 0x280 (Inherited: 0x270)
struct UAudioOcclusionSocketTraceComponent : UAudioOcclusionComponent {
	struct TArray<struct FAudioOcclusionSocketTracePoint> TracePointDefinitions; // 0x268(0x10)

	void SetTracePointTargets(struct USceneComponent* TargetComponent); // Function Icarus.AudioOcclusionSocketTraceComponent.SetTracePointTargets // (Final|Native|Protected|BlueprintCallable) // @ game+0x1500710
};

// Class Icarus.AudioOcclusionCharacterComponent
// Size: 0x280 (Inherited: 0x280)
struct UAudioOcclusionCharacterComponent : UAudioOcclusionSocketTraceComponent {
};

// Class Icarus.AudioSettingsSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UAudioSettingsSubsystem : UGameInstanceSubsystem {

	void OnSFXVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnSFXVolumeChanged // (Final|Native|Public) // @ game+0x14fde30
	void OnMusicVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnMusicVolumeChanged // (Final|Native|Public) // @ game+0x14fc810
	void OnMasterVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnMasterVolumeChanged // (Final|Native|Public) // @ game+0x14fc270
	void OnDialogueVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnDialogueVolumeChanged // (Final|Native|Public) // @ game+0x14fb2c0
	void OnAmbientVolumeChanged(float Volume); // Function Icarus.AudioSettingsSubsystem.OnAmbientVolumeChanged // (Final|Native|Public) // @ game+0x14fa2e0
};

// Class Icarus.AudioSplineComponent
// Size: 0x570 (Inherited: 0x540)
struct UAudioSplineComponent : USplineComponent {
	struct UFMODEvent* Event; // 0x538(0x08)
	float UpdateFrequencyInListenerRange; // 0x540(0x04)
	float UpdateFrequencyOutsideListenerRange; // 0x544(0x04)
	float InterpSpeed; // 0x548(0x04)
	struct UFMODAudioComponent* AudioComponent; // 0x550(0x08)
	char pad_55C[0x14]; // 0x55c(0x14)
};

// Class Icarus.BackendProxyComponent
// Size: 0x440 (Inherited: 0xb0)
struct UBackendProxyComponent : UActorComponent {
	struct FMulticastSparseDelegate MetaResourcesUpdated; // 0xb0(0x01)
	struct FMulticastSparseDelegate MetaInventoryUpdated; // 0xb1(0x01)
	struct FMulticastSparseDelegate WorkshopPacksUpdated; // 0xb2(0x01)
	struct FMulticastSparseDelegate WorkshopPurchaseResult; // 0xb3(0x01)
	struct FMulticastSparseDelegate DropshipsUpdated; // 0xb4(0x01)
	struct FMulticastSparseDelegate DropshipCreationResult; // 0xb5(0x01)
	struct FMulticastSparseDelegate DropshipModificationResult; // 0xb6(0x01)
	struct FMulticastSparseDelegate DropshipDeletionResult; // 0xb7(0x01)
	struct FMulticastSparseDelegate PreparedLoadoutUpdated; // 0xb8(0x01)
	struct FMulticastSparseDelegate CharacterLoadoutUpdated; // 0xb9(0x01)
	struct FMulticastSparseDelegate LoadoutInventoryUpdated; // 0xba(0x01)
	struct FMulticastSparseDelegate LoadoutPackaged; // 0xbb(0x01)
	struct FMulticastSparseDelegate CreditsUpdated; // 0xbc(0x01)
	struct FMulticastSparseDelegate ProspectsUpdated; // 0xbd(0x01)
	struct FMulticastSparseDelegate ClaimedProspectResult; // 0xbe(0x01)
	struct FMulticastSparseDelegate SettleProspectResult; // 0xbf(0x01)
	struct FMulticastSparseDelegate NotificationsUpdated; // 0xc0(0x01)
	struct FMulticastSparseDelegate TalentModelUpdated; // 0xc1(0x01)
	struct FMulticastSparseDelegate TalentUnlocked; // 0xc2(0x01)
	struct FMulticastSparseDelegate TrackedStatisticsUpdateResult; // 0xc3(0x01)
	struct FMulticastSparseDelegate FactionMissionUpdateResult; // 0xc4(0x01)
	struct FMulticastSparseDelegate BackToHabResult; // 0xc5(0x01)
	struct FMulticastSparseDelegate GetCharacterProfileResult; // 0xc6(0x01)
	struct FMulticastSparseDelegate PackageLoadoutResult; // 0xc7(0x01)
	struct FMulticastSparseDelegate UpdateCharacterProgressResult; // 0xc8(0x01)
	struct FMulticastSparseDelegate UpdateCharacterTalentsResult; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
	struct UGetMetaResourceCallbackProxyGen* MetaResourcesCallback; // 0xd0(0x08)
	struct UGetMetaInventoryCallbackProxyGen* MetaInventoryCallback; // 0xd8(0x08)
	struct UGetLoadoutInventoryCallbackProxyGen* LoadoutInventoryCallback; // 0xe0(0x08)
	struct UGetWorkshopPacksCallbackProxyGen* WorkshopPacksCallback; // 0xe8(0x08)
	struct UBuyWorkshopPackCallbackProxyGen* BuyWorkshopPackCallback; // 0xf0(0x08)
	struct UMoveMetaInventoryItemCallbackProxyGen* ShiftMetaItemCallbackProxy; // 0xf8(0x08)
	struct URemoveMetaItemCallbackProxyGen* RemoveMetaItemCallbackProxy; // 0x100(0x08)
	struct UGetDropshipsCallbackProxyGen* GetDropshipsCallbackProxy; // 0x108(0x08)
	struct UCreateDropshipCallbackProxyGen* CreateDropshipsCallbackProxy; // 0x110(0x08)
	struct UModifyDropshipCallbackProxyGen* ModifyDropshipsCallbackProxy; // 0x118(0x08)
	struct UDeleteDropshipCallbackProxyGen* DeleteDropshipsCallbackProxy; // 0x120(0x08)
	struct USelectDropshipCallbackProxyGen* SelectDropshipCallbackProxy; // 0x128(0x08)
	struct URemoveSelectedDropshipCallbackProxyGen* RemoveSelectedDropshipCallbackProxy; // 0x130(0x08)
	struct USelectEnvirosuitCallbackProxyGen* SelectEnvirosuitCallbackProxy; // 0x138(0x08)
	struct URemoveEnvirosuitCallbackProxyGen* RemoveEnvirosuitCallbackProxy; // 0x140(0x08)
	struct UPackageLoadoutCallbackProxyGen* PackageLoadoutCallbackProxy; // 0x148(0x08)
	struct UUnpackageLoadoutCallbackProxyGen* UnpackageLoadoutCallbackProxy; // 0x150(0x08)
	struct UGetCharacterLoadoutCallbackProxyGen* CharacterLoadoutCallbackProxy; // 0x158(0x08)
	struct UGetPreparedLoadoutCallbackProxyGen* PreparedLoadoutCallbackProxy; // 0x160(0x08)
	struct UGetCreditsCallbackProxyGen* GetCreditsCallbackProxy; // 0x168(0x08)
	struct UGetAvailableProspectsCallbackProxyGen* GetAvailableProspectsCallbackProxy; // 0x170(0x08)
	struct UClaimProspectCallbackProxyGen* ClaimProspectCallbackProxy; // 0x178(0x08)
	struct USettleProspectCallbackProxyGen* SettleProspectCallbackProxy; // 0x180(0x08)
	struct UGetNotificationsCallbackProxyGen* GetNotificationsCallbackProxy; // 0x188(0x08)
	struct UClaimNotificationAttachmentsCallbackProxyGen* ClaimNotificationAttachmentsCallbackProxy; // 0x190(0x08)
	struct UDeleteNotificationCallbackProxyGen* DeleteNotificationCallbackProxy; // 0x198(0x08)
	struct UReadNotificationCallbackProxyGen* ReadNotificationCallbackProxy; // 0x1a0(0x08)
	struct UUpdateCharacterProgressCallbackProxyGen* UpdateCharacterProgressProxy; // 0x1a8(0x08)
	struct UUpdateTrackedStatsCallbackProxyGen* UpdateTrackedStatsCallbackProxy; // 0x1b0(0x08)
	struct UUpdateFactionMissionProgressCallbackProxyGen* UpdateFactionMissionProgressCallbackProxy; // 0x1b8(0x08)
	struct USyncTalentsCallbackProxyGen* SyncTalentsCallbackProxy; // 0x1c0(0x08)
	struct UGetCharacterProfileCallbackProxyGen* GetCharacterProfileCallbackProxy; // 0x1c8(0x08)
	struct UBackToHabCallbackProxyGen* BackToHabCallbackProxy; // 0x1d0(0x08)
	struct TMap<enum class ERateLimitedRequests, int32_t> RequestTimers; // 0x1d8(0x50)
	float CurrentTime; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct TArray<struct FMetaResource> MetaResources; // 0x230(0x10)
	int32_t Credits; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct TArray<struct FMetaItem> MetaInventory; // 0x248(0x10)
	struct TArray<struct FMetaItem> LoadoutInventory; // 0x258(0x10)
	struct TArray<struct FBackendTalent> Talents; // 0x268(0x10)
	struct TArray<struct FWorkshopPack> WorkshopPacks; // 0x278(0x10)
	struct TArray<struct FDropship> Dropships; // 0x288(0x10)
	int32_t PreparedDropship; // 0x298(0x04)
	int32_t PreparedDropshipID; // 0x29c(0x04)
	struct FMetaItem PreparedEnvirosuit; // 0x2a0(0x40)
	struct FCharacterLoadout CharacterLoadout; // 0x2e0(0x138)
	bool PreparedLoadout; // 0x418(0x01)
	char pad_419[0x7]; // 0x419(0x07)
	struct TArray<struct FProspectInfo> Prospects; // 0x420(0x10)
	struct TArray<struct FNotification> Notifications; // 0x430(0x10)

	void UpdateSelectedDropship(); // Function Icarus.BackendProxyComponent.UpdateSelectedDropship // (Final|Native|Public) // @ game+0x15010b0
	void TriggerWorkshopPurchaseResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerWorkshopPurchaseResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1501020
	void TriggerTalentUnlocked(struct FTalentsRowHandle Talent, int32_t Rank, bool Success); // Function Icarus.BackendProxyComponent.TriggerTalentUnlocked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1500eb0
	void TriggerProspectSettleResult(bool Success, struct FProspectInfo ProspectInfo); // Function Icarus.BackendProxyComponent.TriggerProspectSettleResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1500cf0
	void TriggerLoadoutPackage(); // Function Icarus.BackendProxyComponent.TriggerLoadoutPackage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1500cd0
	void TriggerDropshipModificationResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerDropshipModificationResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1500c40
	void TriggerDropshipDeletionResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerDropshipDeletionResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1500bb0
	void TriggerDropshipCreationResult(bool Success); // Function Icarus.BackendProxyComponent.TriggerDropshipCreationResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1500b20
	void TriggerClaimProspectResult(bool Success, struct FProspectInfo ProspectInfo); // Function Icarus.BackendProxyComponent.TriggerClaimProspectResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x15007a0
	void SetInitialTalents(struct TArray<struct FBackendTalent> InitialTalents); // Function Icarus.BackendProxyComponent.SetInitialTalents // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500640
	void RetrieveCharacterLoadout(); // Function Icarus.BackendProxyComponent.RetrieveCharacterLoadout // (Final|Native|Public|BlueprintCallable) // @ game+0x1500620
	void Request_WorkshopPurchaseWorkshopPack(int32_t Index); // Function Icarus.BackendProxyComponent.Request_WorkshopPurchaseWorkshopPack // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500590
	void Request_WorkshopPacks(); // Function Icarus.BackendProxyComponent.Request_WorkshopPacks // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1500570
	void Request_UpdateTrackedStats(); // Function Icarus.BackendProxyComponent.Request_UpdateTrackedStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500550
	void Request_UpdateFactionMissionProgress(struct FFactionMissionsRowHandle Mission, int32_t Progress); // Function Icarus.BackendProxyComponent.Request_UpdateFactionMissionProgress // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500470
	void Request_UpdateCharacterProgress(); // Function Icarus.BackendProxyComponent.Request_UpdateCharacterProgress // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500450
	void Request_UnpackageLoadout(); // Function Icarus.BackendProxyComponent.Request_UnpackageLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500430
	void Request_UnlockTalent(struct FTalentsRowHandle Talent); // Function Icarus.BackendProxyComponent.Request_UnlockTalent // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500380
	void Request_SyncTalents(); // Function Icarus.BackendProxyComponent.Request_SyncTalents // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1500360
	void Request_ShiftInventoryItem(struct UInventory* SourceInventory, struct UInventory* DestinationInventory, int32_t SourceSlot, int32_t DestinationSlot, int32_t Amount); // Function Icarus.BackendProxyComponent.Request_ShiftInventoryItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15001d0
	void Request_SettleProspect(struct FString ProspectUID, bool SettleProspect); // Function Icarus.BackendProxyComponent.Request_SettleProspect // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15000e0
	void Request_RemovePreparedEnvirosuit(); // Function Icarus.BackendProxyComponent.Request_RemovePreparedEnvirosuit // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15000c0
	void Request_RemovePreparedDropship(); // Function Icarus.BackendProxyComponent.Request_RemovePreparedDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15000a0
	void Request_RemoveMetaItem(struct UInventory* SourceInventory, int32_t SourceSlot, int32_t Amount); // Function Icarus.BackendProxyComponent.Request_RemoveMetaItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14fffa0
	void Request_ReadNotification(struct FString NotificationID); // Function Icarus.BackendProxyComponent.Request_ReadNotification // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ffef0
	void Request_PrepareEnvirosuit(struct UInventory* Inventory, int32_t Slot); // Function Icarus.BackendProxyComponent.Request_PrepareEnvirosuit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffe00
	void Request_PrepareDropship(int32_t Index); // Function Icarus.BackendProxyComponent.Request_PrepareDropship // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffd70
	void Request_PreparedLoadout(); // Function Icarus.BackendProxyComponent.Request_PreparedLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ffed0
	void Request_PackageLoadout(); // Function Icarus.BackendProxyComponent.Request_PackageLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ffd50
	void Request_ModifyDropship(int32_t Index, struct FDropshipModification Dropship); // Function Icarus.BackendProxyComponent.Request_ModifyDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ffc20
	void Request_MetaResources(); // Function Icarus.BackendProxyComponent.Request_MetaResources // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffc00
	void Request_MetaInventory(); // Function Icarus.BackendProxyComponent.Request_MetaInventory // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffbe0
	void Request_LoadoutInventory(); // Function Icarus.BackendProxyComponent.Request_LoadoutInventory // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffbc0
	void Request_LeaveProspectByDropship(); // Function Icarus.BackendProxyComponent.Request_LeaveProspectByDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ffba0
	void Request_GetNotifications(bool RequestCompleteList); // Function Icarus.BackendProxyComponent.Request_GetNotifications // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffb10
	void Request_GetCharacterProfile(int32_t CharSlot); // Function Icarus.BackendProxyComponent.Request_GetCharacterProfile // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ffa80
	void Request_Dropships(); // Function Icarus.BackendProxyComponent.Request_Dropships // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ffa60
	void Request_DeleteNotification(struct FString NotificationID); // Function Icarus.BackendProxyComponent.Request_DeleteNotification // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ff9b0
	void Request_DeleteDropship(int32_t Index); // Function Icarus.BackendProxyComponent.Request_DeleteDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ff920
	void Request_Credits(); // Function Icarus.BackendProxyComponent.Request_Credits // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ff900
	void Request_CreateDropship(); // Function Icarus.BackendProxyComponent.Request_CreateDropship // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ff8e0
	void Request_ClaimProspect(struct FProspectInfo ProspectInfo); // Function Icarus.BackendProxyComponent.Request_ClaimProspect // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ff770
	void Request_ClaimNotificationAttachements(struct FString NotificationID); // Function Icarus.BackendProxyComponent.Request_ClaimNotificationAttachements // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ff6c0
	void Request_CharacterLoadout(); // Function Icarus.BackendProxyComponent.Request_CharacterLoadout // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14ff6a0
	void Request_AvailableProspects(); // Function Icarus.BackendProxyComponent.Request_AvailableProspects // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x14ff680
	void RemoveDropship(int32_t DropshipID); // Function Icarus.BackendProxyComponent.RemoveDropship // (Final|Native|Public) // @ game+0x14ff5f0
	bool RateLimitCheck(enum class ERateLimitedRequests RequestType); // Function Icarus.BackendProxyComponent.RateLimitCheck // (Final|Native|Public) // @ game+0x14ff560
	void ProcessResourceDelta(struct TArray<struct FMetaResource> ResourcesDelta); // Function Icarus.BackendProxyComponent.ProcessResourceDelta // (Final|Native|Public) // @ game+0x14ff3e0
	void ProcessInventoryDelta(struct FInventoryDelta InventoryDelta); // Function Icarus.BackendProxyComponent.ProcessInventoryDelta // (Final|Native|Public|HasOutParms) // @ game+0x14ff2d0
	void ProcessDropshipDelta(struct FDropshipDelta DropshipDelta); // Function Icarus.BackendProxyComponent.ProcessDropshipDelta // (Final|Native|Public) // @ game+0x14fed90
	void PrepareEnvirosuit(struct UInventory* Inventory, int32_t InventorySlot); // Function Icarus.BackendProxyComponent.PrepareEnvirosuit // (Final|Native|Public|BlueprintCallable) // @ game+0x14fecc0
	void PrepareDropship(int32_t Index); // Function Icarus.BackendProxyComponent.PrepareDropship // (Final|Native|Public|BlueprintCallable) // @ game+0x14fec30
	void OnWorkshopPacksRequestSuccess(struct FResGetWorkshopPacks Response); // Function Icarus.BackendProxyComponent.OnWorkshopPacksRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fea70
	void OnWorkshopPacksRequestFailure(struct FResGetWorkshopPacks Response); // Function Icarus.BackendProxyComponent.OnWorkshopPacksRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fe8b0
	void OnUpdateCharacterProgressSuccess(struct FResUpdateCharacterProgress Response); // Function Icarus.BackendProxyComponent.OnUpdateCharacterProgressSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fe820
	void OnUpdateCharacterProgressFailure(struct FResUpdateCharacterProgress Response); // Function Icarus.BackendProxyComponent.OnUpdateCharacterProgressFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fe790
	void OnUnpackageLoadoutRequestSuccess(struct FResUnpackageLoadout Response); // Function Icarus.BackendProxyComponent.OnUnpackageLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fe6f0
	void OnUnpackageLoadoutRequestFailure(struct FResUnpackageLoadout Response); // Function Icarus.BackendProxyComponent.OnUnpackageLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fe650
	void OnTrackedStatsUpdatedSuccess(struct FResUpdateTrackedStats Response); // Function Icarus.BackendProxyComponent.OnTrackedStatsUpdatedSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fe5c0
	void OnTrackedStatsUpdatedFailure(struct FResUpdateTrackedStats Response); // Function Icarus.BackendProxyComponent.OnTrackedStatsUpdatedFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fe530
	void OnSyncTalentsSuccess(struct FResSyncTalents Response); // Function Icarus.BackendProxyComponent.OnSyncTalentsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fe450
	void OnSyncTalentsFailure(struct FResSyncTalents Response); // Function Icarus.BackendProxyComponent.OnSyncTalentsFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fe370
	void OnShiftMetaItemRequestSuccess(struct FResMoveMetaInventoryItem Response); // Function Icarus.BackendProxyComponent.OnShiftMetaItemRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fe290
	void OnShiftMetaItemRequestFailure(struct FResMoveMetaInventoryItem Response); // Function Icarus.BackendProxyComponent.OnShiftMetaItemRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fe1b0
	void OnSettleProspectSuccess(struct FResSettleProspect Response); // Function Icarus.BackendProxyComponent.OnSettleProspectSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fe030
	void OnSettleProspectFailure(struct FResSettleProspect Response); // Function Icarus.BackendProxyComponent.OnSettleProspectFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fdeb0
	void OnRep_WorkshopPacks(); // Function Icarus.BackendProxyComponent.OnRep_WorkshopPacks // (Final|Native|Public) // @ game+0x14fde10
	void OnRep_Talents(); // Function Icarus.BackendProxyComponent.OnRep_Talents // (Final|Native|Public) // @ game+0x14fddf0
	void OnRep_PreparedLoadout(); // Function Icarus.BackendProxyComponent.OnRep_PreparedLoadout // (Final|Native|Public) // @ game+0x14fddd0
	void OnRep_PreparedEnvirosuit(); // Function Icarus.BackendProxyComponent.OnRep_PreparedEnvirosuit // (Final|Native|Public) // @ game+0x14fddd0
	void OnRep_PreparedDropship(); // Function Icarus.BackendProxyComponent.OnRep_PreparedDropship // (Final|Native|Public) // @ game+0x14fddd0
	void OnRep_Notifications(); // Function Icarus.BackendProxyComponent.OnRep_Notifications // (Final|Native|Public) // @ game+0x14fddb0
	void OnRep_MetaResources(); // Function Icarus.BackendProxyComponent.OnRep_MetaResources // (Final|Native|Public) // @ game+0x14fdd90
	void OnRep_MetaInventory(); // Function Icarus.BackendProxyComponent.OnRep_MetaInventory // (Final|Native|Public) // @ game+0x14fdd70
	void OnRep_LoadoutInventory(); // Function Icarus.BackendProxyComponent.OnRep_LoadoutInventory // (Final|Native|Public) // @ game+0x14fdd50
	void OnRep_Dropships(); // Function Icarus.BackendProxyComponent.OnRep_Dropships // (Final|Native|Public) // @ game+0x14fdd30
	void OnRep_Credits(); // Function Icarus.BackendProxyComponent.OnRep_Credits // (Final|Native|Public) // @ game+0x14fdd10
	void OnRep_CharacterLoadout(); // Function Icarus.BackendProxyComponent.OnRep_CharacterLoadout // (Final|Native|Public) // @ game+0x14fdcf0
	void OnRep_AvailableProspects(); // Function Icarus.BackendProxyComponent.OnRep_AvailableProspects // (Final|Native|Public) // @ game+0x14fdcd0
	void OnRemovePreparedEnvirosuitRequestSuccess(struct FResRemoveEnvirosuit Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedEnvirosuitRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fdb50
	void OnRemovePreparedEnvirosuitRequestFailure(struct FResRemoveEnvirosuit Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedEnvirosuitRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fd9d0
	void OnRemovePreparedDropshipRequestSuccess(struct FResRemoveSelectedDropship Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedDropshipRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fd930
	void OnRemovePreparedDropshipRequestFailure(struct FResRemoveSelectedDropship Response); // Function Icarus.BackendProxyComponent.OnRemovePreparedDropshipRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fd890
	void OnRemoveMetaItemRequestSuccess(struct FResRemoveMetaInventoryItem Response); // Function Icarus.BackendProxyComponent.OnRemoveMetaItemRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fd770
	void OnRemoveMetaItemRequestFailure(struct FResRemoveMetaInventoryItem Response); // Function Icarus.BackendProxyComponent.OnRemoveMetaItemRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fd650
	void OnReadNotificationSuccess(struct FResReadNotification Response); // Function Icarus.BackendProxyComponent.OnReadNotificationSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fd5a0
	void OnReadNotificationFailure(struct FResReadNotification Response); // Function Icarus.BackendProxyComponent.OnReadNotificationFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fd4f0
	void OnPurchaseWorkshopPackRequestSuccess(struct FResPurchaseWorkshopPack Response); // Function Icarus.BackendProxyComponent.OnPurchaseWorkshopPackRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fd390
	void OnPurchaseWorkshopPackRequestFailure(struct FResPurchaseWorkshopPack Response); // Function Icarus.BackendProxyComponent.OnPurchaseWorkshopPackRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fd230
	void OnPrepareEnvirosuitRequestSuccess(struct FResSelectEnvirosuit Response); // Function Icarus.BackendProxyComponent.OnPrepareEnvirosuitRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fceb0
	void OnPrepareEnvirosuitRequestFailure(struct FResSelectEnvirosuit Response); // Function Icarus.BackendProxyComponent.OnPrepareEnvirosuitRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fcd30
	void OnPrepareDropshipRequestSuccess(struct FResSelectDropship Response); // Function Icarus.BackendProxyComponent.OnPrepareDropshipRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fcc90
	void OnPrepareDropshipRequestFailure(struct FResSelectDropship Response); // Function Icarus.BackendProxyComponent.OnPrepareDropshipRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fcbf0
	void OnPreparedLoadoutRequestSuccess(struct FResPreparedLoadout Response); // Function Icarus.BackendProxyComponent.OnPreparedLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fd130
	void OnPreparedLoadoutRequestFailure(struct FResPreparedLoadout Response); // Function Icarus.BackendProxyComponent.OnPreparedLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fd030
	void OnPackageLoadoutRequestFailure(struct FResPackageLoadout Response); // Function Icarus.BackendProxyComponent.OnPackageLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fca40
	void OnOnPackageLoadoutRequestSuccess(struct FResPackageLoadout Response); // Function Icarus.BackendProxyComponent.OnOnPackageLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fc890
	void OnModifyDropshipsRequestSuccess(struct FResModifyDropship Response); // Function Icarus.BackendProxyComponent.OnModifyDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fc660
	void OnModifyDropshipsRequestFailure(struct FResModifyDropship Response); // Function Icarus.BackendProxyComponent.OnModifyDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fc4b0
	void OnMetaResourcesRequestSuccess(struct FResGetMetaResources Response); // Function Icarus.BackendProxyComponent.OnMetaResourcesRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fc3d0
	void OnMetaResourcesRequestFailure(struct FResGetMetaResources Response); // Function Icarus.BackendProxyComponent.OnMetaResourcesRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fc2f0
	void OnLoadoutInventoryRequest(struct FResLoadoutInventory Response); // Function Icarus.BackendProxyComponent.OnLoadoutInventoryRequest // (Final|Native|Public|HasOutParms) // @ game+0x14fc160
	void OnInventoryRequestSuccess(struct FResGetMetaInventory Response); // Function Icarus.BackendProxyComponent.OnInventoryRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fc040
	void OnInventoryRequestFailure(struct FResGetMetaInventory Response); // Function Icarus.BackendProxyComponent.OnInventoryRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fbf20
	void OnGetNotificationsSuccess(struct FResGetNotifications Response); // Function Icarus.BackendProxyComponent.OnGetNotificationsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fbdd0
	void OnGetNotificationsFailure(struct FResGetNotifications Response); // Function Icarus.BackendProxyComponent.OnGetNotificationsFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fbc80
	void OnGetDropshipsRequestSuccess(struct FResGetDropships Response); // Function Icarus.BackendProxyComponent.OnGetDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fbae0
	void OnGetDropshipsRequestFailure(struct FResGetDropships Response); // Function Icarus.BackendProxyComponent.OnGetDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fb940
	void OnGetCreditsRequestSuccess(struct FResGetCredits Response); // Function Icarus.BackendProxyComponent.OnGetCreditsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fb8a0
	void OnGetCreditsRequestFailure(struct FResGetCredits Response); // Function Icarus.BackendProxyComponent.OnGetCreditsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fb800
	void OnGetCharacterProfileSuccess(struct FResGetCharacterProfile Response); // Function Icarus.BackendProxyComponent.OnGetCharacterProfileSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fb750
	void OnGetCharacterProfileFailure(struct FResGetCharacterProfile Response); // Function Icarus.BackendProxyComponent.OnGetCharacterProfileFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fb6a0
	void OnGetAvailableProspectsSuccess(struct FResGetAvailableProspects Response); // Function Icarus.BackendProxyComponent.OnGetAvailableProspectsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fb580
	void OnGetAvailableProspectsFailure(struct FResGetAvailableProspects Response); // Function Icarus.BackendProxyComponent.OnGetAvailableProspectsFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fb460
	void OnFactionMissionUpdateSuccess(struct FResUpdateFactionMissionProgress Response); // Function Icarus.BackendProxyComponent.OnFactionMissionUpdateSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fb3d0
	void OnFactionMissionUpdateFailure(struct FResUpdateFactionMissionProgress Response); // Function Icarus.BackendProxyComponent.OnFactionMissionUpdateFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fb340
	void OnDeleteNotificationSuccess(struct FResDeleteNotification Response); // Function Icarus.BackendProxyComponent.OnDeleteNotificationSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fb210
	void OnDeleteNotificationFailure(struct FResDeleteNotification Response); // Function Icarus.BackendProxyComponent.OnDeleteNotificationFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fb160
	void OnDeleteDropshipsRequestSuccess(struct FResDeleteDropship Response); // Function Icarus.BackendProxyComponent.OnDeleteDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fb040
	void OnDeleteDropshipsRequestFailure(struct FResDeleteDropship Response); // Function Icarus.BackendProxyComponent.OnDeleteDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14faf20
	void OnCreateDropshipsRequestSuccess(struct FResCreateDropship Response); // Function Icarus.BackendProxyComponent.OnCreateDropshipsRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fad70
	void OnCreateDropshipsRequestFailure(struct FResCreateDropship Response); // Function Icarus.BackendProxyComponent.OnCreateDropshipsRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fabc0
	void OnClaimProspectSuccess(struct FResClaimProspect Response); // Function Icarus.BackendProxyComponent.OnClaimProspectSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14faa40
	void OnClaimProspectFailure(struct FResClaimProspect Response); // Function Icarus.BackendProxyComponent.OnClaimProspectFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fa8c0
	void OnClaimNotificationAttachmentsSuccess(struct FResClaimNotificationAttachments Response); // Function Icarus.BackendProxyComponent.OnClaimNotificationAttachmentsSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fa750
	void OnClaimNotificationAttachmentsFailure(struct FResClaimNotificationAttachments Response); // Function Icarus.BackendProxyComponent.OnClaimNotificationAttachmentsFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fa5e0
	void OnCharacterLoadoutRequestSuccess(struct FResGetCharacterLoadout Response); // Function Icarus.BackendProxyComponent.OnCharacterLoadoutRequestSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fa530
	void OnCharacterLoadoutRequestFailure(struct FResGetCharacterLoadout Response); // Function Icarus.BackendProxyComponent.OnCharacterLoadoutRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fa480
	void OnBackToHabSuccess(struct FResBackToHab Response); // Function Icarus.BackendProxyComponent.OnBackToHabSuccess // (Final|Native|Public|HasOutParms) // @ game+0x14fa3f0
	void OnBackToHabFailure(struct FResBackToHab Response); // Function Icarus.BackendProxyComponent.OnBackToHabFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fa360
	void LoadoutInventoryRequestFailure(struct FResLoadoutInventory Response); // Function Icarus.BackendProxyComponent.LoadoutInventoryRequestFailure // (Final|Native|Public|HasOutParms) // @ game+0x14fa1d0
	struct TArray<struct FWorkshopPack> GetWorkshopPacks(); // Function Icarus.BackendProxyComponent.GetWorkshopPacks // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14fa190
	struct TArray<struct FBackendTalent> GetTalents(); // Function Icarus.BackendProxyComponent.GetTalents // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14fa070
	struct TArray<struct FProspectInfo> GetProspects(); // Function Icarus.BackendProxyComponent.GetProspects // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14fa030
	struct TArray<struct FNotification> GetNotifications(); // Function Icarus.BackendProxyComponent.GetNotifications // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9fc0
	struct TArray<struct FMetaResource> GetMetaResources(); // Function Icarus.BackendProxyComponent.GetMetaResources // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9f80
	struct TArray<struct FMetaItem> GetMetaInventory(); // Function Icarus.BackendProxyComponent.GetMetaInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9f40
	struct TArray<struct FMetaItem> GetLoadoutInventory(); // Function Icarus.BackendProxyComponent.GetLoadoutInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9f00
	struct TArray<struct FDropship> GetDropships(); // Function Icarus.BackendProxyComponent.GetDropships // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9ec0
	int32_t GetCredits(); // Function Icarus.BackendProxyComponent.GetCredits // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9e90
	struct FCharacterLoadout GetCharacterLoadout(); // Function Icarus.BackendProxyComponent.GetCharacterLoadout // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f9e50
};

// Class Icarus.BallisticComponent
// Size: 0x360 (Inherited: 0xd0)
struct UBallisticComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnFireProjectile; // 0xd0(0x01)
	bool bHasBeenFired; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
	struct UIcarusProjectileComponent* ProjectileMovementComponent; // 0xd8(0x08)
	struct USphereComponent* CollisionComponent; // 0xe0(0x08)
	struct FMulticastSparseDelegate OnProjectileHit; // 0xe8(0x01)
	bool bIsProjectileActive; // 0xe9(0x01)
	char pad_EA[0x6]; // 0xea(0x06)
	struct FBallisticData CachedBallisticData; // 0xf0(0x148)
	struct AActor* FiringActor; // 0x238(0x08)
	char pad_240[0x120]; // 0x240(0x120)

	void SetProjectileActive(bool Active); // Function Icarus.BallisticComponent.SetProjectileActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1507230
	void ProjectileHit(struct FHitResult Hit); // Function Icarus.BallisticComponent.ProjectileHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1506b60
	void ProjectileBounce(struct FHitResult Hit, struct FVector ImpactVelocity); // Function Icarus.BallisticComponent.ProjectileBounce // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1506a30
	void OnRep_bIsProjectileActive(); // Function Icarus.BallisticComponent.OnRep_bIsProjectileActive // (Final|Native|Protected) // @ game+0x1506a10
	void OnProjectileDeactivated(); // Function Icarus.BallisticComponent.OnProjectileDeactivated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15069f0
	void OnProjectileActivated(); // Function Icarus.BallisticComponent.OnProjectileActivated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14d6e50
	struct FStatContainer GetDamageStatContainer(); // Function Icarus.BallisticComponent.GetDamageStatContainer // (Final|Native|Public) // @ game+0x1505940
	int32_t GetDamageStat(struct FStatsEnum InStat); // Function Icarus.BallisticComponent.GetDamageStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1505890
	bool GetBallisticData(struct FBallisticData OutData); // Function Icarus.BallisticComponent.GetBallisticData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1505370
	void FireProjectile_Internal(struct FVector Impulse, struct FVector InstigatorVelocity, struct FProjectileFireParams AdvancedParameters); // Function Icarus.BallisticComponent.FireProjectile_Internal // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1505250
	void FireProjectile(struct FVector Impulse, struct FVector InstigatorVelocity, struct FProjectileFireParams AdvancedParameters, struct AActor* Instigator); // Function Icarus.BallisticComponent.FireProjectile // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x15050e0
	bool CleanupBallistic(); // Function Icarus.BallisticComponent.CleanupBallistic // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1504a50
	void CheckWithinCullDistance(); // Function Icarus.BallisticComponent.CheckWithinCullDistance // (Final|Native|Protected) // @ game+0x1504a30
};

// Class Icarus.BallisticLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBallisticLibrary : URowLibrary {

	struct FBallisticRowHandle StructToRowHandle(struct FBallisticEnum EnumValue); // Function Icarus.BallisticLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1507540
	struct FName StructToName(struct FBallisticEnum EnumValue); // Function Icarus.BallisticLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1507400
	int32_t StructToInt(struct FBallisticEnum EnumValue); // Function Icarus.BallisticLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15072c0
	struct FBallisticEnum RowHandleToStruct(struct FBallisticRowHandle RowHandle); // Function Icarus.BallisticLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1506fe0
	void RemoveRowFromBallisticTable(struct FName Name); // Function Icarus.BallisticLibrary.RemoveRowFromBallisticTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1506c80
	void RefreshConstants(); // Function Icarus.BallisticLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1506c40
	int32_t NumRows(); // Function Icarus.BallisticLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1506990
	bool NotEqual_EnumName(struct FBallisticEnum A, struct FName B); // Function Icarus.BallisticLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15067b0
	bool NotEqual_EnumEnum(struct FBallisticEnum A, struct FBallisticEnum B); // Function Icarus.BallisticLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15065d0
	struct FBallisticEnum NameToStruct(struct FName NameValue); // Function Icarus.BallisticLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15064b0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.BallisticLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1506390
	struct FBallisticRowHandle MakeLiteralBallistic(struct FBallisticRowHandle RowHandle); // Function Icarus.BallisticLibrary.MakeLiteralBallistic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15061f0
	struct FBallisticRowHandle MakeBallisticFromIndex(int32_t Index); // Function Icarus.BallisticLibrary.MakeBallisticFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505e80
	struct FBallisticEnum MakeBallisticEnum(struct FBallisticEnum Enum); // Function Icarus.BallisticLibrary.MakeBallisticEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505e00
	struct FBallisticRowHandle MakeBallistic(struct FName RowName); // Function Icarus.BallisticLibrary.MakeBallistic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505d60
	bool IsValidName(struct FName NameValue); // Function Icarus.BallisticLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1505c40
	struct FBallisticEnum IntToStruct(int32_t IntValue); // Function Icarus.BallisticLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505b20
	struct FName IntToName(int32_t IntValue); // Function Icarus.BallisticLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1505a00
	void GetBallisticStruct(struct FBallisticRowHandle RowHandle, struct FBallisticData Ballistic, enum class EValid Paths); // Function Icarus.BallisticLibrary.GetBallisticStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1505520
	bool EqualEqual_FBallisticRowHandleFBallisticRowHandle(struct FBallisticRowHandle RowHandleA, struct FBallisticRowHandle RowHandleB); // Function Icarus.BallisticLibrary.EqualEqual_FBallisticRowHandleFBallisticRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1504dd0
	bool EqualEqual_EnumEnum(struct FBallisticEnum A, struct FBallisticEnum B); // Function Icarus.BallisticLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1504bf0
	struct FBallisticRowHandle CastToBallisticRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.BallisticLibrary.CastToBallisticRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15047f0
	void BreakBallisticEnum(struct FBallisticEnum Enum, struct FName Name, int32_t Index); // Function Icarus.BallisticLibrary.BreakBallisticEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15043d0
	void AddRowToBallisticTable(struct FName Name, struct FBallisticData Data, struct FBallisticRowHandle NewRow); // Function Icarus.BallisticLibrary.AddRowToBallisticTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1503ff0
};

// Class Icarus.BallisticPoolManager
// Size: 0x100 (Inherited: 0xb0)
struct UBallisticPoolManager : UActorComponent {
	char pad_B0[0x50]; // 0xb0(0x50)

	struct AIcarusItem* RequestProjectile(struct FItemData ProjectileData, struct FTransform SpawnTransform, struct AActor* Owner); // Function Icarus.BallisticPoolManager.RequestProjectile // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1506d80
	void DestroyProjectile(struct AIcarusItem* InProjectile, bool bSkipPoolRemoval); // Function Icarus.BallisticPoolManager.DestroyProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x1504b20
	bool DeactivateProjectile(struct AIcarusItem* InProjectile); // Function Icarus.BallisticPoolManager.DeactivateProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x1504a80
};

// Class Icarus.BallisticTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBallisticTable : UIcarusDataTable {
};

// Class Icarus.StatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatsLibrary : URowLibrary {

	struct FStatsRowHandle StructToRowHandle(struct FStatsEnum EnumValue); // Function Icarus.StatsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8980
	struct FName StructToName(struct FStatsEnum EnumValue); // Function Icarus.StatsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8830
	int32_t StructToInt(struct FStatsEnum EnumValue); // Function Icarus.StatsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b86f0
	struct FStatsEnum RowHandleToStruct(struct FStatsRowHandle RowHandle); // Function Icarus.StatsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8420
	void RemoveRowFromStatsTable(struct FName Name); // Function Icarus.StatsLibrary.RemoveRowFromStatsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b81f0
	void RefreshConstants(); // Function Icarus.StatsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b8150
	int32_t NumRows(); // Function Icarus.StatsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7e20
	bool NotEqual_EnumName(struct FStatsEnum A, struct FName B); // Function Icarus.StatsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7d00
	bool NotEqual_EnumEnum(struct FStatsEnum A, struct FStatsEnum B); // Function Icarus.StatsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7b20
	struct FStatsEnum NameToStruct(struct FName NameValue); // Function Icarus.StatsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b79a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.StatsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b7880
	struct FStatsRowHandle MakeStatsFromIndex(int32_t Index); // Function Icarus.StatsLibrary.MakeStatsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7690
	struct FStatsEnum MakeStatsEnum(struct FStatsEnum Enum); // Function Icarus.StatsLibrary.MakeStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7610
	struct FStatsRowHandle MakeStats(struct FName RowName); // Function Icarus.StatsLibrary.MakeStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7570
	struct FStatsRowHandle MakeLiteralStats(struct FStatsRowHandle RowHandle); // Function Icarus.StatsLibrary.MakeLiteralStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b72f0
	bool IsValidName(struct FName NameValue); // Function Icarus.StatsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b7190
	struct FStatsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7070
	struct FName IntToName(int32_t IntValue); // Function Icarus.StatsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b6f50
	void GetStatsStruct(struct FStatsRowHandle RowHandle, struct FIcarusStatDescription Stats, enum class EValid Paths); // Function Icarus.StatsLibrary.GetStatsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b6a80
	bool EqualEqual_FStatsRowHandleFStatsRowHandle(struct FStatsRowHandle RowHandleA, struct FStatsRowHandle RowHandleB); // Function Icarus.StatsLibrary.EqualEqual_FStatsRowHandleFStatsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b61d0
	bool EqualEqual_EnumEnum(struct FStatsEnum A, struct FStatsEnum B); // Function Icarus.StatsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b5fa0
	struct FStatsRowHandle CastToStatsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.StatsLibrary.CastToStatsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5be0
	void BreakStatsEnum(struct FStatsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.StatsLibrary.BreakStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b5960
	void AddRowToStatsTable(struct FName Name, struct FIcarusStatDescription Data, struct FStatsRowHandle NewRow); // Function Icarus.StatsLibrary.AddRowToStatsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5690
};

// Class Icarus.BaseStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBaseStatsLibrary : UStatsLibrary {

	struct FBaseStatsEnum MakeBaseStatsEnum(struct FBaseStatsEnum Enum); // Function Icarus.BaseStatsLibrary.MakeBaseStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505f10
	bool Filter(int32_t Index); // Function Icarus.BaseStatsLibrary.Filter // (Final|Native|Static|Public) // @ game+0x1505050
	void BreakBaseStatsEnum(struct FBaseStatsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.BaseStatsLibrary.BreakBaseStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1504530
};

// Class Icarus.BedRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UBedRecorderInterface : UInterface {

	void SetPlayerUIDArray(struct TArray<struct FString> PlayerUIDArray); // Function Icarus.BedRecorderInterface.SetPlayerUIDArray // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1507160
	struct TArray<struct FString> GetPlayerUIDArray(); // Function Icarus.BedRecorderInterface.GetPlayerUIDArray // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1505980
};

// Class Icarus.ItemStateRecorderComponent
// Size: 0x1b0 (Inherited: 0x150)
struct UItemStateRecorderComponent : UActorStateRecorderComponent {
	struct FName StaticItemDataRowName; // 0x148(0x08)
	struct FString DatabaseGUID; // 0x150(0x10)
	struct TArray<struct FItemRecordDynamicData> DynamicData; // 0x160(0x10)
	struct TArray<struct FItemRecordStatData> Stats; // 0x170(0x10)
	enum class EIcarusItemContext SpawnedContext; // 0x180(0x01)
	struct FIcarusItemConstructionParameters ConstructionParameters; // 0x188(0x28)
};

// Class Icarus.DeployableRecorderComponent
// Size: 0x1d0 (Inherited: 0x1b0)
struct UDeployableRecorderComponent : UItemStateRecorderComponent {
	struct FDeployableRecord DeployableRecord; // 0x1b0(0x20)
};

// Class Icarus.BedRecorderComponent
// Size: 0x1e0 (Inherited: 0x1d0)
struct UBedRecorderComponent : UDeployableRecorderComponent {
	struct TArray<struct FString> PlayerUIDArrayRecord; // 0x1d0(0x10)
};

// Class Icarus.BiomesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBiomesLibrary : URowLibrary {

	struct FBiomesRowHandle StructToRowHandle(struct FBiomesEnum EnumValue); // Function Icarus.BiomesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15075f0
	struct FName StructToName(struct FBiomesEnum EnumValue); // Function Icarus.BiomesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15074a0
	int32_t StructToInt(struct FBiomesEnum EnumValue); // Function Icarus.BiomesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1507360
	struct FBiomesEnum RowHandleToStruct(struct FBiomesRowHandle RowHandle); // Function Icarus.BiomesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15070a0
	void RemoveRowFromBiomesTable(struct FName Name); // Function Icarus.BiomesLibrary.RemoveRowFromBiomesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1506d00
	void RefreshConstants(); // Function Icarus.BiomesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1506c60
	int32_t NumRows(); // Function Icarus.BiomesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15069c0
	bool NotEqual_EnumName(struct FBiomesEnum A, struct FName B); // Function Icarus.BiomesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15068a0
	bool NotEqual_EnumEnum(struct FBiomesEnum A, struct FBiomesEnum B); // Function Icarus.BiomesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15066c0
	struct FBiomesEnum NameToStruct(struct FName NameValue); // Function Icarus.BiomesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1506540
	int32_t NameToInt(struct FName NameValue); // Function Icarus.BiomesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1506420
	struct FBiomesRowHandle MakeLiteralBiomes(struct FBiomesRowHandle RowHandle); // Function Icarus.BiomesLibrary.MakeLiteralBiomes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15062c0
	struct FBiomesRowHandle MakeBiomesRowFromColor(struct FColor InColor); // Function Icarus.BiomesLibrary.MakeBiomesRowFromColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1506150
	struct FBiomesRowHandle MakeBiomesFromIndex(int32_t Index); // Function Icarus.BiomesLibrary.MakeBiomesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15060c0
	struct FBiomesEnum MakeBiomesEnum(struct FBiomesEnum Enum); // Function Icarus.BiomesLibrary.MakeBiomesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1506040
	struct FBiomesRowHandle MakeBiomes(struct FName RowName); // Function Icarus.BiomesLibrary.MakeBiomes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505fa0
	bool IsValidName(struct FName NameValue); // Function Icarus.BiomesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1505cd0
	struct FBiomesEnum IntToStruct(int32_t IntValue); // Function Icarus.BiomesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1505bb0
	struct FName IntToName(int32_t IntValue); // Function Icarus.BiomesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1505a90
	void GetBiomesStruct(struct FBiomesRowHandle RowHandle, struct FIcarusBiome Biomes, enum class EValid Paths); // Function Icarus.BiomesLibrary.GetBiomesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15056f0
	bool EqualEqual_FBiomesRowHandleFBiomesRowHandle(struct FBiomesRowHandle RowHandleA, struct FBiomesRowHandle RowHandleB); // Function Icarus.BiomesLibrary.EqualEqual_FBiomesRowHandleFBiomesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1504f10
	bool EqualEqual_EnumEnum(struct FBiomesEnum A, struct FBiomesEnum B); // Function Icarus.BiomesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1504ce0
	struct FBiomesRowHandle CastToBiomesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.BiomesLibrary.CastToBiomesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1504910
	void BreakBiomesEnum(struct FBiomesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.BiomesLibrary.BreakBiomesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1504690
	void AddRowToBiomesTable(struct FName Name, struct FIcarusBiome Data, struct FBiomesRowHandle NewRow); // Function Icarus.BiomesLibrary.AddRowToBiomesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15041a0
};

// Class Icarus.BiomesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBiomesTable : UIcarusDataTable {
};

// Class Icarus.TalentControllerComponent
// Size: 0xf8 (Inherited: 0xb0)
struct UTalentControllerComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FMulticastInlineDelegate OnModelViewChangedEvent; // 0xb8(0x10)
	struct UTalentModelInterface* Model; // 0xc8(0x08)
	struct UTalentViewInterface* View; // 0xd0(0x08)
	char pad_D8[0x20]; // 0xd8(0x20)

	void TriggerModelStateRefresh(); // Function Icarus.TalentControllerComponent.TriggerModelStateRefresh // (Final|Native|Protected) // @ game+0x16c5560
	void Setup(struct UActorState* ActorState); // Function Icarus.TalentControllerComponent.Setup // (Native|Public) // @ game+0x16c5060
	void OnTalentUnlocked(struct FTalentsRowHandle Talent, int32_t Rank); // Function Icarus.TalentControllerComponent.OnTalentUnlocked // (Final|Native|Protected) // @ game+0x16c4880
	void OnModelViewChanged(struct UTalentModelInterface* InModel, struct UTalentViewInterface* InView); // Function Icarus.TalentControllerComponent.OnModelViewChanged // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnLevelUp(); // Function Icarus.TalentControllerComponent.OnLevelUp // (Final|Native|Protected) // @ game+0x16c4860
	void OnFlagsUpdated(); // Function Icarus.TalentControllerComponent.OnFlagsUpdated // (Final|Native|Protected) // @ game+0x16c4840
	void NativeModelStateChanged(struct UTalentModelInterface_Const* InModel); // Function Icarus.TalentControllerComponent.NativeModelStateChanged // (Final|Native|Public) // @ game+0x16c4390
};

// Class Icarus.BlueprintTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UBlueprintTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.TalentModelInterface_Const
// Size: 0xd8 (Inherited: 0x28)
struct UTalentModelInterface_Const : UObject {
	struct FMulticastInlineDelegate OnModelStateChanged; // 0x28(0x10)
	char pad_38[0xa0]; // 0x38(0xa0)

	void OnModelViewChanged(struct UTalentModelInterface* InModel, struct UTalentViewInterface* InView); // Function Icarus.TalentModelInterface_Const.OnModelViewChanged // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	bool IsTalentUnlocked(struct FTalentsRowHandle Talent); // Function Icarus.TalentModelInterface_Const.IsTalentUnlocked // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c3a80
	int32_t GetTotalPoints(); // Function Icarus.TalentModelInterface_Const.GetTotalPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c3780
	struct TArray<struct FTalentTreesRowHandle> GetTalentTreesForArchetype(struct FTalentArchetypesRowHandle Archetype); // Function Icarus.TalentModelInterface_Const.GetTalentTreesForArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c34e0
	struct TArray<struct FTalentTreesRowHandle> GetTalentTrees(); // Function Icarus.TalentModelInterface_Const.GetTalentTrees // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c3440
	bool GetTalentState(struct FTalentsRowHandle Talent, struct FTalentModelData OutData); // Function Icarus.TalentModelInterface_Const.GetTalentState // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c3250
	struct TArray<struct FTalentsRowHandle> GetTalents(); // Function Icarus.TalentModelInterface_Const.GetTalents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c35e0
	int32_t GetSpentPointsForTree(struct FTalentTreesRowHandle TalentTree); // Function Icarus.TalentModelInterface_Const.GetSpentPointsForTree // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2e40
	int32_t GetSpentPoints(); // Function Icarus.TalentModelInterface_Const.GetSpentPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2e10
	struct FTalentModelsRowHandle GetModelRowHandle(); // Function Icarus.TalentModelInterface_Const.GetModelRowHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2c80
	struct FTalentModelsRowHandle GetModelData(); // Function Icarus.TalentModelInterface_Const.GetModelData // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2c40
	int32_t GetLevel(); // Function Icarus.TalentModelInterface_Const.GetLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2b10
	struct TScriptInterface<ITalentControllerInterface> GetController(); // Function Icarus.TalentModelInterface_Const.GetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2ad0
	int32_t GetAvailablePoints(); // Function Icarus.TalentModelInterface_Const.GetAvailablePoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2aa0
	struct TArray<struct FTalentArchetypesRowHandle> GetArchetypes(); // Function Icarus.TalentModelInterface_Const.GetArchetypes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2a00
	bool CanUnlockTalent(struct FTalentsRowHandle Talent, int32_t Rank); // Function Icarus.TalentModelInterface_Const.CanUnlockTalent // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2190
};

// Class Icarus.TalentModelInterface
// Size: 0xd8 (Inherited: 0xd8)
struct UTalentModelInterface : UTalentModelInterface_Const {

	void SpendPoints(int32_t NumPoints); // Function Icarus.TalentModelInterface.SpendPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x16c50f0
	void SetLevel(int32_t InLevel); // Function Icarus.TalentModelInterface.SetLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x16c4d90
	void SetController(struct TScriptInterface<ITalentControllerInterface> InController); // Function Icarus.TalentModelInterface.SetController // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16c4c60
	void ResetTalents(); // Function Icarus.TalentModelInterface.ResetTalents // (Final|Native|Public|BlueprintCallable) // @ game+0x16c4ac0
};

// Class Icarus.BlueprintTalentModel
// Size: 0xd8 (Inherited: 0xd8)
struct UBlueprintTalentModel : UTalentModelInterface {
};

// Class Icarus.BlueprintUnlocksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBlueprintUnlocksLibrary : URowLibrary {

	struct FBlueprintUnlocksRowHandle StructToRowHandle(struct FBlueprintUnlocksEnum EnumValue); // Function Icarus.BlueprintUnlocksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150eab0
	struct FName StructToName(struct FBlueprintUnlocksEnum EnumValue); // Function Icarus.BlueprintUnlocksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e8d0
	int32_t StructToInt(struct FBlueprintUnlocksEnum EnumValue); // Function Icarus.BlueprintUnlocksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e6f0
	struct FBlueprintUnlocksEnum RowHandleToStruct(struct FBlueprintUnlocksRowHandle RowHandle); // Function Icarus.BlueprintUnlocksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e420
	void RemoveRowFromBlueprintUnlocksTable(struct FName Name); // Function Icarus.BlueprintUnlocksLibrary.RemoveRowFromBlueprintUnlocksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x150e2a0
	void RefreshConstants(); // Function Icarus.BlueprintUnlocksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x150e240
	int32_t NumRows(); // Function Icarus.BlueprintUnlocksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e1b0
	bool NotEqual_EnumName(struct FBlueprintUnlocksEnum A, struct FName B); // Function Icarus.BlueprintUnlocksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150dee0
	bool NotEqual_EnumEnum(struct FBlueprintUnlocksEnum A, struct FBlueprintUnlocksEnum B); // Function Icarus.BlueprintUnlocksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150dc10
	struct FBlueprintUnlocksEnum NameToStruct(struct FName NameValue); // Function Icarus.BlueprintUnlocksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150da60
	int32_t NameToInt(struct FName NameValue); // Function Icarus.BlueprintUnlocksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x150d8b0
	struct FBlueprintUnlocksRowHandle MakeLiteralBlueprintUnlocks(struct FBlueprintUnlocksRowHandle RowHandle); // Function Icarus.BlueprintUnlocksLibrary.MakeLiteralBlueprintUnlocks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d640
	struct FBlueprintUnlocksRowHandle MakeBlueprintUnlocksFromIndex(int32_t Index); // Function Icarus.BlueprintUnlocksLibrary.MakeBlueprintUnlocksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d250
	struct FBlueprintUnlocksEnum MakeBlueprintUnlocksEnum(struct FBlueprintUnlocksEnum Enum); // Function Icarus.BlueprintUnlocksLibrary.MakeBlueprintUnlocksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d1d0
	struct FBlueprintUnlocksRowHandle MakeBlueprintUnlocks(struct FName RowName); // Function Icarus.BlueprintUnlocksLibrary.MakeBlueprintUnlocks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d130
	bool IsValidName(struct FName NameValue); // Function Icarus.BlueprintUnlocksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x150cf80
	struct FBlueprintUnlocksEnum IntToStruct(int32_t IntValue); // Function Icarus.BlueprintUnlocksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150cdd0
	struct FName IntToName(int32_t IntValue); // Function Icarus.BlueprintUnlocksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x150cc20
	void GetBlueprintUnlocksStruct(struct FBlueprintUnlocksRowHandle RowHandle, struct FBlueprintUnlock BlueprintUnlocks, enum class EValid Paths); // Function Icarus.BlueprintUnlocksLibrary.GetBlueprintUnlocksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150c3d0
	bool EqualEqual_FBlueprintUnlocksRowHandleFBlueprintUnlocksRowHandle(struct FBlueprintUnlocksRowHandle RowHandleA, struct FBlueprintUnlocksRowHandle RowHandleB); // Function Icarus.BlueprintUnlocksLibrary.EqualEqual_FBlueprintUnlocksRowHandleFBlueprintUnlocksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150c010
	bool EqualEqual_EnumEnum(struct FBlueprintUnlocksEnum A, struct FBlueprintUnlocksEnum B); // Function Icarus.BlueprintUnlocksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150bd40
	struct FBlueprintUnlocksRowHandle CastToBlueprintUnlocksRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.BlueprintUnlocksLibrary.CastToBlueprintUnlocksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150b9e0
	void BreakBlueprintUnlocksEnum(struct FBlueprintUnlocksEnum Enum, struct FName Name, int32_t Index); // Function Icarus.BlueprintUnlocksLibrary.BreakBlueprintUnlocksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x150b5c0
	void AddRowToBlueprintUnlocksTable(struct FName Name, struct FBlueprintUnlock Data, struct FBlueprintUnlocksRowHandle NewRow); // Function Icarus.BlueprintUnlocksLibrary.AddRowToBlueprintUnlocksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150ad20
};

// Class Icarus.BlueprintUnlocksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBlueprintUnlocksTable : UIcarusDataTable {
};

// Class Icarus.BTTask_IcarusMoveTo
// Size: 0xe0 (Inherited: 0xb0)
struct UBTTask_IcarusMoveTo : UBTTask_MoveTo {
	bool bUseBlackboardDefinedAcceptanceRadius; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct FBlackboardKeySelector AcceptableRadiusKey; // 0xb8(0x28)
};

// Class Icarus.BuildableAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBuildableAudioDataLibrary : URowLibrary {

	struct FBuildableAudioDataRowHandle StructToRowHandle(struct FBuildableAudioDataEnum EnumValue); // Function Icarus.BuildableAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150eb60
	struct FName StructToName(struct FBuildableAudioDataEnum EnumValue); // Function Icarus.BuildableAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e970
	int32_t StructToInt(struct FBuildableAudioDataEnum EnumValue); // Function Icarus.BuildableAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e790
	struct FBuildableAudioDataEnum RowHandleToStruct(struct FBuildableAudioDataRowHandle RowHandle); // Function Icarus.BuildableAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e4e0
	void RemoveRowFromBuildableAudioDataTable(struct FName Name); // Function Icarus.BuildableAudioDataLibrary.RemoveRowFromBuildableAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x150e320
	void RefreshConstants(); // Function Icarus.BuildableAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x150e260
	int32_t NumRows(); // Function Icarus.BuildableAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e1e0
	bool NotEqual_EnumName(struct FBuildableAudioDataEnum A, struct FName B); // Function Icarus.BuildableAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150dfd0
	bool NotEqual_EnumEnum(struct FBuildableAudioDataEnum A, struct FBuildableAudioDataEnum B); // Function Icarus.BuildableAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150dd00
	struct FBuildableAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.BuildableAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150daf0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.BuildableAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x150d940
	struct FBuildableAudioDataRowHandle MakeLiteralBuildableAudioData(struct FBuildableAudioDataRowHandle RowHandle); // Function Icarus.BuildableAudioDataLibrary.MakeLiteralBuildableAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d7e0
	struct FBuildableAudioDataRowHandle MakeBuildableAudioDataFromIndex(int32_t Index); // Function Icarus.BuildableAudioDataLibrary.MakeBuildableAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d4a0
	struct FBuildableAudioDataEnum MakeBuildableAudioDataEnum(struct FBuildableAudioDataEnum Enum); // Function Icarus.BuildableAudioDataLibrary.MakeBuildableAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d420
	struct FBuildableAudioDataRowHandle MakeBuildableAudioData(struct FName RowName); // Function Icarus.BuildableAudioDataLibrary.MakeBuildableAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d380
	bool IsValidName(struct FName NameValue); // Function Icarus.BuildableAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x150d010
	struct FBuildableAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.BuildableAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150ce60
	struct FName IntToName(int32_t IntValue); // Function Icarus.BuildableAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x150ccb0
	void GetBuildableAudioDataStruct(struct FBuildableAudioDataRowHandle RowHandle, struct FBuildableAudioData BuildableAudioData, enum class EValid Paths); // Function Icarus.BuildableAudioDataLibrary.GetBuildableAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150c5a0
	bool EqualEqual_FBuildableAudioDataRowHandleFBuildableAudioDataRowHandle(struct FBuildableAudioDataRowHandle RowHandleA, struct FBuildableAudioDataRowHandle RowHandleB); // Function Icarus.BuildableAudioDataLibrary.EqualEqual_FBuildableAudioDataRowHandleFBuildableAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150c150
	bool EqualEqual_EnumEnum(struct FBuildableAudioDataEnum A, struct FBuildableAudioDataEnum B); // Function Icarus.BuildableAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150be30
	struct FBuildableAudioDataRowHandle CastToBuildableAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.BuildableAudioDataLibrary.CastToBuildableAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150bb00
	void BreakBuildableAudioDataEnum(struct FBuildableAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.BuildableAudioDataLibrary.BreakBuildableAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x150b720
	void AddRowToBuildableAudioDataTable(struct FName Name, struct FBuildableAudioData Data, struct FBuildableAudioDataRowHandle NewRow); // Function Icarus.BuildableAudioDataLibrary.AddRowToBuildableAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150aff0
};

// Class Icarus.BuildableAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBuildableAudioDataTable : UIcarusDataTable {
};

// Class Icarus.BuildableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UBuildableComponent : UTraitComponent {
	struct AIcarusActor* ClassToBuild; // 0xd0(0x08)
	int32_t Variation; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	void SetVariation(int32_t NewVariation); // Function Icarus.BuildableComponent.SetVariation // (Final|Native|Public|BlueprintCallable) // @ game+0x150e660
	bool GetBuildableData(struct FBuildableData OutData); // Function Icarus.BuildableComponent.GetBuildableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x150c720
};

// Class Icarus.BuildableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBuildableLibrary : URowLibrary {

	struct FBuildableRowHandle StructToRowHandle(struct FBuildableEnum EnumValue); // Function Icarus.BuildableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150ec10
	struct FName StructToName(struct FBuildableEnum EnumValue); // Function Icarus.BuildableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150ea10
	int32_t StructToInt(struct FBuildableEnum EnumValue); // Function Icarus.BuildableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e830
	struct FBuildableEnum RowHandleToStruct(struct FBuildableRowHandle RowHandle); // Function Icarus.BuildableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e5a0
	void RemoveRowFromBuildableTable(struct FName Name); // Function Icarus.BuildableLibrary.RemoveRowFromBuildableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x150e3a0
	void RefreshConstants(); // Function Icarus.BuildableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x150e280
	int32_t NumRows(); // Function Icarus.BuildableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e210
	bool NotEqual_EnumName(struct FBuildableEnum A, struct FName B); // Function Icarus.BuildableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150e0c0
	bool NotEqual_EnumEnum(struct FBuildableEnum A, struct FBuildableEnum B); // Function Icarus.BuildableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150ddf0
	struct FBuildableEnum NameToStruct(struct FName NameValue); // Function Icarus.BuildableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150db80
	int32_t NameToInt(struct FName NameValue); // Function Icarus.BuildableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x150d9d0
	struct FBuildableRowHandle MakeLiteralBuildable(struct FBuildableRowHandle RowHandle); // Function Icarus.BuildableLibrary.MakeLiteralBuildable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d710
	struct FBuildableRowHandle MakeBuildableFromIndex(int32_t Index); // Function Icarus.BuildableLibrary.MakeBuildableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d5b0
	struct FBuildableEnum MakeBuildableEnum(struct FBuildableEnum Enum); // Function Icarus.BuildableLibrary.MakeBuildableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d530
	struct FBuildableRowHandle MakeBuildable(struct FName RowName); // Function Icarus.BuildableLibrary.MakeBuildable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150d2e0
	bool IsValidName(struct FName NameValue); // Function Icarus.BuildableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x150d0a0
	struct FBuildableEnum IntToStruct(int32_t IntValue); // Function Icarus.BuildableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150cef0
	struct FName IntToName(int32_t IntValue); // Function Icarus.BuildableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x150cd40
	void GetBuildableStruct(struct FBuildableRowHandle RowHandle, struct FBuildableData Buildable, enum class EValid Paths); // Function Icarus.BuildableLibrary.GetBuildableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150c990
	bool EqualEqual_FBuildableRowHandleFBuildableRowHandle(struct FBuildableRowHandle RowHandleA, struct FBuildableRowHandle RowHandleB); // Function Icarus.BuildableLibrary.EqualEqual_FBuildableRowHandleFBuildableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150c290
	bool EqualEqual_EnumEnum(struct FBuildableEnum A, struct FBuildableEnum B); // Function Icarus.BuildableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x150bf20
	struct FBuildableRowHandle CastToBuildableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.BuildableLibrary.CastToBuildableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150bc20
	void BreakBuildableEnum(struct FBuildableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.BuildableLibrary.BreakBuildableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x150b880
	void AddRowToBuildableTable(struct FName Name, struct FBuildableData Data, struct FBuildableRowHandle NewRow); // Function Icarus.BuildableLibrary.AddRowToBuildableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x150b270
};

// Class Icarus.BuildableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UBuildableTable : UIcarusDataTable {
};

// Class Icarus.IcarusActor
// Size: 0x2a0 (Inherited: 0x220)
struct AIcarusActor : AActor {
	char pad_220[0x18]; // 0x220(0x18)
	struct UIcarusStatContainer* StatContainer; // 0x238(0x08)
	struct UActorState* ActorState; // 0x240(0x08)
	enum class EProgressState ProgressState; // 0x248(0x01)
	struct FMulticastSparseDelegate OnActorPreDestroy; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)
	struct UTerrainAnchorComponent* TerrainAnchor; // 0x250(0x08)
	struct UTerrainAnchorComponent* TerrainAnchorClass; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)
	struct FGameplayTagContainer GameplayTags; // 0x268(0x20)
	char pad_288[0x8]; // 0x288(0x08)
	struct UIcarusStateRecorderComponent* RecorderClass; // 0x290(0x08)
	struct UIcarusStateRecorderComponent* Recorder; // 0x298(0x08)

	void SetRecorderShouldRetainOnDestroy(bool bShouldRetain); // Function Icarus.IcarusActor.SetRecorderShouldRetainOnDestroy // (Final|Native|Public|BlueprintCallable) // @ game+0x15bfe40
	void SetIcarusUID(int32_t ForcedUID); // Function Icarus.IcarusActor.SetIcarusUID // (Native|Public|BlueprintCallable) // @ game+0x15bfd20
	void RepairObject(); // Function Icarus.IcarusActor.RepairObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x846c20
	void RecorderEndRecording(); // Function Icarus.IcarusActor.RecorderEndRecording // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x15bf7f0
	void RecorderBeginRecording(); // Function Icarus.IcarusActor.RecorderBeginRecording // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x15bf7d0
	void RaiseTheCurtain(); // Function Icarus.IcarusActor.RaiseTheCurtain // (Native|Event|Public|BlueprintEvent) // @ game+0x8e94d0
	void OnTerrainAnchorStateChanged(); // Function Icarus.IcarusActor.OnTerrainAnchorStateChanged // (Native|Event|Public|BlueprintEvent) // @ game+0x15bf7b0
	void OnDatabaseLoadComplete(); // Function Icarus.IcarusActor.OnDatabaseLoadComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x15bf790
	void IcarusBeginPlay(); // Function Icarus.IcarusActor.IcarusBeginPlay // (Native|Event|Public|BlueprintEvent) // @ game+0x15becf0
	bool HasRecorder(); // Function Icarus.IcarusActor.HasRecorder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15becc0
	int32_t GetIcarusUID(); // Function Icarus.IcarusActor.GetIcarusUID // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15be4d0
	void ClaimUniqueIcarusUIDFromLibrary(int32_t SuggestedUID); // Function Icarus.IcarusActor.ClaimUniqueIcarusUIDFromLibrary // (Final|Native|Public|BlueprintCallable) // @ game+0x15bdc80
};

// Class Icarus.IcarusItem
// Size: 0x3c0 (Inherited: 0x2a0)
struct AIcarusItem : AIcarusActor {
	struct UInventory* ItemInventory; // 0x2a0(0x08)
	int32_t ItemInventoryLocation; // 0x2a8(0x04)
	bool HasLink; // 0x2ac(0x01)
	struct FMulticastSparseDelegate PickedUp; // 0x2ad(0x01)
	char pad_2AE[0x2]; // 0x2ae(0x02)
	struct TArray<struct UTraitComponent*> TraitComponents; // 0x2b0(0x10)
	struct FItemData ItemData; // 0x2c0(0x80)
	struct FIcarusItemConstructionParameters ConstructionParameters; // 0x340(0x28)
	enum class EIcarusItemContext SpawnedContext; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	struct FItemTemplateRowHandle OverrideInstanceItemTemplate; // 0x36c(0x18)
	char pad_384[0x4]; // 0x384(0x04)
	struct USmoothSync* SmoothSyncComponent; // 0x388(0x08)
	struct FTransform ConstructionTransfrom; // 0x390(0x30)

	bool WorldPickup(struct UItemableComponent* ItemIn, struct AActor* Interactor, struct FHitResult HitResult); // Function Icarus.IcarusItem.WorldPickup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15dfea0
	void StackUpdated(); // Function Icarus.IcarusItem.StackUpdated // (Final|Native|Private) // @ game+0x15dfad0
	void SetItemVisible(bool bVisible); // Function Icarus.IcarusItem.SetItemVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xe36140
	bool ServerSetupTraitComponents(); // Function Icarus.IcarusItem.ServerSetupTraitComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x15df960
	void ServerSetItemData(struct FItemData InItemData); // Function Icarus.IcarusItem.ServerSetItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15df7e0
	bool ServerLoadItemData(struct FItemTemplateRowHandle ItemTemplate); // Function Icarus.IcarusItem.ServerLoadItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x15df720
	void SerializeItemData(struct FItemData OutItemData); // Function Icarus.IcarusItem.SerializeItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15df5a0
	void ReconstructItem(struct FIcarusItemConstructionParameters NewConstructionParameters); // Function Icarus.IcarusItem.ReconstructItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15df4b0
	void OnWorldPickup(struct UItemableComponent* ItemIn, struct AActor* Interactor, struct FHitResult HitResult); // Function Icarus.IcarusItem.OnWorldPickup // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15df1d0
	void OnRep_ItemData(); // Function Icarus.IcarusItem.OnRep_ItemData // (Final|Native|Protected) // @ game+0x15df1b0
	void OnRep_ConstructionParameters(); // Function Icarus.IcarusItem.OnRep_ConstructionParameters // (Native|Protected) // @ game+0x846e80
	bool OnPickedUp(); // Function Icarus.IcarusItem.OnPickedUp // (Final|Native|Public|BlueprintCallable) // @ game+0x15df180
	void OnItemDataChanged(); // Function Icarus.IcarusItem.OnItemDataChanged // (Native|Event|Protected|BlueprintEvent) // @ game+0x846ea0
	void OnDynamicDataUpdated(); // Function Icarus.IcarusItem.OnDynamicDataUpdated // (Final|Native|Private) // @ game+0x15defa0
	bool OnDropped(); // Function Icarus.IcarusItem.OnDropped // (Final|Native|Public|BlueprintCallable) // @ game+0x15def80
	bool HasInventoryItemLink(); // Function Icarus.IcarusItem.HasInventoryItemLink // (Final|Native|Public|BlueprintCallable) // @ game+0x15de9e0
	struct FItemData GetSerialisedItemData(); // Function Icarus.IcarusItem.GetSerialisedItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x15de930
	struct UMeshComponent* GetRootMeshComponent(); // Function Icarus.IcarusItem.GetRootMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15de900
	struct AIcarusPlayerCharacter* GetOwningIcarusPlayerCharacter(); // Function Icarus.IcarusItem.GetOwningIcarusPlayerCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15de8d0
	struct TArray<struct FItemDynamicData> GetMutableItemDynamicData(); // Function Icarus.IcarusItem.GetMutableItemDynamicData // (Final|Native|Public) // @ game+0x15de890
	struct FItemData GetItemData(); // Function Icarus.IcarusItem.GetItemData // (Final|Native|Public|Const) // @ game+0x15de780
	void FillableUpdated(); // Function Icarus.IcarusItem.FillableUpdated // (Final|Native|Private) // @ game+0x15de170
	void EstablishLink(struct UInventory* Inventory, int32_t Location); // Function Icarus.IcarusItem.EstablishLink // (Final|Native|Public|BlueprintCallable) // @ game+0x15ddf20
	void DurabilityUpdated(); // Function Icarus.IcarusItem.DurabilityUpdated // (Final|Native|Private) // @ game+0x15ddf00
	void DestroyLinkedInventoryItem(); // Function Icarus.IcarusItem.DestroyLinkedInventoryItem // (Final|Native|Public|BlueprintCallable) // @ game+0x15ddee0
	void DestroyLink(); // Function Icarus.IcarusItem.DestroyLink // (Final|Native|Public|BlueprintCallable) // @ game+0x15ddec0
	void DeserializeItemData(struct FItemData InItemData); // Function Icarus.IcarusItem.DeserializeItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15ddd40
	void DecayableDataUpdated(); // Function Icarus.IcarusItem.DecayableDataUpdated // (Final|Native|Private) // @ game+0x15ddd20
	void ActionableUpdated(); // Function Icarus.IcarusItem.ActionableUpdated // (Final|Native|Private) // @ game+0x15ddac0
};

// Class Icarus.BuildingBase
// Size: 0x3c0 (Inherited: 0x3c0)
struct ABuildingBase : AIcarusItem {
};

// Class Icarus.BuildingGridBase
// Size: 0x2a0 (Inherited: 0x2a0)
struct ABuildingGridBase : AIcarusActor {

	void LoadGridAndBuildingsFromRecord(struct UBuildingGridRecorderComponent* RecorderComponent); // Function Icarus.BuildingGridBase.LoadGridAndBuildingsFromRecord // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void GetGridBuildingDataForRecord(struct UBuildingGridRecorderComponent* RecorderComponent); // Function Icarus.BuildingGridBase.GetGridBuildingDataForRecord // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.BuildingGridRecorderComponent
// Size: 0x1a0 (Inherited: 0x150)
struct UBuildingGridRecorderComponent : UActorStateRecorderComponent {
	struct FBuildingGridSaveData BuildingGridRecord; // 0x150(0x50)

	void AddBuildingToGrid(int32_t IcarusUID, struct FTransform GridTransform, struct FTransform BuildingTransform, struct FName BuildableRowName, int32_t BuildableVariation, struct FName BuildingItemName, float BurnTimeRemaining); // Function Icarus.BuildingGridRecorderComponent.AddBuildingToGrid // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15124f0
};

// Class Icarus.BuildingSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UBuildingSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnBuildingPiecePlacedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnBuildingPieceRemovedNotify; // 0x40(0x10)

	void BroadcastBuildingPieceRemovedDelegate(struct AIcarusPlayerCharacter* Player, struct ABuildingBase* Building); // Function Icarus.BuildingSubsystem.BroadcastBuildingPieceRemovedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512f30
	void BroadcastBuildingPiecePlacedDelegate(struct AIcarusPlayerCharacter* Player, struct ABuildingBase* Building); // Function Icarus.BuildingSubsystem.BroadcastBuildingPiecePlacedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512e50
};

// Class Icarus.FloatableComponent
// Size: 0xe8 (Inherited: 0xd0)
struct UFloatableComponent : UTraitComponent {
	struct TArray<struct UPrimitiveComponent*> OverlappedComponents; // 0xd0(0x10)
	struct FMulticastSparseDelegate OnFloatableUpdated; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)

	void UpdateOverlappedState(); // Function Icarus.FloatableComponent.UpdateOverlappedState // (Native|Event|Public|BlueprintEvent) // @ game+0x1584f60
	void RemoveOverlap(struct UPrimitiveComponent* Component); // Function Icarus.FloatableComponent.RemoveOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x15845c0
	bool GetFloatableData(struct FFloatableData OutData); // Function Icarus.FloatableComponent.GetFloatableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1582710
	void FloatableUpdated(bool bNewFloating); // Function Icarus.FloatableComponent.FloatableUpdated // (Native|Public|BlueprintCallable) // @ game+0x1500bb0
	void CheckOverlapArray(); // Function Icarus.FloatableComponent.CheckOverlapArray // (Final|Native|Public|BlueprintCallable) // @ game+0x1581c20
	void AddOverlap(struct UPrimitiveComponent* Component); // Function Icarus.FloatableComponent.AddOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x15810e0
};

// Class Icarus.BuoyancyBehaviour
// Size: 0x118 (Inherited: 0xe8)
struct UBuoyancyBehaviour : UFloatableComponent {
	struct FVector VelocityDamper; // 0xe8(0x0c)
	bool bBuoyancyEnabled; // 0xf4(0x01)
	bool bAutoGenerateFloatingPoints; // 0xf5(0x01)
	char pad_F6[0x2]; // 0xf6(0x02)
	float FloatingPointRadius; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct TArray<struct FVector> FloatingPoints; // 0x100(0x10)
	char pad_110[0x8]; // 0x110(0x08)

	void GenerateFloatingPoints(); // Function Icarus.BuoyancyBehaviour.GenerateFloatingPoints // (Native|Event|Public|BlueprintEvent) // @ game+0x14d6e50
	float FindWaterHeight(); // Function Icarus.BuoyancyBehaviour.FindWaterHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15136b0
};

// Class Icarus.Cave
// Size: 0x220 (Inherited: 0x220)
struct ACave : AActor {

	float GetSpelunkingDepth(struct FVector Location); // Function Icarus.Cave.GetSpelunkingDepth // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1513a00
};

// Class Icarus.CaveEntranceRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UCaveEntranceRecorderInterface : UInterface {

	void SetVoxelBlockerSaveData(struct TArray<struct FVoxelMinedSphere> VoxelBlockerSaveData); // Function Icarus.CaveEntranceRecorderInterface.SetVoxelBlockerSaveData // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1514c50
	struct AVoxelResource* GetVoxelActor(); // Function Icarus.CaveEntranceRecorderInterface.GetVoxelActor // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1513aa0
};

// Class Icarus.CaveEntranceRecorderComponent
// Size: 0x170 (Inherited: 0x150)
struct UCaveEntranceRecorderComponent : UActorStateRecorderComponent {
	struct FVoxelSaveData VoxelBlockerSaveData; // 0x148(0x20)
};

// Class Icarus.ChallengesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UChallengesLibrary : URowLibrary {

	struct FChallengesRowHandle StructToRowHandle(struct FChallengesEnum EnumValue); // Function Icarus.ChallengesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514f80
	struct FName StructToName(struct FChallengesEnum EnumValue); // Function Icarus.ChallengesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514e40
	int32_t StructToInt(struct FChallengesEnum EnumValue); // Function Icarus.ChallengesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514d00
	struct FChallengesEnum RowHandleToStruct(struct FChallengesRowHandle RowHandle); // Function Icarus.ChallengesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514ad0
	void RemoveRowFromChallengesTable(struct FName Name); // Function Icarus.ChallengesLibrary.RemoveRowFromChallengesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15149d0
	void RefreshConstants(); // Function Icarus.ChallengesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1514990
	int32_t NumRows(); // Function Icarus.ChallengesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514930
	bool NotEqual_EnumName(struct FChallengesEnum A, struct FName B); // Function Icarus.ChallengesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514750
	bool NotEqual_EnumEnum(struct FChallengesEnum A, struct FChallengesEnum B); // Function Icarus.ChallengesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514570
	struct FChallengesEnum NameToStruct(struct FName NameValue); // Function Icarus.ChallengesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514450
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ChallengesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1514330
	struct FChallengesRowHandle MakeLiteralChallenges(struct FChallengesRowHandle RowHandle); // Function Icarus.ChallengesLibrary.MakeLiteralChallenges // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514190
	struct FChallengesRowHandle MakeChallengesFromIndex(int32_t Index); // Function Icarus.ChallengesLibrary.MakeChallengesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513f50
	struct FChallengesEnum MakeChallengesEnum(struct FChallengesEnum Enum); // Function Icarus.ChallengesLibrary.MakeChallengesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513ed0
	struct FChallengesRowHandle MakeChallenges(struct FName RowName); // Function Icarus.ChallengesLibrary.MakeChallenges // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513e30
	bool IsValidName(struct FName NameValue); // Function Icarus.ChallengesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1513d10
	struct FChallengesEnum IntToStruct(int32_t IntValue); // Function Icarus.ChallengesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513bf0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ChallengesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1513ad0
	void GetChallengesStruct(struct FChallengesRowHandle RowHandle, struct FChallenge Challenges, enum class EValid Paths); // Function Icarus.ChallengesLibrary.GetChallengesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15136e0
	bool EqualEqual_FChallengesRowHandleFChallengesRowHandle(struct FChallengesRowHandle RowHandleA, struct FChallengesRowHandle RowHandleB); // Function Icarus.ChallengesLibrary.EqualEqual_FChallengesRowHandleFChallengesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513430
	bool EqualEqual_EnumEnum(struct FChallengesEnum A, struct FChallengesEnum B); // Function Icarus.ChallengesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513250
	struct FChallengesRowHandle CastToChallengesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ChallengesLibrary.CastToChallengesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1513010
	void BreakChallengesEnum(struct FChallengesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ChallengesLibrary.BreakChallengesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1512b90
	void AddRowToChallengesTable(struct FName Name, struct FChallenge Data, struct FChallengesRowHandle NewRow); // Function Icarus.ChallengesLibrary.AddRowToChallengesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15127c0
};

// Class Icarus.ChallengesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UChallengesTable : UIcarusDataTable {
};

// Class Icarus.CharacterCreationDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterCreationDataLibrary : URowLibrary {

	struct FCharacterCreationDataRowHandle StructToRowHandle(struct FCharacterCreationDataEnum EnumValue); // Function Icarus.CharacterCreationDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1515030
	struct FName StructToName(struct FCharacterCreationDataEnum EnumValue); // Function Icarus.CharacterCreationDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514ee0
	int32_t StructToInt(struct FCharacterCreationDataEnum EnumValue); // Function Icarus.CharacterCreationDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514da0
	struct FCharacterCreationDataEnum RowHandleToStruct(struct FCharacterCreationDataRowHandle RowHandle); // Function Icarus.CharacterCreationDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514b90
	void RemoveRowFromCharacterCreationDataTable(struct FName Name); // Function Icarus.CharacterCreationDataLibrary.RemoveRowFromCharacterCreationDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1514a50
	void RefreshConstants(); // Function Icarus.CharacterCreationDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15149b0
	int32_t NumRows(); // Function Icarus.CharacterCreationDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514960
	bool NotEqual_EnumName(struct FCharacterCreationDataEnum A, struct FName B); // Function Icarus.CharacterCreationDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514840
	bool NotEqual_EnumEnum(struct FCharacterCreationDataEnum A, struct FCharacterCreationDataEnum B); // Function Icarus.CharacterCreationDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514660
	struct FCharacterCreationDataEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterCreationDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15144e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterCreationDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15143c0
	struct FCharacterCreationDataRowHandle MakeLiteralCharacterCreationData(struct FCharacterCreationDataRowHandle RowHandle); // Function Icarus.CharacterCreationDataLibrary.MakeLiteralCharacterCreationData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514260
	struct FCharacterCreationDataRowHandle MakeCharacterCreationDataFromIndex(int32_t Index); // Function Icarus.CharacterCreationDataLibrary.MakeCharacterCreationDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514100
	struct FCharacterCreationDataEnum MakeCharacterCreationDataEnum(struct FCharacterCreationDataEnum Enum); // Function Icarus.CharacterCreationDataLibrary.MakeCharacterCreationDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1514080
	struct FCharacterCreationDataRowHandle MakeCharacterCreationData(struct FName RowName); // Function Icarus.CharacterCreationDataLibrary.MakeCharacterCreationData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513fe0
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterCreationDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1513da0
	struct FCharacterCreationDataEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterCreationDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513c80
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterCreationDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1513b60
	void GetCharacterCreationDataStruct(struct FCharacterCreationDataRowHandle RowHandle, struct FCharacterCreationData CharacterCreationData, enum class EValid Paths); // Function Icarus.CharacterCreationDataLibrary.GetCharacterCreationDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1513860
	bool EqualEqual_FCharacterCreationDataRowHandleFCharacterCreationDataRowHandle(struct FCharacterCreationDataRowHandle RowHandleA, struct FCharacterCreationDataRowHandle RowHandleB); // Function Icarus.CharacterCreationDataLibrary.EqualEqual_FCharacterCreationDataRowHandleFCharacterCreationDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513570
	bool EqualEqual_EnumEnum(struct FCharacterCreationDataEnum A, struct FCharacterCreationDataEnum B); // Function Icarus.CharacterCreationDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513340
	struct FCharacterCreationDataRowHandle CastToCharacterCreationDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterCreationDataLibrary.CastToCharacterCreationDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1513130
	void BreakCharacterCreationDataEnum(struct FCharacterCreationDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterCreationDataLibrary.BreakCharacterCreationDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1512cf0
	void AddRowToCharacterCreationDataTable(struct FName Name, struct FCharacterCreationData Data, struct FCharacterCreationDataRowHandle NewRow); // Function Icarus.CharacterCreationDataLibrary.AddRowToCharacterCreationDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1512a00
};

// Class Icarus.CharacterCreationDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterCreationDataTable : UIcarusDataTable {
};

// Class Icarus.CharacterFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterFlagsLibrary : URowLibrary {

	struct FCharacterFlagsRowHandle StructToRowHandle(struct FCharacterFlagsEnum EnumValue); // Function Icarus.CharacterFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a7a0
	struct FName StructToName(struct FCharacterFlagsEnum EnumValue); // Function Icarus.CharacterFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a5c0
	int32_t StructToInt(struct FCharacterFlagsEnum EnumValue); // Function Icarus.CharacterFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a3e0
	struct FCharacterFlagsEnum RowHandleToStruct(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.CharacterFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a1a0
	void RemoveRowFromCharacterFlagsTable(struct FName Name); // Function Icarus.CharacterFlagsLibrary.RemoveRowFromCharacterFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x151a020
	void RefreshConstants(); // Function Icarus.CharacterFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1519fc0
	int32_t NumRows(); // Function Icarus.CharacterFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519f30
	bool NotEqual_EnumName(struct FCharacterFlagsEnum A, struct FName B); // Function Icarus.CharacterFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519c60
	bool NotEqual_EnumEnum(struct FCharacterFlagsEnum A, struct FCharacterFlagsEnum B); // Function Icarus.CharacterFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519990
	struct FCharacterFlagsEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15197e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1519630
	struct FCharacterFlagsRowHandle MakeLiteralCharacterFlags(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.CharacterFlagsLibrary.MakeLiteralCharacterFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15193c0
	struct FCharacterFlagsRowHandle MakeCharacterFlagsFromIndex(int32_t Index); // Function Icarus.CharacterFlagsLibrary.MakeCharacterFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518fd0
	struct FCharacterFlagsEnum MakeCharacterFlagsEnum(struct FCharacterFlagsEnum Enum); // Function Icarus.CharacterFlagsLibrary.MakeCharacterFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518f50
	struct FCharacterFlagsRowHandle MakeCharacterFlags(struct FName RowName); // Function Icarus.CharacterFlagsLibrary.MakeCharacterFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518eb0
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1518d00
	struct FCharacterFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518b50
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15189a0
	void GetCharacterFlagsStruct(struct FCharacterFlagsRowHandle RowHandle, struct FCharacterFlag CharacterFlags, enum class EValid Paths); // Function Icarus.CharacterFlagsLibrary.GetCharacterFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15184f0
	bool EqualEqual_FCharacterFlagsRowHandleFCharacterFlagsRowHandle(struct FCharacterFlagsRowHandle RowHandleA, struct FCharacterFlagsRowHandle RowHandleB); // Function Icarus.CharacterFlagsLibrary.EqualEqual_FCharacterFlagsRowHandleFCharacterFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518130
	bool EqualEqual_EnumEnum(struct FCharacterFlagsEnum A, struct FCharacterFlagsEnum B); // Function Icarus.CharacterFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1517e60
	struct FCharacterFlagsRowHandle CastToCharacterFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterFlagsLibrary.CastToCharacterFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1517b00
	void BreakCharacterFlagsEnum(struct FCharacterFlagsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterFlagsLibrary.BreakCharacterFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15176e0
	void AddRowToCharacterFlagsTable(struct FName Name, struct FCharacterFlag Data, struct FCharacterFlagsRowHandle NewRow); // Function Icarus.CharacterFlagsLibrary.AddRowToCharacterFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15171b0
};

// Class Icarus.CharacterFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterFlagsTable : UIcarusDataTable {
};

// Class Icarus.CharacterGrowthLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterGrowthLibrary : URowLibrary {

	struct FCharacterGrowthRowHandle StructToRowHandle(struct FCharacterGrowthEnum EnumValue); // Function Icarus.CharacterGrowthLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a850
	struct FName StructToName(struct FCharacterGrowthEnum EnumValue); // Function Icarus.CharacterGrowthLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a660
	int32_t StructToInt(struct FCharacterGrowthEnum EnumValue); // Function Icarus.CharacterGrowthLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a480
	struct FCharacterGrowthEnum RowHandleToStruct(struct FCharacterGrowthRowHandle RowHandle); // Function Icarus.CharacterGrowthLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a260
	void RemoveRowFromCharacterGrowthTable(struct FName Name); // Function Icarus.CharacterGrowthLibrary.RemoveRowFromCharacterGrowthTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x151a0a0
	void RefreshConstants(); // Function Icarus.CharacterGrowthLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1519fe0
	int32_t NumRows(); // Function Icarus.CharacterGrowthLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519f60
	bool NotEqual_EnumName(struct FCharacterGrowthEnum A, struct FName B); // Function Icarus.CharacterGrowthLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519d50
	bool NotEqual_EnumEnum(struct FCharacterGrowthEnum A, struct FCharacterGrowthEnum B); // Function Icarus.CharacterGrowthLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519a80
	struct FCharacterGrowthEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterGrowthLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519870
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterGrowthLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15196c0
	struct FCharacterGrowthRowHandle MakeLiteralCharacterGrowth(struct FCharacterGrowthRowHandle RowHandle); // Function Icarus.CharacterGrowthLibrary.MakeLiteralCharacterGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519490
	struct FCharacterGrowthRowHandle MakeCharacterGrowthFromIndex(int32_t Index); // Function Icarus.CharacterGrowthLibrary.MakeCharacterGrowthFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519180
	struct FCharacterGrowthEnum MakeCharacterGrowthEnum(struct FCharacterGrowthEnum Enum); // Function Icarus.CharacterGrowthLibrary.MakeCharacterGrowthEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519100
	struct FCharacterGrowthRowHandle MakeCharacterGrowth(struct FName RowName); // Function Icarus.CharacterGrowthLibrary.MakeCharacterGrowth // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519060
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterGrowthLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1518d90
	struct FCharacterGrowthEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterGrowthLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518be0
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterGrowthLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1518a30
	void GetCharacterGrowthStruct(struct FCharacterGrowthRowHandle RowHandle, struct FCharacterGrowth CharacterGrowth, enum class EValid Paths); // Function Icarus.CharacterGrowthLibrary.GetCharacterGrowthStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1518670
	bool EqualEqual_FCharacterGrowthRowHandleFCharacterGrowthRowHandle(struct FCharacterGrowthRowHandle RowHandleA, struct FCharacterGrowthRowHandle RowHandleB); // Function Icarus.CharacterGrowthLibrary.EqualEqual_FCharacterGrowthRowHandleFCharacterGrowthRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518270
	bool EqualEqual_EnumEnum(struct FCharacterGrowthEnum A, struct FCharacterGrowthEnum B); // Function Icarus.CharacterGrowthLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1517f50
	struct FCharacterGrowthRowHandle CastToCharacterGrowthRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterGrowthLibrary.CastToCharacterGrowthRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1517c20
	void BreakCharacterGrowthEnum(struct FCharacterGrowthEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterGrowthLibrary.BreakCharacterGrowthEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1517840
	void AddRowToCharacterGrowthTable(struct FName Name, struct FCharacterGrowth Data, struct FCharacterGrowthRowHandle NewRow); // Function Icarus.CharacterGrowthLibrary.AddRowToCharacterGrowthTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1517360
};

// Class Icarus.CharacterGrowthTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterGrowthTable : UIcarusDataTable {
};

// Class Icarus.CharacterPerksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterPerksLibrary : URowLibrary {

	struct FCharacterPerksRowHandle StructToRowHandle(struct FCharacterPerksEnum EnumValue); // Function Icarus.CharacterPerksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a900
	struct FName StructToName(struct FCharacterPerksEnum EnumValue); // Function Icarus.CharacterPerksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a700
	int32_t StructToInt(struct FCharacterPerksEnum EnumValue); // Function Icarus.CharacterPerksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a520
	struct FCharacterPerksEnum RowHandleToStruct(struct FCharacterPerksRowHandle RowHandle); // Function Icarus.CharacterPerksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151a320
	void RemoveRowFromCharacterPerksTable(struct FName Name); // Function Icarus.CharacterPerksLibrary.RemoveRowFromCharacterPerksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x151a120
	void RefreshConstants(); // Function Icarus.CharacterPerksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x151a000
	int32_t NumRows(); // Function Icarus.CharacterPerksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519f90
	bool NotEqual_EnumName(struct FCharacterPerksEnum A, struct FName B); // Function Icarus.CharacterPerksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519e40
	bool NotEqual_EnumEnum(struct FCharacterPerksEnum A, struct FCharacterPerksEnum B); // Function Icarus.CharacterPerksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519b70
	struct FCharacterPerksEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterPerksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519900
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterPerksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1519750
	struct FCharacterPerksRowHandle MakeLiteralCharacterPerks(struct FCharacterPerksRowHandle RowHandle); // Function Icarus.CharacterPerksLibrary.MakeLiteralCharacterPerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519560
	struct FCharacterPerksRowHandle MakeCharacterPerksFromIndex(int32_t Index); // Function Icarus.CharacterPerksLibrary.MakeCharacterPerksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519330
	struct FCharacterPerksEnum MakeCharacterPerksEnum(struct FCharacterPerksEnum Enum); // Function Icarus.CharacterPerksLibrary.MakeCharacterPerksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15192b0
	struct FCharacterPerksRowHandle MakeCharacterPerks(struct FName RowName); // Function Icarus.CharacterPerksLibrary.MakeCharacterPerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1519210
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterPerksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1518e20
	struct FCharacterPerksEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterPerksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518c70
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterPerksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1518ac0
	void GetCharacterPerksStruct(struct FCharacterPerksRowHandle RowHandle, struct FCharacterPerk CharacterPerks, enum class EValid Paths); // Function Icarus.CharacterPerksLibrary.GetCharacterPerksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1518800
	bool EqualEqual_FCharacterPerksRowHandleFCharacterPerksRowHandle(struct FCharacterPerksRowHandle RowHandleA, struct FCharacterPerksRowHandle RowHandleB); // Function Icarus.CharacterPerksLibrary.EqualEqual_FCharacterPerksRowHandleFCharacterPerksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15183b0
	bool EqualEqual_EnumEnum(struct FCharacterPerksEnum A, struct FCharacterPerksEnum B); // Function Icarus.CharacterPerksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1518040
	struct FCharacterPerksRowHandle CastToCharacterPerksRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterPerksLibrary.CastToCharacterPerksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1517d40
	void BreakCharacterPerksEnum(struct FCharacterPerksEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterPerksLibrary.BreakCharacterPerksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15179a0
	void AddRowToCharacterPerksTable(struct FName Name, struct FCharacterPerk Data, struct FCharacterPerksRowHandle NewRow); // Function Icarus.CharacterPerksLibrary.AddRowToCharacterPerksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1517550
};

// Class Icarus.CharacterPerksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterPerksTable : UIcarusDataTable {
};

// Class Icarus.CharacterStartingStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterStartingStatsLibrary : URowLibrary {

	struct FCharacterStartingStatsRowHandle StructToRowHandle(struct FCharacterStartingStatsEnum EnumValue); // Function Icarus.CharacterStartingStatsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151fc40
	struct FName StructToName(struct FCharacterStartingStatsEnum EnumValue); // Function Icarus.CharacterStartingStatsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151fb00
	int32_t StructToInt(struct FCharacterStartingStatsEnum EnumValue); // Function Icarus.CharacterStartingStatsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151f9c0
	struct FCharacterStartingStatsEnum RowHandleToStruct(struct FCharacterStartingStatsRowHandle RowHandle); // Function Icarus.CharacterStartingStatsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151f340
	void RemoveRowFromCharacterStartingStatsTable(struct FName Name); // Function Icarus.CharacterStartingStatsLibrary.RemoveRowFromCharacterStartingStatsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x151f240
	void RefreshConstants(); // Function Icarus.CharacterStartingStatsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x151f200
	int32_t NumRows(); // Function Icarus.CharacterStartingStatsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151f0e0
	bool NotEqual_EnumName(struct FCharacterStartingStatsEnum A, struct FName B); // Function Icarus.CharacterStartingStatsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151ef00
	bool NotEqual_EnumEnum(struct FCharacterStartingStatsEnum A, struct FCharacterStartingStatsEnum B); // Function Icarus.CharacterStartingStatsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151ed20
	struct FCharacterStartingStatsEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterStartingStatsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151ec00
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterStartingStatsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x151eae0
	struct FCharacterStartingStatsRowHandle MakeLiteralCharacterStartingStats(struct FCharacterStartingStatsRowHandle RowHandle); // Function Icarus.CharacterStartingStatsLibrary.MakeLiteralCharacterStartingStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e940
	struct FCharacterStartingStatsRowHandle MakeCharacterStartingStatsFromIndex(int32_t Index); // Function Icarus.CharacterStartingStatsLibrary.MakeCharacterStartingStatsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e700
	struct FCharacterStartingStatsEnum MakeCharacterStartingStatsEnum(struct FCharacterStartingStatsEnum Enum); // Function Icarus.CharacterStartingStatsLibrary.MakeCharacterStartingStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e680
	struct FCharacterStartingStatsRowHandle MakeCharacterStartingStats(struct FName RowName); // Function Icarus.CharacterStartingStatsLibrary.MakeCharacterStartingStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e5e0
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterStartingStatsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x151e4c0
	struct FCharacterStartingStatsEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterStartingStatsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e3a0
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterStartingStatsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x151e280
	void GetCharacterStartingStatsStruct(struct FCharacterStartingStatsRowHandle RowHandle, struct FPlayerStartingStats CharacterStartingStats, enum class EValid Paths); // Function Icarus.CharacterStartingStatsLibrary.GetCharacterStartingStatsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x151dd40
	bool EqualEqual_FCharacterStartingStatsRowHandleFCharacterStartingStatsRowHandle(struct FCharacterStartingStatsRowHandle RowHandleA, struct FCharacterStartingStatsRowHandle RowHandleB); // Function Icarus.CharacterStartingStatsLibrary.EqualEqual_FCharacterStartingStatsRowHandleFCharacterStartingStatsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151dac0
	bool EqualEqual_EnumEnum(struct FCharacterStartingStatsEnum A, struct FCharacterStartingStatsEnum B); // Function Icarus.CharacterStartingStatsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151d8e0
	struct FCharacterStartingStatsRowHandle CastToCharacterStartingStatsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterStartingStatsLibrary.CastToCharacterStartingStatsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x151d5b0
	void BreakCharacterStartingStatsEnum(struct FCharacterStartingStatsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterStartingStatsLibrary.BreakCharacterStartingStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x151d150
	void AddRowToCharacterStartingStatsTable(struct FName Name, struct FPlayerStartingStats Data, struct FCharacterStartingStatsRowHandle NewRow); // Function Icarus.CharacterStartingStatsLibrary.AddRowToCharacterStartingStatsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x151cb60
};

// Class Icarus.CharacterStartingStatsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterStartingStatsTable : UIcarusDataTable {
};

// Class Icarus.CharacterState
// Size: 0x2a8 (Inherited: 0x1f8)
struct UCharacterState : UActorState {
	struct FMulticastSparseDelegate OnStaminaUpdated; // 0x1f8(0x01)
	struct FMulticastSparseDelegate OnStaminaDepleted; // 0x1f9(0x01)
	struct FMulticastSparseDelegate OnStaminaDepletedDuringAction; // 0x1fa(0x01)
	struct FMulticastSparseDelegate OnExperienceEvent; // 0x1fb(0x01)
	struct FMulticastSparseDelegate OnExperienceUpdated; // 0x1fc(0x01)
	struct FMulticastSparseDelegate OnExperienceDebtUpdated; // 0x1fd(0x01)
	struct FMulticastSparseDelegate OnLevelUpdated; // 0x1fe(0x01)
	char pad_1FF[0x1]; // 0x1ff(0x01)
	int32_t Stamina; // 0x200(0x04)
	int32_t MaxStamina; // 0x204(0x04)
	int32_t TotalExperience; // 0x208(0x04)
	int32_t TotalExperienceDebt; // 0x20c(0x04)
	struct FCharacterGrowthRowHandle GrowthRowHandle; // 0x210(0x18)
	int32_t Level; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct TMap<int32_t, struct FStaminaActionCostsRowHandle> StaminaTickEvents; // 0x230(0x50)
	char pad_280[0x20]; // 0x280(0x20)
	bool bHasStaminaRegen; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)

	void TickStaminaEvents(); // Function Icarus.CharacterState.TickStaminaEvents // (Final|Native|Protected) // @ game+0x151fda0
	void StopStaminaAction(struct FStaminaActionCostsRowHandle Action, int32_t UID); // Function Icarus.CharacterState.StopStaminaAction // (Final|Native|Public|BlueprintCallable) // @ game+0x151f8c0
	int32_t StartStaminaAction(struct FStaminaActionCostsRowHandle Action, bool SkipTickCost); // Function Icarus.CharacterState.StartStaminaAction // (Final|Native|Public|BlueprintCallable) // @ game+0x151f7b0
	bool SetupAI(int32_t Level, int32_t New_Health, int32_t New_Stamina, int32_t New_Strength, int32_t New_Agility, int32_t New_Perception); // Function Icarus.CharacterState.SetupAI // (Final|Native|Public|BlueprintCallable) // @ game+0x151f5e0
	void SetStamina(int32_t Amount); // Function Icarus.CharacterState.SetStamina // (Final|Native|Public|BlueprintCallable) // @ game+0x151f550
	void SetExperienceDebt(int32_t Amount); // Function Icarus.CharacterState.SetExperienceDebt // (Native|Public|BlueprintCallable) // @ game+0x151f4c0
	void SetExperience(int32_t Amount); // Function Icarus.CharacterState.SetExperience // (Native|Public|BlueprintCallable) // @ game+0x14ffa80
	void RecalculateStaminaRegenRate(); // Function Icarus.CharacterState.RecalculateStaminaRegenRate // (Final|Native|Protected) // @ game+0x151f1e0
	void RecalculateCurrentStamina(); // Function Icarus.CharacterState.RecalculateCurrentStamina // (Final|Native|Protected) // @ game+0x151f1c0
	void OnRep_TotalExperienceDebt(); // Function Icarus.CharacterState.OnRep_TotalExperienceDebt // (Final|Native|Protected) // @ game+0x151f1a0
	void OnRep_TotalExperience(); // Function Icarus.CharacterState.OnRep_TotalExperience // (Final|Native|Protected) // @ game+0x151f180
	void OnRep_Stamina(); // Function Icarus.CharacterState.OnRep_Stamina // (Final|Native|Protected) // @ game+0x151f160
	void OnRep_Level(); // Function Icarus.CharacterState.OnRep_Level // (Final|Native|Protected) // @ game+0x151f140
	int32_t GetStamina(); // Function Icarus.CharacterState.GetStamina // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e250
	int32_t GetMaxStamina(); // Function Icarus.CharacterState.GetMaxStamina // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e220
	int32_t GetLevel(); // Function Icarus.CharacterState.GetLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e1f0
	int32_t GetExperienceRequired(int32_t Level); // Function Icarus.CharacterState.GetExperienceRequired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e150
	int32_t GetExperienceDebt(); // Function Icarus.CharacterState.GetExperienceDebt // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e120
	int32_t GetExperience(); // Function Icarus.CharacterState.GetExperience // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e0f0
	void ClientAddedExperienceEvent(struct FExperienceEventsRowHandle ExperienceEvent, int32_t ExperienceGained); // Function Icarus.CharacterState.ClientAddedExperienceEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x151d7f0
	bool CanRegenerateStamina(); // Function Icarus.CharacterState.CanRegenerateStamina // (Final|Native|Protected|Const) // @ game+0x151d4f0
	bool CanPerformStaminaAction(struct FStaminaCost ActionCost); // Function Icarus.CharacterState.CanPerformStaminaAction // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x151d410
	void CancelStaminaAction(int32_t UID); // Function Icarus.CharacterState.CancelStaminaAction // (Final|Native|Public|BlueprintCallable) // @ game+0x151d520
	void AddStamina(int32_t Amount); // Function Icarus.CharacterState.AddStamina // (Native|Public|BlueprintCallable) // @ game+0x151d0c0
	bool AddExperienceEvent(struct FExperienceEventsRowHandle ExperienceEvent, int32_t GrantedExperience); // Function Icarus.CharacterState.AddExperienceEvent // (Final|Native|Public|HasOutParms) // @ game+0x151ca60
	void AddExperienceDebt(int32_t Amount); // Function Icarus.CharacterState.AddExperienceDebt // (Final|Native|Public|BlueprintCallable) // @ game+0x151c9d0
	void AddExperience(int32_t Amount); // Function Icarus.CharacterState.AddExperience // (Final|Native|Public|BlueprintCallable) // @ game+0x151c940
};

// Class Icarus.CharacterTimelineLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterTimelineLibrary : URowLibrary {

	struct FCharacterTimelineRowHandle StructToRowHandle(struct FCharacterTimelineEnum EnumValue); // Function Icarus.CharacterTimelineLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151fcf0
	struct FName StructToName(struct FCharacterTimelineEnum EnumValue); // Function Icarus.CharacterTimelineLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151fba0
	int32_t StructToInt(struct FCharacterTimelineEnum EnumValue); // Function Icarus.CharacterTimelineLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151fa60
	struct FCharacterTimelineEnum RowHandleToStruct(struct FCharacterTimelineRowHandle RowHandle); // Function Icarus.CharacterTimelineLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151f400
	void RemoveRowFromCharacterTimelineTable(struct FName Name); // Function Icarus.CharacterTimelineLibrary.RemoveRowFromCharacterTimelineTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x151f2c0
	void RefreshConstants(); // Function Icarus.CharacterTimelineLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x151f220
	int32_t NumRows(); // Function Icarus.CharacterTimelineLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151f110
	bool NotEqual_EnumName(struct FCharacterTimelineEnum A, struct FName B); // Function Icarus.CharacterTimelineLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151eff0
	bool NotEqual_EnumEnum(struct FCharacterTimelineEnum A, struct FCharacterTimelineEnum B); // Function Icarus.CharacterTimelineLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151ee10
	struct FCharacterTimelineEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterTimelineLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151ec90
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterTimelineLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x151eb70
	struct FCharacterTimelineRowHandle MakeLiteralCharacterTimeline(struct FCharacterTimelineRowHandle RowHandle); // Function Icarus.CharacterTimelineLibrary.MakeLiteralCharacterTimeline // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151ea10
	struct FCharacterTimelineRowHandle MakeCharacterTimelineFromIndex(int32_t Index); // Function Icarus.CharacterTimelineLibrary.MakeCharacterTimelineFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e8b0
	struct FCharacterTimelineEnum MakeCharacterTimelineEnum(struct FCharacterTimelineEnum Enum); // Function Icarus.CharacterTimelineLibrary.MakeCharacterTimelineEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e830
	struct FCharacterTimelineRowHandle MakeCharacterTimeline(struct FName RowName); // Function Icarus.CharacterTimelineLibrary.MakeCharacterTimeline // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e790
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterTimelineLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x151e550
	struct FCharacterTimelineEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterTimelineLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151e430
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterTimelineLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x151e310
	void GetCharacterTimelineStruct(struct FCharacterTimelineRowHandle RowHandle, struct FCharacterTimeline CharacterTimeline, enum class EValid Paths); // Function Icarus.CharacterTimelineLibrary.GetCharacterTimelineStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x151df30
	bool EqualEqual_FCharacterTimelineRowHandleFCharacterTimelineRowHandle(struct FCharacterTimelineRowHandle RowHandleA, struct FCharacterTimelineRowHandle RowHandleB); // Function Icarus.CharacterTimelineLibrary.EqualEqual_FCharacterTimelineRowHandleFCharacterTimelineRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151dc00
	bool EqualEqual_EnumEnum(struct FCharacterTimelineEnum A, struct FCharacterTimelineEnum B); // Function Icarus.CharacterTimelineLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x151d9d0
	struct FCharacterTimelineRowHandle CastToCharacterTimelineRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterTimelineLibrary.CastToCharacterTimelineRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x151d6d0
	void BreakCharacterTimelineEnum(struct FCharacterTimelineEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterTimelineLibrary.BreakCharacterTimelineEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x151d2b0
	void AddRowToCharacterTimelineTable(struct FName Name, struct FCharacterTimeline Data, struct FCharacterTimelineRowHandle NewRow); // Function Icarus.CharacterTimelineLibrary.AddRowToCharacterTimelineTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x151cdf0
};

// Class Icarus.CharacterTimelineTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterTimelineTable : UIcarusDataTable {
};

// Class Icarus.CharacterVoicesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCharacterVoicesLibrary : URowLibrary {

	struct FCharacterVoicesRowHandle StructToRowHandle(struct FCharacterVoicesEnum EnumValue); // Function Icarus.CharacterVoicesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525e10
	struct FName StructToName(struct FCharacterVoicesEnum EnumValue); // Function Icarus.CharacterVoicesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525cd0
	int32_t StructToInt(struct FCharacterVoicesEnum EnumValue); // Function Icarus.CharacterVoicesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525b90
	struct FCharacterVoicesEnum RowHandleToStruct(struct FCharacterVoicesRowHandle RowHandle); // Function Icarus.CharacterVoicesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525530
	void RemoveRowFromCharacterVoicesTable(struct FName Name); // Function Icarus.CharacterVoicesLibrary.RemoveRowFromCharacterVoicesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1525430
	void RefreshConstants(); // Function Icarus.CharacterVoicesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15253f0
	int32_t NumRows(); // Function Icarus.CharacterVoicesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525140
	bool NotEqual_EnumName(struct FCharacterVoicesEnum A, struct FName B); // Function Icarus.CharacterVoicesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524f60
	bool NotEqual_EnumEnum(struct FCharacterVoicesEnum A, struct FCharacterVoicesEnum B); // Function Icarus.CharacterVoicesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524d80
	struct FCharacterVoicesEnum NameToStruct(struct FName NameValue); // Function Icarus.CharacterVoicesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524c60
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CharacterVoicesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1524b40
	struct FCharacterVoicesRowHandle MakeLiteralCharacterVoices(struct FCharacterVoicesRowHandle RowHandle); // Function Icarus.CharacterVoicesLibrary.MakeLiteralCharacterVoices // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15249a0
	struct FCharacterVoicesRowHandle MakeCharacterVoicesFromIndex(int32_t Index); // Function Icarus.CharacterVoicesLibrary.MakeCharacterVoicesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524760
	struct FCharacterVoicesEnum MakeCharacterVoicesEnum(struct FCharacterVoicesEnum Enum); // Function Icarus.CharacterVoicesLibrary.MakeCharacterVoicesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15246e0
	struct FCharacterVoicesRowHandle MakeCharacterVoices(struct FName RowName); // Function Icarus.CharacterVoicesLibrary.MakeCharacterVoices // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524640
	bool IsValidName(struct FName NameValue); // Function Icarus.CharacterVoicesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1524500
	struct FCharacterVoicesEnum IntToStruct(int32_t IntValue); // Function Icarus.CharacterVoicesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524300
	struct FName IntToName(int32_t IntValue); // Function Icarus.CharacterVoicesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15241e0
	void GetCharacterVoicesStruct(struct FCharacterVoicesRowHandle RowHandle, struct FCharacterVoiceData CharacterVoices, enum class EValid Paths); // Function Icarus.CharacterVoicesLibrary.GetCharacterVoicesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1523bd0
	bool EqualEqual_FCharacterVoicesRowHandleFCharacterVoicesRowHandle(struct FCharacterVoicesRowHandle RowHandleA, struct FCharacterVoicesRowHandle RowHandleB); // Function Icarus.CharacterVoicesLibrary.EqualEqual_FCharacterVoicesRowHandleFCharacterVoicesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15237a0
	bool EqualEqual_EnumEnum(struct FCharacterVoicesEnum A, struct FCharacterVoicesEnum B); // Function Icarus.CharacterVoicesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15235c0
	struct FCharacterVoicesRowHandle CastToCharacterVoicesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CharacterVoicesLibrary.CastToCharacterVoicesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1523330
	void BreakCharacterVoicesEnum(struct FCharacterVoicesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CharacterVoicesLibrary.BreakCharacterVoicesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1523070
	void AddRowToCharacterVoicesTable(struct FName Name, struct FCharacterVoiceData Data, struct FCharacterVoicesRowHandle NewRow); // Function Icarus.CharacterVoicesLibrary.AddRowToCharacterVoicesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1522c50
};

// Class Icarus.CharacterVoicesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCharacterVoicesTable : UIcarusDataTable {
};

// Class Icarus.CheatController
// Size: 0x228 (Inherited: 0x220)
struct ACheatController : AActor {
	struct FPerPlayerCheatData PerPlayerCheats; // 0x220(0x03)
	char pad_223[0x5]; // 0x223(0x05)

	void SetUnlockAllRecipes(bool bEnabled); // Function Icarus.CheatController.SetUnlockAllRecipes // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1525ac0
	void SetUnlimitedResourcesEnabled(bool bEnabled); // Function Icarus.CheatController.SetUnlimitedResourcesEnabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1525a30
	void SetShelteredRequiredDisabled(bool bDisabled); // Function Icarus.CheatController.SetShelteredRequiredDisabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15256b0
	void SetGodModeEnabled(bool bEnabled); // Function Icarus.CheatController.SetGodModeEnabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1525910
	void SetBuildingIntegrityDisabled(bool bDisabled); // Function Icarus.CheatController.SetBuildingIntegrityDisabled // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15256b0
	bool IsUnlockAllRecipesEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsUnlockAllRecipesEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524420
	bool IsUnlimitedResourcesEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsUnlimitedResourcesEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524420
	bool IsShelteredRequiredDisabled(struct UObject* WorldContextObject); // Function Icarus.CheatController.IsShelteredRequiredDisabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524420
	bool IsGodModeEnabled(struct AActor* Actor); // Function Icarus.CheatController.IsGodModeEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524420
	bool IsBuildingIntegrityDisabled(struct UObject* WorldContextObject); // Function Icarus.CheatController.IsBuildingIntegrityDisabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524420
};

// Class Icarus.CheatFunctionBase
// Size: 0x2a8 (Inherited: 0x260)
struct UCheatFunctionBase : UUserWidget {
	struct FString Name; // 0x260(0x10)
	struct FText Description; // 0x270(0x18)
	struct FLinearColor TitleColour; // 0x288(0x10)
	struct FLinearColor AreaColor; // 0x298(0x10)

	void UpdatePreview(struct TArray<struct FString> Args); // Function Icarus.CheatFunctionBase.UpdatePreview // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	struct FString GetName(); // Function Icarus.CheatFunctionBase.GetName // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1524160
	bool ForceNoBorder(); // Function Icarus.CheatFunctionBase.ForceNoBorder // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1523ba0
	void Execute(); // Function Icarus.CheatFunctionBase.Execute // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1500450
};

// Class Icarus.CheatOverlayBase
// Size: 0x340 (Inherited: 0x260)
struct UCheatOverlayBase : UUserWidget {
	char pad_260[0x10]; // 0x260(0x10)
	struct FMulticastInlineDelegate OnScriptQueueFinished; // 0x270(0x10)
	char pad_280[0x18]; // 0x280(0x18)
	struct FMulticastInlineDelegate OnCheatScriptFinished; // 0x298(0x10)
	struct TArray<struct UCheatFunctionBase*> CheatFunctionWidgets; // 0x2a8(0x10)
	char pad_2B8[0x88]; // 0x2b8(0x88)

	void StopWaiting(); // Function Icarus.CheatOverlayBase.StopWaiting // (Final|Native|Public|BlueprintCallable) // @ game+0x1525b70
	void StartWaiting(); // Function Icarus.CheatOverlayBase.StartWaiting // (Final|Native|Public|BlueprintCallable) // @ game+0x1525b50
	void SetShow(bool bInShow); // Function Icarus.CheatOverlayBase.SetShow // (Final|Native|Public|BlueprintCallable) // @ game+0x15259a0
	void SetFilteredWidgets(struct TArray<struct UCheatFunctionBase*> Widgets); // Function Icarus.CheatOverlayBase.SetFilteredWidgets // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	bool SetCheatVariable(struct FString Variable, struct FString Value); // Function Icarus.CheatOverlayBase.SetCheatVariable // (Final|Native|Public|BlueprintCallable) // @ game+0x15257f0
	void SetCheatFunctionList(struct TArray<struct UObject*> List); // Function Icarus.CheatOverlayBase.SetCheatFunctionList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1525740
	void RequestReloadCheats(); // Function Icarus.CheatOverlayBase.RequestReloadCheats // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void PreviewCommand(struct FString CommandText); // Function Icarus.CheatOverlayBase.PreviewCommand // (Final|Native|Public|BlueprintCallable) // @ game+0x1525340
	struct FString ParseCheatLineArguments(struct FString Line, struct TArray<struct FString> Args); // Function Icarus.CheatOverlayBase.ParseCheatLineArguments // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15251c0
	void OnShowChanged(bool bNewShow); // Function Icarus.CheatOverlayBase.OnShowChanged // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnBeginPlay(); // Function Icarus.CheatOverlayBase.OnBeginPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x15251a0
	bool IsWaiting(); // Function Icarus.CheatOverlayBase.IsWaiting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1524620
	bool IsShowing(); // Function Icarus.CheatOverlayBase.IsShowing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15244e0
	bool IsCheatScriptExecuting(); // Function Icarus.CheatOverlayBase.IsCheatScriptExecuting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15244b0
	void EvaluateLines(struct TArray<struct FString> ScriptLines); // Function Icarus.CheatOverlayBase.EvaluateLines // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1523ad0
	void Evaluate(struct FString Script); // Function Icarus.CheatOverlayBase.Evaluate // (Final|Native|Public|BlueprintCallable) // @ game+0x1523a20
	void Close(); // Function Icarus.CheatOverlayBase.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x15235a0
	void ClearFilteredWidgets(); // Function Icarus.CheatOverlayBase.ClearFilteredWidgets // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void AddCustomFunction(struct FString Name, struct TArray<struct FString> ScriptLines, struct FString Description); // Function Icarus.CheatOverlayBase.AddCustomFunction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void AddCustomAutomationFunction(struct FString Name, struct TArray<struct FString> ScriptLines, struct FString Description); // Function Icarus.CheatOverlayBase.AddCustomAutomationFunction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void AddCheat(struct UCheatFunctionBase* Widget); // Function Icarus.CheatOverlayBase.AddCheat // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.CheatOverlayFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCheatOverlayFunctionLibrary : UBlueprintFunctionLibrary {

	struct UCheatOverlayBase* GetCheatOverlay(struct UObject* WorldContextObject); // Function Icarus.CheatOverlayFunctionLibrary.GetCheatOverlay // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1523d90
};

// Class Icarus.ClearStorageCallbackProxy
// Size: 0x68 (Inherited: 0x30)
struct UClearStorageCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFail; // 0x40(0x10)
	char pad_50[0x18]; // 0x50(0x18)

	struct UClearStorageCallbackProxy* ClearStorage(); // Function Icarus.ClearStorageCallbackProxy.ClearStorage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1523570
};

// Class Icarus.CombustibleComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UCombustibleComponent : UTraitComponent {
	int32_t MillijoulesRemaining; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)

	bool GetCombustibleData(struct FCombustibleData OutData); // Function Icarus.CombustibleComponent.GetCombustibleData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1523e20
};

// Class Icarus.CombustibleLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCombustibleLibrary : URowLibrary {

	struct FCombustibleRowHandle StructToRowHandle(struct FCombustibleEnum EnumValue); // Function Icarus.CombustibleLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525ec0
	struct FName StructToName(struct FCombustibleEnum EnumValue); // Function Icarus.CombustibleLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525d70
	int32_t StructToInt(struct FCombustibleEnum EnumValue); // Function Icarus.CombustibleLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525c30
	struct FCombustibleEnum RowHandleToStruct(struct FCombustibleRowHandle RowHandle); // Function Icarus.CombustibleLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15255f0
	void RemoveRowFromCombustibleTable(struct FName Name); // Function Icarus.CombustibleLibrary.RemoveRowFromCombustibleTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15254b0
	void RefreshConstants(); // Function Icarus.CombustibleLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1525410
	int32_t NumRows(); // Function Icarus.CombustibleLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525170
	bool NotEqual_EnumName(struct FCombustibleEnum A, struct FName B); // Function Icarus.CombustibleLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1525050
	bool NotEqual_EnumEnum(struct FCombustibleEnum A, struct FCombustibleEnum B); // Function Icarus.CombustibleLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524e70
	struct FCombustibleEnum NameToStruct(struct FName NameValue); // Function Icarus.CombustibleLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524cf0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CombustibleLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1524bd0
	struct FCombustibleRowHandle MakeLiteralCombustible(struct FCombustibleRowHandle RowHandle); // Function Icarus.CombustibleLibrary.MakeLiteralCombustible // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524a70
	struct FCombustibleRowHandle MakeCombustibleFromIndex(int32_t Index); // Function Icarus.CombustibleLibrary.MakeCombustibleFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524910
	struct FCombustibleEnum MakeCombustibleEnum(struct FCombustibleEnum Enum); // Function Icarus.CombustibleLibrary.MakeCombustibleEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524890
	struct FCombustibleRowHandle MakeCombustible(struct FName RowName); // Function Icarus.CombustibleLibrary.MakeCombustible // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15247f0
	bool IsValidName(struct FName NameValue); // Function Icarus.CombustibleLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1524590
	struct FCombustibleEnum IntToStruct(int32_t IntValue); // Function Icarus.CombustibleLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1524390
	struct FName IntToName(int32_t IntValue); // Function Icarus.CombustibleLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1524270
	void GetCombustibleStruct(struct FCombustibleRowHandle RowHandle, struct FCombustibleData Combustible, enum class EValid Paths); // Function Icarus.CombustibleLibrary.GetCombustibleStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1523fc0
	bool EqualEqual_FCombustibleRowHandleFCombustibleRowHandle(struct FCombustibleRowHandle RowHandleA, struct FCombustibleRowHandle RowHandleB); // Function Icarus.CombustibleLibrary.EqualEqual_FCombustibleRowHandleFCombustibleRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15238e0
	bool EqualEqual_EnumEnum(struct FCombustibleEnum A, struct FCombustibleEnum B); // Function Icarus.CombustibleLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15236b0
	struct FCombustibleRowHandle CastToCombustibleRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CombustibleLibrary.CastToCombustibleRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1523450
	void BreakCombustibleEnum(struct FCombustibleEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CombustibleLibrary.BreakCombustibleEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15231d0
	void AddRowToCombustibleTable(struct FName Name, struct FCombustibleData Data, struct FCombustibleRowHandle NewRow); // Function Icarus.CombustibleLibrary.AddRowToCombustibleTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1522e70
};

// Class Icarus.CombustibleTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCombustibleTable : UIcarusDataTable {
};

// Class Icarus.ConcaveHullMesh
// Size: 0x570 (Inherited: 0x4d0)
struct UConcaveHullMesh : UProceduralMeshComponent {
	struct FMulticastSparseDelegate OnMeshGenerated; // 0x4d0(0x01)
	char pad_4D1[0x3]; // 0x4d1(0x03)
	float Concavity; // 0x4d4(0x04)
	float LengthThreshold; // 0x4d8(0x04)
	bool bProjectToLandscape; // 0x4dc(0x01)
	char pad_4DD[0x3]; // 0x4dd(0x03)
	struct TArray<struct FVector2D> ConcaveHullPoints; // 0x4e0(0x10)
	struct TArray<struct FVector> ConcaveHullVertices; // 0x4f0(0x10)
	char pad_500[0x70]; // 0x500(0x70)

	bool IsRunningAsyncGenerate(); // Function Icarus.ConcaveHullMesh.IsRunningAsyncGenerate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x152b0a0
	void GenerateConcaveHull(struct TArray<struct FVector> Points, bool bIsWorldSpace, bool bCreateConvexCollision, bool bIsAsync); // Function Icarus.ConcaveHullMesh.GenerateConcaveHull // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1529a60
	void DebugGeneratedHullPoints(float ZOffset); // Function Icarus.ConcaveHullMesh.DebugGeneratedHullPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x15292e0
};

// Class Icarus.ConfirmationPopupBase
// Size: 0x280 (Inherited: 0x260)
struct UConfirmationPopupBase : UUserWidget {
	struct FMulticastInlineDelegate OnOptionAClicked; // 0x260(0x10)
	struct FMulticastInlineDelegate OnOptionBClicked; // 0x270(0x10)

	void ShowConfirmationPopup(struct FConfirmationPopupDetails ConfirmationPopupDetails, struct FDelegate OnOptionA, struct FDelegate OnOptionB); // Function Icarus.ConfirmationPopupBase.ShowConfirmationPopup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x152bd20
	void SetPromptDetails(struct FConfirmationPopupDetails ConfirmationPopupDetails); // Function Icarus.ConfirmationPopupBase.SetPromptDetails // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void SetPromptContent(struct UUserWidget* ContentWidget); // Function Icarus.ConfirmationPopupBase.SetPromptContent // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	void OptionBClicked(); // Function Icarus.ConfirmationPopupBase.OptionBClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x152bb00
	void OptionAClicked(); // Function Icarus.ConfirmationPopupBase.OptionAClicked // (Final|Native|Protected|BlueprintCallable) // @ game+0x152bae0
};

// Class Icarus.ConnectedPlayers
// Size: 0x100 (Inherited: 0xb0)
struct UConnectedPlayers : UActorComponent {
	struct FMulticastInlineDelegate OnConnectedPlayerInitialised; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnConnectedPlayerDisconnected; // 0xc0(0x10)
	struct TArray<struct FConnectedPlayer> ConnectedPlayers; // 0xd0(0x10)
	char pad_E0[0x8]; // 0xe0(0x08)
	struct UResetCharacterProspectStateCallbackProxyGen* ResetCharacterProspectStateCallback; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)

	bool ServerTryCompletePlayerInitialisation(struct AIcarusPlayerController* Player); // Function Icarus.ConnectedPlayers.ServerTryCompletePlayerInitialisation // (Final|Native|Public) // @ game+0x152bc80
	void OnRep_ConnectedPlayers(); // Function Icarus.ConnectedPlayers.OnRep_ConnectedPlayers // (Final|Native|Protected) // @ game+0x152bac0
	struct TArray<struct FConnectedPlayer> GetConnectedPlayers(); // Function Icarus.ConnectedPlayers.GetConnectedPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x152a4a0
	void FriendsUpdatedForConnectedPlayer(struct AIcarusPlayerController* Controller, struct TArray<struct FFriendPackage> NewFriends); // Function Icarus.ConnectedPlayers.FriendsUpdatedForConnectedPlayer // (Final|Native|Public|HasOutParms) // @ game+0x1529940
};

// Class Icarus.ConnectedPlayersFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UConnectedPlayersFunctionLibrary : UBlueprintFunctionLibrary {

	bool NotEqual_ConnectedPlayerPlayerCharacterID(struct FConnectedPlayer A, struct FPlayerCharacterID B); // Function Icarus.ConnectedPlayersFunctionLibrary.NotEqual_ConnectedPlayerPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152b710
	bool NotEqual_ConnectedPlayerConnectedPlayer(struct FConnectedPlayer A, struct FConnectedPlayer B); // Function Icarus.ConnectedPlayersFunctionLibrary.NotEqual_ConnectedPlayerConnectedPlayer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152b500
	bool HasInitialisedPlayerByPlayerState(struct UObject* WorldContextObject, struct AIcarusPlayerState* PlayerState); // Function Icarus.ConnectedPlayersFunctionLibrary.HasInitialisedPlayerByPlayerState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152aeb0
	bool HasInitialisedPlayerByPlayerID(struct UObject* WorldContextObject, struct FString PlayerID); // Function Icarus.ConnectedPlayersFunctionLibrary.HasInitialisedPlayerByPlayerID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152adc0
	bool HasInitialisedPlayerByPlayerCharacterID(struct UObject* WorldContextObject, struct FPlayerCharacterID PlayerCharacterID); // Function Icarus.ConnectedPlayersFunctionLibrary.HasInitialisedPlayerByPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152acd0
	bool HasInitialisedPlayerByPlayerCharacter(struct UObject* WorldContextObject, struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.ConnectedPlayersFunctionLibrary.HasInitialisedPlayerByPlayerCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152ac00
	bool HasInitialisedPlayerByController(struct UObject* WorldContextObject, struct AIcarusPlayerController* Controller); // Function Icarus.ConnectedPlayersFunctionLibrary.HasInitialisedPlayerByController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152ab30
	bool HasInitialisedPlayerByConnectedPlayer(struct FConnectedPlayer ConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.HasInitialisedPlayerByConnectedPlayer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152aa10
	struct UConnectedPlayers* GetConnectedPlayers(struct UObject* WorldContextObject); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152a550
	bool GetConnectedPlayerByPlayerState(struct UObject* WorldContextObject, struct AIcarusPlayerState* PlayerState, struct FConnectedPlayer OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayerByPlayerState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152a300
	bool GetConnectedPlayerByPlayerID(struct UObject* WorldContextObject, struct FString PlayerID, struct FConnectedPlayer OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayerByPlayerID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152a130
	bool GetConnectedPlayerByPlayerCharacterID(struct UObject* WorldContextObject, struct FPlayerCharacterID PlayerCharacterID, struct FConnectedPlayer OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayerByPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1529f50
	bool GetConnectedPlayerByPlayerCharacter(struct UObject* WorldContextObject, struct AIcarusPlayerCharacter* PlayerCharacter, struct FConnectedPlayer OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayerByPlayerCharacter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1529db0
	bool GetConnectedPlayerByController(struct UObject* WorldContextObject, struct AIcarusPlayerController* Controller, struct FConnectedPlayer OutConnectedPlayer); // Function Icarus.ConnectedPlayersFunctionLibrary.GetConnectedPlayerByController // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1529c10
	bool EqualEqual_ConnectedPlayerPlayerCharacterID(struct FConnectedPlayer A, struct FPlayerCharacterID B); // Function Icarus.ConnectedPlayersFunctionLibrary.EqualEqual_ConnectedPlayerPlayerCharacterID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1529570
	bool EqualEqual_ConnectedPlayerConnectedPlayer(struct FConnectedPlayer A, struct FConnectedPlayer B); // Function Icarus.ConnectedPlayersFunctionLibrary.EqualEqual_ConnectedPlayerConnectedPlayer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1529360
};

// Class Icarus.ConsumableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UConsumableComponent : UTraitComponent {

	bool GetConsumableData(struct FConsumableData OutData); // Function Icarus.ConsumableComponent.GetConsumableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x152a5e0
};

// Class Icarus.ConsumableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UConsumableLibrary : URowLibrary {

	struct FConsumableRowHandle StructToRowHandle(struct FConsumableEnum EnumValue); // Function Icarus.ConsumableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152bff0
	struct FName StructToName(struct FConsumableEnum EnumValue); // Function Icarus.ConsumableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152bf50
	int32_t StructToInt(struct FConsumableEnum EnumValue); // Function Icarus.ConsumableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152beb0
	struct FConsumableEnum RowHandleToStruct(struct FConsumableRowHandle RowHandle); // Function Icarus.ConsumableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152bbc0
	void RemoveRowFromConsumableTable(struct FName Name); // Function Icarus.ConsumableLibrary.RemoveRowFromConsumableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x152bb40
	void RefreshConstants(); // Function Icarus.ConsumableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x152bb20
	int32_t NumRows(); // Function Icarus.ConsumableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152ba90
	bool NotEqual_EnumName(struct FConsumableEnum A, struct FName B); // Function Icarus.ConsumableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b9a0
	bool NotEqual_EnumEnum(struct FConsumableEnum A, struct FConsumableEnum B); // Function Icarus.ConsumableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b8b0
	struct FConsumableEnum NameToStruct(struct FName NameValue); // Function Icarus.ConsumableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b470
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ConsumableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x152b3e0
	struct FConsumableRowHandle MakeLiteralConsumable(struct FConsumableRowHandle RowHandle); // Function Icarus.ConsumableLibrary.MakeLiteralConsumable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b310
	struct FConsumableRowHandle MakeConsumableFromIndex(int32_t Index); // Function Icarus.ConsumableLibrary.MakeConsumableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b280
	struct FConsumableEnum MakeConsumableEnum(struct FConsumableEnum Enum); // Function Icarus.ConsumableLibrary.MakeConsumableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b200
	struct FConsumableRowHandle MakeConsumable(struct FName RowName); // Function Icarus.ConsumableLibrary.MakeConsumable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b160
	bool IsValidName(struct FName NameValue); // Function Icarus.ConsumableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x152b0d0
	struct FConsumableEnum IntToStruct(int32_t IntValue); // Function Icarus.ConsumableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152b010
	struct FName IntToName(int32_t IntValue); // Function Icarus.ConsumableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x152af80
	void GetConsumableStruct(struct FConsumableRowHandle RowHandle, struct FConsumableData Consumable, enum class EValid Paths); // Function Icarus.ConsumableLibrary.GetConsumableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152a7e0
	bool EqualEqual_FConsumableRowHandleFConsumableRowHandle(struct FConsumableRowHandle RowHandleA, struct FConsumableRowHandle RowHandleB); // Function Icarus.ConsumableLibrary.EqualEqual_FConsumableRowHandleFConsumableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1529800
	bool EqualEqual_EnumEnum(struct FConsumableEnum A, struct FConsumableEnum B); // Function Icarus.ConsumableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1529710
	struct FConsumableRowHandle CastToConsumableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ConsumableLibrary.CastToConsumableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1529130
	void BreakConsumableEnum(struct FConsumableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ConsumableLibrary.BreakConsumableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1528fd0
	void AddRowToConsumableTable(struct FName Name, struct FConsumableData Data, struct FConsumableRowHandle NewRow); // Function Icarus.ConsumableLibrary.AddRowToConsumableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1528cf0
};

// Class Icarus.ConsumableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UConsumableTable : UIcarusDataTable {
};

// Class Icarus.ContextMenuFactory
// Size: 0x238 (Inherited: 0x220)
struct AContextMenuFactory : AActor {
	struct APlayerController* OwningPlayer; // 0x220(0x08)
	struct TArray<struct FContextMenuItemData> Items; // 0x228(0x10)

	struct UContextMenuWidget* ShowAsRadialMenu(); // Function Icarus.ContextMenuFactory.ShowAsRadialMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	struct UContextMenuWidget* ShowAsContextMenu(struct FVector2D ScreenPosition); // Function Icarus.ContextMenuFactory.ShowAsContextMenu // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void CreateMenu(struct APlayerController* NewOwningPlayer); // Function Icarus.ContextMenuFactory.CreateMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1529250
	void AddItem(struct FContextMenuItemData ContextMenuItemData, struct FDelegate OnClickedDelegate); // Function Icarus.ContextMenuFactory.AddItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1528b90
};

// Class Icarus.ContextMenuGroupTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UContextMenuGroupTypesLibrary : URowLibrary {

	struct FContextMenuGroupTypesRowHandle StructToRowHandle(struct FContextMenuGroupTypesEnum EnumValue); // Function Icarus.ContextMenuGroupTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531b20
	struct FName StructToName(struct FContextMenuGroupTypesEnum EnumValue); // Function Icarus.ContextMenuGroupTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15319e0
	int32_t StructToInt(struct FContextMenuGroupTypesEnum EnumValue); // Function Icarus.ContextMenuGroupTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15318a0
	struct FContextMenuGroupTypesEnum RowHandleToStruct(struct FContextMenuGroupTypesRowHandle RowHandle); // Function Icarus.ContextMenuGroupTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531720
	void RemoveRowFromContextMenuGroupTypesTable(struct FName Name); // Function Icarus.ContextMenuGroupTypesLibrary.RemoveRowFromContextMenuGroupTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1531620
	void RefreshConstants(); // Function Icarus.ContextMenuGroupTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15315e0
	int32_t NumRows(); // Function Icarus.ContextMenuGroupTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531580
	bool NotEqual_EnumName(struct FContextMenuGroupTypesEnum A, struct FName B); // Function Icarus.ContextMenuGroupTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15313a0
	bool NotEqual_EnumEnum(struct FContextMenuGroupTypesEnum A, struct FContextMenuGroupTypesEnum B); // Function Icarus.ContextMenuGroupTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15311c0
	struct FContextMenuGroupTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.ContextMenuGroupTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15310a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ContextMenuGroupTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1530f80
	struct FContextMenuGroupTypesRowHandle MakeLiteralContextMenuGroupTypes(struct FContextMenuGroupTypesRowHandle RowHandle); // Function Icarus.ContextMenuGroupTypesLibrary.MakeLiteralContextMenuGroupTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530de0
	struct FContextMenuGroupTypesRowHandle MakeContextMenuGroupTypesFromIndex(int32_t Index); // Function Icarus.ContextMenuGroupTypesLibrary.MakeContextMenuGroupTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530ba0
	struct FContextMenuGroupTypesEnum MakeContextMenuGroupTypesEnum(struct FContextMenuGroupTypesEnum Enum); // Function Icarus.ContextMenuGroupTypesLibrary.MakeContextMenuGroupTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530b20
	struct FContextMenuGroupTypesRowHandle MakeContextMenuGroupTypes(struct FName RowName); // Function Icarus.ContextMenuGroupTypesLibrary.MakeContextMenuGroupTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530a80
	bool IsValidName(struct FName NameValue); // Function Icarus.ContextMenuGroupTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1530940
	struct FContextMenuGroupTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ContextMenuGroupTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530770
	struct FName IntToName(int32_t IntValue); // Function Icarus.ContextMenuGroupTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1530650
	void GetContextMenuGroupTypesStruct(struct FContextMenuGroupTypesRowHandle RowHandle, struct FContextMenuGroupType ContextMenuGroupTypes, enum class EValid Paths); // Function Icarus.ContextMenuGroupTypesLibrary.GetContextMenuGroupTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1530030
	bool EqualEqual_FContextMenuGroupTypesRowHandleFContextMenuGroupTypesRowHandle(struct FContextMenuGroupTypesRowHandle RowHandleA, struct FContextMenuGroupTypesRowHandle RowHandleB); // Function Icarus.ContextMenuGroupTypesLibrary.EqualEqual_FContextMenuGroupTypesRowHandleFContextMenuGroupTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152fdb0
	bool EqualEqual_EnumEnum(struct FContextMenuGroupTypesEnum A, struct FContextMenuGroupTypesEnum B); // Function Icarus.ContextMenuGroupTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152fbd0
	struct FContextMenuGroupTypesRowHandle CastToContextMenuGroupTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ContextMenuGroupTypesLibrary.CastToContextMenuGroupTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152f4f0
	void BreakContextMenuGroupTypesEnum(struct FContextMenuGroupTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ContextMenuGroupTypesLibrary.BreakContextMenuGroupTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152f230
	void AddRowToContextMenuGroupTypesTable(struct FName Name, struct FContextMenuGroupType Data, struct FContextMenuGroupTypesRowHandle NewRow); // Function Icarus.ContextMenuGroupTypesLibrary.AddRowToContextMenuGroupTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152ee10
};

// Class Icarus.ContextMenuGroupTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UContextMenuGroupTypesTable : UIcarusDataTable {
};

// Class Icarus.ContextMenuWidget
// Size: 0x260 (Inherited: 0x260)
struct UContextMenuWidget : UUserWidget {

	void ShowMenu(struct FVector2D ScreenPosition, struct FText MenuName, struct UTexture2D* MenuIcon); // Function Icarus.ContextMenuWidget.ShowMenu // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void CloseMenu(); // Function Icarus.ContextMenuWidget.CloseMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void AddItems(struct TArray<struct FContextMenuItemData> ContextMenuItems); // Function Icarus.ContextMenuWidget.AddItems // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.CosmeticsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCosmeticsFunctionLibrary : UBlueprintFunctionLibrary {

	void LogDLCInfo(); // Function Icarus.CosmeticsFunctionLibrary.LogDLCInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1530a60
	bool IsDLCPackageInstalled(struct FDLCPackageDataRowHandle DLCPackage); // Function Icarus.CosmeticsFunctionLibrary.IsDLCPackageInstalled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1530890
};

// Class Icarus.CraftingAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCraftingAudioDataLibrary : URowLibrary {

	struct FCraftingAudioDataRowHandle StructToRowHandle(struct FCraftingAudioDataEnum EnumValue); // Function Icarus.CraftingAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531bd0
	struct FName StructToName(struct FCraftingAudioDataEnum EnumValue); // Function Icarus.CraftingAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531a80
	int32_t StructToInt(struct FCraftingAudioDataEnum EnumValue); // Function Icarus.CraftingAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531940
	struct FCraftingAudioDataEnum RowHandleToStruct(struct FCraftingAudioDataRowHandle RowHandle); // Function Icarus.CraftingAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15317e0
	void RemoveRowFromCraftingAudioDataTable(struct FName Name); // Function Icarus.CraftingAudioDataLibrary.RemoveRowFromCraftingAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15316a0
	void RefreshConstants(); // Function Icarus.CraftingAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1531600
	int32_t NumRows(); // Function Icarus.CraftingAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15315b0
	bool NotEqual_EnumName(struct FCraftingAudioDataEnum A, struct FName B); // Function Icarus.CraftingAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531490
	bool NotEqual_EnumEnum(struct FCraftingAudioDataEnum A, struct FCraftingAudioDataEnum B); // Function Icarus.CraftingAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15312b0
	struct FCraftingAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.CraftingAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1531130
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CraftingAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1531010
	struct FCraftingAudioDataRowHandle MakeLiteralCraftingAudioData(struct FCraftingAudioDataRowHandle RowHandle); // Function Icarus.CraftingAudioDataLibrary.MakeLiteralCraftingAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530eb0
	struct FCraftingAudioDataRowHandle MakeCraftingAudioDataFromIndex(int32_t Index); // Function Icarus.CraftingAudioDataLibrary.MakeCraftingAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530d50
	struct FCraftingAudioDataEnum MakeCraftingAudioDataEnum(struct FCraftingAudioDataEnum Enum); // Function Icarus.CraftingAudioDataLibrary.MakeCraftingAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530cd0
	struct FCraftingAudioDataRowHandle MakeCraftingAudioData(struct FName RowName); // Function Icarus.CraftingAudioDataLibrary.MakeCraftingAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530c30
	bool IsValidName(struct FName NameValue); // Function Icarus.CraftingAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15309d0
	struct FCraftingAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.CraftingAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1530800
	struct FName IntToName(int32_t IntValue); // Function Icarus.CraftingAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15306e0
	void GetCraftingAudioDataStruct(struct FCraftingAudioDataRowHandle RowHandle, struct FCraftingAudioData CraftingAudioData, enum class EValid Paths); // Function Icarus.CraftingAudioDataLibrary.GetCraftingAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15301f0
	bool EqualEqual_FCraftingAudioDataRowHandleFCraftingAudioDataRowHandle(struct FCraftingAudioDataRowHandle RowHandleA, struct FCraftingAudioDataRowHandle RowHandleB); // Function Icarus.CraftingAudioDataLibrary.EqualEqual_FCraftingAudioDataRowHandleFCraftingAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152fef0
	bool EqualEqual_EnumEnum(struct FCraftingAudioDataEnum A, struct FCraftingAudioDataEnum B); // Function Icarus.CraftingAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x152fcc0
	struct FCraftingAudioDataRowHandle CastToCraftingAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CraftingAudioDataLibrary.CastToCraftingAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152f610
	void BreakCraftingAudioDataEnum(struct FCraftingAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CraftingAudioDataLibrary.BreakCraftingAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x152f390
	void AddRowToCraftingAudioDataTable(struct FName Name, struct FCraftingAudioData Data, struct FCraftingAudioDataRowHandle NewRow); // Function Icarus.CraftingAudioDataLibrary.AddRowToCraftingAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152f030
};

// Class Icarus.CraftingAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCraftingAudioDataTable : UIcarusDataTable {
};

// Class Icarus.CraftingFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCraftingFunctionLibrary : UBlueprintFunctionLibrary {

	float GetStatBasedResourceCostMultiplier(struct FProcessorRecipesRowHandle Recipe, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.GetStatBasedResourceCostMultiplier // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1530560
	int32_t GetScaledRecipeInputCount(struct FProcessorRecipesRowHandle Recipe, struct FCraftingInput Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.GetScaledRecipeInputCount // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1530380
	struct TArray<struct FResourceItem> CreateRecipeOutputResourceData(struct FProcessorRecipesRowHandle Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeOutputResourceData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152fa90
	struct TArray<struct FItemData> CreateRecipeOutputItemData(struct FProcessorRecipesRowHandle Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeOutputItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152f980
	struct TArray<struct FResourceItem> CreateRecipeInputResourceData(struct FProcessorRecipesRowHandle Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeInputResourceData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152f840
	struct TArray<struct FItemData> CreateRecipeInputItemData(struct FProcessorRecipesRowHandle Input, struct AActor* CraftingActor); // Function Icarus.CraftingFunctionLibrary.CreateRecipeInputItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x152f730
};

// Class Icarus.CraftingModificationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCraftingModificationsLibrary : URowLibrary {

	struct FCraftingModificationsRowHandle StructToRowHandle(struct FCraftingModificationsEnum EnumValue); // Function Icarus.CraftingModificationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536ca0
	struct FName StructToName(struct FCraftingModificationsEnum EnumValue); // Function Icarus.CraftingModificationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536b60
	int32_t StructToInt(struct FCraftingModificationsEnum EnumValue); // Function Icarus.CraftingModificationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536a20
	struct FCraftingModificationsEnum RowHandleToStruct(struct FCraftingModificationsRowHandle RowHandle); // Function Icarus.CraftingModificationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15368a0
	void RemoveRowFromCraftingModificationsTable(struct FName Name); // Function Icarus.CraftingModificationsLibrary.RemoveRowFromCraftingModificationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15367a0
	void RefreshConstants(); // Function Icarus.CraftingModificationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1536760
	int32_t NumRows(); // Function Icarus.CraftingModificationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536700
	bool NotEqual_EnumName(struct FCraftingModificationsEnum A, struct FName B); // Function Icarus.CraftingModificationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536520
	bool NotEqual_EnumEnum(struct FCraftingModificationsEnum A, struct FCraftingModificationsEnum B); // Function Icarus.CraftingModificationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536340
	struct FCraftingModificationsEnum NameToStruct(struct FName NameValue); // Function Icarus.CraftingModificationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536220
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CraftingModificationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1536100
	struct FCraftingModificationsRowHandle MakeLiteralCraftingModifications(struct FCraftingModificationsRowHandle RowHandle); // Function Icarus.CraftingModificationsLibrary.MakeLiteralCraftingModifications // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535f60
	struct FCraftingModificationsRowHandle MakeCraftingModificationsFromIndex(int32_t Index); // Function Icarus.CraftingModificationsLibrary.MakeCraftingModificationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535d20
	struct FCraftingModificationsEnum MakeCraftingModificationsEnum(struct FCraftingModificationsEnum Enum); // Function Icarus.CraftingModificationsLibrary.MakeCraftingModificationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535ca0
	struct FCraftingModificationsRowHandle MakeCraftingModifications(struct FName RowName); // Function Icarus.CraftingModificationsLibrary.MakeCraftingModifications // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535c00
	bool IsValidName(struct FName NameValue); // Function Icarus.CraftingModificationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1535ae0
	struct FCraftingModificationsEnum IntToStruct(int32_t IntValue); // Function Icarus.CraftingModificationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15359c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.CraftingModificationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15358a0
	void GetCraftingModificationsStruct(struct FCraftingModificationsRowHandle RowHandle, struct FCraftingModifications CraftingModifications, enum class EValid Paths); // Function Icarus.CraftingModificationsLibrary.GetCraftingModificationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1535420
	bool EqualEqual_FCraftingModificationsRowHandleFCraftingModificationsRowHandle(struct FCraftingModificationsRowHandle RowHandleA, struct FCraftingModificationsRowHandle RowHandleB); // Function Icarus.CraftingModificationsLibrary.EqualEqual_FCraftingModificationsRowHandleFCraftingModificationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15351a0
	bool EqualEqual_EnumEnum(struct FCraftingModificationsEnum A, struct FCraftingModificationsEnum B); // Function Icarus.CraftingModificationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1534fc0
	struct FCraftingModificationsRowHandle CastToCraftingModificationsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CraftingModificationsLibrary.CastToCraftingModificationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1534d80
	void BreakCraftingModificationsEnum(struct FCraftingModificationsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CraftingModificationsLibrary.BreakCraftingModificationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1534ac0
	void AddRowToCraftingModificationsTable(struct FName Name, struct FCraftingModifications Data, struct FCraftingModificationsRowHandle NewRow); // Function Icarus.CraftingModificationsLibrary.AddRowToCraftingModificationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1534580
};

// Class Icarus.CraftingModificationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCraftingModificationsTable : UIcarusDataTable {
};

// Class Icarus.CreatureAudioComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UCreatureAudioComponent : UActorComponent {
	enum class EAudioShelterState CurrentShelterState; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)

	void UpdateShelterState(); // Function Icarus.CreatureAudioComponent.UpdateShelterState // (Final|Native|Protected|BlueprintCallable) // @ game+0x1536e00
};

// Class Icarus.CreatureAudioSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UCreatureAudioSubsystem : UWorldSubsystem {
	struct TArray<struct FCreatureAudioSubsystemRecord> TrackedCreatures; // 0x30(0x10)

	int32_t GetThreatLevel(struct AIcarusPlayerCharacter* Player); // Function Icarus.CreatureAudioSubsystem.GetThreatLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1535800
};

// Class Icarus.CreatureAudioThreatDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCreatureAudioThreatDataLibrary : URowLibrary {

	struct FCreatureAudioThreatDataRowHandle StructToRowHandle(struct FCreatureAudioThreatDataEnum EnumValue); // Function Icarus.CreatureAudioThreatDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536d50
	struct FName StructToName(struct FCreatureAudioThreatDataEnum EnumValue); // Function Icarus.CreatureAudioThreatDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536c00
	int32_t StructToInt(struct FCreatureAudioThreatDataEnum EnumValue); // Function Icarus.CreatureAudioThreatDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536ac0
	struct FCreatureAudioThreatDataEnum RowHandleToStruct(struct FCreatureAudioThreatDataRowHandle RowHandle); // Function Icarus.CreatureAudioThreatDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536960
	void RemoveRowFromCreatureAudioThreatDataTable(struct FName Name); // Function Icarus.CreatureAudioThreatDataLibrary.RemoveRowFromCreatureAudioThreatDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1536820
	void RefreshConstants(); // Function Icarus.CreatureAudioThreatDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1536780
	int32_t NumRows(); // Function Icarus.CreatureAudioThreatDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536730
	bool NotEqual_EnumName(struct FCreatureAudioThreatDataEnum A, struct FName B); // Function Icarus.CreatureAudioThreatDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536610
	bool NotEqual_EnumEnum(struct FCreatureAudioThreatDataEnum A, struct FCreatureAudioThreatDataEnum B); // Function Icarus.CreatureAudioThreatDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536430
	struct FCreatureAudioThreatDataEnum NameToStruct(struct FName NameValue); // Function Icarus.CreatureAudioThreatDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15362b0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CreatureAudioThreatDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1536190
	struct FCreatureAudioThreatDataRowHandle MakeLiteralCreatureAudioThreatData(struct FCreatureAudioThreatDataRowHandle RowHandle); // Function Icarus.CreatureAudioThreatDataLibrary.MakeLiteralCreatureAudioThreatData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1536030
	struct FCreatureAudioThreatDataRowHandle MakeCreatureAudioThreatDataFromIndex(int32_t Index); // Function Icarus.CreatureAudioThreatDataLibrary.MakeCreatureAudioThreatDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535ed0
	struct FCreatureAudioThreatDataEnum MakeCreatureAudioThreatDataEnum(struct FCreatureAudioThreatDataEnum Enum); // Function Icarus.CreatureAudioThreatDataLibrary.MakeCreatureAudioThreatDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535e50
	struct FCreatureAudioThreatDataRowHandle MakeCreatureAudioThreatData(struct FName RowName); // Function Icarus.CreatureAudioThreatDataLibrary.MakeCreatureAudioThreatData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535db0
	bool IsValidName(struct FName NameValue); // Function Icarus.CreatureAudioThreatDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1535b70
	struct FCreatureAudioThreatDataEnum IntToStruct(int32_t IntValue); // Function Icarus.CreatureAudioThreatDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1535a50
	struct FName IntToName(int32_t IntValue); // Function Icarus.CreatureAudioThreatDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1535930
	void GetCreatureAudioThreatDataStruct(struct FCreatureAudioThreatDataRowHandle RowHandle, struct FCreatureAudioThreatData CreatureAudioThreatData, enum class EValid Paths); // Function Icarus.CreatureAudioThreatDataLibrary.GetCreatureAudioThreatDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15355d0
	bool EqualEqual_FCreatureAudioThreatDataRowHandleFCreatureAudioThreatDataRowHandle(struct FCreatureAudioThreatDataRowHandle RowHandleA, struct FCreatureAudioThreatDataRowHandle RowHandleB); // Function Icarus.CreatureAudioThreatDataLibrary.EqualEqual_FCreatureAudioThreatDataRowHandleFCreatureAudioThreatDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15352e0
	bool EqualEqual_EnumEnum(struct FCreatureAudioThreatDataEnum A, struct FCreatureAudioThreatDataEnum B); // Function Icarus.CreatureAudioThreatDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15350b0
	struct FCreatureAudioThreatDataRowHandle CastToCreatureAudioThreatDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CreatureAudioThreatDataLibrary.CastToCreatureAudioThreatDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1534ea0
	void BreakCreatureAudioThreatDataEnum(struct FCreatureAudioThreatDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CreatureAudioThreatDataLibrary.BreakCreatureAudioThreatDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1534c20
	void AddRowToCreatureAudioThreatDataTable(struct FName Name, struct FCreatureAudioThreatData Data, struct FCreatureAudioThreatDataRowHandle NewRow); // Function Icarus.CreatureAudioThreatDataLibrary.AddRowToCreatureAudioThreatDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1534800
};

// Class Icarus.CreatureAudioThreatDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCreatureAudioThreatDataTable : UIcarusDataTable {
};

// Class Icarus.CriticalHitSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCriticalHitSetupLibrary : URowLibrary {

	struct FCriticalHitSetupRowHandle StructToRowHandle(struct FCriticalHitSetupEnum EnumValue); // Function Icarus.CriticalHitSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153cfc0
	struct FName StructToName(struct FCriticalHitSetupEnum EnumValue); // Function Icarus.CriticalHitSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153ce80
	int32_t StructToInt(struct FCriticalHitSetupEnum EnumValue); // Function Icarus.CriticalHitSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153cd40
	struct FCriticalHitSetupEnum RowHandleToStruct(struct FCriticalHitSetupRowHandle RowHandle); // Function Icarus.CriticalHitSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c840
	void RemoveRowFromCriticalHitSetupTable(struct FName Name); // Function Icarus.CriticalHitSetupLibrary.RemoveRowFromCriticalHitSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153c740
	void RefreshConstants(); // Function Icarus.CriticalHitSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x153c700
	int32_t NumRows(); // Function Icarus.CriticalHitSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c2d0
	bool NotEqual_EnumName(struct FCriticalHitSetupEnum A, struct FName B); // Function Icarus.CriticalHitSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c0f0
	bool NotEqual_EnumEnum(struct FCriticalHitSetupEnum A, struct FCriticalHitSetupEnum B); // Function Icarus.CriticalHitSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153bf10
	struct FCriticalHitSetupEnum NameToStruct(struct FName NameValue); // Function Icarus.CriticalHitSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153bdf0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CriticalHitSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x153bcd0
	struct FCriticalHitSetupRowHandle MakeLiteralCriticalHitSetup(struct FCriticalHitSetupRowHandle RowHandle); // Function Icarus.CriticalHitSetupLibrary.MakeLiteralCriticalHitSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153bb30
	struct FCriticalHitSetupRowHandle MakeCriticalHitSetupFromIndex(int32_t Index); // Function Icarus.CriticalHitSetupLibrary.MakeCriticalHitSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153b8f0
	struct FCriticalHitSetupEnum MakeCriticalHitSetupEnum(struct FCriticalHitSetupEnum Enum); // Function Icarus.CriticalHitSetupLibrary.MakeCriticalHitSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153b870
	struct FCriticalHitSetupRowHandle MakeCriticalHitSetup(struct FName RowName); // Function Icarus.CriticalHitSetupLibrary.MakeCriticalHitSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153b7d0
	bool IsValidName(struct FName NameValue); // Function Icarus.CriticalHitSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x153b6b0
	struct FCriticalHitSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.CriticalHitSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153b420
	struct FName IntToName(int32_t IntValue); // Function Icarus.CriticalHitSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x153b300
	void GetCriticalHitSetupStruct(struct FCriticalHitSetupRowHandle RowHandle, struct FCriticalHitSetup CriticalHitSetup, enum class EValid Paths); // Function Icarus.CriticalHitSetupLibrary.GetCriticalHitSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x153ae50
	bool EqualEqual_FCriticalHitSetupRowHandleFCriticalHitSetupRowHandle(struct FCriticalHitSetupRowHandle RowHandleA, struct FCriticalHitSetupRowHandle RowHandleB); // Function Icarus.CriticalHitSetupLibrary.EqualEqual_FCriticalHitSetupRowHandleFCriticalHitSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153a9d0
	bool EqualEqual_EnumEnum(struct FCriticalHitSetupEnum A, struct FCriticalHitSetupEnum B); // Function Icarus.CriticalHitSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153a7f0
	struct FCriticalHitSetupRowHandle CastToCriticalHitSetupRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CriticalHitSetupLibrary.CastToCriticalHitSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1539b70
	void BreakCriticalHitSetupEnum(struct FCriticalHitSetupEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CriticalHitSetupLibrary.BreakCriticalHitSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1539770
	void AddRowToCriticalHitSetupTable(struct FName Name, struct FCriticalHitSetup Data, struct FCriticalHitSetupRowHandle NewRow); // Function Icarus.CriticalHitSetupLibrary.AddRowToCriticalHitSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1539270
};

// Class Icarus.CriticalHitSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCriticalHitSetupTable : UIcarusDataTable {
};

// Class Icarus.CursorSubsystem
// Size: 0xd0 (Inherited: 0x30)
struct UCursorSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate CursorCleared; // 0x30(0x10)
	struct FMulticastInlineDelegate CursorUpdated; // 0x40(0x10)
	struct FItemData CurrentItem; // 0x50(0x80)

	void UpdateCursor(struct FItemData Item); // Function Icarus.CursorSubsystem.UpdateCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x153d120
};

// Class Icarus.CustomComboBox
// Size: 0x598 (Inherited: 0x108)
struct UCustomComboBox : UWidget {
	struct FComboButtonStyle ComboStyle; // 0x108(0x3b8)
	struct FMulticastInlineDelegate OnItemSet; // 0x4c0(0x10)
	char pad_4D0[0x40]; // 0x4d0(0x40)
	struct TArray<struct UUserWidget*> WidgetsRef; // 0x510(0x10)
	char pad_520[0x78]; // 0x520(0x78)

	void SortItems(); // Function Icarus.CustomComboBox.SortItems // (Final|Native|Public|BlueprintCallable) // @ game+0x153cd20
	void SetSelectedName(struct FString Name, bool bApplyToCombo); // Function Icarus.CustomComboBox.SetSelectedName // (Final|Native|Public|BlueprintCallable) // @ game+0x153cbd0
	void SetSelectedIndex(int32_t Index, bool bApplyToCombo); // Function Icarus.CustomComboBox.SetSelectedIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x153cb00
	void SetOpen(bool bOpen); // Function Icarus.CustomComboBox.SetOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x153ca70
	void SetFilter(struct FString FilterText); // Function Icarus.CustomComboBox.SetFilter // (Final|Native|Public|BlueprintCallable) // @ game+0x153c9c0
	bool IsOpen(); // Function Icarus.CustomComboBox.IsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153b680
	struct UUserWidget* GetSelectedWidget(); // Function Icarus.CustomComboBox.GetSelectedWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153b2d0
	void ClearChildren(); // Function Icarus.CustomComboBox.ClearChildren // (Final|Native|Public|BlueprintCallable) // @ game+0x1539db0
	void AddItem(struct FString Name, struct UUserWidget* Widget); // Function Icarus.CustomComboBox.AddItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1539130
};

// Class Icarus.CustomQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCustomQuestsLibrary : URowLibrary {

	struct FCustomQuestsRowHandle StructToRowHandle(struct FCustomQuestsEnum EnumValue); // Function Icarus.CustomQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153d070
	struct FName StructToName(struct FCustomQuestsEnum EnumValue); // Function Icarus.CustomQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153cf20
	int32_t StructToInt(struct FCustomQuestsEnum EnumValue); // Function Icarus.CustomQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153cde0
	struct FCustomQuestsEnum RowHandleToStruct(struct FCustomQuestsRowHandle RowHandle); // Function Icarus.CustomQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c900
	void RemoveRowFromCustomQuestsTable(struct FName Name); // Function Icarus.CustomQuestsLibrary.RemoveRowFromCustomQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153c7c0
	void RefreshConstants(); // Function Icarus.CustomQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x153c720
	int32_t NumRows(); // Function Icarus.CustomQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c300
	bool NotEqual_EnumName(struct FCustomQuestsEnum A, struct FName B); // Function Icarus.CustomQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c1e0
	bool NotEqual_EnumEnum(struct FCustomQuestsEnum A, struct FCustomQuestsEnum B); // Function Icarus.CustomQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153c000
	struct FCustomQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.CustomQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153be80
	int32_t NameToInt(struct FName NameValue); // Function Icarus.CustomQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x153bd60
	struct FCustomQuestsRowHandle MakeLiteralCustomQuests(struct FCustomQuestsRowHandle RowHandle); // Function Icarus.CustomQuestsLibrary.MakeLiteralCustomQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153bc00
	struct FCustomQuestsRowHandle MakeCustomQuestsFromIndex(int32_t Index); // Function Icarus.CustomQuestsLibrary.MakeCustomQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153baa0
	struct FCustomQuestsEnum MakeCustomQuestsEnum(struct FCustomQuestsEnum Enum); // Function Icarus.CustomQuestsLibrary.MakeCustomQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153ba20
	struct FCustomQuestsRowHandle MakeCustomQuests(struct FName RowName); // Function Icarus.CustomQuestsLibrary.MakeCustomQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153b980
	bool IsValidName(struct FName NameValue); // Function Icarus.CustomQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x153b740
	struct FCustomQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.CustomQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153b4b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.CustomQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x153b390
	void GetCustomQuestsStruct(struct FCustomQuestsRowHandle RowHandle, struct FCustomQuest CustomQuests, enum class EValid Paths); // Function Icarus.CustomQuestsLibrary.GetCustomQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x153b020
	bool EqualEqual_FCustomQuestsRowHandleFCustomQuestsRowHandle(struct FCustomQuestsRowHandle RowHandleA, struct FCustomQuestsRowHandle RowHandleB); // Function Icarus.CustomQuestsLibrary.EqualEqual_FCustomQuestsRowHandleFCustomQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153ab10
	bool EqualEqual_EnumEnum(struct FCustomQuestsEnum A, struct FCustomQuestsEnum B); // Function Icarus.CustomQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x153a8e0
	struct FCustomQuestsRowHandle CastToCustomQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.CustomQuestsLibrary.CastToCustomQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1539c90
	void BreakCustomQuestsEnum(struct FCustomQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.CustomQuestsLibrary.BreakCustomQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15398d0
	void AddRowToCustomQuestsTable(struct FName Name, struct FCustomQuest Data, struct FCustomQuestsRowHandle NewRow); // Function Icarus.CustomQuestsLibrary.AddRowToCustomQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15395e0
};

// Class Icarus.CustomQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UCustomQuestsTable : UIcarusDataTable {
};

// Class Icarus.DamageFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDamageFunctionLibrary : UBlueprintFunctionLibrary {

	bool PrepareProjectileDamage(struct AActor* Instigator, struct AActor* Projectile); // Function Icarus.DamageFunctionLibrary.PrepareProjectileDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153c630
	int32_t PredictResistedDamage(struct AActor* Attacker, struct AActor* Weapon, struct AActor* Defender, bool bKillCam); // Function Icarus.DamageFunctionLibrary.PredictResistedDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153c4e0
	struct TMap<enum class EIcarusDamageType, int32_t> PredictDamage(struct AActor* Attacker, struct AActor* Weapon, bool bUseDamageVariation); // Function Icarus.DamageFunctionLibrary.PredictDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153c330
	bool IsCriticalHit(struct AActor* Defender, struct FHitResult HitInfo); // Function Icarus.DamageFunctionLibrary.IsCriticalHit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x153b540
	enum class EIcarusDamageType GetDamageTypeFromEvent(struct FDamageEvent DamageEvent); // Function Icarus.DamageFunctionLibrary.GetDamageTypeFromEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x153b230
	struct UDamageType* GetDamageTypeClass(enum class EIcarusDamageType DamageType); // Function Icarus.DamageFunctionLibrary.GetDamageTypeClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153b1a0
	int32_t GetCriticalDamagePlusPercent(struct AActor* Attacker); // Function Icarus.DamageFunctionLibrary.GetCriticalDamagePlusPercent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153adc0
	struct FStatContainer GetBestStatContainer(struct AActor* Attacker); // Function Icarus.DamageFunctionLibrary.GetBestStatContainer // (Final|Native|Static|Public) // @ game+0x153ac50
	bool DealSelfDamage(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.DealSelfDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153a6f0
	bool DealPointDamage(struct AActor* Attacker, struct AActor* Weapon, struct AActor* Defender, bool bIsKillCam, struct FVector HitNormal, struct FHitResult HitInfo, bool WasCriticalHit); // Function Icarus.DamageFunctionLibrary.DealPointDamage // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x153a470
	bool DealFlatDamage(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.DealFlatDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153a370
	bool DealDamageToInventoryItems(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct UInventory* Inventory, struct FGameplayTagQuery TagQuery); // Function Icarus.DamageFunctionLibrary.DealDamageToInventoryItems // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153a1a0
	bool DealDamageToInventoryItem(enum class EIcarusDamageType DamageType, int32_t DamageAmount, struct UInventory* Inventory, int32_t Location); // Function Icarus.DamageFunctionLibrary.DealDamageToInventoryItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x153a060
	bool DealDamage(struct AActor* Attacker, struct AActor* Weapon, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.DealDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1539f60
	bool DealCollisionDamage(struct AActor* Attacker, struct AActor* Defender, float ImpulseDamage, struct FHitResult HitInfo); // Function Icarus.DamageFunctionLibrary.DealCollisionDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1539dd0
	int32_t CalculateDamageTaken(enum class EIcarusDamageType DamageType, int32_t DamageValue, struct AActor* Causer, struct AActor* Defender); // Function Icarus.DamageFunctionLibrary.CalculateDamageTaken // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1539a30
};

// Class Icarus.DataTableValidationLibrary
// Size: 0x118 (Inherited: 0x28)
struct UDataTableValidationLibrary : UObject {
	char pad_28[0x98]; // 0x28(0x98)
	struct TMap<struct UObject*, struct TWeakObjectPtr<struct AActor>> TempTestActors; // 0xc0(0x50)
	struct UWorld* TempTestWorld; // 0x110(0x08)

	void Warn(struct FString Message); // Function Icarus.DataTableValidationLibrary.Warn // (Final|Native|Public|BlueprintCallable) // @ game+0x153ff00
	void Validate_WorldData_RowHandle(struct FWorldDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WorldData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Weight_RowHandle(struct FWeightRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Weight_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_WeatherPools_RowHandle(struct FWeatherPoolsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherPools_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_WeatherEvents_RowHandle(struct FWeatherEventsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_WeatherActions_RowHandle(struct FWeatherActionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WeatherActions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_WaterSetup_RowHandle(struct FWaterSetupRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_WaterSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Water_RowHandle(struct FWaterRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Water_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_VoxelSetupData_RowHandle(struct FVoxelSetupDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VoxelSetupData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_VoxelMaterialMap_RowHandle(struct FVoxelMaterialMapRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VoxelMaterialMap_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_VoxelDistributionRegion_RowHandle(struct FVoxelDistributionRegionRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VoxelDistributionRegion_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_VocalisationSettings_RowHandle(struct FVocalisationSettingsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VocalisationSettings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Vocalisations_RowHandle(struct FVocalisationsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Vocalisations_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Vehicular_RowHandle(struct FVehicularRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Vehicular_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_VehicleSetups_RowHandle(struct FVehicleSetupsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_VehicleSetups_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ValidHitTypes_RowHandle(struct FValidHitTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ValidHitTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ValidHitQueries_RowHandle(struct FValidHitQueriesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ValidHitQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Uses_RowHandle(struct FUsesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Uses_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Usable_RowHandle(struct FUsableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Usable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TreeAudioData_RowHandle(struct FTreeAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TreeAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TravelQuests_RowHandle(struct FTravelQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TravelQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Transmutable_RowHandle(struct FTransmutableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Transmutable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ToolTypes_RowHandle(struct FToolTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ToolTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ToolDamage_RowHandle(struct FToolDamageRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ToolDamage_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TimeOfDay_RowHandle(struct FTimeOfDayRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TimeOfDay_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TimelineRanks_RowHandle(struct FTimelineRanksRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TimelineRanks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Thermal_RowHandle(struct FThermalRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Thermal_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Terrains_RowHandle(struct FTerrainsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Terrains_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TalentViews_RowHandle(struct FTalentViewsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentViews_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TalentTrees_RowHandle(struct FTalentTreesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentTrees_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Talents_RowHandle(struct FTalentsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Talents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TalentRanks_RowHandle(struct FTalentRanksRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentRanks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TalentModelViews_RowHandle(struct FTalentModelViewsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentModelViews_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TalentModels_RowHandle(struct FTalentModelsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentModels_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TalentArchetypes_RowHandle(struct FTalentArchetypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TalentArchetypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_TagQueries_RowHandle(struct FTagQueriesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_TagQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Surfaces_RowHandle(struct FSurfacesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Surfaces_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Stats_RowHandle(struct FStatsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Stats_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Statistics_RowHandle(struct FStatisticsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Statistics_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_StatCategories_RowHandle(struct FStatCategoriesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StatCategories_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_StatAfflictions_RowHandle(struct FStatAfflictionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StatAfflictions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_StaminaActionCosts_RowHandle(struct FStaminaActionCostsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_StaminaActionCosts_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Slotable_RowHandle(struct FSlotableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Slotable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_SessionFlags_RowHandle(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_SessionFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ScriptedEvents_RowHandle(struct FScriptedEventsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ScriptedEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Rulesets_RowHandle(struct FRulesetsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Rulesets_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RowHandle(struct FRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Rocketable_RowHandle(struct FRocketableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Rocketable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ResourceNodeAudioData_RowHandle(struct FResourceNodeAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ResourceNodeAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RepGraphClassSettings_RowHandle(struct FRepGraphClassSettingsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RepGraphClassSettings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RepGraphClassPolicies_RowHandle(struct FRepGraphClassPoliciesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RepGraphClassPolicies_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RecoveryQuests_RowHandle(struct FRecoveryQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RecoveryQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RecipeSets_RowHandle(struct FRecipeSetsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RecipeSets_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RangedWeaponData_RowHandle(struct FRangedWeaponDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RangedWeaponData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RadialOptions_RowHandle(struct FRadialOptionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RadialOptions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_RadialMenuData_RowHandle(struct FRadialMenuDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_RadialMenuData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_QuickMove_RowHandle(struct FQuickMoveRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuickMove_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_QuestWeatherModifiers_RowHandle(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestWeatherModifiers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_QuestVocalisationModifiers_RowHandle(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestVocalisationModifiers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_QuestEnemyModifiers_RowHandle(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_QuestEnemyModifiers_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ProspectStats_RowHandle(struct FProspectStatsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProspectStats_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ProspectList_RowHandle(struct FProspectListRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProspectList_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ProjectileTypes_RowHandle(struct FProjectileTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProjectileTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ProcessorRecipes_RowHandle(struct FProcessorRecipesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ProcessorRecipes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Processing_RowHandle(struct FProcessingRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Processing_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_PreviewCameraSettings_RowHandle(struct FPreviewCameraSettingsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PreviewCameraSettings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_PlayerIdentity_RowHandle(struct FPlayerIdentityRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerIdentity_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_PlayerFootstepAudioData_RowHandle(struct FPlayerFootstepAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_PlayerFootstepAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Oxygen_RowHandle(struct FOxygenRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Oxygen_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_OrchestrationStateFlags_RowHandle(struct FOrchestrationStateFlagsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_OrchestrationStateFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_OrchestrationEvents_RowHandle(struct FOrchestrationEventsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_OrchestrationEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_MusicTracks_RowHandle(struct FMusicTracksRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MusicTracks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ModifierStates_RowHandle(struct FModifierStatesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ModifierStates_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_MetaWorkshopItems_RowHandle(struct FMetaWorkshopItemsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MetaWorkshopItems_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_MetaResourceNodes_RowHandle(struct FMetaResourceNodesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MetaResourceNodes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_MetaCurrency_RowHandle(struct FMetaCurrencyRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MetaCurrency_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Meshable_RowHandle(struct FMeshableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Meshable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_MapIcons_RowHandle(struct FMapIconsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_MapIcons_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_LevelSequences_RowHandle(struct FLevelSequencesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_LevelSequences_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Languages_RowHandle(struct FLanguagesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Languages_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_KillQuests_RowHandle(struct FKillQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_KillQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Keys_RowHandle(struct FKeysRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Keys_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_KeyIcons_RowHandle(struct FKeyIconsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_KeyIcons_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Keybindings_RowHandle(struct FKeybindingsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Keybindings_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_KeybindContexts_RowHandle(struct FKeybindContextsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_KeybindContexts_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemWeightStatQueries_RowHandle(struct FItemWeightStatQueriesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemWeightStatQueries_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemTraitMasks_RowHandle(struct FItemTraitMasksRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemTraitMasks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemTemplate_RowHandle(struct FItemTemplateRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemTemplate_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemsStatic_RowHandle(struct FItemsStaticRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemsStatic_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemRewards_RowHandle(struct FItemRewardsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemRewards_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemClassificationsIcons_RowHandle(struct FItemClassificationsIconsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemClassificationsIcons_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemAudioData_RowHandle(struct FItemAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemAttachment_RowHandle(struct FItemAttachmentRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemAttachment_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ItemAnimations_RowHandle(struct FItemAnimationsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ItemAnimations_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Itemable_RowHandle(struct FItemableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Itemable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_InventoryInfo_RowHandle(struct FInventoryInfoRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_InventoryInfo_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_InventoryID_RowHandle(struct FInventoryIDRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_InventoryID_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Inventory_RowHandle(struct FInventoryRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Inventory_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Interactions_RowHandle(struct FInteractionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Interactions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Interactable_RowHandle(struct FInteractableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Interactable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_HuntingSetup_RowHandle(struct FHuntingSetupRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_HuntingSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Hitable_RowHandle(struct FHitableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Hitable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Hints_RowHandle(struct FHintsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Hints_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Highlightable_RowHandle(struct FHighlightableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Highlightable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_GrantedAuras_RowHandle(struct FGrantedAurasRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GrantedAuras_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_GOAPSetup_RowHandle(struct FGOAPSetupRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_GOAPProperties_RowHandle(struct FGOAPPropertiesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPProperties_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_GOAPMotivations_RowHandle(struct FGOAPMotivationsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPMotivations_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_GOAPGoals_RowHandle(struct FGOAPGoalsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPGoals_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_GOAPActions_RowHandle(struct FGOAPActionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_GOAPActions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Generator_RowHandle(struct FGeneratorRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Generator_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Fuel_RowHandle(struct FFuelRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Fuel_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FoodTypes_RowHandle(struct FFoodTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FoodTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Focusable_RowHandle(struct FFocusableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Focusable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FLODDescriptions_RowHandle(struct FFLODDescriptionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FLODDescriptions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Floatable_RowHandle(struct FFloatableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Floatable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Flammable_RowHandle(struct FFlammableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Flammable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FishSetup_RowHandle(struct FFishSetupRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FishSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FirearmData_RowHandle(struct FFirearmDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FirearmData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FirearmAudioData_RowHandle(struct FFirearmAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FirearmAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Fillable_RowHandle(struct FFillableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Fillable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FetchQuests_RowHandle(struct FFetchQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FetchQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FeatureLevels_RowHandle(struct FFeatureLevelsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FeatureLevels_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FarmingSeeds_RowHandle(struct FFarmingSeedsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FarmingSeeds_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FarmingGrowthStates_RowHandle(struct FFarmingGrowthStatesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FarmingGrowthStates_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Farmable_RowHandle(struct FFarmableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Farmable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_FactionMissions_RowHandle(struct FFactionMissionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_FactionMissions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ExperienceEvents_RowHandle(struct FExperienceEventsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ExperienceEvents_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Experience_RowHandle(struct FExperienceRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Experience_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ErrorCodes_RowHandle(struct FErrorCodesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ErrorCodes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Equippable_RowHandle(struct FEquippableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Equippable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Energy_RowHandle(struct FEnergyRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Energy_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Durable_RowHandle(struct FDurableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Durable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DropShipSequences_RowHandle(struct FDropShipSequencesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DropShipSequences_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DropShipActions_RowHandle(struct FDropShipActionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DropShipActions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DLCPackageData_RowHandle(struct FDLCPackageDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DLCPackageData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DeployQuests_RowHandle(struct FDeployQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DeployQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DeployableTypes_RowHandle(struct FDeployableTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DeployableTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Deployable_RowHandle(struct FDeployableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Deployable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DefendQuests_RowHandle(struct FDefendQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_DefendQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Decayable_RowHandle(struct FDecayableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Decayable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_DataTable(struct UIcarusDataTable* DataTable); // Function Icarus.DataTableValidationLibrary.Validate_DataTable // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CustomQuests_RowHandle(struct FCustomQuestsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CustomQuests_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CriticalHitSetup_RowHandle(struct FCriticalHitSetupRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CriticalHitSetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CreatureAudioThreatData_RowHandle(struct FCreatureAudioThreatDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CreatureAudioThreatData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CraftingModifications_RowHandle(struct FCraftingModificationsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CraftingModifications_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CraftingAudioData_RowHandle(struct FCraftingAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CraftingAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ContextMenuGroupTypes_RowHandle(struct FContextMenuGroupTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ContextMenuGroupTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Consumable_RowHandle(struct FConsumableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Consumable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Combustible_RowHandle(struct FCombustibleRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Combustible_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterVoices_RowHandle(struct FCharacterVoicesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterVoices_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterTimeline_RowHandle(struct FCharacterTimelineRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterTimeline_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterStartingStats_RowHandle(struct FCharacterStartingStatsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterStartingStats_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterPerks_RowHandle(struct FCharacterPerksRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterPerks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterGrowth_RowHandle(struct FCharacterGrowthRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterGrowth_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterFlags_RowHandle(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterFlags_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_CharacterCreationData_RowHandle(struct FCharacterCreationDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_CharacterCreationData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Challenges_RowHandle(struct FChallengesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Challenges_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_BuildableAudioData_RowHandle(struct FBuildableAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BuildableAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Buildable_RowHandle(struct FBuildableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Buildable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_BlueprintUnlocks_RowHandle(struct FBlueprintUnlocksRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_BlueprintUnlocks_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Biomes_RowHandle(struct FBiomesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Biomes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Ballistic_RowHandle(struct FBallisticRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Ballistic_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AssetReferences_RowHandle(struct FAssetReferencesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AssetReferences_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ArmourSets_RowHandle(struct FArmourSetsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ArmourSets_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_ArmourSetBonus_RowHandle(struct FArmourSetBonusRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_ArmourSetBonus_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Armour_RowHandle(struct FArmourRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Armour_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AmmoTypes_RowHandle(struct FAmmoTypesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AmmoTypes_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AISpawnRules_RowHandle(struct FAISpawnRulesRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISpawnRules_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AISpawnConfig_RowHandle(struct FAISpawnConfigRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISpawnConfig_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AISetup_RowHandle(struct FAISetupRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AISetup_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AIRelationships_RowHandle(struct FAIRelationshipsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIRelationships_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AIGrowth_RowHandle(struct FAIGrowthRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIGrowth_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AIDescriptors_RowHandle(struct FAIDescriptorsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIDescriptors_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AICreatureType_RowHandle(struct FAICreatureTypeRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AICreatureType_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AIAudioData_RowHandle(struct FAIAudioDataRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AIAudioData_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_AfflictionChance_RowHandle(struct FAfflictionChanceRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_AfflictionChance_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Actions_RowHandle(struct FActionsRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Actions_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Validate_Actionable_RowHandle(struct FActionableRowHandle RowHandle); // Function Icarus.DataTableValidationLibrary.Validate_Actionable_RowHandle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void Info(struct FString Message); // Function Icarus.DataTableValidationLibrary.Info // (Final|Native|Public|BlueprintCallable) // @ game+0x153fe50
	struct AActor* GetOrSpawnTempTestActor(struct UObject* ActorClass); // Function Icarus.DataTableValidationLibrary.GetOrSpawnTempTestActor // (Final|Native|Public|BlueprintCallable) // @ game+0x153fdb0
	void Fatal(struct FString Message); // Function Icarus.DataTableValidationLibrary.Fatal // (Final|Native|Public|BlueprintCallable) // @ game+0x153fd00
	void Error(struct FString Message); // Function Icarus.DataTableValidationLibrary.Error // (Final|Native|Public|BlueprintCallable) // @ game+0x153fc50
	void Detail(struct FString Message); // Function Icarus.DataTableValidationLibrary.Detail // (Final|Native|Public|BlueprintCallable) // @ game+0x153fba0
};

// Class Icarus.DecayableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UDecayableComponent : UTraitComponent {
	int32_t DecayTime; // 0xd0(0x04)
	int32_t SpoilTime; // 0xd4(0x04)
	float CurrentTime; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	bool GetDecayableData(struct FDecayableData OutData); // Function Icarus.DecayableComponent.GetDecayableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1543790
};

// Class Icarus.DecayableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDecayableLibrary : URowLibrary {

	struct FDecayableRowHandle StructToRowHandle(struct FDecayableEnum EnumValue); // Function Icarus.DecayableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1545970
	struct FName StructToName(struct FDecayableEnum EnumValue); // Function Icarus.DecayableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1545830
	int32_t StructToInt(struct FDecayableEnum EnumValue); // Function Icarus.DecayableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15456f0
	struct FDecayableEnum RowHandleToStruct(struct FDecayableRowHandle RowHandle); // Function Icarus.DecayableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1545020
	void RemoveRowFromDecayableTable(struct FName Name); // Function Icarus.DecayableLibrary.RemoveRowFromDecayableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1544f20
	void RefreshConstants(); // Function Icarus.DecayableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1544ee0
	int32_t NumRows(); // Function Icarus.DecayableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544e60
	bool NotEqual_EnumName(struct FDecayableEnum A, struct FName B); // Function Icarus.DecayableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544c80
	bool NotEqual_EnumEnum(struct FDecayableEnum A, struct FDecayableEnum B); // Function Icarus.DecayableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544aa0
	struct FDecayableEnum NameToStruct(struct FName NameValue); // Function Icarus.DecayableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544980
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DecayableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1544860
	struct FDecayableRowHandle MakeLiteralDecayable(struct FDecayableRowHandle RowHandle); // Function Icarus.DecayableLibrary.MakeLiteralDecayable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544630
	struct FDecayableRowHandle MakeDecayableFromIndex(int32_t Index); // Function Icarus.DecayableLibrary.MakeDecayableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15443f0
	struct FDecayableEnum MakeDecayableEnum(struct FDecayableEnum Enum); // Function Icarus.DecayableLibrary.MakeDecayableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544370
	struct FDecayableRowHandle MakeDecayable(struct FName RowName); // Function Icarus.DecayableLibrary.MakeDecayable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15442d0
	bool IsValidName(struct FName NameValue); // Function Icarus.DecayableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15441b0
	struct FDecayableEnum IntToStruct(int32_t IntValue); // Function Icarus.DecayableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544090
	struct FName IntToName(int32_t IntValue); // Function Icarus.DecayableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1543f70
	void GetDecayableStruct(struct FDecayableRowHandle RowHandle, struct FDecayableData Decayable, enum class EValid Paths); // Function Icarus.DecayableLibrary.GetDecayableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1543940
	bool EqualEqual_FDecayableRowHandleFDecayableRowHandle(struct FDecayableRowHandle RowHandleA, struct FDecayableRowHandle RowHandleB); // Function Icarus.DecayableLibrary.EqualEqual_FDecayableRowHandleFDecayableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1543510
	bool EqualEqual_EnumEnum(struct FDecayableEnum A, struct FDecayableEnum B); // Function Icarus.DecayableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1543330
	struct FDecayableRowHandle CastToDecayableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DecayableLibrary.CastToDecayableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1542f20
	void BreakDecayableEnum(struct FDecayableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DecayableLibrary.BreakDecayableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1542c60
	void AddRowToDecayableTable(struct FName Name, struct FDecayableData Data, struct FDecayableRowHandle NewRow); // Function Icarus.DecayableLibrary.AddRowToDecayableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15428e0
};

// Class Icarus.DecayableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDecayableTable : UIcarusDataTable {
};

// Class Icarus.DefendQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDefendQuestsLibrary : URowLibrary {

	struct FDefendQuestsRowHandle StructToRowHandle(struct FDefendQuestsEnum EnumValue); // Function Icarus.DefendQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1545a20
	struct FName StructToName(struct FDefendQuestsEnum EnumValue); // Function Icarus.DefendQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15458d0
	int32_t StructToInt(struct FDefendQuestsEnum EnumValue); // Function Icarus.DefendQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1545790
	struct FDefendQuestsEnum RowHandleToStruct(struct FDefendQuestsRowHandle RowHandle); // Function Icarus.DefendQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15450e0
	void RemoveRowFromDefendQuestsTable(struct FName Name); // Function Icarus.DefendQuestsLibrary.RemoveRowFromDefendQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1544fa0
	void RefreshConstants(); // Function Icarus.DefendQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1544f00
	int32_t NumRows(); // Function Icarus.DefendQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544e90
	bool NotEqual_EnumName(struct FDefendQuestsEnum A, struct FName B); // Function Icarus.DefendQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544d70
	bool NotEqual_EnumEnum(struct FDefendQuestsEnum A, struct FDefendQuestsEnum B); // Function Icarus.DefendQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544b90
	struct FDefendQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.DefendQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544a10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DefendQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15448f0
	struct FDefendQuestsRowHandle MakeLiteralDefendQuests(struct FDefendQuestsRowHandle RowHandle); // Function Icarus.DefendQuestsLibrary.MakeLiteralDefendQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544700
	struct FDefendQuestsRowHandle MakeDefendQuestsFromIndex(int32_t Index); // Function Icarus.DefendQuestsLibrary.MakeDefendQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15445a0
	struct FDefendQuestsEnum MakeDefendQuestsEnum(struct FDefendQuestsEnum Enum); // Function Icarus.DefendQuestsLibrary.MakeDefendQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544520
	struct FDefendQuestsRowHandle MakeDefendQuests(struct FName RowName); // Function Icarus.DefendQuestsLibrary.MakeDefendQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544480
	bool IsValidName(struct FName NameValue); // Function Icarus.DefendQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1544240
	struct FDefendQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.DefendQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1544120
	struct FName IntToName(int32_t IntValue); // Function Icarus.DefendQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1544000
	void GetDefendQuestsStruct(struct FDefendQuestsRowHandle RowHandle, struct FDefendQuest DefendQuests, enum class EValid Paths); // Function Icarus.DefendQuestsLibrary.GetDefendQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1543ae0
	bool EqualEqual_FDefendQuestsRowHandleFDefendQuestsRowHandle(struct FDefendQuestsRowHandle RowHandleA, struct FDefendQuestsRowHandle RowHandleB); // Function Icarus.DefendQuestsLibrary.EqualEqual_FDefendQuestsRowHandleFDefendQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1543650
	bool EqualEqual_EnumEnum(struct FDefendQuestsEnum A, struct FDefendQuestsEnum B); // Function Icarus.DefendQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1543420
	struct FDefendQuestsRowHandle CastToDefendQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DefendQuestsLibrary.CastToDefendQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1543040
	void BreakDefendQuestsEnum(struct FDefendQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DefendQuestsLibrary.BreakDefendQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1542dc0
	void AddRowToDefendQuestsTable(struct FName Name, struct FDefendQuest Data, struct FDefendQuestsRowHandle NewRow); // Function Icarus.DefendQuestsLibrary.AddRowToDefendQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1542ae0
};

// Class Icarus.DefendQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDefendQuestsTable : UIcarusDataTable {
};

// Class Icarus.DeleteStorageCallbackProxy
// Size: 0x80 (Inherited: 0x30)
struct UDeleteStorageCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFail; // 0x40(0x10)
	char pad_50[0x30]; // 0x50(0x30)

	struct UDeleteStorageCallbackProxy* DeleteStorage(struct FString KeyName, bool bShouldCloudDelete, bool bShouldLocallyDelete); // Function Icarus.DeleteStorageCallbackProxy.DeleteStorage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15431f0
};

// Class Icarus.Deployable
// Size: 0x3e0 (Inherited: 0x3c0)
struct ADeployable : AIcarusItem {
	struct AActor* FoundationActor; // 0x3c0(0x08)
	struct TArray<struct AResourceNetwork*> LinkedNetworks; // 0x3c8(0x10)
	struct UResourceComponent* ResourceComponent; // 0x3d8(0x08)

	void OnServer_DisconnectFromNetworks(); // Function Icarus.Deployable.OnServer_DisconnectFromNetworks // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1544ec0
	void OnRestoreFoundationFromDatabase(struct AIcarusActor* FoundationFromDatabase); // Function Icarus.Deployable.OnRestoreFoundationFromDatabase // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	bool HasAccessToResourceNetwork(enum class EIcarusResourceType Type, int32_t Rate, bool bActivate); // Function Icarus.Deployable.HasAccessToResourceNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x1543e60
	struct UInventoryComponent* GetSlotInventory(enum class EObjectSlotType InventoryType); // Function Icarus.Deployable.GetSlotInventory // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1543dd0
	void Deployable_StopInteract(struct AActor* Interactor); // Function Icarus.Deployable.Deployable_StopInteract // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void Deployable_Interact(struct AActor* Interactor); // Function Icarus.Deployable.Deployable_Interact // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	bool DeactivateResourceNetwork(enum class EIcarusResourceType Type); // Function Icarus.Deployable.DeactivateResourceNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x1543160
	bool ActorCanConnectToNetwork(enum class EIcarusResourceType Type); // Function Icarus.Deployable.ActorCanConnectToNetwork // (Native|Event|Public|BlueprintEvent) // @ game+0x14ce3e0
};

// Class Icarus.DeployableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UDeployableComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnDeployed; // 0xd0(0x01)
	enum class EIcarusItemContext SpawnContext; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
	struct UNavModifierComponent* NavModifierComponent; // 0xd8(0x08)

	void Server_RequestDeploy(struct FTransform DeployTransform, struct AActor* FoundationActor, struct FItemData ItemData); // Function Icarus.DeployableComponent.Server_RequestDeploy // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x15451a0
	void Multicast_DeploySuccess(struct ADeployable* SpawnedDeployable); // Function Icarus.DeployableComponent.Multicast_DeploySuccess // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x15447d0
	bool GetDeployableData(struct FDeployableData OutData); // Function Icarus.DeployableComponent.GetDeployableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1543c60
};

// Class Icarus.DeployableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDeployableLibrary : URowLibrary {

	struct FDeployableRowHandle StructToRowHandle(struct FDeployableEnum EnumValue); // Function Icarus.DeployableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b330
	struct FName StructToName(struct FDeployableEnum EnumValue); // Function Icarus.DeployableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b140
	int32_t StructToInt(struct FDeployableEnum EnumValue); // Function Icarus.DeployableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154af60
	struct FDeployableEnum RowHandleToStruct(struct FDeployableRowHandle RowHandle); // Function Icarus.DeployableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154ad40
	void RemoveRowFromDeployableTable(struct FName Name); // Function Icarus.DeployableLibrary.RemoveRowFromDeployableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154ab80
	void RefreshConstants(); // Function Icarus.DeployableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x154aac0
	int32_t NumRows(); // Function Icarus.DeployableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154aa40
	bool NotEqual_EnumName(struct FDeployableEnum A, struct FName B); // Function Icarus.DeployableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a830
	bool NotEqual_EnumEnum(struct FDeployableEnum A, struct FDeployableEnum B); // Function Icarus.DeployableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a560
	struct FDeployableEnum NameToStruct(struct FName NameValue); // Function Icarus.DeployableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a350
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DeployableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x154a1a0
	struct FDeployableRowHandle MakeLiteralDeployable(struct FDeployableRowHandle RowHandle); // Function Icarus.DeployableLibrary.MakeLiteralDeployable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549f70
	struct FDeployableRowHandle MakeDeployableFromIndex(int32_t Index); // Function Icarus.DeployableLibrary.MakeDeployableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549c60
	struct FDeployableEnum MakeDeployableEnum(struct FDeployableEnum Enum); // Function Icarus.DeployableLibrary.MakeDeployableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549be0
	struct FDeployableRowHandle MakeDeployable(struct FName RowName); // Function Icarus.DeployableLibrary.MakeDeployable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549b40
	bool IsValidName(struct FName NameValue); // Function Icarus.DeployableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1549870
	struct FDeployableEnum IntToStruct(int32_t IntValue); // Function Icarus.DeployableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15496c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.DeployableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1549510
	void GetDeployableStruct(struct FDeployableRowHandle RowHandle, struct FDeployableData Deployable, enum class EValid Paths); // Function Icarus.DeployableLibrary.GetDeployableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1549150
	bool EqualEqual_FDeployableRowHandleFDeployableRowHandle(struct FDeployableRowHandle RowHandleA, struct FDeployableRowHandle RowHandleB); // Function Icarus.DeployableLibrary.EqualEqual_FDeployableRowHandleFDeployableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548d50
	bool EqualEqual_EnumEnum(struct FDeployableEnum A, struct FDeployableEnum B); // Function Icarus.DeployableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548a30
	struct FDeployableRowHandle CastToDeployableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DeployableLibrary.CastToDeployableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1548700
	void BreakDeployableEnum(struct FDeployableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DeployableLibrary.BreakDeployableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1548240
	void AddRowToDeployableTable(struct FName Name, struct FDeployableData Data, struct FDeployableRowHandle NewRow); // Function Icarus.DeployableLibrary.AddRowToDeployableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1547d70
};

// Class Icarus.DeployableSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UDeployableSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnDeployNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnGeneratorActivatedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnGeneratorDeactivatedNotify; // 0x50(0x10)

	void BroadcastGeneratorDeactivatedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastGeneratorDeactivatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1548500
	void BroadcastGeneratorActivatedDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastGeneratorActivatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512f30
	void BroadcastDeployDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.DeployableSubsystem.BroadcastDeployDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512e50
};

// Class Icarus.DeployableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDeployableTable : UIcarusDataTable {
};

// Class Icarus.DeployableTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDeployableTypesLibrary : URowLibrary {

	struct FDeployableTypesRowHandle StructToRowHandle(struct FDeployableTypesEnum EnumValue); // Function Icarus.DeployableTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b3e0
	struct FName StructToName(struct FDeployableTypesEnum EnumValue); // Function Icarus.DeployableTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b1e0
	int32_t StructToInt(struct FDeployableTypesEnum EnumValue); // Function Icarus.DeployableTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b000
	struct FDeployableTypesEnum RowHandleToStruct(struct FDeployableTypesRowHandle RowHandle); // Function Icarus.DeployableTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154ae00
	void RemoveRowFromDeployableTypesTable(struct FName Name); // Function Icarus.DeployableTypesLibrary.RemoveRowFromDeployableTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154ac00
	void RefreshConstants(); // Function Icarus.DeployableTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x154aae0
	int32_t NumRows(); // Function Icarus.DeployableTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154aa70
	bool NotEqual_EnumName(struct FDeployableTypesEnum A, struct FName B); // Function Icarus.DeployableTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a920
	bool NotEqual_EnumEnum(struct FDeployableTypesEnum A, struct FDeployableTypesEnum B); // Function Icarus.DeployableTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a650
	struct FDeployableTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.DeployableTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a3e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DeployableTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x154a230
	struct FDeployableTypesRowHandle MakeLiteralDeployableTypes(struct FDeployableTypesRowHandle RowHandle); // Function Icarus.DeployableTypesLibrary.MakeLiteralDeployableTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a040
	struct FDeployableTypesRowHandle MakeDeployableTypesFromIndex(int32_t Index); // Function Icarus.DeployableTypesLibrary.MakeDeployableTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549e10
	struct FDeployableTypesEnum MakeDeployableTypesEnum(struct FDeployableTypesEnum Enum); // Function Icarus.DeployableTypesLibrary.MakeDeployableTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549d90
	struct FDeployableTypesRowHandle MakeDeployableTypes(struct FName RowName); // Function Icarus.DeployableTypesLibrary.MakeDeployableTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549cf0
	bool IsValidName(struct FName NameValue); // Function Icarus.DeployableTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1549900
	struct FDeployableTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.DeployableTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549750
	struct FName IntToName(int32_t IntValue); // Function Icarus.DeployableTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15495a0
	void GetDeployableTypesStruct(struct FDeployableTypesRowHandle RowHandle, struct FIcarusDeployableType DeployableTypes, enum class EValid Paths); // Function Icarus.DeployableTypesLibrary.GetDeployableTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15492f0
	bool EqualEqual_FDeployableTypesRowHandleFDeployableTypesRowHandle(struct FDeployableTypesRowHandle RowHandleA, struct FDeployableTypesRowHandle RowHandleB); // Function Icarus.DeployableTypesLibrary.EqualEqual_FDeployableTypesRowHandleFDeployableTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548e90
	bool EqualEqual_EnumEnum(struct FDeployableTypesEnum A, struct FDeployableTypesEnum B); // Function Icarus.DeployableTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548b20
	struct FDeployableTypesRowHandle CastToDeployableTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DeployableTypesLibrary.CastToDeployableTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1548820
	void BreakDeployableTypesEnum(struct FDeployableTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DeployableTypesLibrary.BreakDeployableTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15483a0
	void AddRowToDeployableTypesTable(struct FName Name, struct FIcarusDeployableType Data, struct FDeployableTypesRowHandle NewRow); // Function Icarus.DeployableTypesLibrary.AddRowToDeployableTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1547f00
};

// Class Icarus.DeployableTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDeployableTypesTable : UIcarusDataTable {
};

// Class Icarus.DeployQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDeployQuestsLibrary : URowLibrary {

	struct FDeployQuestsRowHandle StructToRowHandle(struct FDeployQuestsEnum EnumValue); // Function Icarus.DeployQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b280
	struct FName StructToName(struct FDeployQuestsEnum EnumValue); // Function Icarus.DeployQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154b0a0
	int32_t StructToInt(struct FDeployQuestsEnum EnumValue); // Function Icarus.DeployQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154aec0
	struct FDeployQuestsEnum RowHandleToStruct(struct FDeployQuestsRowHandle RowHandle); // Function Icarus.DeployQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154ac80
	void RemoveRowFromDeployQuestsTable(struct FName Name); // Function Icarus.DeployQuestsLibrary.RemoveRowFromDeployQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154ab00
	void RefreshConstants(); // Function Icarus.DeployQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x154aaa0
	int32_t NumRows(); // Function Icarus.DeployQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154aa10
	bool NotEqual_EnumName(struct FDeployQuestsEnum A, struct FName B); // Function Icarus.DeployQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a740
	bool NotEqual_EnumEnum(struct FDeployQuestsEnum A, struct FDeployQuestsEnum B); // Function Icarus.DeployQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a470
	struct FDeployQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.DeployQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154a2c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DeployQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x154a110
	struct FDeployQuestsRowHandle MakeLiteralDeployQuests(struct FDeployQuestsRowHandle RowHandle); // Function Icarus.DeployQuestsLibrary.MakeLiteralDeployQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549ea0
	struct FDeployQuestsRowHandle MakeDeployQuestsFromIndex(int32_t Index); // Function Icarus.DeployQuestsLibrary.MakeDeployQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549ab0
	struct FDeployQuestsEnum MakeDeployQuestsEnum(struct FDeployQuestsEnum Enum); // Function Icarus.DeployQuestsLibrary.MakeDeployQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549a30
	struct FDeployQuestsRowHandle MakeDeployQuests(struct FName RowName); // Function Icarus.DeployQuestsLibrary.MakeDeployQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549990
	bool IsValidName(struct FName NameValue); // Function Icarus.DeployQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15497e0
	struct FDeployQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.DeployQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549630
	struct FName IntToName(int32_t IntValue); // Function Icarus.DeployQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1549480
	void GetDeployQuestsStruct(struct FDeployQuestsRowHandle RowHandle, struct FDeployQuest DeployQuests, enum class EValid Paths); // Function Icarus.DeployQuestsLibrary.GetDeployQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1548fd0
	bool EqualEqual_FDeployQuestsRowHandleFDeployQuestsRowHandle(struct FDeployQuestsRowHandle RowHandleA, struct FDeployQuestsRowHandle RowHandleB); // Function Icarus.DeployQuestsLibrary.EqualEqual_FDeployQuestsRowHandleFDeployQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548c10
	bool EqualEqual_EnumEnum(struct FDeployQuestsEnum A, struct FDeployQuestsEnum B); // Function Icarus.DeployQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548940
	struct FDeployQuestsRowHandle CastToDeployQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DeployQuestsLibrary.CastToDeployQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15485e0
	void BreakDeployQuestsEnum(struct FDeployQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DeployQuestsLibrary.BreakDeployQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15480e0
	void AddRowToDeployQuestsTable(struct FName Name, struct FDeployQuest Data, struct FDeployQuestsRowHandle NewRow); // Function Icarus.DeployQuestsLibrary.AddRowToDeployQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1547bd0
};

// Class Icarus.DeployQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDeployQuestsTable : UIcarusDataTable {
};

// Class Icarus.DisasterController
// Size: 0x230 (Inherited: 0x220)
struct ADisasterController : AInfo {
	struct UFireControllerComponent* FireController; // 0x220(0x08)
	struct UIcarusStatContainer* StatContainer; // 0x228(0x08)

	void SetWorldStats(); // Function Icarus.DisasterController.SetWorldStats // (Final|Native|Protected) // @ game+0x1550bf0
};

// Class Icarus.DistanceControlledAudioEmitter
// Size: 0x240 (Inherited: 0x200)
struct UDistanceControlledAudioEmitter : USceneComponent {
	struct TSoftObjectPtr<UFMODEvent> Event; // 0x1f8(0x28)
	struct UFMODAudioComponent* AudioComponent; // 0x220(0x08)
	char pad_230[0x10]; // 0x230(0x10)
};

// Class Icarus.DLCPackageDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDLCPackageDataLibrary : URowLibrary {

	struct FDLCPackageDataRowHandle StructToRowHandle(struct FDLCPackageDataEnum EnumValue); // Function Icarus.DLCPackageDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550fd0
	struct FName StructToName(struct FDLCPackageDataEnum EnumValue); // Function Icarus.DLCPackageDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550df0
	int32_t StructToInt(struct FDLCPackageDataEnum EnumValue); // Function Icarus.DLCPackageDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550c10
	struct FDLCPackageDataEnum RowHandleToStruct(struct FDLCPackageDataRowHandle RowHandle); // Function Icarus.DLCPackageDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15509b0
	void RemoveRowFromDLCPackageDataTable(struct FName Name); // Function Icarus.DLCPackageDataLibrary.RemoveRowFromDLCPackageDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1550830
	void RefreshConstants(); // Function Icarus.DLCPackageDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15507d0
	int32_t NumRows(); // Function Icarus.DLCPackageDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550740
	bool NotEqual_EnumName(struct FDLCPackageDataEnum A, struct FName B); // Function Icarus.DLCPackageDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550470
	bool NotEqual_EnumEnum(struct FDLCPackageDataEnum A, struct FDLCPackageDataEnum B); // Function Icarus.DLCPackageDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15501a0
	struct FDLCPackageDataEnum NameToStruct(struct FName NameValue); // Function Icarus.DLCPackageDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fff0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DLCPackageDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x154fe40
	struct FDLCPackageDataRowHandle MakeLiteralDLCPackageData(struct FDLCPackageDataRowHandle RowHandle); // Function Icarus.DLCPackageDataLibrary.MakeLiteralDLCPackageData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fbd0
	struct FDLCPackageDataRowHandle MakeDLCPackageDataFromIndex(int32_t Index); // Function Icarus.DLCPackageDataLibrary.MakeDLCPackageDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f7e0
	struct FDLCPackageDataEnum MakeDLCPackageDataEnum(struct FDLCPackageDataEnum Enum); // Function Icarus.DLCPackageDataLibrary.MakeDLCPackageDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f760
	struct FDLCPackageDataRowHandle MakeDLCPackageData(struct FName RowName); // Function Icarus.DLCPackageDataLibrary.MakeDLCPackageData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f6c0
	bool IsValidName(struct FName NameValue); // Function Icarus.DLCPackageDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x154f510
	struct FDLCPackageDataEnum IntToStruct(int32_t IntValue); // Function Icarus.DLCPackageDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f360
	struct FName IntToName(int32_t IntValue); // Function Icarus.DLCPackageDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x154f1b0
	void GetDLCPackageDataStruct(struct FDLCPackageDataRowHandle RowHandle, struct FDLCPackageData DLCPackageData, enum class EValid Paths); // Function Icarus.DLCPackageDataLibrary.GetDLCPackageDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154ece0
	bool EqualEqual_FDLCPackageDataRowHandleFDLCPackageDataRowHandle(struct FDLCPackageDataRowHandle RowHandleA, struct FDLCPackageDataRowHandle RowHandleB); // Function Icarus.DLCPackageDataLibrary.EqualEqual_FDLCPackageDataRowHandleFDLCPackageDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154e920
	bool EqualEqual_EnumEnum(struct FDLCPackageDataEnum A, struct FDLCPackageDataEnum B); // Function Icarus.DLCPackageDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154e650
	struct FDLCPackageDataRowHandle CastToDLCPackageDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DLCPackageDataLibrary.CastToDLCPackageDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154e2f0
	void BreakDLCPackageDataEnum(struct FDLCPackageDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DLCPackageDataLibrary.BreakDLCPackageDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x154ded0
	void AddRowToDLCPackageDataTable(struct FName Name, struct FDLCPackageData Data, struct FDLCPackageDataRowHandle NewRow); // Function Icarus.DLCPackageDataLibrary.AddRowToDLCPackageDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154d870
};

// Class Icarus.DLCPackageDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDLCPackageDataTable : UIcarusDataTable {
};

// Class Icarus.DropShipActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDropShipActionsLibrary : URowLibrary {

	struct FDropShipActionsRowHandle StructToRowHandle(struct FDropShipActionsEnum EnumValue); // Function Icarus.DropShipActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1551080
	struct FName StructToName(struct FDropShipActionsEnum EnumValue); // Function Icarus.DropShipActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550e90
	int32_t StructToInt(struct FDropShipActionsEnum EnumValue); // Function Icarus.DropShipActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550cb0
	struct FDropShipActionsEnum RowHandleToStruct(struct FDropShipActionsRowHandle RowHandle); // Function Icarus.DropShipActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550a70
	void RemoveRowFromDropShipActionsTable(struct FName Name); // Function Icarus.DropShipActionsLibrary.RemoveRowFromDropShipActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15508b0
	void RefreshConstants(); // Function Icarus.DropShipActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15507f0
	int32_t NumRows(); // Function Icarus.DropShipActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550770
	bool NotEqual_EnumName(struct FDropShipActionsEnum A, struct FName B); // Function Icarus.DropShipActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550560
	bool NotEqual_EnumEnum(struct FDropShipActionsEnum A, struct FDropShipActionsEnum B); // Function Icarus.DropShipActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550290
	struct FDropShipActionsEnum NameToStruct(struct FName NameValue); // Function Icarus.DropShipActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550080
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DropShipActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x154fed0
	struct FDropShipActionsRowHandle MakeLiteralDropShipActions(struct FDropShipActionsRowHandle RowHandle); // Function Icarus.DropShipActionsLibrary.MakeLiteralDropShipActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fca0
	struct FDropShipActionsRowHandle MakeDropShipActionsFromIndex(int32_t Index); // Function Icarus.DropShipActionsLibrary.MakeDropShipActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f990
	struct FDropShipActionsEnum MakeDropShipActionsEnum(struct FDropShipActionsEnum Enum); // Function Icarus.DropShipActionsLibrary.MakeDropShipActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f910
	struct FDropShipActionsRowHandle MakeDropShipActions(struct FName RowName); // Function Icarus.DropShipActionsLibrary.MakeDropShipActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f870
	bool IsValidName(struct FName NameValue); // Function Icarus.DropShipActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x154f5a0
	struct FDropShipActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.DropShipActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f3f0
	struct FName IntToName(int32_t IntValue); // Function Icarus.DropShipActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x154f240
	void GetDropShipActionsStruct(struct FDropShipActionsRowHandle RowHandle, struct FDropShipAction DropShipActions, enum class EValid Paths); // Function Icarus.DropShipActionsLibrary.GetDropShipActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154ee70
	bool EqualEqual_FDropShipActionsRowHandleFDropShipActionsRowHandle(struct FDropShipActionsRowHandle RowHandleA, struct FDropShipActionsRowHandle RowHandleB); // Function Icarus.DropShipActionsLibrary.EqualEqual_FDropShipActionsRowHandleFDropShipActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154ea60
	bool EqualEqual_EnumEnum(struct FDropShipActionsEnum A, struct FDropShipActionsEnum B); // Function Icarus.DropShipActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154e740
	struct FDropShipActionsRowHandle CastToDropShipActionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DropShipActionsLibrary.CastToDropShipActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154e410
	void BreakDropShipActionsEnum(struct FDropShipActionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DropShipActionsLibrary.BreakDropShipActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x154e030
	void AddRowToDropShipActionsTable(struct FName Name, struct FDropShipAction Data, struct FDropShipActionsRowHandle NewRow); // Function Icarus.DropShipActionsLibrary.AddRowToDropShipActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154da30
};

// Class Icarus.DropShipActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDropShipActionsTable : UIcarusDataTable {
};

// Class Icarus.DropShipSequencesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDropShipSequencesLibrary : URowLibrary {

	struct FDropShipSequencesRowHandle StructToRowHandle(struct FDropShipSequencesEnum EnumValue); // Function Icarus.DropShipSequencesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1551130
	struct FName StructToName(struct FDropShipSequencesEnum EnumValue); // Function Icarus.DropShipSequencesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550f30
	int32_t StructToInt(struct FDropShipSequencesEnum EnumValue); // Function Icarus.DropShipSequencesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550d50
	struct FDropShipSequencesEnum RowHandleToStruct(struct FDropShipSequencesRowHandle RowHandle); // Function Icarus.DropShipSequencesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550b30
	void RemoveRowFromDropShipSequencesTable(struct FName Name); // Function Icarus.DropShipSequencesLibrary.RemoveRowFromDropShipSequencesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1550930
	void RefreshConstants(); // Function Icarus.DropShipSequencesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1550810
	int32_t NumRows(); // Function Icarus.DropShipSequencesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15507a0
	bool NotEqual_EnumName(struct FDropShipSequencesEnum A, struct FName B); // Function Icarus.DropShipSequencesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550650
	bool NotEqual_EnumEnum(struct FDropShipSequencesEnum A, struct FDropShipSequencesEnum B); // Function Icarus.DropShipSequencesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550380
	struct FDropShipSequencesEnum NameToStruct(struct FName NameValue); // Function Icarus.DropShipSequencesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1550110
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DropShipSequencesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x154ff60
	struct FDropShipSequencesRowHandle MakeLiteralDropShipSequences(struct FDropShipSequencesRowHandle RowHandle); // Function Icarus.DropShipSequencesLibrary.MakeLiteralDropShipSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fd70
	struct FDropShipSequencesRowHandle MakeDropShipSequencesFromIndex(int32_t Index); // Function Icarus.DropShipSequencesLibrary.MakeDropShipSequencesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fb40
	struct FDropShipSequencesEnum MakeDropShipSequencesEnum(struct FDropShipSequencesEnum Enum); // Function Icarus.DropShipSequencesLibrary.MakeDropShipSequencesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fac0
	struct FDropShipSequencesRowHandle MakeDropShipSequences(struct FName RowName); // Function Icarus.DropShipSequencesLibrary.MakeDropShipSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154fa20
	bool IsValidName(struct FName NameValue); // Function Icarus.DropShipSequencesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x154f630
	struct FDropShipSequencesEnum IntToStruct(int32_t IntValue); // Function Icarus.DropShipSequencesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154f480
	struct FName IntToName(int32_t IntValue); // Function Icarus.DropShipSequencesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x154f2d0
	void GetDropShipSequencesStruct(struct FDropShipSequencesRowHandle RowHandle, struct FDropShipSequence DropShipSequences, enum class EValid Paths); // Function Icarus.DropShipSequencesLibrary.GetDropShipSequencesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154eff0
	bool EqualEqual_FDropShipSequencesRowHandleFDropShipSequencesRowHandle(struct FDropShipSequencesRowHandle RowHandleA, struct FDropShipSequencesRowHandle RowHandleB); // Function Icarus.DropShipSequencesLibrary.EqualEqual_FDropShipSequencesRowHandleFDropShipSequencesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154eba0
	bool EqualEqual_EnumEnum(struct FDropShipSequencesEnum A, struct FDropShipSequencesEnum B); // Function Icarus.DropShipSequencesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x154e830
	struct FDropShipSequencesRowHandle CastToDropShipSequencesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DropShipSequencesLibrary.CastToDropShipSequencesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154e530
	void BreakDropShipSequencesEnum(struct FDropShipSequencesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DropShipSequencesLibrary.BreakDropShipSequencesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x154e190
	void AddRowToDropShipSequencesTable(struct FName Name, struct FDropShipSequence Data, struct FDropShipSequencesRowHandle NewRow); // Function Icarus.DropShipSequencesLibrary.AddRowToDropShipSequencesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x154dbe0
};

// Class Icarus.DropShipSequencesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDropShipSequencesTable : UIcarusDataTable {
};

// Class Icarus.DropShipSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UDropShipSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnDropShipInteractNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnDropShipEnterNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnDropShipExitNotify; // 0x50(0x10)

	void BroadcastDropShipInteractDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.DropShipSubsystem.BroadcastDropShipInteractDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512e50
	void BroadcastDropShipExitDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.DropShipSubsystem.BroadcastDropShipExitDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1548500
	void BroadcastDropShipEnterDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.DropShipSubsystem.BroadcastDropShipEnterDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512f30
};

// Class Icarus.DurableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UDurableComponent : UTraitComponent {
	int32_t Durability; // 0xd0(0x04)
	struct FMulticastSparseDelegate OnActorBroken; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)

	void SetDurability(int32_t NewDurability); // Function Icarus.DurableComponent.SetDurability // (Final|Native|Public|BlueprintCallable) // @ game+0x1556520
	void OnHealthUpdated(struct UActorState* ActorState, float NewHealth); // Function Icarus.DurableComponent.OnHealthUpdated // (Final|Native|Public) // @ game+0x1556190
	void InitialiseComponent(int32_t DurabilityValue); // Function Icarus.DurableComponent.InitialiseComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1555240
	bool GetDurableData(struct FDurableData OutData); // Function Icarus.DurableComponent.GetDurableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15548f0
};

// Class Icarus.DurableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDurableLibrary : URowLibrary {

	struct FDurableRowHandle StructToRowHandle(struct FDurableEnum EnumValue); // Function Icarus.DurableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556830
	struct FName StructToName(struct FDurableEnum EnumValue); // Function Icarus.DurableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15566f0
	int32_t StructToInt(struct FDurableEnum EnumValue); // Function Icarus.DurableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15565b0
	struct FDurableEnum RowHandleToStruct(struct FDurableRowHandle RowHandle); // Function Icarus.DurableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15563a0
	void RemoveRowFromDurableTable(struct FName Name); // Function Icarus.DurableLibrary.RemoveRowFromDurableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15562a0
	void RefreshConstants(); // Function Icarus.DurableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1556260
	int32_t NumRows(); // Function Icarus.DurableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556130
	bool NotEqual_EnumName(struct FDurableEnum A, struct FName B); // Function Icarus.DurableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555f50
	bool NotEqual_EnumEnum(struct FDurableEnum A, struct FDurableEnum B); // Function Icarus.DurableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555d70
	struct FDurableEnum NameToStruct(struct FName NameValue); // Function Icarus.DurableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555c50
	int32_t NameToInt(struct FName NameValue); // Function Icarus.DurableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1555b30
	struct FDurableRowHandle MakeLiteralDurable(struct FDurableRowHandle RowHandle); // Function Icarus.DurableLibrary.MakeLiteralDurable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555990
	struct FDurableRowHandle MakeDurableFromIndex(int32_t Index); // Function Icarus.DurableLibrary.MakeDurableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555750
	struct FDurableEnum MakeDurableEnum(struct FDurableEnum Enum); // Function Icarus.DurableLibrary.MakeDurableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15556d0
	struct FDurableRowHandle MakeDurable(struct FName RowName); // Function Icarus.DurableLibrary.MakeDurable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555630
	bool IsValidName(struct FName NameValue); // Function Icarus.DurableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1555510
	struct FDurableEnum IntToStruct(int32_t IntValue); // Function Icarus.DurableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15553f0
	struct FName IntToName(int32_t IntValue); // Function Icarus.DurableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15552d0
	void GetDurableStruct(struct FDurableRowHandle RowHandle, struct FDurableData Durable, enum class EValid Paths); // Function Icarus.DurableLibrary.GetDurableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1554b50
	bool EqualEqual_FDurableRowHandleFDurableRowHandle(struct FDurableRowHandle RowHandleA, struct FDurableRowHandle RowHandleB); // Function Icarus.DurableLibrary.EqualEqual_FDurableRowHandleFDurableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554670
	bool EqualEqual_EnumEnum(struct FDurableEnum A, struct FDurableEnum B); // Function Icarus.DurableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554490
	struct FDurableRowHandle CastToDurableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.DurableLibrary.CastToDurableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1554250
	void BreakDurableEnum(struct FDurableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.DurableLibrary.BreakDurableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1553f90
	void AddRowToDurableTable(struct FName Name, struct FDurableData Data, struct FDurableRowHandle NewRow); // Function Icarus.DurableLibrary.AddRowToDurableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1553ab0
};

// Class Icarus.DurableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UDurableTable : UIcarusDataTable {
};

// Class Icarus.ResourceNetworkComponent
// Size: 0x100 (Inherited: 0xd0)
struct UResourceNetworkComponent : UTraitComponent {
	struct UInventory* AssociatedInputInventory; // 0xd0(0x08)
	struct UInventory* AssociatedOutputInventory; // 0xd8(0x08)
	struct AResourceNetwork* InputNetwork; // 0xe0(0x08)
	struct AResourceNetwork* OutputNetwork; // 0xe8(0x08)
	bool ResourceComponentActive; // 0xf0(0x01)
	char pad_F1[0x3]; // 0xf1(0x03)
	int32_t CurrentResourceFlow; // 0xf4(0x04)
	struct FMulticastSparseDelegate OnResourceDepleted; // 0xf8(0x01)
	struct FMulticastSparseDelegate OnResourceLeaking; // 0xf9(0x01)
	struct FMulticastSparseDelegate OnActiveStateUpdated; // 0xfa(0x01)
	char pad_FB[0x5]; // 0xfb(0x05)

	void ProcessNetworkComponent(float Delta); // Function Icarus.ResourceNetworkComponent.ProcessNetworkComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x169a080
	void OnRep_ResourceComponentActive(); // Function Icarus.ResourceNetworkComponent.OnRep_ResourceComponentActive // (Final|Native|Public|BlueprintCallable) // @ game+0x169a060
	void Initialise(struct UInventory* InputInventory, struct UInventory* OutputInventory); // Function Icarus.ResourceNetworkComponent.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x1699760
	bool GetResourceNetworkData(struct FResourceNetworkData OutData); // Function Icarus.ResourceNetworkComponent.GetResourceNetworkData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1699290
	enum class EIcarusResourceType GetResourceComponentType(); // Function Icarus.ResourceNetworkComponent.GetResourceComponentType // (Native|Public|BlueprintCallable) // @ game+0x1504a50
	bool DisconnectNetwork(struct AResourceNetwork* ResourceNetwork, bool Input); // Function Icarus.ResourceNetworkComponent.DisconnectNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x1698e00
	void DeactivateResourceComponent(); // Function Icarus.ResourceNetworkComponent.DeactivateResourceComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1698de0
	bool ConnectNetwork(struct AResourceNetwork* ResourceNetwork, bool Input); // Function Icarus.ResourceNetworkComponent.ConnectNetwork // (Final|Native|Public|BlueprintCallable) // @ game+0x1698c70
	bool CheckActivationOverdraw(); // Function Icarus.ResourceNetworkComponent.CheckActivationOverdraw // (Final|Native|Public|BlueprintCallable) // @ game+0x1698c40
	bool ActivateResourceComponent(); // Function Icarus.ResourceNetworkComponent.ActivateResourceComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1698790
};

// Class Icarus.EnergyComponent
// Size: 0x100 (Inherited: 0x100)
struct UEnergyComponent : UResourceNetworkComponent {

	bool GetEnergyData(struct FEnergyData OutData); // Function Icarus.EnergyComponent.GetEnergyData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1554db0
};

// Class Icarus.EnergyLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEnergyLibrary : URowLibrary {

	struct FEnergyRowHandle StructToRowHandle(struct FEnergyEnum EnumValue); // Function Icarus.EnergyLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15568e0
	struct FName StructToName(struct FEnergyEnum EnumValue); // Function Icarus.EnergyLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556790
	int32_t StructToInt(struct FEnergyEnum EnumValue); // Function Icarus.EnergyLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556650
	struct FEnergyEnum RowHandleToStruct(struct FEnergyRowHandle RowHandle); // Function Icarus.EnergyLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556460
	void RemoveRowFromEnergyTable(struct FName Name); // Function Icarus.EnergyLibrary.RemoveRowFromEnergyTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1556320
	void RefreshConstants(); // Function Icarus.EnergyLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1556280
	int32_t NumRows(); // Function Icarus.EnergyLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556160
	bool NotEqual_EnumName(struct FEnergyEnum A, struct FName B); // Function Icarus.EnergyLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1556040
	bool NotEqual_EnumEnum(struct FEnergyEnum A, struct FEnergyEnum B); // Function Icarus.EnergyLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555e60
	struct FEnergyEnum NameToStruct(struct FName NameValue); // Function Icarus.EnergyLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555ce0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.EnergyLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1555bc0
	struct FEnergyRowHandle MakeLiteralEnergy(struct FEnergyRowHandle RowHandle); // Function Icarus.EnergyLibrary.MakeLiteralEnergy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555a60
	struct FEnergyRowHandle MakeEnergyFromIndex(int32_t Index); // Function Icarus.EnergyLibrary.MakeEnergyFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555900
	struct FEnergyEnum MakeEnergyEnum(struct FEnergyEnum Enum); // Function Icarus.EnergyLibrary.MakeEnergyEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555880
	struct FEnergyRowHandle MakeEnergy(struct FName RowName); // Function Icarus.EnergyLibrary.MakeEnergy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15557e0
	bool IsValidName(struct FName NameValue); // Function Icarus.EnergyLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15555a0
	struct FEnergyEnum IntToStruct(int32_t IntValue); // Function Icarus.EnergyLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555480
	struct FName IntToName(int32_t IntValue); // Function Icarus.EnergyLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1555360
	void GetEnergyStruct(struct FEnergyRowHandle RowHandle, struct FEnergyData Energy, enum class EValid Paths); // Function Icarus.EnergyLibrary.GetEnergyStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1554f50
	bool EqualEqual_FEnergyRowHandleFEnergyRowHandle(struct FEnergyRowHandle RowHandleA, struct FEnergyRowHandle RowHandleB); // Function Icarus.EnergyLibrary.EqualEqual_FEnergyRowHandleFEnergyRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15547b0
	bool EqualEqual_EnumEnum(struct FEnergyEnum A, struct FEnergyEnum B); // Function Icarus.EnergyLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554580
	struct FEnergyRowHandle CastToEnergyRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.EnergyLibrary.CastToEnergyRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1554370
	void BreakEnergyEnum(struct FEnergyEnum Enum, struct FName Name, int32_t Index); // Function Icarus.EnergyLibrary.BreakEnergyEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15540f0
	void AddRowToEnergyTable(struct FName Name, struct FEnergyData Data, struct FEnergyRowHandle NewRow); // Function Icarus.EnergyLibrary.AddRowToEnergyTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1553db0
};

// Class Icarus.EnergyTable
// Size: 0xb8 (Inherited: 0xb8)
struct UEnergyTable : UIcarusDataTable {
};

// Class Icarus.EnvQueryContext_BackOfQuerier
// Size: 0x28 (Inherited: 0x28)
struct UEnvQueryContext_BackOfQuerier : UEnvQueryContext {
};

// Class Icarus.EnvQueryGenerator_CachedSpawns
// Size: 0x90 (Inherited: 0x50)
struct UEnvQueryGenerator_CachedSpawns : UEnvQueryGenerator {
	struct UEnvQueryContext* Context; // 0x50(0x08)
	struct FAIDataProviderFloatValue MaxPointRadius; // 0x58(0x38)
};

// Class Icarus.EnvQueryTest_DownwardTrace
// Size: 0x2b0 (Inherited: 0x1f8)
struct UEnvQueryTest_DownwardTrace : UEnvQueryTest {
	bool bTraceComplex; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
	struct TArray<enum class ECollisionChannel> CollisionChannels; // 0x200(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> IgnoreClasses; // 0x210(0x10)
	struct FAIDataProviderFloatValue DownwardsTraceDistance; // 0x220(0x38)
	struct FAIDataProviderFloatValue ItemHeightOffset; // 0x258(0x38)
	bool bShowDebug; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct TArray<struct TSoftClassPtr<UObject>> BlacklistActors; // 0x298(0x10)
	struct UEnvQueryContext* Context; // 0x2a8(0x08)
};

// Class Icarus.EnvQueryTest_IsUnderwater
// Size: 0x2a8 (Inherited: 0x1f8)
struct UEnvQueryTest_IsUnderwater : UEnvQueryTest {
	struct FEnvTraceData TraceData; // 0x1f8(0x30)
	enum class ECollisionChannel WaterChannel; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct FAIDataProviderFloatValue UpwardsTraceDistance; // 0x230(0x38)
	struct FAIDataProviderFloatValue ItemHeightOffset; // 0x268(0x38)
	struct UEnvQueryContext* Context; // 0x2a0(0x08)
};

// Class Icarus.EquippableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UEquippableComponent : UTraitComponent {

	bool GetEquippableData(struct FEquippableData OutData); // Function Icarus.EquippableComponent.GetEquippableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15550d0
};

// Class Icarus.EquippableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEquippableLibrary : URowLibrary {

	struct FEquippableRowHandle StructToRowHandle(struct FEquippableEnum EnumValue); // Function Icarus.EquippableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155ca10
	struct FName StructToName(struct FEquippableEnum EnumValue); // Function Icarus.EquippableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c830
	int32_t StructToInt(struct FEquippableEnum EnumValue); // Function Icarus.EquippableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c650
	struct FEquippableEnum RowHandleToStruct(struct FEquippableRowHandle RowHandle); // Function Icarus.EquippableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c410
	void RemoveRowFromEquippableTable(struct FName Name); // Function Icarus.EquippableLibrary.RemoveRowFromEquippableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x155c290
	void RefreshConstants(); // Function Icarus.EquippableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x155c230
	int32_t NumRows(); // Function Icarus.EquippableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c0d0
	bool NotEqual_EnumName(struct FEquippableEnum A, struct FName B); // Function Icarus.EquippableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155be00
	bool NotEqual_EnumEnum(struct FEquippableEnum A, struct FEquippableEnum B); // Function Icarus.EquippableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155bb30
	struct FEquippableEnum NameToStruct(struct FName NameValue); // Function Icarus.EquippableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b980
	int32_t NameToInt(struct FName NameValue); // Function Icarus.EquippableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x155b7d0
	struct FEquippableRowHandle MakeLiteralEquippable(struct FEquippableRowHandle RowHandle); // Function Icarus.EquippableLibrary.MakeLiteralEquippable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b560
	struct FEquippableRowHandle MakeEquippableFromIndex(int32_t Index); // Function Icarus.EquippableLibrary.MakeEquippableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b170
	struct FEquippableEnum MakeEquippableEnum(struct FEquippableEnum Enum); // Function Icarus.EquippableLibrary.MakeEquippableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b0f0
	struct FEquippableRowHandle MakeEquippable(struct FName RowName); // Function Icarus.EquippableLibrary.MakeEquippable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b050
	bool IsValidName(struct FName NameValue); // Function Icarus.EquippableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x155ae70
	struct FEquippableEnum IntToStruct(int32_t IntValue); // Function Icarus.EquippableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155acc0
	struct FName IntToName(int32_t IntValue); // Function Icarus.EquippableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x155ab10
	void GetEquippableStruct(struct FEquippableRowHandle RowHandle, struct FEquippableData Equippable, enum class EValid Paths); // Function Icarus.EquippableLibrary.GetEquippableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x155a3a0
	bool EqualEqual_FEquippableRowHandleFEquippableRowHandle(struct FEquippableRowHandle RowHandleA, struct FEquippableRowHandle RowHandleB); // Function Icarus.EquippableLibrary.EqualEqual_FEquippableRowHandleFEquippableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1559f50
	bool EqualEqual_EnumEnum(struct FEquippableEnum A, struct FEquippableEnum B); // Function Icarus.EquippableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1559c80
	struct FEquippableRowHandle CastToEquippableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.EquippableLibrary.CastToEquippableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1559920
	void BreakEquippableEnum(struct FEquippableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.EquippableLibrary.BreakEquippableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1559500
	void AddRowToEquippableTable(struct FName Name, struct FEquippableData Data, struct FEquippableRowHandle NewRow); // Function Icarus.EquippableLibrary.AddRowToEquippableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1558ed0
};

// Class Icarus.EquippableModifier
// Size: 0xe0 (Inherited: 0xb0)
struct UEquippableModifier : UActorComponent {
	struct UInventory* Inventory; // 0xb0(0x08)
	int32_t InventorySlot; // 0xb8(0x04)
	struct FEquippableRowHandle EquippableRow; // 0xbc(0x18)
	int32_t CachedUID; // 0xd4(0x04)
	bool SelfDestruct; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)

	void OnItemRemoved(struct UInventory* RemovedInventory, int32_t RemovedSlot); // Function Icarus.EquippableModifier.OnItemRemoved // (Final|Native|Private) // @ game+0x155c160
	bool ItemUnequipped(); // Function Icarus.EquippableModifier.ItemUnequipped // (Native|Event|Public|BlueprintEvent) // @ game+0x155b020
	bool ItemEquipped(); // Function Icarus.EquippableModifier.ItemEquipped // (Native|Event|Public|BlueprintEvent) // @ game+0x14f41e0
	void EquippedTick(float DeltaTime); // Function Icarus.EquippableModifier.EquippedTick // (Native|Event|Public|BlueprintEvent) // @ game+0x155a310
	bool CheckTickConditions(); // Function Icarus.EquippableModifier.CheckTickConditions // (Native|Event|Public|BlueprintEvent) // @ game+0x1504a50
};

// Class Icarus.EquippableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UEquippableTable : UIcarusDataTable {
};

// Class Icarus.ErrorCodesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UErrorCodesLibrary : URowLibrary {

	struct FErrorCodesRowHandle StructToRowHandle(struct FErrorCodesEnum EnumValue); // Function Icarus.ErrorCodesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155cac0
	struct FName StructToName(struct FErrorCodesEnum EnumValue); // Function Icarus.ErrorCodesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c8d0
	int32_t StructToInt(struct FErrorCodesEnum EnumValue); // Function Icarus.ErrorCodesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c6f0
	struct FErrorCodesEnum RowHandleToStruct(struct FErrorCodesRowHandle RowHandle); // Function Icarus.ErrorCodesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c4d0
	void RemoveRowFromErrorCodesTable(struct FName Name); // Function Icarus.ErrorCodesLibrary.RemoveRowFromErrorCodesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x155c310
	void RefreshConstants(); // Function Icarus.ErrorCodesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x155c250
	int32_t NumRows(); // Function Icarus.ErrorCodesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c100
	bool NotEqual_EnumName(struct FErrorCodesEnum A, struct FName B); // Function Icarus.ErrorCodesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155bef0
	bool NotEqual_EnumEnum(struct FErrorCodesEnum A, struct FErrorCodesEnum B); // Function Icarus.ErrorCodesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155bc20
	struct FErrorCodesEnum NameToStruct(struct FName NameValue); // Function Icarus.ErrorCodesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155ba10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ErrorCodesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x155b860
	struct FErrorCodesRowHandle MakeLiteralErrorCodes(struct FErrorCodesRowHandle RowHandle); // Function Icarus.ErrorCodesLibrary.MakeLiteralErrorCodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b630
	struct FErrorCodesRowHandle MakeErrorCodesFromIndex(int32_t Index); // Function Icarus.ErrorCodesLibrary.MakeErrorCodesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b320
	struct FErrorCodesEnum MakeErrorCodesEnum(struct FErrorCodesEnum Enum); // Function Icarus.ErrorCodesLibrary.MakeErrorCodesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b2a0
	struct FErrorCodesRowHandle MakeErrorCodes(struct FName RowName); // Function Icarus.ErrorCodesLibrary.MakeErrorCodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b200
	bool IsValidName(struct FName NameValue); // Function Icarus.ErrorCodesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x155af00
	struct FErrorCodesEnum IntToStruct(int32_t IntValue); // Function Icarus.ErrorCodesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155ad50
	struct FName IntToName(int32_t IntValue); // Function Icarus.ErrorCodesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x155aba0
	void GetErrorCodesStruct(struct FErrorCodesRowHandle RowHandle, struct FErrorCode ErrorCodes, enum class EValid Paths); // Function Icarus.ErrorCodesLibrary.GetErrorCodesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x155a540
	bool EqualEqual_FErrorCodesRowHandleFErrorCodesRowHandle(struct FErrorCodesRowHandle RowHandleA, struct FErrorCodesRowHandle RowHandleB); // Function Icarus.ErrorCodesLibrary.EqualEqual_FErrorCodesRowHandleFErrorCodesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155a090
	bool EqualEqual_EnumEnum(struct FErrorCodesEnum A, struct FErrorCodesEnum B); // Function Icarus.ErrorCodesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1559d70
	struct FErrorCodesRowHandle CastToErrorCodesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ErrorCodesLibrary.CastToErrorCodesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1559a40
	void BreakErrorCodesEnum(struct FErrorCodesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ErrorCodesLibrary.BreakErrorCodesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1559660
	void AddRowToErrorCodesTable(struct FName Name, struct FErrorCode Data, struct FErrorCodesRowHandle NewRow); // Function Icarus.ErrorCodesLibrary.AddRowToErrorCodesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1559060
};

// Class Icarus.ErrorCodesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UErrorCodesTable : UIcarusDataTable {
};

// Class Icarus.ExperienceComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UExperienceComponent : UTraitComponent {

	bool TriggerExperienceEvent(enum class EExperienceSource Type, struct AActor* Target); // Function Icarus.ExperienceComponent.TriggerExperienceEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x155cc20
	bool GetExperienceData(struct FExperienceData OutData); // Function Icarus.ExperienceComponent.GetExperienceData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x155a740
};

// Class Icarus.ExperienceEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UExperienceEventsLibrary : URowLibrary {

	struct FExperienceEventsRowHandle StructToRowHandle(struct FExperienceEventsEnum EnumValue); // Function Icarus.ExperienceEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155cb70
	struct FName StructToName(struct FExperienceEventsEnum EnumValue); // Function Icarus.ExperienceEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c970
	int32_t StructToInt(struct FExperienceEventsEnum EnumValue); // Function Icarus.ExperienceEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c790
	struct FExperienceEventsEnum RowHandleToStruct(struct FExperienceEventsRowHandle RowHandle); // Function Icarus.ExperienceEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c590
	void RemoveRowFromExperienceEventsTable(struct FName Name); // Function Icarus.ExperienceEventsLibrary.RemoveRowFromExperienceEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x155c390
	void RefreshConstants(); // Function Icarus.ExperienceEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x155c270
	int32_t NumRows(); // Function Icarus.ExperienceEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155c130
	bool NotEqual_EnumName(struct FExperienceEventsEnum A, struct FName B); // Function Icarus.ExperienceEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155bfe0
	bool NotEqual_EnumEnum(struct FExperienceEventsEnum A, struct FExperienceEventsEnum B); // Function Icarus.ExperienceEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155bd10
	struct FExperienceEventsEnum NameToStruct(struct FName NameValue); // Function Icarus.ExperienceEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155baa0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ExperienceEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x155b8f0
	struct FExperienceEventsRowHandle MakeLiteralExperienceEvents(struct FExperienceEventsRowHandle RowHandle); // Function Icarus.ExperienceEventsLibrary.MakeLiteralExperienceEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b700
	struct FExperienceEventsRowHandle MakeExperienceEventsFromIndex(int32_t Index); // Function Icarus.ExperienceEventsLibrary.MakeExperienceEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b4d0
	struct FExperienceEventsEnum MakeExperienceEventsEnum(struct FExperienceEventsEnum Enum); // Function Icarus.ExperienceEventsLibrary.MakeExperienceEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b450
	struct FExperienceEventsRowHandle MakeExperienceEvents(struct FName RowName); // Function Icarus.ExperienceEventsLibrary.MakeExperienceEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155b3b0
	bool IsValidName(struct FName NameValue); // Function Icarus.ExperienceEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x155af90
	struct FExperienceEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.ExperienceEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155ade0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ExperienceEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x155ac30
	void GetExperienceEventsStruct(struct FExperienceEventsRowHandle RowHandle, struct FExperienceEvent ExperienceEvents, enum class EValid Paths); // Function Icarus.ExperienceEventsLibrary.GetExperienceEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x155a950
	bool EqualEqual_FExperienceEventsRowHandleFExperienceEventsRowHandle(struct FExperienceEventsRowHandle RowHandleA, struct FExperienceEventsRowHandle RowHandleB); // Function Icarus.ExperienceEventsLibrary.EqualEqual_FExperienceEventsRowHandleFExperienceEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x155a1d0
	bool EqualEqual_EnumEnum(struct FExperienceEventsEnum A, struct FExperienceEventsEnum B); // Function Icarus.ExperienceEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1559e60
	struct FExperienceEventsRowHandle CastToExperienceEventsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ExperienceEventsLibrary.CastToExperienceEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1559b60
	void BreakExperienceEventsEnum(struct FExperienceEventsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ExperienceEventsLibrary.BreakExperienceEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15597c0
	void AddRowToExperienceEventsTable(struct FName Name, struct FExperienceEvent Data, struct FExperienceEventsRowHandle NewRow); // Function Icarus.ExperienceEventsLibrary.AddRowToExperienceEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15592e0
};

// Class Icarus.ExperienceEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UExperienceEventsTable : UIcarusDataTable {
};

// Class Icarus.ExperienceLibrary
// Size: 0x28 (Inherited: 0x28)
struct UExperienceLibrary : URowLibrary {

	struct FExperienceRowHandle StructToRowHandle(struct FExperienceEnum EnumValue); // Function Icarus.ExperienceLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563b80
	struct FName StructToName(struct FExperienceEnum EnumValue); // Function Icarus.ExperienceLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15639a0
	int32_t StructToInt(struct FExperienceEnum EnumValue); // Function Icarus.ExperienceLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15637c0
	struct FExperienceEnum RowHandleToStruct(struct FExperienceRowHandle RowHandle); // Function Icarus.ExperienceLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563550
	void RemoveRowFromExperienceTable(struct FName Name); // Function Icarus.ExperienceLibrary.RemoveRowFromExperienceTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15633d0
	void RefreshConstants(); // Function Icarus.ExperienceLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15632e0
	int32_t NumRows(); // Function Icarus.ExperienceLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563250
	bool NotEqual_EnumName(struct FExperienceEnum A, struct FName B); // Function Icarus.ExperienceLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562f80
	bool NotEqual_EnumEnum(struct FExperienceEnum A, struct FExperienceEnum B); // Function Icarus.ExperienceLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562cb0
	struct FExperienceEnum NameToStruct(struct FName NameValue); // Function Icarus.ExperienceLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562b00
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ExperienceLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1562950
	struct FExperienceRowHandle MakeLiteralExperience(struct FExperienceRowHandle RowHandle); // Function Icarus.ExperienceLibrary.MakeLiteralExperience // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15626e0
	struct FExperienceRowHandle MakeExperienceFromIndex(int32_t Index); // Function Icarus.ExperienceLibrary.MakeExperienceFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15622f0
	struct FExperienceEnum MakeExperienceEnum(struct FExperienceEnum Enum); // Function Icarus.ExperienceLibrary.MakeExperienceEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562270
	struct FExperienceRowHandle MakeExperience(struct FName RowName); // Function Icarus.ExperienceLibrary.MakeExperience // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15621d0
	bool IsValidName(struct FName NameValue); // Function Icarus.ExperienceLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1562020
	struct FExperienceEnum IntToStruct(int32_t IntValue); // Function Icarus.ExperienceLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1561dd0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ExperienceLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1561c20
	void GetExperienceStruct(struct FExperienceRowHandle RowHandle, struct FExperienceData Experience, enum class EValid Paths); // Function Icarus.ExperienceLibrary.GetExperienceStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1561140
	bool EqualEqual_FExperienceRowHandleFExperienceRowHandle(struct FExperienceRowHandle RowHandleA, struct FExperienceRowHandle RowHandleB); // Function Icarus.ExperienceLibrary.EqualEqual_FExperienceRowHandleFExperienceRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1560d80
	bool EqualEqual_EnumEnum(struct FExperienceEnum A, struct FExperienceEnum B); // Function Icarus.ExperienceLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1560ab0
	struct FExperienceRowHandle CastToExperienceRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ExperienceLibrary.CastToExperienceRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1560750
	void BreakExperienceEnum(struct FExperienceEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ExperienceLibrary.BreakExperienceEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1560330
	void AddRowToExperienceTable(struct FName Name, struct FExperienceData Data, struct FExperienceRowHandle NewRow); // Function Icarus.ExperienceLibrary.AddRowToExperienceTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x155fb90
};

// Class Icarus.ExperienceTable
// Size: 0xb8 (Inherited: 0xb8)
struct UExperienceTable : UIcarusDataTable {
};

// Class Icarus.FactionMissionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFactionMissionsLibrary : URowLibrary {

	struct FFactionMissionsRowHandle StructToRowHandle(struct FFactionMissionsEnum EnumValue); // Function Icarus.FactionMissionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563c30
	struct FName StructToName(struct FFactionMissionsEnum EnumValue); // Function Icarus.FactionMissionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563a40
	int32_t StructToInt(struct FFactionMissionsEnum EnumValue); // Function Icarus.FactionMissionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563860
	struct FFactionMissionsEnum RowHandleToStruct(struct FFactionMissionsRowHandle RowHandle); // Function Icarus.FactionMissionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563610
	void RemoveRowFromFactionMissionsTable(struct FName Name); // Function Icarus.FactionMissionsLibrary.RemoveRowFromFactionMissionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1563450
	void RefreshConstants(); // Function Icarus.FactionMissionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1563300
	int32_t NumRows(); // Function Icarus.FactionMissionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563280
	bool NotEqual_EnumName(struct FFactionMissionsEnum A, struct FName B); // Function Icarus.FactionMissionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563070
	bool NotEqual_EnumEnum(struct FFactionMissionsEnum A, struct FFactionMissionsEnum B); // Function Icarus.FactionMissionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562da0
	struct FFactionMissionsEnum NameToStruct(struct FName NameValue); // Function Icarus.FactionMissionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562b90
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FactionMissionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15629e0
	struct FFactionMissionsRowHandle MakeLiteralFactionMissions(struct FFactionMissionsRowHandle RowHandle); // Function Icarus.FactionMissionsLibrary.MakeLiteralFactionMissions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15627b0
	struct FFactionMissionsRowHandle MakeFactionMissionsFromIndex(int32_t Index); // Function Icarus.FactionMissionsLibrary.MakeFactionMissionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15624a0
	struct FFactionMissionsEnum MakeFactionMissionsEnum(struct FFactionMissionsEnum Enum); // Function Icarus.FactionMissionsLibrary.MakeFactionMissionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562420
	struct FFactionMissionsRowHandle MakeFactionMissions(struct FName RowName); // Function Icarus.FactionMissionsLibrary.MakeFactionMissions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562380
	bool IsValidName(struct FName NameValue); // Function Icarus.FactionMissionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15620b0
	struct FFactionMissionsEnum IntToStruct(int32_t IntValue); // Function Icarus.FactionMissionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1561e60
	struct FName IntToName(int32_t IntValue); // Function Icarus.FactionMissionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1561cb0
	void GetFactionMissionsStruct(struct FFactionMissionsRowHandle RowHandle, struct FFactionMission FactionMissions, enum class EValid Paths); // Function Icarus.FactionMissionsLibrary.GetFactionMissionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1561370
	bool EqualEqual_FFactionMissionsRowHandleFFactionMissionsRowHandle(struct FFactionMissionsRowHandle RowHandleA, struct FFactionMissionsRowHandle RowHandleB); // Function Icarus.FactionMissionsLibrary.EqualEqual_FFactionMissionsRowHandleFFactionMissionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1560ec0
	bool EqualEqual_EnumEnum(struct FFactionMissionsEnum A, struct FFactionMissionsEnum B); // Function Icarus.FactionMissionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1560ba0
	struct FFactionMissionsRowHandle CastToFactionMissionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FactionMissionsLibrary.CastToFactionMissionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1560870
	void BreakFactionMissionsEnum(struct FFactionMissionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FactionMissionsLibrary.BreakFactionMissionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1560490
	void AddRowToFactionMissionsTable(struct FName Name, struct FFactionMission Data, struct FFactionMissionsRowHandle NewRow); // Function Icarus.FactionMissionsLibrary.AddRowToFactionMissionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x155fe50
};

// Class Icarus.FactionMissionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFactionMissionsTable : UIcarusDataTable {
};

// Class Icarus.FactionMissionSubsystem
// Size: 0xa0 (Inherited: 0x30)
struct UFactionMissionSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnMissionManagerRegistered; // 0x30(0x10)
	struct FMulticastInlineDelegate OnQuestStateUpdated; // 0x40(0x10)
	struct TMap<struct FPlayerCharacterID, struct AMissionManager*> RegisteredManagerMap; // 0x50(0x50)

	bool ShouldUseMasterManager(); // Function Icarus.FactionMissionSubsystem.ShouldUseMasterManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1563790
	void RegisterMissionManager(struct AMissionManager* MissionManager); // Function Icarus.FactionMissionSubsystem.RegisterMissionManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1563340
	bool IsMissionManagerRegistered(struct AMissionManager* MissionManager); // Function Icarus.FactionMissionSubsystem.IsMissionManagerRegistered // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1561f80
	struct AMissionManager* GetMissionManagerFromQuest(struct AQuestBase* InQuest); // Function Icarus.FactionMissionSubsystem.GetMissionManagerFromQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1561b80
	struct AMissionManager* GetMissionManagerFromPlayerCharacterState(struct UPlayerCharacterState* PlayerCharacterState); // Function Icarus.FactionMissionSubsystem.GetMissionManagerFromPlayerCharacterState // (Final|Native|Public|BlueprintCallable) // @ game+0x1561ae0
	struct AMissionManager* GetMissionManagerFromPlayerCharacterID(struct FPlayerCharacterID PlayerCharacterID); // Function Icarus.FactionMissionSubsystem.GetMissionManagerFromPlayerCharacterID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1561a20
	struct AMissionManager* GetMissionManagerFromPlayerCharacter(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.FactionMissionSubsystem.GetMissionManagerFromPlayerCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1561980
	struct AMissionManager* GetMasterMissionManager(); // Function Icarus.FactionMissionSubsystem.GetMasterMissionManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1561950
};

// Class Icarus.FarmableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UFarmableComponent : UTraitComponent {

	bool GetFarmableData(struct FFarmableData OutData); // Function Icarus.FarmableComponent.GetFarmableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1561640
};

// Class Icarus.FarmableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFarmableLibrary : URowLibrary {

	struct FFarmableRowHandle StructToRowHandle(struct FFarmableEnum EnumValue); // Function Icarus.FarmableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563ce0
	struct FName StructToName(struct FFarmableEnum EnumValue); // Function Icarus.FarmableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563ae0
	int32_t StructToInt(struct FFarmableEnum EnumValue); // Function Icarus.FarmableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563900
	struct FFarmableEnum RowHandleToStruct(struct FFarmableRowHandle RowHandle); // Function Icarus.FarmableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15636d0
	void RemoveRowFromFarmableTable(struct FName Name); // Function Icarus.FarmableLibrary.RemoveRowFromFarmableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15634d0
	void RefreshConstants(); // Function Icarus.FarmableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1563320
	int32_t NumRows(); // Function Icarus.FarmableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15632b0
	bool NotEqual_EnumName(struct FFarmableEnum A, struct FName B); // Function Icarus.FarmableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1563160
	bool NotEqual_EnumEnum(struct FFarmableEnum A, struct FFarmableEnum B); // Function Icarus.FarmableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562e90
	struct FFarmableEnum NameToStruct(struct FName NameValue); // Function Icarus.FarmableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562c20
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FarmableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1562a70
	struct FFarmableRowHandle MakeLiteralFarmable(struct FFarmableRowHandle RowHandle); // Function Icarus.FarmableLibrary.MakeLiteralFarmable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562880
	struct FFarmableRowHandle MakeFarmableFromIndex(int32_t Index); // Function Icarus.FarmableLibrary.MakeFarmableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562650
	struct FFarmableEnum MakeFarmableEnum(struct FFarmableEnum Enum); // Function Icarus.FarmableLibrary.MakeFarmableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15625d0
	struct FFarmableRowHandle MakeFarmable(struct FName RowName); // Function Icarus.FarmableLibrary.MakeFarmable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1562530
	bool IsValidName(struct FName NameValue); // Function Icarus.FarmableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1562140
	struct FFarmableEnum IntToStruct(int32_t IntValue); // Function Icarus.FarmableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1561ef0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FarmableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1561d40
	void GetFarmableStruct(struct FFarmableRowHandle RowHandle, struct FFarmableData Farmable, enum class EValid Paths); // Function Icarus.FarmableLibrary.GetFarmableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15617c0
	bool EqualEqual_FFarmableRowHandleFFarmableRowHandle(struct FFarmableRowHandle RowHandleA, struct FFarmableRowHandle RowHandleB); // Function Icarus.FarmableLibrary.EqualEqual_FFarmableRowHandleFFarmableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1561000
	bool EqualEqual_EnumEnum(struct FFarmableEnum A, struct FFarmableEnum B); // Function Icarus.FarmableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1560c90
	struct FFarmableRowHandle CastToFarmableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FarmableLibrary.CastToFarmableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1560990
	void BreakFarmableEnum(struct FFarmableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FarmableLibrary.BreakFarmableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15605f0
	void AddRowToFarmableTable(struct FName Name, struct FFarmableData Data, struct FFarmableRowHandle NewRow); // Function Icarus.FarmableLibrary.AddRowToFarmableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1560120
};

// Class Icarus.FarmableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFarmableTable : UIcarusDataTable {
};

// Class Icarus.FarmingGrowthStatesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFarmingGrowthStatesLibrary : URowLibrary {

	struct FFarmingGrowthStatesRowHandle StructToRowHandle(struct FFarmingGrowthStatesEnum EnumValue); // Function Icarus.FarmingGrowthStatesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569b10
	struct FName StructToName(struct FFarmingGrowthStatesEnum EnumValue); // Function Icarus.FarmingGrowthStatesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569930
	int32_t StructToInt(struct FFarmingGrowthStatesEnum EnumValue); // Function Icarus.FarmingGrowthStatesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569750
	struct FFarmingGrowthStatesEnum RowHandleToStruct(struct FFarmingGrowthStatesRowHandle RowHandle); // Function Icarus.FarmingGrowthStatesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569510
	void RemoveRowFromFarmingGrowthStatesTable(struct FName Name); // Function Icarus.FarmingGrowthStatesLibrary.RemoveRowFromFarmingGrowthStatesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1569390
	void RefreshConstants(); // Function Icarus.FarmingGrowthStatesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1569330
	int32_t NumRows(); // Function Icarus.FarmingGrowthStatesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15692a0
	bool NotEqual_EnumName(struct FFarmingGrowthStatesEnum A, struct FName B); // Function Icarus.FarmingGrowthStatesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568fd0
	bool NotEqual_EnumEnum(struct FFarmingGrowthStatesEnum A, struct FFarmingGrowthStatesEnum B); // Function Icarus.FarmingGrowthStatesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568d00
	struct FFarmingGrowthStatesEnum NameToStruct(struct FName NameValue); // Function Icarus.FarmingGrowthStatesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568b50
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FarmingGrowthStatesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15689a0
	struct FFarmingGrowthStatesRowHandle MakeLiteralFarmingGrowthStates(struct FFarmingGrowthStatesRowHandle RowHandle); // Function Icarus.FarmingGrowthStatesLibrary.MakeLiteralFarmingGrowthStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568730
	struct FFarmingGrowthStatesRowHandle MakeFarmingGrowthStatesFromIndex(int32_t Index); // Function Icarus.FarmingGrowthStatesLibrary.MakeFarmingGrowthStatesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568340
	struct FFarmingGrowthStatesEnum MakeFarmingGrowthStatesEnum(struct FFarmingGrowthStatesEnum Enum); // Function Icarus.FarmingGrowthStatesLibrary.MakeFarmingGrowthStatesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15682c0
	struct FFarmingGrowthStatesRowHandle MakeFarmingGrowthStates(struct FName RowName); // Function Icarus.FarmingGrowthStatesLibrary.MakeFarmingGrowthStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568220
	bool IsValidName(struct FName NameValue); // Function Icarus.FarmingGrowthStatesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1568070
	struct FFarmingGrowthStatesEnum IntToStruct(int32_t IntValue); // Function Icarus.FarmingGrowthStatesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567ec0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FarmingGrowthStatesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1567d10
	void GetFarmingGrowthStatesStruct(struct FFarmingGrowthStatesRowHandle RowHandle, struct FFarmingGrowthState FarmingGrowthStates, enum class EValid Paths); // Function Icarus.FarmingGrowthStatesLibrary.GetFarmingGrowthStatesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1567800
	bool EqualEqual_FFarmingGrowthStatesRowHandleFFarmingGrowthStatesRowHandle(struct FFarmingGrowthStatesRowHandle RowHandleA, struct FFarmingGrowthStatesRowHandle RowHandleB); // Function Icarus.FarmingGrowthStatesLibrary.EqualEqual_FFarmingGrowthStatesRowHandleFFarmingGrowthStatesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567440
	bool EqualEqual_EnumEnum(struct FFarmingGrowthStatesEnum A, struct FFarmingGrowthStatesEnum B); // Function Icarus.FarmingGrowthStatesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567170
	struct FFarmingGrowthStatesRowHandle CastToFarmingGrowthStatesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FarmingGrowthStatesLibrary.CastToFarmingGrowthStatesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1566e10
	void BreakFarmingGrowthStatesEnum(struct FFarmingGrowthStatesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FarmingGrowthStatesLibrary.BreakFarmingGrowthStatesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15669f0
	void AddRowToFarmingGrowthStatesTable(struct FName Name, struct FFarmingGrowthState Data, struct FFarmingGrowthStatesRowHandle NewRow); // Function Icarus.FarmingGrowthStatesLibrary.AddRowToFarmingGrowthStatesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1566320
};

// Class Icarus.FarmingGrowthStatesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFarmingGrowthStatesTable : UIcarusDataTable {
};

// Class Icarus.FarmingSeedsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFarmingSeedsLibrary : URowLibrary {

	struct FFarmingSeedsRowHandle StructToRowHandle(struct FFarmingSeedsEnum EnumValue); // Function Icarus.FarmingSeedsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569bc0
	struct FName StructToName(struct FFarmingSeedsEnum EnumValue); // Function Icarus.FarmingSeedsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15699d0
	int32_t StructToInt(struct FFarmingSeedsEnum EnumValue); // Function Icarus.FarmingSeedsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15697f0
	struct FFarmingSeedsEnum RowHandleToStruct(struct FFarmingSeedsRowHandle RowHandle); // Function Icarus.FarmingSeedsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15695d0
	void RemoveRowFromFarmingSeedsTable(struct FName Name); // Function Icarus.FarmingSeedsLibrary.RemoveRowFromFarmingSeedsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1569410
	void RefreshConstants(); // Function Icarus.FarmingSeedsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1569350
	int32_t NumRows(); // Function Icarus.FarmingSeedsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15692d0
	bool NotEqual_EnumName(struct FFarmingSeedsEnum A, struct FName B); // Function Icarus.FarmingSeedsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15690c0
	bool NotEqual_EnumEnum(struct FFarmingSeedsEnum A, struct FFarmingSeedsEnum B); // Function Icarus.FarmingSeedsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568df0
	struct FFarmingSeedsEnum NameToStruct(struct FName NameValue); // Function Icarus.FarmingSeedsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568be0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FarmingSeedsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1568a30
	struct FFarmingSeedsRowHandle MakeLiteralFarmingSeeds(struct FFarmingSeedsRowHandle RowHandle); // Function Icarus.FarmingSeedsLibrary.MakeLiteralFarmingSeeds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568800
	struct FFarmingSeedsRowHandle MakeFarmingSeedsFromIndex(int32_t Index); // Function Icarus.FarmingSeedsLibrary.MakeFarmingSeedsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15684f0
	struct FFarmingSeedsEnum MakeFarmingSeedsEnum(struct FFarmingSeedsEnum Enum); // Function Icarus.FarmingSeedsLibrary.MakeFarmingSeedsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568470
	struct FFarmingSeedsRowHandle MakeFarmingSeeds(struct FName RowName); // Function Icarus.FarmingSeedsLibrary.MakeFarmingSeeds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15683d0
	bool IsValidName(struct FName NameValue); // Function Icarus.FarmingSeedsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1568100
	struct FFarmingSeedsEnum IntToStruct(int32_t IntValue); // Function Icarus.FarmingSeedsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567f50
	struct FName IntToName(int32_t IntValue); // Function Icarus.FarmingSeedsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1567da0
	void GetFarmingSeedsStruct(struct FFarmingSeedsRowHandle RowHandle, struct FFarmingSeedData FarmingSeeds, enum class EValid Paths); // Function Icarus.FarmingSeedsLibrary.GetFarmingSeedsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15679b0
	bool EqualEqual_FFarmingSeedsRowHandleFFarmingSeedsRowHandle(struct FFarmingSeedsRowHandle RowHandleA, struct FFarmingSeedsRowHandle RowHandleB); // Function Icarus.FarmingSeedsLibrary.EqualEqual_FFarmingSeedsRowHandleFFarmingSeedsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567580
	bool EqualEqual_EnumEnum(struct FFarmingSeedsEnum A, struct FFarmingSeedsEnum B); // Function Icarus.FarmingSeedsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567260
	struct FFarmingSeedsRowHandle CastToFarmingSeedsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FarmingSeedsLibrary.CastToFarmingSeedsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1566f30
	void BreakFarmingSeedsEnum(struct FFarmingSeedsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FarmingSeedsLibrary.BreakFarmingSeedsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1566b50
	void AddRowToFarmingSeedsTable(struct FName Name, struct FFarmingSeedData Data, struct FFarmingSeedsRowHandle NewRow); // Function Icarus.FarmingSeedsLibrary.AddRowToFarmingSeedsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1566570
};

// Class Icarus.FarmingSeedsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFarmingSeedsTable : UIcarusDataTable {
};

// Class Icarus.FetchQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFetchQuestsLibrary : URowLibrary {

	struct FFetchQuestsRowHandle StructToRowHandle(struct FFetchQuestsEnum EnumValue); // Function Icarus.FetchQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569c70
	struct FName StructToName(struct FFetchQuestsEnum EnumValue); // Function Icarus.FetchQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569a70
	int32_t StructToInt(struct FFetchQuestsEnum EnumValue); // Function Icarus.FetchQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569890
	struct FFetchQuestsEnum RowHandleToStruct(struct FFetchQuestsRowHandle RowHandle); // Function Icarus.FetchQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569690
	void RemoveRowFromFetchQuestsTable(struct FName Name); // Function Icarus.FetchQuestsLibrary.RemoveRowFromFetchQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1569490
	void RefreshConstants(); // Function Icarus.FetchQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1569370
	int32_t NumRows(); // Function Icarus.FetchQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1569300
	bool NotEqual_EnumName(struct FFetchQuestsEnum A, struct FName B); // Function Icarus.FetchQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15691b0
	bool NotEqual_EnumEnum(struct FFetchQuestsEnum A, struct FFetchQuestsEnum B); // Function Icarus.FetchQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568ee0
	struct FFetchQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.FetchQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568c70
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FetchQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1568ac0
	struct FFetchQuestsRowHandle MakeLiteralFetchQuests(struct FFetchQuestsRowHandle RowHandle); // Function Icarus.FetchQuestsLibrary.MakeLiteralFetchQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15688d0
	struct FFetchQuestsRowHandle MakeFetchQuestsFromIndex(int32_t Index); // Function Icarus.FetchQuestsLibrary.MakeFetchQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15686a0
	struct FFetchQuestsEnum MakeFetchQuestsEnum(struct FFetchQuestsEnum Enum); // Function Icarus.FetchQuestsLibrary.MakeFetchQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568620
	struct FFetchQuestsRowHandle MakeFetchQuests(struct FName RowName); // Function Icarus.FetchQuestsLibrary.MakeFetchQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1568580
	bool IsValidName(struct FName NameValue); // Function Icarus.FetchQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1568190
	struct FFetchQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.FetchQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567fe0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FetchQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1567e30
	void GetFetchQuestsStruct(struct FFetchQuestsRowHandle RowHandle, struct FFetchQuest FetchQuests, enum class EValid Paths); // Function Icarus.FetchQuestsLibrary.GetFetchQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1567b80
	bool EqualEqual_FFetchQuestsRowHandleFFetchQuestsRowHandle(struct FFetchQuestsRowHandle RowHandleA, struct FFetchQuestsRowHandle RowHandleB); // Function Icarus.FetchQuestsLibrary.EqualEqual_FFetchQuestsRowHandleFFetchQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15676c0
	bool EqualEqual_EnumEnum(struct FFetchQuestsEnum A, struct FFetchQuestsEnum B); // Function Icarus.FetchQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1567350
	struct FFetchQuestsRowHandle CastToFetchQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FetchQuestsLibrary.CastToFetchQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1567050
	void BreakFetchQuestsEnum(struct FFetchQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FetchQuestsLibrary.BreakFetchQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1566cb0
	void AddRowToFetchQuestsTable(struct FName Name, struct FFetchQuest Data, struct FFetchQuestsRowHandle NewRow); // Function Icarus.FetchQuestsLibrary.AddRowToFetchQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15667f0
};

// Class Icarus.FetchQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFetchQuestsTable : UIcarusDataTable {
};

// Class Icarus.FillableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UFillableComponent : UTraitComponent {
	int32_t FillableType; // 0xd0(0x04)
	int32_t StoredUnits; // 0xd4(0x04)
	struct FMulticastSparseDelegate Client_OnResourceTypeUpdated; // 0xd8(0x01)
	struct FMulticastSparseDelegate Client_OnStoredUnitsUpdated; // 0xd9(0x01)
	char pad_DA[0x6]; // 0xda(0x06)

	void SetStoredUnits(int32_t NewCapacity); // Function Icarus.FillableComponent.SetStoredUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x156f7d0
	bool SetResourceType(enum class EIcarusResourceType NewResourceType); // Function Icarus.FillableComponent.SetResourceType // (Final|Native|Public|BlueprintCallable) // @ game+0x156f740
	int32_t RemoveUnits(int32_t AmountToRemove, enum class EIcarusResourceType Type); // Function Icarus.FillableComponent.RemoveUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x156f4f0
	void OnRep_StoredUnits(); // Function Icarus.FillableComponent.OnRep_StoredUnits // (Final|Native|Public) // @ game+0x156f390
	void OnRep_ResourceType(); // Function Icarus.FillableComponent.OnRep_ResourceType // (Final|Native|Public) // @ game+0x156f370
	bool IsFull(); // Function Icarus.FillableComponent.IsFull // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e6c0
	bool IsEmpty(); // Function Icarus.FillableComponent.IsEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e690
	int32_t GetStoredUnits(); // Function Icarus.FillableComponent.GetStoredUnits // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e420
	enum class EIcarusResourceType GetFillableType(); // Function Icarus.FillableComponent.GetFillableType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e1c0
	bool GetFillableData(struct FFillableData OutData); // Function Icarus.FillableComponent.GetFillableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x156dea0
	int32_t AddUnits(int32_t AmountToAdd, enum class EIcarusResourceType Type); // Function Icarus.FillableComponent.AddUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x156d470
};

// Class Icarus.FillableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFillableLibrary : URowLibrary {

	struct FFillableRowHandle StructToRowHandle(struct FFillableEnum EnumValue); // Function Icarus.FillableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156fae0
	struct FName StructToName(struct FFillableEnum EnumValue); // Function Icarus.FillableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f9a0
	int32_t StructToInt(struct FFillableEnum EnumValue); // Function Icarus.FillableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f860
	struct FFillableEnum RowHandleToStruct(struct FFillableRowHandle RowHandle); // Function Icarus.FillableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f5c0
	void RemoveRowFromFillableTable(struct FName Name); // Function Icarus.FillableLibrary.RemoveRowFromFillableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x156f3f0
	void RefreshConstants(); // Function Icarus.FillableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x156f3b0
	int32_t NumRows(); // Function Icarus.FillableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f310
	bool NotEqual_EnumName(struct FFillableEnum A, struct FName B); // Function Icarus.FillableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f130
	bool NotEqual_EnumEnum(struct FFillableEnum A, struct FFillableEnum B); // Function Icarus.FillableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156ef50
	struct FFillableEnum NameToStruct(struct FName NameValue); // Function Icarus.FillableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156ee30
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FillableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x156ed10
	struct FFillableRowHandle MakeLiteralFillable(struct FFillableRowHandle RowHandle); // Function Icarus.FillableLibrary.MakeLiteralFillable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156eb70
	struct FFillableRowHandle MakeFillableFromIndex(int32_t Index); // Function Icarus.FillableLibrary.MakeFillableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e930
	struct FFillableEnum MakeFillableEnum(struct FFillableEnum Enum); // Function Icarus.FillableLibrary.MakeFillableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e8b0
	struct FFillableRowHandle MakeFillable(struct FName RowName); // Function Icarus.FillableLibrary.MakeFillable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e810
	bool IsValidName(struct FName NameValue); // Function Icarus.FillableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x156e6f0
	struct FFillableEnum IntToStruct(int32_t IntValue); // Function Icarus.FillableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e570
	struct FName IntToName(int32_t IntValue); // Function Icarus.FillableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x156e450
	void GetFillableStruct(struct FFillableRowHandle RowHandle, struct FFillableData Fillable, enum class EValid Paths); // Function Icarus.FillableLibrary.GetFillableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x156e030
	bool EqualEqual_FFillableRowHandleFFillableRowHandle(struct FFillableRowHandle RowHandleA, struct FFillableRowHandle RowHandleB); // Function Icarus.FillableLibrary.EqualEqual_FFillableRowHandleFFillableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156dc20
	bool EqualEqual_EnumEnum(struct FFillableEnum A, struct FFillableEnum B); // Function Icarus.FillableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156da40
	struct FFillableRowHandle CastToFillableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FillableLibrary.CastToFillableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x156d800
	void BreakFillableEnum(struct FFillableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FillableLibrary.BreakFillableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x156d540
	void AddRowToFillableTable(struct FName Name, struct FFillableData Data, struct FFillableRowHandle NewRow); // Function Icarus.FillableLibrary.AddRowToFillableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x156cf60
};

// Class Icarus.FillableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFillableTable : UIcarusDataTable {
};

// Class Icarus.FirearmAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFirearmAudioDataLibrary : URowLibrary {

	struct FFirearmAudioDataRowHandle StructToRowHandle(struct FFirearmAudioDataEnum EnumValue); // Function Icarus.FirearmAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156fb90
	struct FName StructToName(struct FFirearmAudioDataEnum EnumValue); // Function Icarus.FirearmAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156fa40
	int32_t StructToInt(struct FFirearmAudioDataEnum EnumValue); // Function Icarus.FirearmAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f900
	struct FFirearmAudioDataEnum RowHandleToStruct(struct FFirearmAudioDataRowHandle RowHandle); // Function Icarus.FirearmAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f680
	void RemoveRowFromFirearmAudioDataTable(struct FName Name); // Function Icarus.FirearmAudioDataLibrary.RemoveRowFromFirearmAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x156f470
	void RefreshConstants(); // Function Icarus.FirearmAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x156f3d0
	int32_t NumRows(); // Function Icarus.FirearmAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f340
	bool NotEqual_EnumName(struct FFirearmAudioDataEnum A, struct FName B); // Function Icarus.FirearmAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f220
	bool NotEqual_EnumEnum(struct FFirearmAudioDataEnum A, struct FFirearmAudioDataEnum B); // Function Icarus.FirearmAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156f040
	struct FFirearmAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.FirearmAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156eec0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FirearmAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x156eda0
	struct FFirearmAudioDataRowHandle MakeLiteralFirearmAudioData(struct FFirearmAudioDataRowHandle RowHandle); // Function Icarus.FirearmAudioDataLibrary.MakeLiteralFirearmAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156ec40
	struct FFirearmAudioDataRowHandle MakeFirearmAudioDataFromIndex(int32_t Index); // Function Icarus.FirearmAudioDataLibrary.MakeFirearmAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156eae0
	struct FFirearmAudioDataEnum MakeFirearmAudioDataEnum(struct FFirearmAudioDataEnum Enum); // Function Icarus.FirearmAudioDataLibrary.MakeFirearmAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156ea60
	struct FFirearmAudioDataRowHandle MakeFirearmAudioData(struct FName RowName); // Function Icarus.FirearmAudioDataLibrary.MakeFirearmAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e9c0
	bool IsValidName(struct FName NameValue); // Function Icarus.FirearmAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x156e780
	struct FFirearmAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.FirearmAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156e600
	struct FName IntToName(int32_t IntValue); // Function Icarus.FirearmAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x156e4e0
	void GetFirearmAudioDataStruct(struct FFirearmAudioDataRowHandle RowHandle, struct FFirearmAudioData FirearmAudioData, enum class EValid Paths); // Function Icarus.FirearmAudioDataLibrary.GetFirearmAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x156e1f0
	bool EqualEqual_FFirearmAudioDataRowHandleFFirearmAudioDataRowHandle(struct FFirearmAudioDataRowHandle RowHandleA, struct FFirearmAudioDataRowHandle RowHandleB); // Function Icarus.FirearmAudioDataLibrary.EqualEqual_FFirearmAudioDataRowHandleFFirearmAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156dd60
	bool EqualEqual_EnumEnum(struct FFirearmAudioDataEnum A, struct FFirearmAudioDataEnum B); // Function Icarus.FirearmAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x156db30
	struct FFirearmAudioDataRowHandle CastToFirearmAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FirearmAudioDataLibrary.CastToFirearmAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x156d920
	void BreakFirearmAudioDataEnum(struct FFirearmAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FirearmAudioDataLibrary.BreakFirearmAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x156d6a0
	void AddRowToFirearmAudioDataTable(struct FName Name, struct FFirearmAudioData Data, struct FFirearmAudioDataRowHandle NewRow); // Function Icarus.FirearmAudioDataLibrary.AddRowToFirearmAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x156d180
};

// Class Icarus.FirearmAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFirearmAudioDataTable : UIcarusDataTable {
};

// Class Icarus.FirearmDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFirearmDataLibrary : URowLibrary {

	struct FFirearmDataRowHandle StructToRowHandle(struct FFirearmDataEnum EnumValue); // Function Icarus.FirearmDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1575b30
	struct FName StructToName(struct FFirearmDataEnum EnumValue); // Function Icarus.FirearmDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15759f0
	int32_t StructToInt(struct FFirearmDataEnum EnumValue); // Function Icarus.FirearmDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15758b0
	struct FFirearmDataEnum RowHandleToStruct(struct FFirearmDataRowHandle RowHandle); // Function Icarus.FirearmDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15754c0
	void RemoveRowFromFirearmDataTable(struct FName Name); // Function Icarus.FirearmDataLibrary.RemoveRowFromFirearmDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15753a0
	void RefreshConstants(); // Function Icarus.FirearmDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1575360
	int32_t NumRows(); // Function Icarus.FirearmDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574b80
	bool NotEqual_EnumName(struct FFirearmDataEnum A, struct FName B); // Function Icarus.FirearmDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15749a0
	bool NotEqual_EnumEnum(struct FFirearmDataEnum A, struct FFirearmDataEnum B); // Function Icarus.FirearmDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15747c0
	struct FFirearmDataEnum NameToStruct(struct FName NameValue); // Function Icarus.FirearmDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15746a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FirearmDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1574580
	struct FFirearmDataRowHandle MakeLiteralFirearmData(struct FFirearmDataRowHandle RowHandle); // Function Icarus.FirearmDataLibrary.MakeLiteralFirearmData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15743e0
	struct FFirearmDataRowHandle MakeFirearmDataFromIndex(int32_t Index); // Function Icarus.FirearmDataLibrary.MakeFirearmDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15741a0
	struct FFirearmDataEnum MakeFirearmDataEnum(struct FFirearmDataEnum Enum); // Function Icarus.FirearmDataLibrary.MakeFirearmDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574120
	struct FFirearmDataRowHandle MakeFirearmData(struct FName RowName); // Function Icarus.FirearmDataLibrary.MakeFirearmData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574080
	bool IsValidName(struct FName NameValue); // Function Icarus.FirearmDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1573f60
	struct FFirearmDataEnum IntToStruct(int32_t IntValue); // Function Icarus.FirearmDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573de0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FirearmDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1573cc0
	void GetFirearmDataStruct(struct FFirearmDataRowHandle RowHandle, struct FFirearmData FirearmData, enum class EValid Paths); // Function Icarus.FirearmDataLibrary.GetFirearmDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1573700
	bool EqualEqual_FFirearmDataRowHandleFFirearmDataRowHandle(struct FFirearmDataRowHandle RowHandleA, struct FFirearmDataRowHandle RowHandleB); // Function Icarus.FirearmDataLibrary.EqualEqual_FFirearmDataRowHandleFFirearmDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573200
	bool EqualEqual_EnumEnum(struct FFirearmDataEnum A, struct FFirearmDataEnum B); // Function Icarus.FirearmDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573020
	struct FFirearmDataRowHandle CastToFirearmDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FirearmDataLibrary.CastToFirearmDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1572d40
	void BreakFirearmDataEnum(struct FFirearmDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FirearmDataLibrary.BreakFirearmDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1572a80
	void AddRowToFirearmDataTable(struct FName Name, struct FFirearmData Data, struct FFirearmDataRowHandle NewRow); // Function Icarus.FirearmDataLibrary.AddRowToFirearmDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15725f0
};

// Class Icarus.FirearmDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFirearmDataTable : UIcarusDataTable {
};

// Class Icarus.FireControllerComponent
// Size: 0x140 (Inherited: 0xb0)
struct UFireControllerComponent : UActorComponent {
	struct AFireInstance* FireInstanceClass; // 0xb0(0x08)
	struct AFireInstanceShadow* FireInstanceShadowClass; // 0xb8(0x08)
	struct FTagQueriesRowHandle CanIgniteFireQueryRowHandle; // 0xc0(0x18)
	struct TArray<struct AFireInstance*> ActiveFireInstances; // 0xd8(0x10)
	struct TArray<struct AFireInstanceShadow*> ActiveFireInstanceShadows; // 0xe8(0x10)
	struct TArray<struct UFlammableInstance*> ActiveFlammableInstances; // 0xf8(0x10)
	struct TArray<struct UFlammableInstance*> DynamicInstances; // 0x108(0x10)
	bool bReplicatedStatesDirty; // 0x118(0x01)
	bool bInstancesOctreeDirty; // 0x119(0x01)
	char pad_11A[0x6]; // 0x11a(0x06)
	struct TArray<struct UFlammableComponent*> DebugFlammableClasses; // 0x120(0x10)
	int32_t CurrentFlammableInstanceIndex; // 0x130(0x04)
	char pad_134[0xc]; // 0x134(0x0c)

	void SetDebugFlammableState(struct UFlammableComponent* FlammableClass, bool bState); // Function Icarus.FireControllerComponent.SetDebugFlammableState // (Final|Native|Public|BlueprintCallable) // @ game+0x1575760
	void SetDebugDisableFires(bool bState); // Function Icarus.FireControllerComponent.SetDebugDisableFires // (Final|Native|Public|BlueprintCallable) // @ game+0x15256b0
	void OnFlammableInstanceState_Destroyed_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireControllerComponent.OnFlammableInstanceState_Destroyed_Enter // (Final|Native|Protected) // @ game+0x1575090
	void OnFlammableInstanceState_Combusting_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireControllerComponent.OnFlammableInstanceState_Combusting_Enter // (Final|Native|Protected) // @ game+0x1574e20
	void OnFireInstanceShadowDestroyed(struct AActor* DestroyedFireInstance); // Function Icarus.FireControllerComponent.OnFireInstanceShadowDestroyed // (Final|Native|Public) // @ game+0x1574c70
	void OnFireInstanceDestroyed(struct AActor* DestroyedFireInstance); // Function Icarus.FireControllerComponent.OnFireInstanceDestroyed // (Final|Native|Public) // @ game+0x1574be0
	bool IsDebugDisableFiresEnabled(); // Function Icarus.FireControllerComponent.IsDebugDisableFiresEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1523ba0
	struct TArray<struct UFlammableInstance*> GetFlammableInstancesWithinBiome(struct FBiomesRowHandle Biome); // Function Icarus.FireControllerComponent.GetFlammableInstancesWithinBiome // (Final|Native|Public|BlueprintCallable) // @ game+0x1573b10
	struct TArray<struct UFlammableInstance*> GetFlammableInstancesIntersectingBounds(struct FBoxSphereBounds Bounds); // Function Icarus.FireControllerComponent.GetFlammableInstancesIntersectingBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1573a30
	struct TArray<struct AFireInstance*> GetFireInstancesIntersectingBounds(struct FBoxSphereBounds Bounds); // Function Icarus.FireControllerComponent.GetFireInstancesIntersectingBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1573620
	bool GetDebugFlammableState(struct UFlammableComponent* FlammableClass); // Function Icarus.FireControllerComponent.GetDebugFlammableState // (Final|Native|Public|BlueprintCallable) // @ game+0x1573550
	struct TArray<struct UObject*> GetAllFlammableComponentClasses(); // Function Icarus.FireControllerComponent.GetAllFlammableComponentClasses // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15734a0
};

// Class Icarus.FireInstanceBase
// Size: 0x2e8 (Inherited: 0x2a0)
struct AFireInstanceBase : AIcarusActor {
	struct UConcaveHullMesh* PropagatedMesh; // 0x2a0(0x08)
	bool bPropagatedMeshDirty; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	float CurrentLifeTime; // 0x2ac(0x04)
	struct TArray<struct UFlammableInstance*> Instances; // 0x2b0(0x10)
	bool bDebugPropagationMesh; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	struct FBoxSphereBounds InstancesBounds; // 0x2c4(0x1c)
	bool bInstanceBoundsDirty; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)

	void OnTransferredTo(struct AFireInstanceBase* Dest, struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnTransferredTo // (Native|Event|Public|BlueprintEvent) // @ game+0x1575290
	void OnTransferredFrom(struct AFireInstanceBase* Source, struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnTransferredFrom // (Native|Event|Public|BlueprintEvent) // @ game+0x15751c0
	void OnPropagatedMeshGenerated(); // Function Icarus.FireInstanceBase.OnPropagatedMeshGenerated // (Native|Event|Public|BlueprintEvent) // @ game+0x8e94f0
	void OnFlammableInstanceState_Destroyed_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireInstanceBase.OnFlammableInstanceState_Destroyed_Enter // (Final|Native|Public) // @ game+0x1574fc0
	void OnFlammableInstanceRemoved(struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnFlammableInstanceRemoved // (Native|Event|Public|BlueprintEvent) // @ game+0x1574d90
	void OnFlammableInstanceAdded(struct UFlammableInstance* Instance); // Function Icarus.FireInstanceBase.OnFlammableInstanceAdded // (Native|Event|Public|BlueprintEvent) // @ game+0x1574d00
	struct UFireControllerComponent* GetFireController(); // Function Icarus.FireInstanceBase.GetFireController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15735f0
	float GetAverageTemperature(); // Function Icarus.FireInstanceBase.GetAverageTemperature // (Final|Native|Public|BlueprintCallable) // @ game+0x1573520
	bool CheckBoundsOverlapPropagationMesh(struct FBoxSphereBounds Bounds); // Function Icarus.FireInstanceBase.CheckBoundsOverlapPropagationMesh // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1572f80
};

// Class Icarus.FireInstance
// Size: 0x2f8 (Inherited: 0x2e8)
struct AFireInstance : AFireInstanceBase {
	float MinTimeBetweenPropagation; // 0x2e8(0x04)
	float MaxTimeBetweenPropagation; // 0x2ec(0x04)
	float NextPropagationTime; // 0x2f0(0x04)
	char pad_2F4[0x4]; // 0x2f4(0x04)

	void ResetFirePropagation(); // Function Icarus.FireInstance.ResetFirePropagation // (Final|Native|Public|BlueprintCallable) // @ game+0x15754a0
	void OnFlammableInstanceState_Combusting_Exit(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FireInstance.OnFlammableInstanceState_Combusting_Exit // (Final|Native|Public) // @ game+0x1574ef0
};

// Class Icarus.FireInstanceShadow
// Size: 0x300 (Inherited: 0x2e8)
struct AFireInstanceShadow : AFireInstanceBase {
	struct TArray<struct FBox> InstanceBoxes; // 0x2e8(0x10)
	bool bReadyToDestroy; // 0x2f8(0x01)
	char pad_2F9[0x7]; // 0x2f9(0x07)
};

// Class Icarus.FishActor
// Size: 0x390 (Inherited: 0x2a0)
struct AFishActor : AIcarusActor {
	struct USkeletalMeshComponent* Mesh; // 0x2a0(0x08)
	struct UFishManager* FishManager; // 0x2a8(0x08)
	struct FFishSetupRowHandle FishSetup; // 0x2b0(0x18)
	bool bDead; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float Scale; // 0x2cc(0x04)
	struct AActor* AttachActor; // 0x2d0(0x08)
	struct FVector_NetQuantize RepLocation; // 0x2d8(0x0c)
	struct FVector_NetQuantize TargetLocation; // 0x2e4(0x0c)
	struct AIcarusPlayerCharacter* AwarenessTarget; // 0x2f0(0x08)
	float AwarenessTimerInterval; // 0x2f8(0x04)
	float AwarenessCooldownLength; // 0x2fc(0x04)
	float CorrectionVariance; // 0x300(0x04)
	int32_t FindNewTargetAttempts; // 0x304(0x04)
	struct FFishSetup FishSetupData; // 0x308(0x78)
	struct FTimerHandle AwarenessTimerHandle; // 0x380(0x08)
	float NextAwarenessTimestamp; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)

	void SetScale(float NewScale); // Function Icarus.FishActor.SetScale // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1575830
	void SetDead(bool bNewDead); // Function Icarus.FishActor.SetDead // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x15756d0
	void SetAttachActor(struct AActor* NewAttachActor); // Function Icarus.FishActor.SetAttachActor // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1575640
	void OnRep_Scale(); // Function Icarus.FishActor.OnRep_Scale // (Final|Native|Protected) // @ game+0x15751a0
	void OnRep_Dead(); // Function Icarus.FishActor.OnRep_Dead // (Final|Native|Protected) // @ game+0x1575180
	void OnRep_AttachActor(); // Function Icarus.FishActor.OnRep_AttachActor // (Final|Native|Protected) // @ game+0x1575160
	bool IsAware(); // Function Icarus.FishActor.IsAware // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573f30
	bool IsAggressive(); // Function Icarus.FishActor.IsAggressive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573f00
	float GetMovementSpeed(); // Function Icarus.FishActor.GetMovementSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1573c50
	struct FVector GetGoalLocation(); // Function Icarus.FishActor.GetGoalLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1573c10
	void BPOnRep_Scale(); // Function Icarus.FishActor.BPOnRep_Scale // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void BPOnRep_Dead(); // Function Icarus.FishActor.BPOnRep_Dead // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void BPOnRep_AttachActor(); // Function Icarus.FishActor.BPOnRep_AttachActor // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void AttackPlayer(struct AIcarusPlayerCharacter* Player); // Function Icarus.FishActor.AttackPlayer // (Native|Event|Public|BlueprintEvent) // @ game+0x15729f0
};

// Class Icarus.FishManager
// Size: 0xd8 (Inherited: 0xb0)
struct UFishManager : UActorComponent {
	char pad_B0[0x4]; // 0xb0(0x04)
	bool bFishEnabled; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	struct TArray<struct AFishActor*> TotalFish; // 0xb8(0x10)
	float WaterZHeight; // 0xc8(0x04)
	char pad_CC[0xc]; // 0xcc(0x0c)

	struct FVector_NetQuantize GetNextPoint(); // Function Icarus.FishManager.GetNextPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x1573c80
	void FishRemoved(); // Function Icarus.FishManager.FishRemoved // (Final|Native|Public|BlueprintCallable) // @ game+0x1573480
};

// Class Icarus.FishSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFishSetupLibrary : URowLibrary {

	struct FFishSetupRowHandle StructToRowHandle(struct FFishSetupEnum EnumValue); // Function Icarus.FishSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1575be0
	struct FName StructToName(struct FFishSetupEnum EnumValue); // Function Icarus.FishSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1575a90
	int32_t StructToInt(struct FFishSetupEnum EnumValue); // Function Icarus.FishSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1575950
	struct FFishSetupEnum RowHandleToStruct(struct FFishSetupRowHandle RowHandle); // Function Icarus.FishSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1575580
	void RemoveRowFromFishSetupTable(struct FName Name); // Function Icarus.FishSetupLibrary.RemoveRowFromFishSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1575420
	void RefreshConstants(); // Function Icarus.FishSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1575380
	int32_t NumRows(); // Function Icarus.FishSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574bb0
	bool NotEqual_EnumName(struct FFishSetupEnum A, struct FName B); // Function Icarus.FishSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574a90
	bool NotEqual_EnumEnum(struct FFishSetupEnum A, struct FFishSetupEnum B); // Function Icarus.FishSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15748b0
	struct FFishSetupEnum NameToStruct(struct FName NameValue); // Function Icarus.FishSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574730
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FishSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1574610
	struct FFishSetupRowHandle MakeLiteralFishSetup(struct FFishSetupRowHandle RowHandle); // Function Icarus.FishSetupLibrary.MakeLiteralFishSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15744b0
	struct FFishSetupRowHandle MakeFishSetupFromIndex(int32_t Index); // Function Icarus.FishSetupLibrary.MakeFishSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574350
	struct FFishSetupEnum MakeFishSetupEnum(struct FFishSetupEnum Enum); // Function Icarus.FishSetupLibrary.MakeFishSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15742d0
	struct FFishSetupRowHandle MakeFishSetup(struct FName RowName); // Function Icarus.FishSetupLibrary.MakeFishSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1574230
	bool IsValidName(struct FName NameValue); // Function Icarus.FishSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1573ff0
	struct FFishSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.FishSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573e70
	struct FName IntToName(int32_t IntValue); // Function Icarus.FishSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1573d50
	void GetFishSetupStruct(struct FFishSetupRowHandle RowHandle, struct FFishSetup FishSetup, enum class EValid Paths); // Function Icarus.FishSetupLibrary.GetFishSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15738a0
	bool EqualEqual_FFishSetupRowHandleFFishSetupRowHandle(struct FFishSetupRowHandle RowHandleA, struct FFishSetupRowHandle RowHandleB); // Function Icarus.FishSetupLibrary.EqualEqual_FFishSetupRowHandleFFishSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573340
	bool EqualEqual_EnumEnum(struct FFishSetupEnum A, struct FFishSetupEnum B); // Function Icarus.FishSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1573110
	struct FFishSetupRowHandle CastToFishSetupRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FishSetupLibrary.CastToFishSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1572e60
	void BreakFishSetupEnum(struct FFishSetupEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FishSetupLibrary.BreakFishSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1572be0
	void AddRowToFishSetupTable(struct FName Name, struct FFishSetup Data, struct FFishSetupRowHandle NewRow); // Function Icarus.FishSetupLibrary.AddRowToFishSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1572780
};

// Class Icarus.FishSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFishSetupTable : UIcarusDataTable {
};

// Class Icarus.FlagsMultiRowHandleFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFlagsMultiRowHandleFunctionLibrary : UBlueprintFunctionLibrary {

	struct FFlagsMultiRowHandle Make(enum class EFlagsTableType Enum, struct FName RowName); // Function Icarus.FlagsMultiRowHandleFunctionLibrary.Make // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x1579b60
	struct FName GetTableNameByIndex(char TableIndex); // Function Icarus.FlagsMultiRowHandleFunctionLibrary.GetTableNameByIndex // (Final|Native|Static|Public) // @ game+0x1579940
	char GetTableIndexByName(struct FName TableName); // Function Icarus.FlagsMultiRowHandleFunctionLibrary.GetTableIndexByName // (Final|Native|Static|Public) // @ game+0x15798b0
	struct FFlagsMultiRowHandle FromSessionFlagsRowHandle(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleFunctionLibrary.FromSessionFlagsRowHandle // (Final|Native|Static|Public) // @ game+0x1578d90
	struct FFlagsMultiRowHandle FromCharacterFlagsRowHandle(struct FCharacterFlagsRowHandle RowHandle); // Function Icarus.FlagsMultiRowHandleFunctionLibrary.FromCharacterFlagsRowHandle // (Final|Native|Static|Public) // @ game+0x1578cc0
	void Break(struct FFlagsMultiRowHandle MultiRowHandle, enum class EFlagsTableType OutEnum, struct FName OutName); // Function Icarus.FlagsMultiRowHandleFunctionLibrary.Break // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15785e0
};

// Class Icarus.FlagsSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UFlagsSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnSessionFlagsUpdatedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnSessionFlagChangedNotify; // 0x40(0x10)

	void BroadcastSessionFlagsUpdatedDelegate(struct AActor* FlagActor); // Function Icarus.FlagsSubsystem.BroadcastSessionFlagsUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x15788c0
	void BroadcastSessionFlagChangedDelegate(struct AMissionManager* MissionManager, struct FSessionFlagsRowHandle Flag, bool State); // Function Icarus.FlagsSubsystem.BroadcastSessionFlagChangedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1578740
};

// Class Icarus.FlammableComponent
// Size: 0xe0 (Inherited: 0xd0)
struct UFlammableComponent : UTraitComponent {
	struct UFlammableInstance* CurrentFlammableInstance; // 0xd0(0x08)
	bool bDebugFlammableInstances; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)

	void OnFlammableInstanceState_Any_Enter(struct UFlammableInstance* Instance, struct UFlammableState* FlammableState); // Function Icarus.FlammableComponent.OnFlammableInstanceState_Any_Enter // (Native|Event|Public|BlueprintEvent) // @ game+0x1579e90
	void OnFlammableInstanceDetached(struct UFlammableInstance* Instance); // Function Icarus.FlammableComponent.OnFlammableInstanceDetached // (Native|Event|Public|BlueprintEvent) // @ game+0x15447d0
	void OnFlammableInstanceAttached(struct UFlammableInstance* Instance); // Function Icarus.FlammableComponent.OnFlammableInstanceAttached // (Native|Event|Public|BlueprintEvent) // @ game+0x1579d20
	bool HasStaticMovement(); // Function Icarus.FlammableComponent.HasStaticMovement // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1579a40
	struct FTransform GetWorldTransform(); // Function Icarus.FlammableComponent.GetWorldTransform // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x15799d0
	struct FBoxSphereBounds GetLocalBounds(); // Function Icarus.FlammableComponent.GetLocalBounds // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1579840
	bool GetFlammableData(struct FFlammableData OutData); // Function Icarus.FlammableComponent.GetFlammableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15790e0
	float GetCombustionTemperature(); // Function Icarus.FlammableComponent.GetCombustionTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579020
	float GetCombustionMaximumTemperature(); // Function Icarus.FlammableComponent.GetCombustionMaximumTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1578fc0
	struct TArray<struct FFlammableTargetIgnite> GatherPropagationIgnitions(struct UFlammableInstance* Instance); // Function Icarus.FlammableComponent.GatherPropagationIgnitions // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1578e60
	bool CanPropagateToTarget(struct FFlammableTargetIgnite Target); // Function Icarus.FlammableComponent.CanPropagateToTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1578a10
	bool CanPropagate(enum class EFlammablePropagationType PropagationType); // Function Icarus.FlammableComponent.CanPropagate // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1578980
	bool CanIgnite(); // Function Icarus.FlammableComponent.CanIgnite // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1578950
};

// Class Icarus.FlammableActor
// Size: 0x100 (Inherited: 0xe0)
struct UFlammableActor : UFlammableComponent {
	struct FFlammableRepState ReplicatedState; // 0xe0(0x18)
	bool bReplicatesState; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)

	void OnRep_ReplicatedState(); // Function Icarus.FlammableActor.OnRep_ReplicatedState // (Native|Public) // @ game+0x157a010
};

// Class Icarus.FlammableActorFLOD
// Size: 0x110 (Inherited: 0x100)
struct UFlammableActorFLOD : UFlammableActor {
	struct UFLODActorComponent* FLODActorComponent; // 0x100(0x08)
	struct UFlammableFISM* FlammableFISM; // 0x108(0x08)

	void RegisterRecordFlammableFISM(struct UFLODRecord* Record); // Function Icarus.FlammableActorFLOD.RegisterRecordFlammableFISM // (Final|Native|Protected) // @ game+0x157a500
	void OnUpdateInstanceVisuals(float FireSpread, float FireTemperature); // Function Icarus.FlammableActorFLOD.OnUpdateInstanceVisuals // (Native|Event|Protected|BlueprintEvent) // @ game+0x157a3a0
	void OnRevealing(struct UFLODActorComponent* Component, struct AActor* Actor, struct FTransform Transform); // Function Icarus.FlammableActorFLOD.OnRevealing // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x157a240
	void OnConceal(struct UFLODActorComponent* Component, struct AActor* Actor); // Function Icarus.FlammableActorFLOD.OnConceal // (Final|Native|Protected) // @ game+0x1579c50
};

// Class Icarus.FlammableFISM
// Size: 0x348 (Inherited: 0xe0)
struct UFlammableFISM : UFlammableComponent {
	struct UFLODRecord* RegisteredRecord; // 0xe0(0x08)
	struct TMap<int32_t, struct UFlammableInstanceFLOD*> CurrentFlammableInstances; // 0xe8(0x50)
	struct TMap<int32_t, struct FFlammableFISMVisualData> InstanceVisualData; // 0x138(0x50)
	struct TMap<int32_t, struct FFlammableFISMVQueuedVisualData> QueuedInstanceVisualData; // 0x188(0x50)
	struct FFlammableRepStateArray ReplicatedStatesArray; // 0x1d8(0x148)
	bool bReplicatedStatesDirty; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	float VisualFireTemperatureCombustion; // 0x324(0x04)
	float VisualFireTemperatureCombustionAdded; // 0x328(0x04)
	float VisualFireSpreadCombustion; // 0x32c(0x04)
	float VisualFireSpreadCombustionAdded; // 0x330(0x04)
	float VisualFireSpreadLerpSpeed; // 0x334(0x04)
	float VisualFireTemperatureLerpUpSpeed; // 0x338(0x04)
	float VisualFireTemperatureLerpDownSpeed; // 0x33c(0x04)
	float VisualEffectsFireSpreadLerpUpSpeed; // 0x340(0x04)
	float VisualEffectsFireSpreadLerpDownSpeed; // 0x344(0x04)

	bool UpdateQueuedInstanceEffects(int32_t InstanceIndex, struct FFlammableFISMVisualData VisualData); // Function Icarus.FlammableFISM.UpdateQueuedInstanceEffects // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x157aae0
	void UpdateInstanceVisualData_Pyrolysis(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Pyrolysis // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x157a9c0
	void UpdateInstanceVisualData_Detached(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Detached // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x157a8a0
	void UpdateInstanceVisualData_Combustion(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Combustion // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x157a780
	void UpdateInstanceVisualData_Combusted(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds, struct FFlammableFISMVisualData TargetVisualData); // Function Icarus.FlammableFISM.UpdateInstanceVisualData_Combusted // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x157a660
	void RegisterRecord(struct UFLODRecord* RegisteredRecord); // Function Icarus.FlammableFISM.RegisterRecord // (Final|Native|Public) // @ game+0x157a470
	void OnReplicatedStateRemoved(struct FFlammableRepState State); // Function Icarus.FlammableFISM.OnReplicatedStateRemoved // (Final|Native|Public|HasOutParms) // @ game+0x157a190
	void OnReplicatedStateChanged(struct FFlammableRepState State); // Function Icarus.FlammableFISM.OnReplicatedStateChanged // (Final|Native|Public|HasOutParms) // @ game+0x157a0e0
	void OnReplicatedStateAdded(struct FFlammableRepState State); // Function Icarus.FlammableFISM.OnReplicatedStateAdded // (Final|Native|Public|HasOutParms) // @ game+0x157a030
	void OnRep_Record(); // Function Icarus.FlammableFISM.OnRep_Record // (Final|Native|Public) // @ game+0x1579ff0
	void OnRecordFISMChanged(struct UFLODRecord* InRecord); // Function Icarus.FlammableFISM.OnRecordFISMChanged // (Final|Native|Public) // @ game+0x1579f60
	void OnFlammableInstanceFLODTick(struct UFlammableInstanceFLOD* Instance, float DeltaSeconds); // Function Icarus.FlammableFISM.OnFlammableInstanceFLODTick // (Native|Event|Public|BlueprintEvent) // @ game+0x1579db0
	bool HasValidFISM(); // Function Icarus.FlammableFISM.HasValidFISM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579a70
	struct UFLODRecord* GetRegisteredRecord(); // Function Icarus.FlammableFISM.GetRegisteredRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579890
	struct FTransform GetInstanceWorldTransform(int32_t InstanceIndex); // Function Icarus.FlammableFISM.GetInstanceWorldTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579790
	struct FBoxSphereBounds GetInstanceLocalBounds(int32_t InstanceIndex); // Function Icarus.FlammableFISM.GetInstanceLocalBounds // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x15796d0
	struct FFlammableRepState GetInstanceFlammableState(int32_t InstanceIndex); // Function Icarus.FlammableFISM.GetInstanceFlammableState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579610
	struct TMap<int32_t, struct FFlammableFISMVisualData> GetInstanceCustomPrimitiveData(); // Function Icarus.FlammableFISM.GetInstanceCustomPrimitiveData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579510
	struct TMap<int32_t, struct UFlammableInstanceFLOD*> GetFlammableInstances(); // Function Icarus.FlammableFISM.GetFlammableInstances // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579260
	struct UFLODRecord* FindReplacementBurntRecord(); // Function Icarus.FlammableFISM.FindReplacementBurntRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1578c90
};

// Class Icarus.FlammableInstance
// Size: 0x2b0 (Inherited: 0x28)
struct UFlammableInstance : UObject {
	char pad_28[0x80]; // 0x28(0x80)
	struct TMap<int32_t, struct UFlammableInstance*> QueuedAsyncPayloadInstances; // 0xa8(0x50)
	bool bForceNextTickTemperatureUpdate; // 0xf8(0x01)
	bool bDebugInstance; // 0xf9(0x01)
	char pad_FA[0x6]; // 0xfa(0x06)
	struct UFlammableComponent* FlammableComponent; // 0x100(0x08)
	struct FFlammableTargetIgnite IgnitionTarget; // 0x108(0x30)
	float CurrentInstanceTime; // 0x138(0x04)
	float LastInstanceTime; // 0x13c(0x04)
	float CurrentTemperature; // 0x140(0x04)
	float LastTemperatureUpdate; // 0x144(0x04)
	float CombustionFuelMass; // 0x148(0x04)
	float CurrentHeatRate; // 0x14c(0x04)
	struct FBiomesRowHandle CurrentBiome; // 0x150(0x18)
	float EnvironmentTemperature; // 0x168(0x04)
	float ExtinguishStartTime; // 0x16c(0x04)
	float ExtinguishRampTimeAmount; // 0x170(0x04)
	float ExtinguishTimeAmount; // 0x174(0x04)
	struct UFlammableState* CurrentFlammableState; // 0x178(0x08)
	bool bHasInitialized; // 0x180(0x01)
	bool bHasStaticMovement; // 0x181(0x01)
	bool bHeatRateAffectedByTouching; // 0x182(0x01)
	char pad_183[0x5]; // 0x183(0x05)
	struct TMap<enum class EFlammableState, struct UFlammableState*> FlammableStates; // 0x188(0x50)
	struct FBoxSphereBounds CachedWorldBounds; // 0x1d8(0x1c)
	struct FBoxSphereBounds CachedLocalBounds; // 0x1f4(0x1c)
	struct FTransform CachedWorldTransform; // 0x210(0x30)
	struct TMap<struct UFlammableInstance*, struct FBox> CachedInstanceTouchingBoxes; // 0x240(0x50)
	char pad_290[0x20]; // 0x290(0x20)

	void SetFlammableState(enum class EFlammableState FlammableState, bool bAllowClient); // Function Icarus.FlammableInstance.SetFlammableState // (Final|Native|Public|BlueprintCallable) // @ game+0x157a590
	bool IsValidFlammable(); // Function Icarus.FlammableInstance.IsValidFlammable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x9e2140
	bool IsExtinguished(); // Function Icarus.FlammableInstance.IsExtinguished // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579b30
	bool IsCurrentState(enum class EFlammableState FlammableState); // Function Icarus.FlammableInstance.IsCurrentState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579aa0
	struct FTransform GetFlammableWorldTransform(); // Function Icarus.FlammableInstance.GetFlammableWorldTransform // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15794c0
	struct FBoxSphereBounds GetFlammableWorldBounds(); // Function Icarus.FlammableInstance.GetFlammableWorldBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579480
	struct UFlammableState* GetFlammableState(enum class EFlammableState FlammableState); // Function Icarus.FlammableInstance.GetFlammableState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15793f0
	struct FBoxSphereBounds GetFlammablePropagationBounds(); // Function Icarus.FlammableInstance.GetFlammablePropagationBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15793a0
	struct FBoxSphereBounds GetFlammableLocalBounds(); // Function Icarus.FlammableInstance.GetFlammableLocalBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579360
	struct UFireControllerComponent* GetFireController(); // Function Icarus.FlammableInstance.GetFireController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15790b0
	float GetCurrentFlammableStateElapsedTime(); // Function Icarus.FlammableInstance.GetCurrentFlammableStateElapsedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579080
	float GetCombustionTemperature(); // Function Icarus.FlammableInstance.GetCombustionTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1579050
	float GetCombustionMaximumTemperature(); // Function Icarus.FlammableInstance.GetCombustionMaximumTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1578ff0
	struct TArray<struct UFlammableState*> GetAllFlammableStates(); // Function Icarus.FlammableInstance.GetAllFlammableStates // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1578f40
	void Extinguish(float InExtinguishRampTimeAmount, float InExtinguishTimeAmount, bool bStopCombustionImmediately); // Function Icarus.FlammableInstance.Extinguish // (Final|Native|Public|BlueprintCallable) // @ game+0x1578b70
	void DebugVisualStats(float DeltaSeconds); // Function Icarus.FlammableInstance.DebugVisualStats // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x1578af0
};

// Class Icarus.FlammableInstanceFLOD
// Size: 0x2c0 (Inherited: 0x2b0)
struct UFlammableInstanceFLOD : UFlammableInstance {
	struct UFlammableFISM* FlammableFISMComponent; // 0x2a8(0x08)
	int32_t InstanceIndex; // 0x2b0(0x04)
	struct UFlammableActorFLOD* FlammableFLODActor; // 0x2b8(0x08)
};

// Class Icarus.FlammableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFlammableLibrary : URowLibrary {

	struct FFlammableRowHandle StructToRowHandle(struct FFlammableEnum EnumValue); // Function Icarus.FlammableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584b50
	struct FName StructToName(struct FFlammableEnum EnumValue); // Function Icarus.FlammableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584a10
	int32_t StructToInt(struct FFlammableEnum EnumValue); // Function Icarus.FlammableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15848d0
	struct FFlammableEnum RowHandleToStruct(struct FFlammableRowHandle RowHandle); // Function Icarus.FlammableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584750
	void RemoveRowFromFlammableTable(struct FName Name); // Function Icarus.FlammableLibrary.RemoveRowFromFlammableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1584650
	void RefreshConstants(); // Function Icarus.FlammableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1584580
	int32_t NumRows(); // Function Icarus.FlammableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584520
	bool NotEqual_EnumName(struct FFlammableEnum A, struct FName B); // Function Icarus.FlammableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584220
	bool NotEqual_EnumEnum(struct FFlammableEnum A, struct FFlammableEnum B); // Function Icarus.FlammableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584040
	struct FFlammableEnum NameToStruct(struct FName NameValue); // Function Icarus.FlammableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583f20
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FlammableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1583e00
	struct FFlammableRowHandle MakeLiteralFlammable(struct FFlammableRowHandle RowHandle); // Function Icarus.FlammableLibrary.MakeLiteralFlammable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583c60
	struct FFlammableRowHandle MakeFlammableFromIndex(int32_t Index); // Function Icarus.FlammableLibrary.MakeFlammableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1582eb0
	struct FFlammableEnum MakeFlammableEnum(struct FFlammableEnum Enum); // Function Icarus.FlammableLibrary.MakeFlammableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1582e30
	struct FFlammableRowHandle MakeFlammable(struct FName RowName); // Function Icarus.FlammableLibrary.MakeFlammable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1582d90
	bool IsValidName(struct FName NameValue); // Function Icarus.FlammableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1582c70
	struct FFlammableEnum IntToStruct(int32_t IntValue); // Function Icarus.FlammableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1582b50
	struct FName IntToName(int32_t IntValue); // Function Icarus.FlammableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1582a30
	void GetFlammableStruct(struct FFlammableRowHandle RowHandle, struct FFlammableData Flammable, enum class EValid Paths); // Function Icarus.FlammableLibrary.GetFlammableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15824c0
	bool EqualEqual_FFlammableRowHandleFFlammableRowHandle(struct FFlammableRowHandle RowHandleA, struct FFlammableRowHandle RowHandleB); // Function Icarus.FlammableLibrary.EqualEqual_FFlammableRowHandleFFlammableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1581e20
	bool EqualEqual_EnumEnum(struct FFlammableEnum A, struct FFlammableEnum B); // Function Icarus.FlammableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1581c40
	struct FFlammableRowHandle CastToFlammableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FlammableLibrary.CastToFlammableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15819e0
	void BreakFlammableEnum(struct FFlammableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FlammableLibrary.BreakFlammableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1581620
	void AddRowToFlammableTable(struct FName Name, struct FFlammableData Data, struct FFlammableRowHandle NewRow); // Function Icarus.FlammableLibrary.AddRowToFlammableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1581170
};

// Class Icarus.FlammableState
// Size: 0x30 (Inherited: 0x28)
struct UFlammableState : UObject {
	struct FMulticastSparseDelegate OnInit; // 0x28(0x01)
	struct FMulticastSparseDelegate OnEnter; // 0x29(0x01)
	struct FMulticastSparseDelegate OnExit; // 0x2a(0x01)
	struct FMulticastSparseDelegate OnTick; // 0x2b(0x01)
	float EnterStateTime; // 0x2c(0x04)

	enum class EFlammableState GetFlammableState(); // Function Icarus.FlammableState.GetFlammableState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1069d00
};

// Class Icarus.FlammableState_Detached
// Size: 0x30 (Inherited: 0x30)
struct UFlammableState_Detached : UFlammableState {
};

// Class Icarus.FlammableState_Pyrolysis
// Size: 0x30 (Inherited: 0x30)
struct UFlammableState_Pyrolysis : UFlammableState {
};

// Class Icarus.FlammableState_Combusting
// Size: 0x40 (Inherited: 0x30)
struct UFlammableState_Combusting : UFlammableState {
	float FuelMassRemaining; // 0x30(0x04)
	float NextPropagateSelfTime; // 0x34(0x04)
	float HeatOfCombustion; // 0x38(0x04)
	bool bInfiniteCombustionFuel; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Icarus.FlammableState_Combusted
// Size: 0x38 (Inherited: 0x30)
struct UFlammableState_Combusted : UFlammableState {
	bool bDetachAfterCombusted; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Icarus.FlammableState_Destroyed
// Size: 0x30 (Inherited: 0x30)
struct UFlammableState_Destroyed : UFlammableState {
};

// Class Icarus.FlammableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFlammableTable : UIcarusDataTable {
};

// Class Icarus.FlammableTargetFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFlammableTargetFunctionLibrary : UBlueprintFunctionLibrary {

	bool TryIgniteFlammableTarget(struct UObject* WorldContextObject, struct FFlammableTargetIgnite Target, struct UFlammableInstance* OutInstance); // Function Icarus.FlammableTargetFunctionLibrary.TryIgniteFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1584e10
	enum class EFireExtinguishResult TryExtinguishFlammableTarget(struct UObject* WorldContextObject, struct FFlammableTargetExtinguish Target, struct UFlammableInstance* OutFlammableInstance); // Function Icarus.FlammableTargetFunctionLibrary.TryExtinguishFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1584cb0
	bool NotEqual_FlammableTargetFlammableTarget(struct FFlammableTarget A, struct FFlammableTarget B); // Function Icarus.FlammableTargetFunctionLibrary.NotEqual_FlammableTargetFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1584400
	struct FFlammableTargetIgnite MakeFlammableTargetIgniteFromInstance(struct AActor* Causer, struct UFlammableInstance* Instance, float DesiredTemperatureValue, bool bFromPropagation); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetIgniteFromInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583920
	struct FFlammableTargetIgnite MakeFlammableTargetIgniteFromHitResult(struct AActor* Causer, struct FHitResult HitResult, float DesiredTemperatureValue, bool bFromPropagation); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetIgniteFromHitResult // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583700
	struct FFlammableTargetIgnite MakeFlammableTargetIgniteFromActor(struct AActor* Causer, struct AActor* Actor, float DesiredTemperatureValue, bool bFromPropagation); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetIgniteFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583570
	struct FFlammableTargetExtinguish MakeFlammableTargetExtinguishFromInstance(struct AActor* Causer, struct UFlammableInstance* Instance, float ExtinguishRampTime, float ExtinguishTime, bool bStopCombustionImmediately); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetExtinguishFromInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583390
	struct FFlammableTargetExtinguish MakeFlammableTargetExtinguishFromHitResult(struct AActor* Causer, struct FHitResult HitResult, float ExtinguishRampTime, float ExtinguishTime, bool bStopCombustionImmediately); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetExtinguishFromHitResult // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583120
	struct FFlammableTargetExtinguish MakeFlammableTargetExtinguishFromActor(struct AActor* Causer, struct AActor* Actor, float ExtinguishRampTime, float ExtinguishTime, bool bStopCombustionImmediately); // Function Icarus.FlammableTargetFunctionLibrary.MakeFlammableTargetExtinguishFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1582f40
	struct FBoxSphereBounds GetFlammableWorldBoundsFromTarget(struct FFlammableTarget Target); // Function Icarus.FlammableTargetFunctionLibrary.GetFlammableWorldBoundsFromTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1582650
	struct UFlammableInstance* GetFlammableInstanceFromTarget(struct FFlammableTarget Target); // Function Icarus.FlammableTargetFunctionLibrary.GetFlammableInstanceFromTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1582410
	struct UFlammableComponent* GetFlammableComponentFromTarget(struct FFlammableTarget Target); // Function Icarus.FlammableTargetFunctionLibrary.GetFlammableComponentFromTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1582360
	struct FFlammableTarget FlammableTargetIgniteToFlammableTarget(struct FFlammableTargetIgnite Target); // Function Icarus.FlammableTargetFunctionLibrary.FlammableTargetIgniteToFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1582290
	struct FFlammableTarget FlammableTargetExtinguishToFlammableTarget(struct FFlammableTargetExtinguish Target); // Function Icarus.FlammableTargetFunctionLibrary.FlammableTargetExtinguishToFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15821c0
	bool EqualEqual_FlammableTargetFlammableTarget(struct FFlammableTarget A, struct FFlammableTarget B); // Function Icarus.FlammableTargetFunctionLibrary.EqualEqual_FlammableTargetFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15820a0
	bool CanIgniteFlammableTarget(struct UObject* WorldContextObject, struct FFlammableTargetIgnite Target); // Function Icarus.FlammableTargetFunctionLibrary.CanIgniteFlammableTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15818e0
};

// Class Icarus.FloatableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFloatableLibrary : URowLibrary {

	struct FFloatableRowHandle StructToRowHandle(struct FFloatableEnum EnumValue); // Function Icarus.FloatableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584c00
	struct FName StructToName(struct FFloatableEnum EnumValue); // Function Icarus.FloatableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584ab0
	int32_t StructToInt(struct FFloatableEnum EnumValue); // Function Icarus.FloatableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584970
	struct FFloatableEnum RowHandleToStruct(struct FFloatableRowHandle RowHandle); // Function Icarus.FloatableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584810
	void RemoveRowFromFloatableTable(struct FName Name); // Function Icarus.FloatableLibrary.RemoveRowFromFloatableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15846d0
	void RefreshConstants(); // Function Icarus.FloatableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15845a0
	int32_t NumRows(); // Function Icarus.FloatableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584550
	bool NotEqual_EnumName(struct FFloatableEnum A, struct FName B); // Function Icarus.FloatableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584310
	bool NotEqual_EnumEnum(struct FFloatableEnum A, struct FFloatableEnum B); // Function Icarus.FloatableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1584130
	struct FFloatableEnum NameToStruct(struct FName NameValue); // Function Icarus.FloatableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583fb0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FloatableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1583e90
	struct FFloatableRowHandle MakeLiteralFloatable(struct FFloatableRowHandle RowHandle); // Function Icarus.FloatableLibrary.MakeLiteralFloatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583d30
	struct FFloatableRowHandle MakeFloatableFromIndex(int32_t Index); // Function Icarus.FloatableLibrary.MakeFloatableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583bd0
	struct FFloatableEnum MakeFloatableEnum(struct FFloatableEnum Enum); // Function Icarus.FloatableLibrary.MakeFloatableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583b50
	struct FFloatableRowHandle MakeFloatable(struct FName RowName); // Function Icarus.FloatableLibrary.MakeFloatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1583ab0
	bool IsValidName(struct FName NameValue); // Function Icarus.FloatableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1582d00
	struct FFloatableEnum IntToStruct(int32_t IntValue); // Function Icarus.FloatableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1582be0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FloatableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1582ac0
	void GetFloatableStruct(struct FFloatableRowHandle RowHandle, struct FFloatableData Floatable, enum class EValid Paths); // Function Icarus.FloatableLibrary.GetFloatableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15828a0
	bool EqualEqual_FFloatableRowHandleFFloatableRowHandle(struct FFloatableRowHandle RowHandleA, struct FFloatableRowHandle RowHandleB); // Function Icarus.FloatableLibrary.EqualEqual_FFloatableRowHandleFFloatableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1581f60
	bool EqualEqual_EnumEnum(struct FFloatableEnum A, struct FFloatableEnum B); // Function Icarus.FloatableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1581d30
	struct FFloatableRowHandle CastToFloatableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FloatableLibrary.CastToFloatableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1581b00
	void BreakFloatableEnum(struct FFloatableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FloatableLibrary.BreakFloatableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1581780
	void AddRowToFloatableTable(struct FName Name, struct FFloatableData Data, struct FFloatableRowHandle NewRow); // Function Icarus.FloatableLibrary.AddRowToFloatableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1581430
};

// Class Icarus.FloatableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFloatableTable : UIcarusDataTable {
};

// Class Icarus.FLOD
// Size: 0x2f0 (Inherited: 0x220)
struct AFLOD : AInfo {
	struct TArray<struct FFLODDescription> Descriptions; // 0x220(0x10)
	bool bDebugStats; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	struct FName DebugTileName; // 0x234(0x08)
	bool bDisabled; // 0x23c(0x01)
	char pad_23D[0x3]; // 0x23d(0x03)
	struct AFLODTile* TileClass; // 0x240(0x08)
	struct TArray<struct AFLODTile*> Tiles; // 0x248(0x10)
	struct TArray<struct UFLODActorPool*> ActorPools; // 0x258(0x10)
	struct TArray<struct UFLODInfluenceComponent*> RegisteredInfluences; // 0x268(0x10)
	struct TSet<struct FFLODInstanceInfluence> PreviousActiveInfluencedInstances; // 0x278(0x50)
	bool bHasInitialisedDescriptions; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct TArray<struct FPendingRegisterFISM> PendingRegisterFISMs; // 0x2d0(0x10)
	struct FTimerHandle ResolvePendingRegisterFISMsCallTimer; // 0x2e0(0x08)
	struct UFLODRecorderComponent* Recorder; // 0x2e8(0x08)

	void OnRep_FLODTileActors(); // Function Icarus.FLOD.OnRep_FLODTileActors // (Final|Native|Protected) // @ game+0x1588c10
	void OnPooledActorSpawned(struct UFLODActorPool* ActorPool, struct FFLODLevelDescription LevelDesc, struct AActor* SpawnedPooledActor); // Function Icarus.FLOD.OnPooledActorSpawned // (Final|Native|Public|HasOutParms) // @ game+0x1588a90
	bool IsReady(); // Function Icarus.FLOD.IsReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1588160
	struct TArray<struct AFLODTile*> GetWithinBoundsFLODTiles(struct FVector Location); // Function Icarus.FLOD.GetWithinBoundsFLODTiles // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1587f00
	struct FFLODDescriptionDVInfo GetDescriptionDataValidation(struct FFLODDescription Description); // Function Icarus.FLOD.GetDescriptionDataValidation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1587c90
	struct FFLODDescription FindFLODDescriptionForFISM(struct UFLODFISMComponent* FISM); // Function Icarus.FLOD.FindFLODDescriptionForFISM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1587b60
};

// Class Icarus.FLODActorComponent
// Size: 0x128 (Inherited: 0xb0)
struct UFLODActorComponent : UActorComponent {
	bool bSpawnedFromPool; // 0xb0(0x01)
	enum class EFLODActorState CurrentFLODState; // 0xb1(0x01)
	bool bIsReservingInstance; // 0xb2(0x01)
	char pad_B3[0x1]; // 0xb3(0x01)
	struct FFLODActorRecordInstance RecordInstance; // 0xb4(0x1c)
	struct FMulticastInlineDelegate OnRecordInstanceAssigned; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnRevealing; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnReveal; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnConcealing; // 0x100(0x10)
	struct FMulticastInlineDelegate OnConceal; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	bool RevealingImpl(struct FTransform Transform); // Function Icarus.FLODActorComponent.RevealingImpl // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1589130
	void Revealing(struct FTransform Transform); // Function Icarus.FLODActorComponent.Revealing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1589050
	bool RevealImpl(struct FTransform Transform); // Function Icarus.FLODActorComponent.RevealImpl // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1588f70
	void Reveal(struct FTransform Transform); // Function Icarus.FLODActorComponent.Reveal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1588e90
	void ReserveInstance(); // Function Icarus.FLODActorComponent.ReserveInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x1588e70
	void ReleaseInstance(); // Function Icarus.FLODActorComponent.ReleaseInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x1588d10
	bool ConcealingImpl(); // Function Icarus.FLODActorComponent.ConcealingImpl // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x155b020
	void Concealing(); // Function Icarus.FLODActorComponent.Concealing // (Final|Native|Public|BlueprintCallable) // @ game+0x1587870
	bool ConcealImpl(); // Function Icarus.FLODActorComponent.ConcealImpl // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14f41e0
	void Conceal(); // Function Icarus.FLODActorComponent.Conceal // (Final|Native|Public|BlueprintCallable) // @ game+0x1587850
};

// Class Icarus.FLODActorPool
// Size: 0x48 (Inherited: 0x28)
struct UFLODActorPool : UObject {
	struct AActor* ActorClass; // 0x28(0x08)
	int32_t InstancesInUse; // 0x30(0x04)
	int32_t InitBucketSize; // 0x34(0x04)
	struct TArray<struct AActor*> FreeBucket; // 0x38(0x10)

	void OnRetrievedActorDestroyed(struct AActor* DestroyedActor); // Function Icarus.FLODActorPool.OnRetrievedActorDestroyed // (Final|Native|Protected) // @ game+0x1588c30
	struct UFLODActorPool* DeterminePoolForActorClass(struct AActor* ActorClass); // Function Icarus.FLODActorPool.DeterminePoolForActorClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1587890
};

// Class Icarus.FLODTreePrefabPool
// Size: 0x50 (Inherited: 0x48)
struct UFLODTreePrefabPool : UFLODActorPool {
	struct ATreePrefab* TreePrefab; // 0x48(0x08)
};

// Class Icarus.UFLODItemActorPool
// Size: 0x48 (Inherited: 0x48)
struct UUFLODItemActorPool : UFLODActorPool {
};

// Class Icarus.FLODDescriptionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFLODDescriptionsLibrary : URowLibrary {

	struct FFLODDescriptionsRowHandle StructToRowHandle(struct FFLODDescriptionsEnum EnumValue); // Function Icarus.FLODDescriptionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1589410
	struct FName StructToName(struct FFLODDescriptionsEnum EnumValue); // Function Icarus.FLODDescriptionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1589370
	int32_t StructToInt(struct FFLODDescriptionsEnum EnumValue); // Function Icarus.FLODDescriptionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15892d0
	struct FFLODDescriptionsEnum RowHandleToStruct(struct FFLODDescriptionsRowHandle RowHandle); // Function Icarus.FLODDescriptionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1589210
	void RemoveRowFromFLODDescriptionsTable(struct FName Name); // Function Icarus.FLODDescriptionsLibrary.RemoveRowFromFLODDescriptionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1588df0
	void RefreshConstants(); // Function Icarus.FLODDescriptionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1588cc0
	int32_t NumRows(); // Function Icarus.FLODDescriptionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15887a0
	bool NotEqual_EnumName(struct FFLODDescriptionsEnum A, struct FName B); // Function Icarus.FLODDescriptionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15886b0
	bool NotEqual_EnumEnum(struct FFLODDescriptionsEnum A, struct FFLODDescriptionsEnum B); // Function Icarus.FLODDescriptionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15885c0
	struct FFLODDescriptionsEnum NameToStruct(struct FName NameValue); // Function Icarus.FLODDescriptionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1588530
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FLODDescriptionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15884a0
	struct FFLODDescriptionsRowHandle MakeLiteralFLODDescriptions(struct FFLODDescriptionsRowHandle RowHandle); // Function Icarus.FLODDescriptionsLibrary.MakeLiteralFLODDescriptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15883d0
	struct FFLODDescriptionsRowHandle MakeFLODDescriptionsFromIndex(int32_t Index); // Function Icarus.FLODDescriptionsLibrary.MakeFLODDescriptionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1588340
	struct FFLODDescriptionsEnum MakeFLODDescriptionsEnum(struct FFLODDescriptionsEnum Enum); // Function Icarus.FLODDescriptionsLibrary.MakeFLODDescriptionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15882c0
	struct FFLODDescriptionsRowHandle MakeFLODDescriptions(struct FName RowName); // Function Icarus.FLODDescriptionsLibrary.MakeFLODDescriptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1588220
	bool IsValidName(struct FName NameValue); // Function Icarus.FLODDescriptionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1588190
	struct FFLODDescriptionsEnum IntToStruct(int32_t IntValue); // Function Icarus.FLODDescriptionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15880d0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FLODDescriptionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1588040
	void GetFLODDescriptionsStruct(struct FFLODDescriptionsRowHandle RowHandle, struct FFLODDescription FLODDescriptions, enum class EValid Paths); // Function Icarus.FLODDescriptionsLibrary.GetFLODDescriptionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1587d40
	bool EqualEqual_FFLODDescriptionsRowHandleFFLODDescriptionsRowHandle(struct FFLODDescriptionsRowHandle RowHandleA, struct FFLODDescriptionsRowHandle RowHandleB); // Function Icarus.FLODDescriptionsLibrary.EqualEqual_FFLODDescriptionsRowHandleFFLODDescriptionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1587a20
	bool EqualEqual_EnumEnum(struct FFLODDescriptionsEnum A, struct FFLODDescriptionsEnum B); // Function Icarus.FLODDescriptionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1587930
	struct FFLODDescriptionsRowHandle CastToFLODDescriptionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FLODDescriptionsLibrary.CastToFLODDescriptionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1587730
	void BreakFLODDescriptionsEnum(struct FFLODDescriptionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FLODDescriptionsLibrary.BreakFLODDescriptionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15875d0
	void AddRowToFLODDescriptionsTable(struct FName Name, struct FFLODDescription Data, struct FFLODDescriptionsRowHandle NewRow); // Function Icarus.FLODDescriptionsLibrary.AddRowToFLODDescriptionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1587460
};

// Class Icarus.FLODDescriptionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFLODDescriptionsTable : UIcarusDataTable {
};

// Class Icarus.FLODFISMComponent
// Size: 0x750 (Inherited: 0x6a0)
struct UFLODFISMComponent : UFoliageInstancedStaticMeshComponent {
	int32_t RegisteredRecordIndex; // 0x6a0(0x04)
	struct TWeakObjectPtr<struct AFLODTile> RegisteredFLODTile; // 0x6a4(0x08)
	struct TWeakObjectPtr<struct UFlammableFISM> RegisteredFlammable; // 0x6ac(0x08)
	char pad_6B4[0x4]; // 0x6b4(0x04)
	struct FGameplayTagContainer GameplayTags; // 0x6b8(0x20)
	struct UFoliageType* CachedFoliageType; // 0x6d8(0x08)
	char pad_6E0[0x70]; // 0x6e0(0x70)

	bool HasRegisteredToFLOD(); // Function Icarus.FLODFISMComponent.HasRegisteredToFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1587fe0
	struct FName GetLevelTileName(); // Function Icarus.FLODFISMComponent.GetLevelTileName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1587ec0
};

// Class Icarus.FLODInfluenceComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UFLODInfluenceComponent : UActorComponent {
	bool bTryRegisterSelf; // 0xb0(0x01)
	bool bHasRegisteredAsInfluence; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
	struct TArray<struct FFLODInstanceInfluence> ActiveInstanceInfluences; // 0xb8(0x10)

	void UpdateActiveInfluences(); // Function Icarus.FLODInfluenceComponent.UpdateActiveInfluences // (Native|Event|Protected|BlueprintEvent) // @ game+0x15069f0
	void UpdateActiveInfluencedInstance(struct FFLODInstanceID InstanceId, int32_t InfluenceLevelIndex, float TimeoutDuration); // Function Icarus.FLODInfluenceComponent.UpdateActiveInfluencedInstance // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x15894c0
	void UnregisterInfluence(); // Function Icarus.FLODInfluenceComponent.UnregisterInfluence // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x14d6e50
	bool RemoveActiveInstanceInfluence(struct FFLODInstanceInfluence InstanceInfluence); // Function Icarus.FLODInfluenceComponent.RemoveActiveInstanceInfluence // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1588d30
	bool RegisterInfluence(); // Function Icarus.FLODInfluenceComponent.RegisterInfluence // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1588ce0
	void OnActiveInfluencedInstanceUpdated(struct FFLODInstanceInfluence InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceUpdated // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x15889e0
	void OnActiveInfluencedInstanceTimeout(struct FFLODInstanceInfluence InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceTimeout // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1588930
	void OnActiveInfluencedInstanceRemoved(struct FFLODInstanceInfluence InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceRemoved // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1588880
	void OnActiveInfluencedInstanceAdded(struct FFLODInstanceInfluence InstanceInfluence); // Function Icarus.FLODInfluenceComponent.OnActiveInfluencedInstanceAdded // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x15887d0
	bool HasRegisteredToFLOD(); // Function Icarus.FLODInfluenceComponent.HasRegisteredToFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1588010
	struct TArray<struct FFLODInstanceInfluence> GetActiveInstanceInfluences(); // Function Icarus.FLODInfluenceComponent.GetActiveInstanceInfluences // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1587c00
};

// Class Icarus.FLODInfluenceDistance
// Size: 0xd0 (Inherited: 0xc8)
struct UFLODInfluenceDistance : UFLODInfluenceComponent {
	float DistanceInfluenceTimeout; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Icarus.FLODInfluencePlayer
// Size: 0xe0 (Inherited: 0xd0)
struct UFLODInfluencePlayer : UFLODInfluenceDistance {
	float ViewTraceInfluenceTimeout; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct AIcarusPlayerController* RegisteredIcarusPlayerController; // 0xd8(0x08)
};

// Class Icarus.FLODLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFLODLibrary : UBlueprintFunctionLibrary {

	struct TArray<struct FFLODInstanceID> GetFLODInstancesOverlappingSphere(struct UObject* WorldContextObject, struct FVector Location, float Radius, struct FGameplayTagQuery TagQuery); // Function Icarus.FLODLibrary.GetFLODInstancesOverlappingSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1592d90
	struct AFLOD* GetFLOD(struct UObject* WorldContextObject); // Function Icarus.FLODLibrary.GetFLOD // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1592d00
	struct AActor* FindActorFromInstanceID(struct FFLODInstanceID InstanceId, char StateMask); // Function Icarus.FLODLibrary.FindActorFromInstanceID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1592a80
	bool EqualEqual_FFLODInstanceIDFFLODInstanceID(struct FFLODInstanceID A, struct FFLODInstanceID B); // Function Icarus.FLODLibrary.EqualEqual_FFLODInstanceIDFFLODInstanceID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1592980
	bool EqualEqual_FFLODInstanceFFLODInstance(struct FFLODRecordInstance A, struct FFLODRecordInstance B); // Function Icarus.FLODLibrary.EqualEqual_FFLODInstanceFFLODInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1592810
};

// Class Icarus.FLODRecord
// Size: 0x5c0 (Inherited: 0x28)
struct UFLODRecord : UObject {
	struct FMulticastSparseDelegate OnRecordFISMChanged; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t RecordIndex; // 0x2c(0x04)
	struct FName ComponentName; // 0x30(0x08)
	struct AFLODTile* Owner; // 0x38(0x08)
	struct TWeakObjectPtr<struct UFLODFISMComponent> RegisteredFISM; // 0x40(0x08)
	struct TArray<int32_t> ActorPoolIndices; // 0x48(0x10)
	struct TArray<struct FFLODRecordInstanceIndices> DesiredLevelStates; // 0x58(0x10)
	struct FFLODRecordStateView CurrentStateView; // 0x68(0xc0)
	struct FFLODRecordStateView TargetStateView; // 0x128(0xc0)
	struct FFLODRecordStateView PristineStateView; // 0x1e8(0xc0)
	bool bHasInitialized; // 0x2a8(0x01)
	enum class ENetRole RecordRole; // 0x2a9(0x01)
	char pad_2AA[0x6]; // 0x2aa(0x06)
	struct TArray<uint32_t> DestroyedInstanceData; // 0x2b0(0x10)
	struct FFLODRecordInstanceArray ReplicatedInstanceArray; // 0x2c0(0x148)
	struct TArray<struct FFLODRecordInstance> SanitizedInstances; // 0x408(0x10)
	struct FFLODRecordDynamicInstanceArray ReplicatedDynamicInstanceArray; // 0x418(0x148)
	struct TArray<struct FFLODRecordDynamicInstance> SanitizedDynamicInstances; // 0x560(0x10)
	bool bCheckPendingInstanceChanges; // 0x570(0x01)
	char pad_571[0x3]; // 0x571(0x03)
	int32_t CheckPendingInstanceChangesFrame; // 0x574(0x04)
	struct TArray<struct FFLODRecordPendingInstanceChange> PendingInstanceChanges; // 0x578(0x10)
	struct FFLODRecordInstanceChangeSet ActiveInstanceChangeSet; // 0x588(0x30)
	char pad_5B8[0x8]; // 0x5b8(0x08)

	void SetPristineStateViewModified(); // Function Icarus.FLODRecord.SetPristineStateViewModified // (Final|Native|Public|BlueprintCallable) // @ game+0x15932b0
	void RestoreInstances(struct TArray<int32_t> RestoreIndices); // Function Icarus.FLODRecord.RestoreInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x1593120
	void OnRep_DestroyedInstanceData(); // Function Icarus.FLODRecord.OnRep_DestroyedInstanceData // (Final|Native|Private) // @ game+0x15930e0
	bool HasRegisteredFISM(); // Function Icarus.FLODRecord.HasRegisteredFISM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1593010
	struct AFLOD* GetOwnerFLOD(); // Function Icarus.FLODRecord.GetOwnerFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1592fe0
	struct FFLODDescription GetDescription(); // Function Icarus.FLODRecord.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1592cc0
	void DestroyInstances(struct TArray<int32_t> DestroyIndices); // Function Icarus.FLODRecord.DestroyInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x1592710
	int32_t AddDynamicInstance(struct FTransform Transform); // Function Icarus.FLODRecord.AddDynamicInstance // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1592560
};

// Class Icarus.FLODRecorderComponent
// Size: 0xe0 (Inherited: 0xd8)
struct UFLODRecorderComponent : UIcarusStateRecorderComponent {
	struct FFLODRecorderRecord Record; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class Icarus.FLODRewardComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UFLODRewardComponent : UActorComponent {
	struct FItemRewardsRowHandle ItemRewards; // 0xb0(0x18)
};

// Class Icarus.FLODTile
// Size: 0x2d8 (Inherited: 0x220)
struct AFLODTile : AInfo {
	struct FName TileName; // 0x220(0x08)
	float RelevanceRadius; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct AFLODTileBehaviourHarness* BehaviourHarness; // 0x230(0x08)
	struct TMap<int32_t, struct UFLODRecord*> Records; // 0x238(0x50)
	bool bDebugInstancesCurrent; // 0x288(0x01)
	bool bDebugInstancesCurrentAdv; // 0x289(0x01)
	bool bDebugStats; // 0x28a(0x01)
	char pad_28B[0x1]; // 0x28b(0x01)
	int32_t DebugRecordIndex; // 0x28c(0x04)
	struct TArray<struct UMaterialInterface*> DebugInstanceCurrentMaterials; // 0x290(0x10)
	char pad_2A0[0x18]; // 0x2a0(0x18)
	struct TArray<struct UFLODRecord*> ReplicatedRecords; // 0x2b8(0x10)
	bool bReadingGameStateFromDatabase; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UFLODTileRecorderComponent* Recorder; // 0x2d0(0x08)

	int32_t SwapRecordInstance(struct UFLODRecord* SourceRecord, struct UFLODRecord* TargetRecord, int32_t InstanceIndex); // Function Icarus.FLODTile.SwapRecordInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x15932d0
	void SetDebugInstancesCurrent(bool bState); // Function Icarus.FLODTile.SetDebugInstancesCurrent // (Final|Native|Public|BlueprintCallable) // @ game+0x1593220
	void OnRep_ReplicatedRecords(); // Function Icarus.FLODTile.OnRep_ReplicatedRecords // (Final|Native|Protected) // @ game+0x1593100
	bool IsBasedOnLandscapeProxy(struct ALandscapeProxy* LandscapeProxy); // Function Icarus.FLODTile.IsBasedOnLandscapeProxy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1593040
	struct AFLOD* GetOwnerFLOD(); // Function Icarus.FLODTile.GetOwnerFLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1592fb0
	struct UFLODRecord* FindRecordByRecordIndex(int32_t RecordIndex); // Function Icarus.FLODTile.FindRecordByRecordIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1592c20
	struct UFLODFISMComponent* FindFISMFromRecordIndex(int32_t RecordIndex); // Function Icarus.FLODTile.FindFISMFromRecordIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1592b80
	void DebugDestroyAllInstances(int32_t RecordIndex, bool bRestore); // Function Icarus.FLODTile.DebugDestroyAllInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x1592640
};

// Class Icarus.FLODTileBehaviourHarness
// Size: 0x238 (Inherited: 0x220)
struct AFLODTileBehaviourHarness : AActor {
	struct AFLODTile* OwnerTile; // 0x220(0x08)
	struct TArray<struct UFlammableFISM*> FlammableComponents; // 0x228(0x10)
};

// Class Icarus.FLODTileRecorderComponent
// Size: 0x140 (Inherited: 0xd8)
struct UFLODTileRecorderComponent : UIcarusStateRecorderComponent {
	char pad_D8[0x8]; // 0xd8(0x08)
	struct FFLODTileRecorderRecord Record; // 0xe0(0x60)
};

// Class Icarus.FMODParameterFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFMODParameterFunctionLibrary : UBlueprintFunctionLibrary {

	void SetGlobalVolumeSoundeffectsParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeSoundeffectsParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159c090
	void SetGlobalVolumeMusicParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeMusicParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159c010
	void SetGlobalVolumeMasterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeMasterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bf90
	void SetGlobalVolumeDialogueParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeDialogueParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bf10
	void SetGlobalVolumeAmbientParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalVolumeAmbientParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159be90
	void SetGlobalPlayerZPositionParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerZPositionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159be10
	void SetGlobalPlayerUnderwaterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerUnderwaterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bd90
	void SetGlobalPlayerStaminaParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerStaminaParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bd10
	void SetGlobalPlayerShelterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerShelterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bc90
	void SetGlobalPlayerReflectionFRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionFRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bc10
	void SetGlobalPlayerReflectionFLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionFLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bb90
	void SetGlobalPlayerReflectionBRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionBRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159bb10
	void SetGlobalPlayerReflectionBLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerReflectionBLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ba90
	void SetGlobalPlayerMatFRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatFRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ba10
	void SetGlobalPlayerMatFLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatFLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b990
	void SetGlobalPlayerMatBRParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatBRParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b910
	void SetGlobalPlayerMatBLParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerMatBLParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b890
	void SetGlobalPlayerKillcamParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerKillcamParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b810
	void SetGlobalPlayerHealthParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerHealthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b790
	void SetGlobalPlayerDeadParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerDeadParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b710
	void SetGlobalPlayerClosestReflectionParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerClosestReflectionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b690
	void SetGlobalPlayerCharacterVoiceParameter(enum class EGlobalPlayerCharacterVoiceFMODParam GlobalPlayerCharacterVoiceValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerCharacterVoiceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b620
	void SetGlobalPlayerAverageReflectionParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerAverageReflectionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b5a0
	void SetGlobalPlayerAsleepParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalPlayerAsleepParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b520
	void SetGlobalMusicIcarusThemePlayCountParameter(int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalMusicIcarusThemePlayCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b4a0
	void SetGlobalHabMasterParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalHabMasterParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b420
	void SetGlobalFoliageTreeCountParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalFoliageTreeCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b3a0
	void SetGlobalFoliageBushCountParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalFoliageBushCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b320
	void SetGlobalEnvironmentWindParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentWindParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b2a0
	void SetGlobalEnvironmentWindExposureParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentWindExposureParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b220
	void SetGlobalEnvironmentTimeParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentTimeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b1a0
	void SetGlobalEnvironmentThunderParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentThunderParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b120
	void SetGlobalEnvironmentStormParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentStormParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b0a0
	void SetGlobalEnvironmentSnowstormParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentSnowstormParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159b020
	void SetGlobalEnvironmentSnowParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentSnowParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159afa0
	void SetGlobalEnvironmentSandstormParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentSandstormParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159af20
	void SetGlobalEnvironmentRainParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentRainParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159aea0
	void SetGlobalEnvironmentOvercastParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentOvercastParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ae20
	void SetGlobalEnvironmentFireIntensityParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentFireIntensityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ada0
	void SetGlobalEnvironmentDebrisParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentDebrisParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ad20
	void SetGlobalEnvironmentCaveParameter(float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalEnvironmentCaveParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159aca0
	void SetGlobalDropStateParameter(enum class EGlobalDropStateFMODParam GlobalDropStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetGlobalDropStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ac30
	void SetEventWeaponReloadingParameter(struct FFMODEventInstance EventInstance, enum class EWeaponReloadingFMODParam WeaponReloadingValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponReloadingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159ab80
	void SetEventWeaponChargingParameter(struct FFMODEventInstance EventInstance, enum class EWeaponChargingFMODParam WeaponChargingValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponChargingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159aad0
	void SetEventWeaponChargeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponChargeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159aa10
	void SetEventWeaponBallisticLaunchVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponBallisticLaunchVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a950
	void SetEventWeaponAmmoParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWeaponAmmoParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a890
	void SetEventWaterWaterfallWidthParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterWaterfallWidthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a7d0
	void SetEventWaterWaterfallHeightParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterWaterfallHeightParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a710
	void SetEventWaterProximityInfluenceParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterProximityInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a650
	void SetEventWaterPlayerZPositionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterPlayerZPositionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a590
	void SetEventWaterImmersionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterImmersionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a4d0
	void SetEventWaterEnvelopmentParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventWaterEnvelopmentParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a410
	void SetEventUiMapZoomRocParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventUiMapZoomRocParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a350
	void SetEventUiCharacterLevelParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventUiCharacterLevelParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a290
	void SetEventTreeVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a1d0
	void SetEventTreeSplitPiecesParameter(struct FFMODEventInstance EventInstance, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeSplitPiecesParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a110
	void SetEventTreeMassParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeMassParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x159a050
	void SetEventTreeFallSpeedParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeFallSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599f90
	void SetEventTreeFallAmountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeFallAmountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599ed0
	void SetEventTreeDetachContextParameter(struct FFMODEventInstance EventInstance, enum class ETreeDetachContextFMODParam TreeDetachContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeDetachContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599e20
	void SetEventTreeBranchBreaksParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventTreeBranchBreaksParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599d60
	void SetEventSurfaceParameter(struct FFMODEventInstance EventInstance, enum class ESurfaceFMODParam SurfaceValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventSurfaceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599cb0
	void SetEventStationCollisionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventStationCollisionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599bf0
	void SetEventPlayerWaterDepthParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerWaterDepthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599b30
	void SetEventPlayerVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599a70
	void SetEventPlayerTypeParameter(struct FFMODEventInstance EventInstance, enum class EPlayerTypeFMODParam PlayerTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15999c0
	void SetEventPlayerStanceParameter(struct FFMODEventInstance EventInstance, enum class EPlayerStanceFMODParam PlayerStanceValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerStanceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599910
	void SetEventPlayerGroundStateParameter(struct FFMODEventInstance EventInstance, enum class EPlayerGroundStateFMODParam PlayerGroundStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerGroundStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599860
	void SetEventPlayerFoliageParameter(struct FFMODEventInstance EventInstance, enum class EPlayerFoliageFMODParam PlayerFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15997b0
	void SetEventPlayerFloorSlopeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerFloorSlopeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15996f0
	void SetEventPlayerDamageParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599630
	void SetEventPlayerBoneVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerBoneVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599570
	void SetEventPlayerArmourTypeParameter(struct FFMODEventInstance EventInstance, enum class EPlayerArmourTypeFMODParam PlayerArmourTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventPlayerArmourTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15994c0
	void SetEventOcclusionShelterContextParameter(struct FFMODEventInstance EventInstance, enum class EOcclusionShelterContextFMODParam OcclusionShelterContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventOcclusionShelterContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599410
	void SetEventOcclusionParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventOcclusionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599350
	void SetEventMusicFadeParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventMusicFadeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599290
	void SetEventMultiPointSpreadParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventMultiPointSpreadParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15991d0
	void SetEventMultiPointCountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventMultiPointCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599110
	void SetEventItemWeatherExposureParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemWeatherExposureParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1599050
	void SetEventItemHitSuccessParameter(struct FFMODEventInstance EventInstance, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemHitSuccessParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598f90
	void SetEventItemHealthParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemHealthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598ed0
	void SetEventItemFlameMovementParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemFlameMovementParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598e10
	void SetEventItemDamageParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598d50
	void SetEventItemCraftingTypeParameter(struct FFMODEventInstance EventInstance, enum class EItemCraftingTypeFMODParam ItemCraftingTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemCraftingTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598ca0
	void SetEventItemCraftingCountParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventItemCraftingCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598be0
	void SetEventIntensityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventIntensityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598b20
	void SetEventFireStateParameter(struct FFMODEventInstance EventInstance, enum class EFireStateFMODParam FireStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventFireStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598a70
	void SetEventEnvironmentLightningTargetParameter(struct FFMODEventInstance EventInstance, enum class EEnvironmentLightningTargetFMODParam EnvironmentLightningTargetValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventEnvironmentLightningTargetParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15989c0
	void SetEventEnvironmentBiomeInfluenceParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventEnvironmentBiomeInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598900
	void SetEventDropshipDescentStateParameter(struct FFMODEventInstance EventInstance, enum class EDropshipDescentStateFMODParam DropshipDescentStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventDropshipDescentStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598850
	void SetEventDamageTypeParameter(struct FFMODEventInstance EventInstance, enum class EDamageTypeFMODParam DamageTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventDamageTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15987a0
	void SetEventCreatureVelocityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCreatureVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15986e0
	void SetEventCreatureFootstepTypeParameter(struct FFMODEventInstance EventInstance, enum class ECreatureFootstepTypeFMODParam CreatureFootstepTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCreatureFootstepTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598630
	void SetEventCreatureFoliageParameter(struct FFMODEventInstance EventInstance, enum class ECreatureFoliageFMODParam CreatureFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCreatureFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598580
	void SetEventCaveListenerCorrelationParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCaveListenerCorrelationParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15984c0
	void SetEventCaveContextParameter(struct FFMODEventInstance EventInstance, enum class ECaveContextFMODParam CaveContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventCaveContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598410
	void SetEventBuildingStabilityParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingStabilityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598350
	void SetEventBuildingSnowParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingSnowParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598290
	void SetEventBuildingOpenParameter(struct FFMODEventInstance EventInstance, enum class EBuildingOpenFMODParam BuildingOpenValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventBuildingOpenParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15981e0
	void SetEventAnimStateParameter(struct FFMODEventInstance EventInstance, enum class EAnimStateFMODParam AnimStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventAnimStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598130
	void SetEventAnimSpeedParameter(struct FFMODEventInstance EventInstance, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetEventAnimSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1598070
	void SetComponentWeaponReloadingParameter(struct UFMODAudioComponent* AudioComponent, enum class EWeaponReloadingFMODParam WeaponReloadingValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponReloadingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597fb0
	void SetComponentWeaponChargingParameter(struct UFMODAudioComponent* AudioComponent, enum class EWeaponChargingFMODParam WeaponChargingValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponChargingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597ef0
	void SetComponentWeaponChargeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponChargeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597e30
	void SetComponentWeaponBallisticLaunchVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponBallisticLaunchVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597d70
	void SetComponentWeaponAmmoParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWeaponAmmoParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597cb0
	void SetComponentWaterWaterfallWidthParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterWaterfallWidthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597bf0
	void SetComponentWaterWaterfallHeightParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterWaterfallHeightParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597b30
	void SetComponentWaterProximityInfluenceParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterProximityInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597a70
	void SetComponentWaterPlayerZPositionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterPlayerZPositionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15979b0
	void SetComponentWaterImmersionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterImmersionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15978f0
	void SetComponentWaterEnvelopmentParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentWaterEnvelopmentParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597830
	void SetComponentUiMapZoomRocParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentUiMapZoomRocParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597770
	void SetComponentUiCharacterLevelParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentUiCharacterLevelParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15976b0
	void SetComponentTreeVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15975f0
	void SetComponentTreeSplitPiecesParameter(struct UFMODAudioComponent* AudioComponent, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeSplitPiecesParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597530
	void SetComponentTreeMassParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeMassParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597470
	void SetComponentTreeFallSpeedParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeFallSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15973b0
	void SetComponentTreeFallAmountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeFallAmountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15972f0
	void SetComponentTreeDetachContextParameter(struct UFMODAudioComponent* AudioComponent, enum class ETreeDetachContextFMODParam TreeDetachContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeDetachContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597230
	void SetComponentTreeBranchBreaksParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentTreeBranchBreaksParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1597170
	void SetComponentSurfaceParameter(struct UFMODAudioComponent* AudioComponent, enum class ESurfaceFMODParam SurfaceValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentSurfaceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15970b0
	void SetComponentStationCollisionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentStationCollisionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596ff0
	void SetComponentPlayerWaterDepthParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerWaterDepthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596f30
	void SetComponentPlayerVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596e70
	void SetComponentPlayerTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerTypeFMODParam PlayerTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596db0
	void SetComponentPlayerStanceParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerStanceFMODParam PlayerStanceValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerStanceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596cf0
	void SetComponentPlayerGroundStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerGroundStateFMODParam PlayerGroundStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerGroundStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596c30
	void SetComponentPlayerFoliageParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerFoliageFMODParam PlayerFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596b70
	void SetComponentPlayerFloorSlopeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerFloorSlopeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596ab0
	void SetComponentPlayerDamageParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15969f0
	void SetComponentPlayerBoneVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerBoneVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596930
	void SetComponentPlayerArmourTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EPlayerArmourTypeFMODParam PlayerArmourTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentPlayerArmourTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596870
	void SetComponentOcclusionShelterContextParameter(struct UFMODAudioComponent* AudioComponent, enum class EOcclusionShelterContextFMODParam OcclusionShelterContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentOcclusionShelterContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15967b0
	void SetComponentOcclusionParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentOcclusionParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15966f0
	void SetComponentMusicFadeParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentMusicFadeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596630
	void SetComponentMultiPointSpreadParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentMultiPointSpreadParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596570
	void SetComponentMultiPointCountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentMultiPointCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15964b0
	void SetComponentItemWeatherExposureParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemWeatherExposureParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15963f0
	void SetComponentItemHitSuccessParameter(struct UFMODAudioComponent* AudioComponent, int32_t IntegerValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemHitSuccessParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596330
	void SetComponentItemHealthParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemHealthParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596270
	void SetComponentItemFlameMovementParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemFlameMovementParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15961b0
	void SetComponentItemDamageParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemDamageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15960f0
	void SetComponentItemCraftingTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EItemCraftingTypeFMODParam ItemCraftingTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemCraftingTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1596030
	void SetComponentItemCraftingCountParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentItemCraftingCountParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595f70
	void SetComponentIntensityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentIntensityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595eb0
	void SetComponentFireStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EFireStateFMODParam FireStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentFireStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595df0
	void SetComponentEnvironmentLightningTargetParameter(struct UFMODAudioComponent* AudioComponent, enum class EEnvironmentLightningTargetFMODParam EnvironmentLightningTargetValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentEnvironmentLightningTargetParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595d30
	void SetComponentEnvironmentBiomeInfluenceParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentEnvironmentBiomeInfluenceParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595c70
	void SetComponentDropshipDescentStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EDropshipDescentStateFMODParam DropshipDescentStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentDropshipDescentStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595bb0
	void SetComponentDamageTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class EDamageTypeFMODParam DamageTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentDamageTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595af0
	void SetComponentCreatureVelocityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCreatureVelocityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595a30
	void SetComponentCreatureFootstepTypeParameter(struct UFMODAudioComponent* AudioComponent, enum class ECreatureFootstepTypeFMODParam CreatureFootstepTypeValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCreatureFootstepTypeParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595970
	void SetComponentCreatureFoliageParameter(struct UFMODAudioComponent* AudioComponent, enum class ECreatureFoliageFMODParam CreatureFoliageValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCreatureFoliageParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15958b0
	void SetComponentCaveListenerCorrelationParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCaveListenerCorrelationParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15957f0
	void SetComponentCaveContextParameter(struct UFMODAudioComponent* AudioComponent, enum class ECaveContextFMODParam CaveContextValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentCaveContextParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595730
	void SetComponentBuildingStabilityParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingStabilityParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595670
	void SetComponentBuildingSnowParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingSnowParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15955b0
	void SetComponentBuildingOpenParameter(struct UFMODAudioComponent* AudioComponent, enum class EBuildingOpenFMODParam BuildingOpenValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentBuildingOpenParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15954f0
	void SetComponentAnimStateParameter(struct UFMODAudioComponent* AudioComponent, enum class EAnimStateFMODParam AnimStateValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentAnimStateParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595430
	void SetComponentAnimSpeedParameter(struct UFMODAudioComponent* AudioComponent, float FloatValue); // Function Icarus.FMODParameterFunctionLibrary.SetComponentAnimSpeedParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1595370
};

// Class Icarus.FocusableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UFocusableComponent : UTraitComponent {
	bool IsFocused; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)

	void Unfocus(); // Function Icarus.FocusableComponent.Unfocus // (Final|Native|Public|BlueprintCallable) // @ game+0x15a2030
	void OnUnfocused(); // Function Icarus.FocusableComponent.OnUnfocused // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15069f0
	void OnRep_IsFocused(); // Function Icarus.FocusableComponent.OnRep_IsFocused // (Final|Native|Private) // @ game+0x15a1620
	void OnFocused(); // Function Icarus.FocusableComponent.OnFocused // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14d6e50
	struct AActor* GetInvokingActor(); // Function Icarus.FocusableComponent.GetInvokingActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x159ffd0
	bool GetFocusableData(struct FFocusableData OutData); // Function Icarus.FocusableComponent.GetFocusableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x159f810
	void Focus(); // Function Icarus.FocusableComponent.Focus // (Final|Native|Public|BlueprintCallable) // @ game+0x159f7f0
};

// Class Icarus.FocusableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFocusableLibrary : URowLibrary {

	struct FFocusableRowHandle StructToRowHandle(struct FFocusableEnum EnumValue); // Function Icarus.FocusableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1e20
	struct FName StructToName(struct FFocusableEnum EnumValue); // Function Icarus.FocusableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1c40
	int32_t StructToInt(struct FFocusableEnum EnumValue); // Function Icarus.FocusableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1a60
	struct FFocusableEnum RowHandleToStruct(struct FFocusableRowHandle RowHandle); // Function Icarus.FocusableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1820
	void RemoveRowFromFocusableTable(struct FName Name); // Function Icarus.FocusableLibrary.RemoveRowFromFocusableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15a16a0
	void RefreshConstants(); // Function Icarus.FocusableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15a1640
	int32_t NumRows(); // Function Icarus.FocusableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1590
	bool NotEqual_EnumName(struct FFocusableEnum A, struct FName B); // Function Icarus.FocusableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a12c0
	bool NotEqual_EnumEnum(struct FFocusableEnum A, struct FFocusableEnum B); // Function Icarus.FocusableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0ff0
	struct FFocusableEnum NameToStruct(struct FName NameValue); // Function Icarus.FocusableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0e40
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FocusableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15a0c90
	struct FFocusableRowHandle MakeLiteralFocusable(struct FFocusableRowHandle RowHandle); // Function Icarus.FocusableLibrary.MakeLiteralFocusable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0a20
	struct FFocusableRowHandle MakeFocusableFromIndex(int32_t Index); // Function Icarus.FocusableLibrary.MakeFocusableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0630
	struct FFocusableEnum MakeFocusableEnum(struct FFocusableEnum Enum); // Function Icarus.FocusableLibrary.MakeFocusableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a05b0
	struct FFocusableRowHandle MakeFocusable(struct FName RowName); // Function Icarus.FocusableLibrary.MakeFocusable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0510
	bool IsValidName(struct FName NameValue); // Function Icarus.FocusableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15a0360
	struct FFocusableEnum IntToStruct(int32_t IntValue); // Function Icarus.FocusableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a01b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FocusableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15a0000
	void GetFocusableStruct(struct FFocusableRowHandle RowHandle, struct FFocusableData Focusable, enum class EValid Paths); // Function Icarus.FocusableLibrary.GetFocusableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159f980
	bool EqualEqual_FFocusableRowHandleFFocusableRowHandle(struct FFocusableRowHandle RowHandleA, struct FFocusableRowHandle RowHandleB); // Function Icarus.FocusableLibrary.EqualEqual_FFocusableRowHandleFFocusableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x159f430
	bool EqualEqual_EnumEnum(struct FFocusableEnum A, struct FFocusableEnum B); // Function Icarus.FocusableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x159f160
	struct FFocusableRowHandle CastToFocusableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FocusableLibrary.CastToFocusableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159ee00
	void BreakFocusableEnum(struct FFocusableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FocusableLibrary.BreakFocusableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x159e9e0
	void AddRowToFocusableTable(struct FName Name, struct FFocusableData Data, struct FFocusableRowHandle NewRow); // Function Icarus.FocusableLibrary.AddRowToFocusableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159e490
};

// Class Icarus.FocusableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFocusableTable : UIcarusDataTable {
};

// Class Icarus.FoodTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFoodTypesLibrary : URowLibrary {

	struct FFoodTypesRowHandle StructToRowHandle(struct FFoodTypesEnum EnumValue); // Function Icarus.FoodTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1ed0
	struct FName StructToName(struct FFoodTypesEnum EnumValue); // Function Icarus.FoodTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1ce0
	int32_t StructToInt(struct FFoodTypesEnum EnumValue); // Function Icarus.FoodTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1b00
	struct FFoodTypesEnum RowHandleToStruct(struct FFoodTypesRowHandle RowHandle); // Function Icarus.FoodTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a18e0
	void RemoveRowFromFoodTypesTable(struct FName Name); // Function Icarus.FoodTypesLibrary.RemoveRowFromFoodTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15a1720
	void RefreshConstants(); // Function Icarus.FoodTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15a1660
	int32_t NumRows(); // Function Icarus.FoodTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a15c0
	bool NotEqual_EnumName(struct FFoodTypesEnum A, struct FName B); // Function Icarus.FoodTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a13b0
	bool NotEqual_EnumEnum(struct FFoodTypesEnum A, struct FFoodTypesEnum B); // Function Icarus.FoodTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a10e0
	struct FFoodTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.FoodTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0ed0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FoodTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15a0d20
	struct FFoodTypesRowHandle MakeLiteralFoodTypes(struct FFoodTypesRowHandle RowHandle); // Function Icarus.FoodTypesLibrary.MakeLiteralFoodTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0af0
	struct FFoodTypesRowHandle MakeFoodTypesFromIndex(int32_t Index); // Function Icarus.FoodTypesLibrary.MakeFoodTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a07e0
	struct FFoodTypesEnum MakeFoodTypesEnum(struct FFoodTypesEnum Enum); // Function Icarus.FoodTypesLibrary.MakeFoodTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0760
	struct FFoodTypesRowHandle MakeFoodTypes(struct FName RowName); // Function Icarus.FoodTypesLibrary.MakeFoodTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a06c0
	bool IsValidName(struct FName NameValue); // Function Icarus.FoodTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15a03f0
	struct FFoodTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.FoodTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0240
	struct FName IntToName(int32_t IntValue); // Function Icarus.FoodTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15a0090
	void GetFoodTypesStruct(struct FFoodTypesRowHandle RowHandle, struct FIcarusFoodType FoodTypes, enum class EValid Paths); // Function Icarus.FoodTypesLibrary.GetFoodTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159fb20
	bool EqualEqual_FFoodTypesRowHandleFFoodTypesRowHandle(struct FFoodTypesRowHandle RowHandleA, struct FFoodTypesRowHandle RowHandleB); // Function Icarus.FoodTypesLibrary.EqualEqual_FFoodTypesRowHandleFFoodTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x159f570
	bool EqualEqual_EnumEnum(struct FFoodTypesEnum A, struct FFoodTypesEnum B); // Function Icarus.FoodTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x159f250
	struct FFoodTypesRowHandle CastToFoodTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FoodTypesLibrary.CastToFoodTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159ef20
	void BreakFoodTypesEnum(struct FFoodTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FoodTypesLibrary.BreakFoodTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x159eb40
	void AddRowToFoodTypesTable(struct FName Name, struct FIcarusFoodType Data, struct FFoodTypesRowHandle NewRow); // Function Icarus.FoodTypesLibrary.AddRowToFoodTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159e620
};

// Class Icarus.FoodTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFoodTypesTable : UIcarusDataTable {
};

// Class Icarus.FuelComponent
// Size: 0x100 (Inherited: 0x100)
struct UFuelComponent : UResourceNetworkComponent {

	bool GetFuelData(struct FFuelData OutData); // Function Icarus.FuelComponent.GetFuelData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x159fcb0
};

// Class Icarus.FuelLibrary
// Size: 0x28 (Inherited: 0x28)
struct UFuelLibrary : URowLibrary {

	struct FFuelRowHandle StructToRowHandle(struct FFuelEnum EnumValue); // Function Icarus.FuelLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1f80
	struct FName StructToName(struct FFuelEnum EnumValue); // Function Icarus.FuelLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1d80
	int32_t StructToInt(struct FFuelEnum EnumValue); // Function Icarus.FuelLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a1ba0
	struct FFuelEnum RowHandleToStruct(struct FFuelRowHandle RowHandle); // Function Icarus.FuelLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a19a0
	void RemoveRowFromFuelTable(struct FName Name); // Function Icarus.FuelLibrary.RemoveRowFromFuelTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15a17a0
	void RefreshConstants(); // Function Icarus.FuelLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15a1680
	int32_t NumRows(); // Function Icarus.FuelLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a15f0
	bool NotEqual_EnumName(struct FFuelEnum A, struct FName B); // Function Icarus.FuelLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a14a0
	bool NotEqual_EnumEnum(struct FFuelEnum A, struct FFuelEnum B); // Function Icarus.FuelLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a11d0
	struct FFuelEnum NameToStruct(struct FName NameValue); // Function Icarus.FuelLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0f60
	int32_t NameToInt(struct FName NameValue); // Function Icarus.FuelLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15a0db0
	struct FFuelRowHandle MakeLiteralFuel(struct FFuelRowHandle RowHandle); // Function Icarus.FuelLibrary.MakeLiteralFuel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0bc0
	struct FFuelRowHandle MakeFuelFromIndex(int32_t Index); // Function Icarus.FuelLibrary.MakeFuelFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0990
	struct FFuelEnum MakeFuelEnum(struct FFuelEnum Enum); // Function Icarus.FuelLibrary.MakeFuelEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0910
	struct FFuelRowHandle MakeFuel(struct FName RowName); // Function Icarus.FuelLibrary.MakeFuel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a0870
	bool IsValidName(struct FName NameValue); // Function Icarus.FuelLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15a0480
	struct FFuelEnum IntToStruct(int32_t IntValue); // Function Icarus.FuelLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a02d0
	struct FName IntToName(int32_t IntValue); // Function Icarus.FuelLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15a0120
	void GetFuelStruct(struct FFuelRowHandle RowHandle, struct FFuelData Fuel, enum class EValid Paths); // Function Icarus.FuelLibrary.GetFuelStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159fe50
	bool EqualEqual_FFuelRowHandleFFuelRowHandle(struct FFuelRowHandle RowHandleA, struct FFuelRowHandle RowHandleB); // Function Icarus.FuelLibrary.EqualEqual_FFuelRowHandleFFuelRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x159f6b0
	bool EqualEqual_EnumEnum(struct FFuelEnum A, struct FFuelEnum B); // Function Icarus.FuelLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x159f340
	struct FFuelRowHandle CastToFuelRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.FuelLibrary.CastToFuelRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159f040
	void BreakFuelEnum(struct FFuelEnum Enum, struct FName Name, int32_t Index); // Function Icarus.FuelLibrary.BreakFuelEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x159eca0
	void AddRowToFuelTable(struct FName Name, struct FFuelData Data, struct FFuelRowHandle NewRow); // Function Icarus.FuelLibrary.AddRowToFuelTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x159e800
};

// Class Icarus.FuelTable
// Size: 0xb8 (Inherited: 0xb8)
struct UFuelTable : UIcarusDataTable {
};

// Class Icarus.GameModeStateRecorderComponent
// Size: 0x170 (Inherited: 0x150)
struct UGameModeStateRecorderComponent : UActorStateRecorderComponent {
	struct FGameModeRecord GameModeRecord; // 0x148(0x20)
};

// Class Icarus.GameUserSettingsSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UGameUserSettingsSubsystem : UGameInstanceSubsystem {

	bool RebindAxis(struct FKeybindContextsRowHandle Context, struct FInputAxisKeyMapping NewMapping, bool bController); // Function Icarus.GameUserSettingsSubsystem.RebindAxis // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15a8280
	bool RebindAction(struct FKeybindContextsRowHandle Context, struct FInputActionKeyMapping NewMapping, bool bController); // Function Icarus.GameUserSettingsSubsystem.RebindAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15a8080
	struct FInputAxisKeyMapping GetDefaultAxisMapping(struct FKeybindContextsRowHandle Context, struct FKeybindingsRowHandle RowHandle, bool bController, enum class EValid Paths); // Function Icarus.GameUserSettingsSubsystem.GetDefaultAxisMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15a63a0
	struct FInputActionKeyMapping GetDefaultActionMapping(struct FKeybindContextsRowHandle Context, struct FKeybindingsRowHandle RowHandle, bool bController, enum class EValid Paths); // Function Icarus.GameUserSettingsSubsystem.GetDefaultActionMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15a6150
	void GetCurrentAxisMapping(struct FKeybindingsRowHandle RowHandle, struct FInputAxisKeyMapping Out, enum class EValid Paths); // Function Icarus.GameUserSettingsSubsystem.GetCurrentAxisMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15a5f30
	void GetCurrentActionMapping(struct FKeybindingsRowHandle RowHandle, struct FInputActionKeyMapping Out, enum class EValid Paths); // Function Icarus.GameUserSettingsSubsystem.GetCurrentActionMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15a5d20
};

// Class Icarus.GeneratorComponent
// Size: 0x100 (Inherited: 0xd0)
struct UGeneratorComponent : UTraitComponent {
	char pad_D0[0x8]; // 0xd0(0x08)
	bool bGeneratorActive; // 0xd8(0x01)
	char pad_D9[0x3]; // 0xd9(0x03)
	int32_t CurrentGenerationRate; // 0xdc(0x04)
	struct FMulticastSparseDelegate OnGeneratorActiveStateUpdated; // 0xe0(0x01)
	struct FMulticastSparseDelegate OnGeneratorOutOfFuel; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)
	struct UInventory* TransmutationInventory; // 0xe8(0x08)
	struct TArray<struct UInventory*> AdditionalInventories; // 0xf0(0x10)

	bool TransmuteResource(float Delta); // Function Icarus.GeneratorComponent.TransmuteResource // (Final|Native|Public) // @ game+0x15a8bc0
	bool TransmuteItems(float Delta); // Function Icarus.GeneratorComponent.TransmuteItems // (Final|Native|Public) // @ game+0x15a8b30
	void ProduceByproduct(struct FItemData Item); // Function Icarus.GeneratorComponent.ProduceByproduct // (Final|Native|Public) // @ game+0x15a7c30
	void ProcessGenerator(float Delta); // Function Icarus.GeneratorComponent.ProcessGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x15a7bb0
	void OnRep_GeneratorActive(); // Function Icarus.GeneratorComponent.OnRep_GeneratorActive // (Final|Native|Public) // @ game+0x15a7b90
	void InitialiseComponent(struct UInventory* NewTransmutationInventory, struct TArray<struct UInventory*> NewAdditionalInventories); // Function Icarus.GeneratorComponent.InitialiseComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x15a6ba0
	bool GetGeneratorData(struct FGeneratorData OutData); // Function Icarus.GeneratorComponent.GetGeneratorData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15a6790
	float GetAdjustedRequiredTransmutationUnits(float CurrentUnits); // Function Icarus.GeneratorComponent.GetAdjustedRequiredTransmutationUnits // (Final|Native|Public|Const) // @ game+0x15a5c80
	void GeneratorOutOfFuel(); // Function Icarus.GeneratorComponent.GeneratorOutOfFuel // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1584f60
	bool GenerateResource(float Delta); // Function Icarus.GeneratorComponent.GenerateResource // (Final|Native|Public) // @ game+0x15a5bf0
	void DeactivateGenerator(); // Function Icarus.GeneratorComponent.DeactivateGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x15a5770
	bool ActivateGenerator(); // Function Icarus.GeneratorComponent.ActivateGenerator // (Final|Native|Public|BlueprintCallable) // @ game+0x15a4c80
};

// Class Icarus.GeneratorLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGeneratorLibrary : URowLibrary {

	struct FGeneratorRowHandle StructToRowHandle(struct FGeneratorEnum EnumValue); // Function Icarus.GeneratorLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a8a80
	struct FName StructToName(struct FGeneratorEnum EnumValue); // Function Icarus.GeneratorLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a8930
	int32_t StructToInt(struct FGeneratorEnum EnumValue); // Function Icarus.GeneratorLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a87f0
	struct FGeneratorEnum RowHandleToStruct(struct FGeneratorRowHandle RowHandle); // Function Icarus.GeneratorLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a8690
	void RemoveRowFromGeneratorTable(struct FName Name); // Function Icarus.GeneratorLibrary.RemoveRowFromGeneratorTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15a8550
	void RefreshConstants(); // Function Icarus.GeneratorLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15a84b0
	int32_t NumRows(); // Function Icarus.GeneratorLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7b60
	bool NotEqual_EnumName(struct FGeneratorEnum A, struct FName B); // Function Icarus.GeneratorLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7a40
	bool NotEqual_EnumEnum(struct FGeneratorEnum A, struct FGeneratorEnum B); // Function Icarus.GeneratorLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7860
	struct FGeneratorEnum NameToStruct(struct FName NameValue); // Function Icarus.GeneratorLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a76e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GeneratorLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15a75c0
	struct FGeneratorRowHandle MakeLiteralGenerator(struct FGeneratorRowHandle RowHandle); // Function Icarus.GeneratorLibrary.MakeLiteralGenerator // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7460
	struct FGeneratorRowHandle MakeGeneratorFromIndex(int32_t Index); // Function Icarus.GeneratorLibrary.MakeGeneratorFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7300
	struct FGeneratorEnum MakeGeneratorEnum(struct FGeneratorEnum Enum); // Function Icarus.GeneratorLibrary.MakeGeneratorEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7280
	struct FGeneratorRowHandle MakeGenerator(struct FName RowName); // Function Icarus.GeneratorLibrary.MakeGenerator // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a71e0
	bool IsValidName(struct FName NameValue); // Function Icarus.GeneratorLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15a6fa0
	struct FGeneratorEnum IntToStruct(int32_t IntValue); // Function Icarus.GeneratorLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a6e80
	struct FName IntToName(int32_t IntValue); // Function Icarus.GeneratorLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15a6d60
	void GetGeneratorStruct(struct FGeneratorRowHandle RowHandle, struct FGeneratorData Generator, enum class EValid Paths); // Function Icarus.GeneratorLibrary.GetGeneratorStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15a6950
	bool EqualEqual_FGeneratorRowHandleFGeneratorRowHandle(struct FGeneratorRowHandle RowHandleA, struct FGeneratorRowHandle RowHandleB); // Function Icarus.GeneratorLibrary.EqualEqual_FGeneratorRowHandleFGeneratorRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a5ab0
	bool EqualEqual_EnumEnum(struct FGeneratorEnum A, struct FGeneratorEnum B); // Function Icarus.GeneratorLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a5880
	struct FGeneratorRowHandle CastToGeneratorRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GeneratorLibrary.CastToGeneratorRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15a5650
	void BreakGeneratorEnum(struct FGeneratorEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GeneratorLibrary.BreakGeneratorEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15a53d0
	void AddRowToGeneratorTable(struct FName Name, struct FGeneratorData Data, struct FGeneratorRowHandle NewRow); // Function Icarus.GeneratorLibrary.AddRowToGeneratorTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15a4fd0
};

// Class Icarus.GeneratorTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGeneratorTable : UIcarusDataTable {
};

// Class Icarus.GenericAITargetComponent
// Size: 0x100 (Inherited: 0xb0)
struct UGenericAITargetComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct UAIPerceptionStimuliSourceComponent* PerceptionComponent; // 0xc0(0x08)
	struct FAIRelationshipsRowHandle TargetableRelationship; // 0xc8(0x18)
	struct USceneComponent* TargetComponent; // 0xe0(0x08)
	struct FVector ActorRootPerceptionTargetOffset; // 0xe8(0x0c)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct UActorState* ActorState; // 0xf8(0x08)
};

// Class Icarus.GenericResourceBase
// Size: 0x2b8 (Inherited: 0x2a0)
struct AGenericResourceBase : AIcarusActor {
	char pad_2A0[0x8]; // 0x2a0(0x08)
	struct USceneComponent* ViewPointOverrideComponent; // 0x2a8(0x08)
	struct FName ViewPointOverrideSocket; // 0x2b0(0x08)
};

// Class Icarus.GetStorageInfoCallbackProxy
// Size: 0x70 (Inherited: 0x30)
struct UGetStorageInfoCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFail; // 0x40(0x10)
	char pad_50[0x20]; // 0x50(0x20)

	struct UGetStorageInfoCallbackProxy* GetStorageInfo(bool bCache); // Function Icarus.GetStorageInfoCallbackProxy.GetStorageInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15a6b10
};

// Class Icarus.GOAPActionAnimNotify
// Size: 0x48 (Inherited: 0x38)
struct UGOAPActionAnimNotify : UAnimNotify {
	struct FString NotifyName; // 0x38(0x10)
};

// Class Icarus.GOAPActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPActionsLibrary : URowLibrary {

	struct FGOAPActionsRowHandle StructToRowHandle(struct FGOAPActionsEnum EnumValue); // Function Icarus.GOAPActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a89d0
	struct FName StructToName(struct FGOAPActionsEnum EnumValue); // Function Icarus.GOAPActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a8890
	int32_t StructToInt(struct FGOAPActionsEnum EnumValue); // Function Icarus.GOAPActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a8750
	struct FGOAPActionsEnum RowHandleToStruct(struct FGOAPActionsRowHandle RowHandle); // Function Icarus.GOAPActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a85d0
	void RemoveRowFromGOAPActionsTable(struct FName Name); // Function Icarus.GOAPActionsLibrary.RemoveRowFromGOAPActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15a84d0
	void RefreshConstants(); // Function Icarus.GOAPActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15a8490
	int32_t NumRows(); // Function Icarus.GOAPActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7b30
	bool NotEqual_EnumName(struct FGOAPActionsEnum A, struct FName B); // Function Icarus.GOAPActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7950
	bool NotEqual_EnumEnum(struct FGOAPActionsEnum A, struct FGOAPActionsEnum B); // Function Icarus.GOAPActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7770
	struct FGOAPActionsEnum NameToStruct(struct FName NameValue); // Function Icarus.GOAPActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7650
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GOAPActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15a7530
	struct FGOAPActionsRowHandle MakeLiteralGOAPActions(struct FGOAPActionsRowHandle RowHandle); // Function Icarus.GOAPActionsLibrary.MakeLiteralGOAPActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7390
	struct FGOAPActionsRowHandle MakeGOAPActionsFromIndex(int32_t Index); // Function Icarus.GOAPActionsLibrary.MakeGOAPActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7150
	struct FGOAPActionsEnum MakeGOAPActionsEnum(struct FGOAPActionsEnum Enum); // Function Icarus.GOAPActionsLibrary.MakeGOAPActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a70d0
	struct FGOAPActionsRowHandle MakeGOAPActions(struct FName RowName); // Function Icarus.GOAPActionsLibrary.MakeGOAPActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a7030
	bool IsValidName(struct FName NameValue); // Function Icarus.GOAPActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15a6f10
	struct FGOAPActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a6df0
	struct FName IntToName(int32_t IntValue); // Function Icarus.GOAPActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15a6cd0
	void GetGOAPActionsStruct(struct FGOAPActionsRowHandle RowHandle, struct FGOAPAction GOAPActions, enum class EValid Paths); // Function Icarus.GOAPActionsLibrary.GetGOAPActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15a65b0
	bool EqualEqual_FGOAPActionsRowHandleFGOAPActionsRowHandle(struct FGOAPActionsRowHandle RowHandleA, struct FGOAPActionsRowHandle RowHandleB); // Function Icarus.GOAPActionsLibrary.EqualEqual_FGOAPActionsRowHandleFGOAPActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a5970
	bool EqualEqual_EnumEnum(struct FGOAPActionsEnum A, struct FGOAPActionsEnum B); // Function Icarus.GOAPActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15a5790
	struct FGOAPActionsRowHandle CastToGOAPActionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GOAPActionsLibrary.CastToGOAPActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15a5530
	void BreakGOAPActionsEnum(struct FGOAPActionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GOAPActionsLibrary.BreakGOAPActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15a5270
	void AddRowToGOAPActionsTable(struct FName Name, struct FGOAPAction Data, struct FGOAPActionsRowHandle NewRow); // Function Icarus.GOAPActionsLibrary.AddRowToGOAPActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15a4cb0
};

// Class Icarus.GOAPActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPActionsTable : UIcarusDataTable {
};

// Class Icarus.GOAPGoalsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPGoalsLibrary : URowLibrary {

	struct FGOAPGoalsRowHandle StructToRowHandle(struct FGOAPGoalsEnum EnumValue); // Function Icarus.GOAPGoalsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ae260
	struct FName StructToName(struct FGOAPGoalsEnum EnumValue); // Function Icarus.GOAPGoalsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ae080
	int32_t StructToInt(struct FGOAPGoalsEnum EnumValue); // Function Icarus.GOAPGoalsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15adea0
	struct FGOAPGoalsEnum RowHandleToStruct(struct FGOAPGoalsRowHandle RowHandle); // Function Icarus.GOAPGoalsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15adc60
	void RemoveRowFromGOAPGoalsTable(struct FName Name); // Function Icarus.GOAPGoalsLibrary.RemoveRowFromGOAPGoalsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15adae0
	void RefreshConstants(); // Function Icarus.GOAPGoalsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15ada80
	int32_t NumRows(); // Function Icarus.GOAPGoalsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad9f0
	bool NotEqual_EnumName(struct FGOAPGoalsEnum A, struct FName B); // Function Icarus.GOAPGoalsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad720
	bool NotEqual_EnumEnum(struct FGOAPGoalsEnum A, struct FGOAPGoalsEnum B); // Function Icarus.GOAPGoalsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad450
	struct FGOAPGoalsEnum NameToStruct(struct FName NameValue); // Function Icarus.GOAPGoalsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad2a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GOAPGoalsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15ad0f0
	struct FGOAPGoalsRowHandle MakeLiteralGOAPGoals(struct FGOAPGoalsRowHandle RowHandle); // Function Icarus.GOAPGoalsLibrary.MakeLiteralGOAPGoals // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ace80
	struct FGOAPGoalsRowHandle MakeGOAPGoalsFromIndex(int32_t Index); // Function Icarus.GOAPGoalsLibrary.MakeGOAPGoalsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15aca90
	struct FGOAPGoalsEnum MakeGOAPGoalsEnum(struct FGOAPGoalsEnum Enum); // Function Icarus.GOAPGoalsLibrary.MakeGOAPGoalsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15aca10
	struct FGOAPGoalsRowHandle MakeGOAPGoals(struct FName RowName); // Function Icarus.GOAPGoalsLibrary.MakeGOAPGoals // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ac970
	bool IsValidName(struct FName NameValue); // Function Icarus.GOAPGoalsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15ac7c0
	struct FGOAPGoalsEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPGoalsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ac610
	struct FName IntToName(int32_t IntValue); // Function Icarus.GOAPGoalsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15ac460
	void GetGOAPGoalsStruct(struct FGOAPGoalsRowHandle RowHandle, struct FGOAPGoal GOAPGoals, enum class EValid Paths); // Function Icarus.GOAPGoalsLibrary.GetGOAPGoalsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15abf20
	bool EqualEqual_FGOAPGoalsRowHandleFGOAPGoalsRowHandle(struct FGOAPGoalsRowHandle RowHandleA, struct FGOAPGoalsRowHandle RowHandleB); // Function Icarus.GOAPGoalsLibrary.EqualEqual_FGOAPGoalsRowHandleFGOAPGoalsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15abb60
	bool EqualEqual_EnumEnum(struct FGOAPGoalsEnum A, struct FGOAPGoalsEnum B); // Function Icarus.GOAPGoalsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ab890
	struct FGOAPGoalsRowHandle CastToGOAPGoalsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GOAPGoalsLibrary.CastToGOAPGoalsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ab530
	void BreakGOAPGoalsEnum(struct FGOAPGoalsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GOAPGoalsLibrary.BreakGOAPGoalsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15ab110
	void AddRowToGOAPGoalsTable(struct FName Name, struct FGOAPGoal Data, struct FGOAPGoalsRowHandle NewRow); // Function Icarus.GOAPGoalsLibrary.AddRowToGOAPGoalsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15aa870
};

// Class Icarus.GOAPGoalsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPGoalsTable : UIcarusDataTable {
};

// Class Icarus.GOAPMotivationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPMotivationsLibrary : URowLibrary {

	struct FGOAPMotivationsRowHandle StructToRowHandle(struct FGOAPMotivationsEnum EnumValue); // Function Icarus.GOAPMotivationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ae310
	struct FName StructToName(struct FGOAPMotivationsEnum EnumValue); // Function Icarus.GOAPMotivationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ae120
	int32_t StructToInt(struct FGOAPMotivationsEnum EnumValue); // Function Icarus.GOAPMotivationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15adf40
	struct FGOAPMotivationsEnum RowHandleToStruct(struct FGOAPMotivationsRowHandle RowHandle); // Function Icarus.GOAPMotivationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15add20
	void RemoveRowFromGOAPMotivationsTable(struct FName Name); // Function Icarus.GOAPMotivationsLibrary.RemoveRowFromGOAPMotivationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15adb60
	void RefreshConstants(); // Function Icarus.GOAPMotivationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15adaa0
	int32_t NumRows(); // Function Icarus.GOAPMotivationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ada20
	bool NotEqual_EnumName(struct FGOAPMotivationsEnum A, struct FName B); // Function Icarus.GOAPMotivationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad810
	bool NotEqual_EnumEnum(struct FGOAPMotivationsEnum A, struct FGOAPMotivationsEnum B); // Function Icarus.GOAPMotivationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad540
	struct FGOAPMotivationsEnum NameToStruct(struct FName NameValue); // Function Icarus.GOAPMotivationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad330
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GOAPMotivationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15ad180
	struct FGOAPMotivationsRowHandle MakeLiteralGOAPMotivations(struct FGOAPMotivationsRowHandle RowHandle); // Function Icarus.GOAPMotivationsLibrary.MakeLiteralGOAPMotivations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15acf50
	struct FGOAPMotivationsRowHandle MakeGOAPMotivationsFromIndex(int32_t Index); // Function Icarus.GOAPMotivationsLibrary.MakeGOAPMotivationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15acc40
	struct FGOAPMotivationsEnum MakeGOAPMotivationsEnum(struct FGOAPMotivationsEnum Enum); // Function Icarus.GOAPMotivationsLibrary.MakeGOAPMotivationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15acbc0
	struct FGOAPMotivationsRowHandle MakeGOAPMotivations(struct FName RowName); // Function Icarus.GOAPMotivationsLibrary.MakeGOAPMotivations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15acb20
	bool IsValidName(struct FName NameValue); // Function Icarus.GOAPMotivationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15ac850
	struct FGOAPMotivationsEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPMotivationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ac6a0
	struct FName IntToName(int32_t IntValue); // Function Icarus.GOAPMotivationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15ac4f0
	void GetGOAPMotivationsStruct(struct FGOAPMotivationsRowHandle RowHandle, struct FGOAPMotivation GOAPMotivations, enum class EValid Paths); // Function Icarus.GOAPMotivationsLibrary.GetGOAPMotivationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ac0c0
	bool EqualEqual_FGOAPMotivationsRowHandleFGOAPMotivationsRowHandle(struct FGOAPMotivationsRowHandle RowHandleA, struct FGOAPMotivationsRowHandle RowHandleB); // Function Icarus.GOAPMotivationsLibrary.EqualEqual_FGOAPMotivationsRowHandleFGOAPMotivationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15abca0
	bool EqualEqual_EnumEnum(struct FGOAPMotivationsEnum A, struct FGOAPMotivationsEnum B); // Function Icarus.GOAPMotivationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ab980
	struct FGOAPMotivationsRowHandle CastToGOAPMotivationsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GOAPMotivationsLibrary.CastToGOAPMotivationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ab650
	void BreakGOAPMotivationsEnum(struct FGOAPMotivationsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GOAPMotivationsLibrary.BreakGOAPMotivationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15ab270
	void AddRowToGOAPMotivationsTable(struct FName Name, struct FGOAPMotivation Data, struct FGOAPMotivationsRowHandle NewRow); // Function Icarus.GOAPMotivationsLibrary.AddRowToGOAPMotivationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15aaac0
};

// Class Icarus.GOAPMotivationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPMotivationsTable : UIcarusDataTable {
};

// Class Icarus.GOAPPropertiesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPPropertiesLibrary : URowLibrary {

	struct FGOAPPropertiesRowHandle StructToRowHandle(struct FGOAPPropertiesEnum EnumValue); // Function Icarus.GOAPPropertiesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ae3c0
	struct FName StructToName(struct FGOAPPropertiesEnum EnumValue); // Function Icarus.GOAPPropertiesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ae1c0
	int32_t StructToInt(struct FGOAPPropertiesEnum EnumValue); // Function Icarus.GOAPPropertiesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15adfe0
	struct FGOAPPropertiesEnum RowHandleToStruct(struct FGOAPPropertiesRowHandle RowHandle); // Function Icarus.GOAPPropertiesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15adde0
	void RemoveRowFromGOAPPropertiesTable(struct FName Name); // Function Icarus.GOAPPropertiesLibrary.RemoveRowFromGOAPPropertiesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15adbe0
	void RefreshConstants(); // Function Icarus.GOAPPropertiesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15adac0
	int32_t NumRows(); // Function Icarus.GOAPPropertiesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ada50
	bool NotEqual_EnumName(struct FGOAPPropertiesEnum A, struct FName B); // Function Icarus.GOAPPropertiesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad900
	bool NotEqual_EnumEnum(struct FGOAPPropertiesEnum A, struct FGOAPPropertiesEnum B); // Function Icarus.GOAPPropertiesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad630
	struct FGOAPPropertiesEnum NameToStruct(struct FName NameValue); // Function Icarus.GOAPPropertiesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad3c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GOAPPropertiesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15ad210
	struct FGOAPPropertiesRowHandle MakeLiteralGOAPProperties(struct FGOAPPropertiesRowHandle RowHandle); // Function Icarus.GOAPPropertiesLibrary.MakeLiteralGOAPProperties // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ad020
	struct FGOAPPropertiesRowHandle MakeGOAPPropertiesFromIndex(int32_t Index); // Function Icarus.GOAPPropertiesLibrary.MakeGOAPPropertiesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15acdf0
	struct FGOAPPropertiesEnum MakeGOAPPropertiesEnum(struct FGOAPPropertiesEnum Enum); // Function Icarus.GOAPPropertiesLibrary.MakeGOAPPropertiesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15acd70
	struct FGOAPPropertiesRowHandle MakeGOAPProperties(struct FName RowName); // Function Icarus.GOAPPropertiesLibrary.MakeGOAPProperties // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15accd0
	bool IsValidName(struct FName NameValue); // Function Icarus.GOAPPropertiesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15ac8e0
	struct FGOAPPropertiesEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPPropertiesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ac730
	struct FName IntToName(int32_t IntValue); // Function Icarus.GOAPPropertiesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15ac580
	void GetGOAPPropertiesStruct(struct FGOAPPropertiesRowHandle RowHandle, struct FGOAPProperties GOAPProperties, enum class EValid Paths); // Function Icarus.GOAPPropertiesLibrary.GetGOAPPropertiesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ac2e0
	bool EqualEqual_FGOAPPropertiesRowHandleFGOAPPropertiesRowHandle(struct FGOAPPropertiesRowHandle RowHandleA, struct FGOAPPropertiesRowHandle RowHandleB); // Function Icarus.GOAPPropertiesLibrary.EqualEqual_FGOAPPropertiesRowHandleFGOAPPropertiesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15abde0
	bool EqualEqual_EnumEnum(struct FGOAPPropertiesEnum A, struct FGOAPPropertiesEnum B); // Function Icarus.GOAPPropertiesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15aba70
	struct FGOAPPropertiesRowHandle CastToGOAPPropertiesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GOAPPropertiesLibrary.CastToGOAPPropertiesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ab770
	void BreakGOAPPropertiesEnum(struct FGOAPPropertiesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GOAPPropertiesLibrary.BreakGOAPPropertiesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15ab3d0
	void AddRowToGOAPPropertiesTable(struct FName Name, struct FGOAPProperties Data, struct FGOAPPropertiesRowHandle NewRow); // Function Icarus.GOAPPropertiesLibrary.AddRowToGOAPPropertiesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15aaf50
};

// Class Icarus.GOAPPropertiesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPPropertiesTable : UIcarusDataTable {
};

// Class Icarus.GOAPSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGOAPSetupLibrary : URowLibrary {

	struct FGOAPSetupRowHandle StructToRowHandle(struct FGOAPSetupEnum EnumValue); // Function Icarus.GOAPSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3ff0
	struct FName StructToName(struct FGOAPSetupEnum EnumValue); // Function Icarus.GOAPSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3eb0
	int32_t StructToInt(struct FGOAPSetupEnum EnumValue); // Function Icarus.GOAPSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3d70
	struct FGOAPSetupEnum RowHandleToStruct(struct FGOAPSetupRowHandle RowHandle); // Function Icarus.GOAPSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3840
	void RemoveRowFromGOAPSetupTable(struct FName Name); // Function Icarus.GOAPSetupLibrary.RemoveRowFromGOAPSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15b3740
	void RefreshConstants(); // Function Icarus.GOAPSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15b3700
	int32_t NumRows(); // Function Icarus.GOAPSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3660
	bool NotEqual_EnumName(struct FGOAPSetupEnum A, struct FName B); // Function Icarus.GOAPSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3480
	bool NotEqual_EnumEnum(struct FGOAPSetupEnum A, struct FGOAPSetupEnum B); // Function Icarus.GOAPSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b32a0
	struct FGOAPSetupEnum NameToStruct(struct FName NameValue); // Function Icarus.GOAPSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3180
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GOAPSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15b3060
	struct FGOAPSetupRowHandle MakeLiteralGOAPSetup(struct FGOAPSetupRowHandle RowHandle); // Function Icarus.GOAPSetupLibrary.MakeLiteralGOAPSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2ec0
	struct FGOAPSetupRowHandle MakeGOAPSetupFromIndex(int32_t Index); // Function Icarus.GOAPSetupLibrary.MakeGOAPSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2c80
	struct FGOAPSetupEnum MakeGOAPSetupEnum(struct FGOAPSetupEnum Enum); // Function Icarus.GOAPSetupLibrary.MakeGOAPSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2c00
	struct FGOAPSetupRowHandle MakeGOAPSetup(struct FName RowName); // Function Icarus.GOAPSetupLibrary.MakeGOAPSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2b60
	bool IsValidName(struct FName NameValue); // Function Icarus.GOAPSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15b2a40
	struct FGOAPSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.GOAPSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2920
	struct FName IntToName(int32_t IntValue); // Function Icarus.GOAPSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15b2800
	void GetGOAPSetupStruct(struct FGOAPSetupRowHandle RowHandle, struct FGOAPSetup GOAPSetup, enum class EValid Paths); // Function Icarus.GOAPSetupLibrary.GetGOAPSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b2470
	bool EqualEqual_FGOAPSetupRowHandleFGOAPSetupRowHandle(struct FGOAPSetupRowHandle RowHandleA, struct FGOAPSetupRowHandle RowHandleB); // Function Icarus.GOAPSetupLibrary.EqualEqual_FGOAPSetupRowHandleFGOAPSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b21f0
	bool EqualEqual_EnumEnum(struct FGOAPSetupEnum A, struct FGOAPSetupEnum B); // Function Icarus.GOAPSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2010
	struct FGOAPSetupRowHandle CastToGOAPSetupRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GOAPSetupLibrary.CastToGOAPSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b1dd0
	void BreakGOAPSetupEnum(struct FGOAPSetupEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GOAPSetupLibrary.BreakGOAPSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15b1b10
	void AddRowToGOAPSetupTable(struct FName Name, struct FGOAPSetup Data, struct FGOAPSetupRowHandle NewRow); // Function Icarus.GOAPSetupLibrary.AddRowToGOAPSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b1570
};

// Class Icarus.GOAPSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGOAPSetupTable : UIcarusDataTable {
};

// Class Icarus.GrantedAurasLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGrantedAurasLibrary : URowLibrary {

	struct FGrantedAurasRowHandle StructToRowHandle(struct FGrantedAurasEnum EnumValue); // Function Icarus.GrantedAurasLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b40a0
	struct FName StructToName(struct FGrantedAurasEnum EnumValue); // Function Icarus.GrantedAurasLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3f50
	int32_t StructToInt(struct FGrantedAurasEnum EnumValue); // Function Icarus.GrantedAurasLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3e10
	struct FGrantedAurasEnum RowHandleToStruct(struct FGrantedAurasRowHandle RowHandle); // Function Icarus.GrantedAurasLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3900
	void RemoveRowFromGrantedAurasTable(struct FName Name); // Function Icarus.GrantedAurasLibrary.RemoveRowFromGrantedAurasTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15b37c0
	void RefreshConstants(); // Function Icarus.GrantedAurasLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15b3720
	int32_t NumRows(); // Function Icarus.GrantedAurasLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3690
	bool NotEqual_EnumName(struct FGrantedAurasEnum A, struct FName B); // Function Icarus.GrantedAurasLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3570
	bool NotEqual_EnumEnum(struct FGrantedAurasEnum A, struct FGrantedAurasEnum B); // Function Icarus.GrantedAurasLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3390
	struct FGrantedAurasEnum NameToStruct(struct FName NameValue); // Function Icarus.GrantedAurasLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b3210
	int32_t NameToInt(struct FName NameValue); // Function Icarus.GrantedAurasLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15b30f0
	struct FGrantedAurasRowHandle MakeLiteralGrantedAuras(struct FGrantedAurasRowHandle RowHandle); // Function Icarus.GrantedAurasLibrary.MakeLiteralGrantedAuras // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2f90
	struct FGrantedAurasRowHandle MakeGrantedAurasFromIndex(int32_t Index); // Function Icarus.GrantedAurasLibrary.MakeGrantedAurasFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2e30
	struct FGrantedAurasEnum MakeGrantedAurasEnum(struct FGrantedAurasEnum Enum); // Function Icarus.GrantedAurasLibrary.MakeGrantedAurasEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2db0
	struct FGrantedAurasRowHandle MakeGrantedAuras(struct FName RowName); // Function Icarus.GrantedAurasLibrary.MakeGrantedAuras // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2d10
	bool IsValidName(struct FName NameValue); // Function Icarus.GrantedAurasLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15b2ad0
	struct FGrantedAurasEnum IntToStruct(int32_t IntValue); // Function Icarus.GrantedAurasLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b29b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.GrantedAurasLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15b2890
	void GetGrantedAurasStruct(struct FGrantedAurasRowHandle RowHandle, struct FAuraInfo GrantedAuras, enum class EValid Paths); // Function Icarus.GrantedAurasLibrary.GetGrantedAurasStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b2660
	bool EqualEqual_FGrantedAurasRowHandleFGrantedAurasRowHandle(struct FGrantedAurasRowHandle RowHandleA, struct FGrantedAurasRowHandle RowHandleB); // Function Icarus.GrantedAurasLibrary.EqualEqual_FGrantedAurasRowHandleFGrantedAurasRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2330
	bool EqualEqual_EnumEnum(struct FGrantedAurasEnum A, struct FGrantedAurasEnum B); // Function Icarus.GrantedAurasLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b2100
	struct FGrantedAurasRowHandle CastToGrantedAurasRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.GrantedAurasLibrary.CastToGrantedAurasRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b1ef0
	void BreakGrantedAurasEnum(struct FGrantedAurasEnum Enum, struct FName Name, int32_t Index); // Function Icarus.GrantedAurasLibrary.BreakGrantedAurasEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15b1c70
	void AddRowToGrantedAurasTable(struct FName Name, struct FAuraInfo Data, struct FGrantedAurasRowHandle NewRow); // Function Icarus.GrantedAurasLibrary.AddRowToGrantedAurasTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b1910
};

// Class Icarus.GrantedAurasTable
// Size: 0xb8 (Inherited: 0xb8)
struct UGrantedAurasTable : UIcarusDataTable {
};

// Class Icarus.SkeletalItem
// Size: 0x3d0 (Inherited: 0x3c0)
struct ASkeletalItem : AIcarusItem {
	struct USkeletalMeshComponent* SkeletalMeshRoot; // 0x3c0(0x08)
	char pad_3C8[0x8]; // 0x3c8(0x08)
};

// Class Icarus.IcarusCorpse
// Size: 0x3f0 (Inherited: 0x3d0)
struct AIcarusCorpse : ASkeletalItem {
	struct UAnimSequence* FPCarryAnim; // 0x3c8(0x08)
	struct UAnimSequence* TPCarryAnim; // 0x3d0(0x08)
	struct FAISetupRowHandle AISetupRowHandle; // 0x3d8(0x18)

	void HideInstigator(); // Function Icarus.IcarusCorpse.HideInstigator // (Native|Event|Public|BlueprintEvent) // @ game+0x15c4990
	struct FPoseSnapshot GetRagdollPose(); // Function Icarus.IcarusCorpse.GetRagdollPose // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x15c4890
	struct UAnimSequence* GetCarryAnim(); // Function Icarus.IcarusCorpse.GetCarryAnim // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x15c4660
};

// Class Icarus.GravestoneBase
// Size: 0x550 (Inherited: 0x3f0)
struct AGravestoneBase : AIcarusCorpse {
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x3f0(0x18)
	struct TArray<struct FName> RagdollHitEventBones; // 0x408(0x10)
	struct FGravestoneData GravestoneData; // 0x418(0x120)
	struct TArray<struct FArmourRowHandle> PlayerArmour; // 0x538(0x10)
	char pad_548[0x8]; // 0x548(0x08)

	void SetPlayerArmour(struct TArray<struct FArmourRowHandle> InArmour); // Function Icarus.GravestoneBase.SetPlayerArmour // (Final|Native|Public|BlueprintCallable) // @ game+0x15b3c70
	void SetHitEventsEnabled(bool bEnabled); // Function Icarus.GravestoneBase.SetHitEventsEnabled // (Final|Native|Protected|BlueprintCallable) // @ game+0x15b3be0
	void SetGravestoneData(struct FGravestoneData InData); // Function Icarus.GravestoneBase.SetGravestoneData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15b39c0
	void OnRep_PlayerArmour(); // Function Icarus.GravestoneBase.OnRep_PlayerArmour // (Native|Event|Protected|BlueprintEvent) // @ game+0x8e9630
	void OnRep_GravestoneData(); // Function Icarus.GravestoneBase.OnRep_GravestoneData // (Native|Event|Protected|BlueprintEvent) // @ game+0x15b36e0
	void OnRep_AssignedPlayerCharacterID(); // Function Icarus.GravestoneBase.OnRep_AssignedPlayerCharacterID // (Native|Event|Protected|BlueprintEvent) // @ game+0x15b36c0
};

// Class Icarus.GravestoneRecorderComponent
// Size: 0x300 (Inherited: 0x1b0)
struct UGravestoneRecorderComponent : UItemStateRecorderComponent {
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x1b0(0x18)
	struct FGravestoneDataRecord GravestoneData; // 0x1c8(0x120)
	struct TArray<struct FName> PlayerArmour; // 0x2e8(0x10)
	char pad_2F8[0x8]; // 0x2f8(0x08)
};

// Class Icarus.GridObjectPlacementComponent
// Size: 0x108 (Inherited: 0xb0)
struct UGridObjectPlacementComponent : UActorComponent {
	float GridUnitSize; // 0xb0(0x04)
	char pad_B4[0x54]; // 0xb4(0x54)

	struct AActor* AddObject(struct FVector GridCenter, struct FVector GridSize); // Function Icarus.GridObjectPlacementComponent.AddObject // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1a38c80
	void AddLocation(struct FVector Location); // Function Icarus.GridObjectPlacementComponent.AddLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15b6900
};

// Class Icarus.HighlightableComponent
// Size: 0xe8 (Inherited: 0xd0)
struct UHighlightableComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnHighlightChanged; // 0xd0(0x01)
	char pad_D1[0x17]; // 0xd1(0x17)

	void SetHighlight(struct UPrimitiveComponent* Component, bool bHighlighted, int32_t StencilValue); // Function Icarus.HighlightableComponent.SetHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x15ba520
	bool IsHighlighted(); // Function Icarus.HighlightableComponent.IsHighlighted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15b8e10
	bool GetHighlightableData(struct FHighlightableData OutData); // Function Icarus.HighlightableComponent.GetHighlightableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15b81d0
	bool CanHighlight(); // Function Icarus.HighlightableComponent.CanHighlight // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1504a50
};

// Class Icarus.HighlightableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHighlightableLibrary : URowLibrary {

	struct FHighlightableRowHandle StructToRowHandle(struct FHighlightableEnum EnumValue); // Function Icarus.HighlightableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba9f0
	struct FName StructToName(struct FHighlightableEnum EnumValue); // Function Icarus.HighlightableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba810
	int32_t StructToInt(struct FHighlightableEnum EnumValue); // Function Icarus.HighlightableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba630
	struct FHighlightableEnum RowHandleToStruct(struct FHighlightableRowHandle RowHandle); // Function Icarus.HighlightableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba2e0
	void RemoveRowFromHighlightableTable(struct FName Name); // Function Icarus.HighlightableLibrary.RemoveRowFromHighlightableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ba160
	void RefreshConstants(); // Function Icarus.HighlightableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15ba100
	int32_t NumRows(); // Function Icarus.HighlightableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba070
	bool NotEqual_EnumName(struct FHighlightableEnum A, struct FName B); // Function Icarus.HighlightableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9da0
	bool NotEqual_EnumEnum(struct FHighlightableEnum A, struct FHighlightableEnum B); // Function Icarus.HighlightableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9ad0
	struct FHighlightableEnum NameToStruct(struct FName NameValue); // Function Icarus.HighlightableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9920
	int32_t NameToInt(struct FName NameValue); // Function Icarus.HighlightableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15b9770
	struct FHighlightableRowHandle MakeLiteralHighlightable(struct FHighlightableRowHandle RowHandle); // Function Icarus.HighlightableLibrary.MakeLiteralHighlightable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9500
	struct FHighlightableRowHandle MakeHighlightableFromIndex(int32_t Index); // Function Icarus.HighlightableLibrary.MakeHighlightableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9110
	struct FHighlightableEnum MakeHighlightableEnum(struct FHighlightableEnum Enum); // Function Icarus.HighlightableLibrary.MakeHighlightableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9090
	struct FHighlightableRowHandle MakeHighlightable(struct FName RowName); // Function Icarus.HighlightableLibrary.MakeHighlightable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b8ff0
	bool IsValidName(struct FName NameValue); // Function Icarus.HighlightableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15b8e40
	struct FHighlightableEnum IntToStruct(int32_t IntValue); // Function Icarus.HighlightableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b8c60
	struct FName IntToName(int32_t IntValue); // Function Icarus.HighlightableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15b8ab0
	void GetHighlightableStruct(struct FHighlightableRowHandle RowHandle, struct FHighlightableData Highlightable, enum class EValid Paths); // Function Icarus.HighlightableLibrary.GetHighlightableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b83f0
	bool EqualEqual_FHighlightableRowHandleFHighlightableRowHandle(struct FHighlightableRowHandle RowHandleA, struct FHighlightableRowHandle RowHandleB); // Function Icarus.HighlightableLibrary.EqualEqual_FHighlightableRowHandleFHighlightableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b7e10
	bool EqualEqual_EnumEnum(struct FHighlightableEnum A, struct FHighlightableEnum B); // Function Icarus.HighlightableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b7b40
	struct FHighlightableRowHandle CastToHighlightableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.HighlightableLibrary.CastToHighlightableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b7600
	void BreakHighlightableEnum(struct FHighlightableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.HighlightableLibrary.BreakHighlightableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15b7000
	void AddRowToHighlightableTable(struct FName Name, struct FHighlightableData Data, struct FHighlightableRowHandle NewRow); // Function Icarus.HighlightableLibrary.AddRowToHighlightableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b6990
};

// Class Icarus.HighlightableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHighlightableTable : UIcarusDataTable {
};

// Class Icarus.HintsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHintsLibrary : URowLibrary {

	struct FHintsRowHandle StructToRowHandle(struct FHintsEnum EnumValue); // Function Icarus.HintsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15baaa0
	struct FName StructToName(struct FHintsEnum EnumValue); // Function Icarus.HintsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba8b0
	int32_t StructToInt(struct FHintsEnum EnumValue); // Function Icarus.HintsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba6d0
	struct FHintsEnum RowHandleToStruct(struct FHintsRowHandle RowHandle); // Function Icarus.HintsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba3a0
	void RemoveRowFromHintsTable(struct FName Name); // Function Icarus.HintsLibrary.RemoveRowFromHintsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ba1e0
	void RefreshConstants(); // Function Icarus.HintsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15ba120
	int32_t NumRows(); // Function Icarus.HintsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba0a0
	bool NotEqual_EnumName(struct FHintsEnum A, struct FName B); // Function Icarus.HintsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9e90
	bool NotEqual_EnumEnum(struct FHintsEnum A, struct FHintsEnum B); // Function Icarus.HintsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9bc0
	struct FHintsEnum NameToStruct(struct FName NameValue); // Function Icarus.HintsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b99b0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.HintsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15b9800
	struct FHintsRowHandle MakeLiteralHints(struct FHintsRowHandle RowHandle); // Function Icarus.HintsLibrary.MakeLiteralHints // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b95d0
	struct FHintsRowHandle MakeHintsFromIndex(int32_t Index); // Function Icarus.HintsLibrary.MakeHintsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b92c0
	struct FHintsEnum MakeHintsEnum(struct FHintsEnum Enum); // Function Icarus.HintsLibrary.MakeHintsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9240
	struct FHintsRowHandle MakeHints(struct FName RowName); // Function Icarus.HintsLibrary.MakeHints // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b91a0
	bool IsValidName(struct FName NameValue); // Function Icarus.HintsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15b8ed0
	struct FHintsEnum IntToStruct(int32_t IntValue); // Function Icarus.HintsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b8cf0
	struct FName IntToName(int32_t IntValue); // Function Icarus.HintsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15b8b40
	void GetHintsStruct(struct FHintsRowHandle RowHandle, struct FHintsData Hints, enum class EValid Paths); // Function Icarus.HintsLibrary.GetHintsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b85f0
	bool EqualEqual_FHintsRowHandleFHintsRowHandle(struct FHintsRowHandle RowHandleA, struct FHintsRowHandle RowHandleB); // Function Icarus.HintsLibrary.EqualEqual_FHintsRowHandleFHintsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b7f50
	bool EqualEqual_EnumEnum(struct FHintsEnum A, struct FHintsEnum B); // Function Icarus.HintsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b7c30
	struct FHintsRowHandle CastToHintsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.HintsLibrary.CastToHintsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b7720
	void BreakHintsEnum(struct FHintsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.HintsLibrary.BreakHintsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15b7160
	void AddRowToHintsTable(struct FName Name, struct FHintsData Data, struct FHintsRowHandle NewRow); // Function Icarus.HintsLibrary.AddRowToHintsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b6c30
};

// Class Icarus.HintsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHintsTable : UIcarusDataTable {
};

// Class Icarus.HitableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UHitableComponent : UTraitComponent {

	void OnHit(); // Function Icarus.HitableComponent.OnHit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1584f60
	void Hitable(); // Function Icarus.HitableComponent.Hitable // (Final|Native|Public|BlueprintCallable) // @ game+0xd79c80
	bool GetHitableData(struct FHitableData OutData); // Function Icarus.HitableComponent.GetHitableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15b87b0
	bool ConsumeHit(struct UActorState* ActorStateIn, struct FIcarusDamagePacket DamagePacket); // Function Icarus.HitableComponent.ConsumeHit // (Native|Event|Public|BlueprintEvent) // @ game+0x15b7960
	bool CanConsumeHit(struct UActorState* ActorStateIn, struct FIcarusDamagePacket DamagePacket); // Function Icarus.HitableComponent.CanConsumeHit // (Native|Event|Public|BlueprintEvent) // @ game+0x15b7420
};

// Class Icarus.HitableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHitableLibrary : URowLibrary {

	struct FHitableRowHandle StructToRowHandle(struct FHitableEnum EnumValue); // Function Icarus.HitableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bab50
	struct FName StructToName(struct FHitableEnum EnumValue); // Function Icarus.HitableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba950
	int32_t StructToInt(struct FHitableEnum EnumValue); // Function Icarus.HitableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba770
	struct FHitableEnum RowHandleToStruct(struct FHitableRowHandle RowHandle); // Function Icarus.HitableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba460
	void RemoveRowFromHitableTable(struct FName Name); // Function Icarus.HitableLibrary.RemoveRowFromHitableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ba260
	void RefreshConstants(); // Function Icarus.HitableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15ba140
	int32_t NumRows(); // Function Icarus.HitableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ba0d0
	bool NotEqual_EnumName(struct FHitableEnum A, struct FName B); // Function Icarus.HitableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9f80
	bool NotEqual_EnumEnum(struct FHitableEnum A, struct FHitableEnum B); // Function Icarus.HitableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9cb0
	struct FHitableEnum NameToStruct(struct FName NameValue); // Function Icarus.HitableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9a40
	int32_t NameToInt(struct FName NameValue); // Function Icarus.HitableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15b9890
	struct FHitableRowHandle MakeLiteralHitable(struct FHitableRowHandle RowHandle); // Function Icarus.HitableLibrary.MakeLiteralHitable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b96a0
	struct FHitableRowHandle MakeHitableFromIndex(int32_t Index); // Function Icarus.HitableLibrary.MakeHitableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9470
	struct FHitableEnum MakeHitableEnum(struct FHitableEnum Enum); // Function Icarus.HitableLibrary.MakeHitableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b93f0
	struct FHitableRowHandle MakeHitable(struct FName RowName); // Function Icarus.HitableLibrary.MakeHitable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b9350
	bool IsValidName(struct FName NameValue); // Function Icarus.HitableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15b8f60
	struct FHitableEnum IntToStruct(int32_t IntValue); // Function Icarus.HitableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b8d80
	struct FName IntToName(int32_t IntValue); // Function Icarus.HitableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15b8bd0
	void GetHitableStruct(struct FHitableRowHandle RowHandle, struct FHitableData Hitable, enum class EValid Paths); // Function Icarus.HitableLibrary.GetHitableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b8920
	bool EqualEqual_FHitableRowHandleFHitableRowHandle(struct FHitableRowHandle RowHandleA, struct FHitableRowHandle RowHandleB); // Function Icarus.HitableLibrary.EqualEqual_FHitableRowHandleFHitableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b8090
	bool EqualEqual_EnumEnum(struct FHitableEnum A, struct FHitableEnum B); // Function Icarus.HitableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15b7d20
	struct FHitableRowHandle CastToHitableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.HitableLibrary.CastToHitableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b7840
	void BreakHitableEnum(struct FHitableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.HitableLibrary.BreakHitableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15b72c0
	void AddRowToHitableTable(struct FName Name, struct FHitableData Data, struct FHitableRowHandle NewRow); // Function Icarus.HitableLibrary.AddRowToHitableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15b6e40
};

// Class Icarus.HitableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHitableTable : UIcarusDataTable {
};

// Class Icarus.HuntingClue
// Size: 0x2a0 (Inherited: 0x2a0)
struct AHuntingClue : AIcarusActor {
};

// Class Icarus.HuntingSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UHuntingSetupLibrary : URowLibrary {

	struct FHuntingSetupRowHandle StructToRowHandle(struct FHuntingSetupEnum EnumValue); // Function Icarus.HuntingSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15c0010
	struct FName StructToName(struct FHuntingSetupEnum EnumValue); // Function Icarus.HuntingSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bff70
	int32_t StructToInt(struct FHuntingSetupEnum EnumValue); // Function Icarus.HuntingSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bfed0
	struct FHuntingSetupEnum RowHandleToStruct(struct FHuntingSetupRowHandle RowHandle); // Function Icarus.HuntingSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf920
	void RemoveRowFromHuntingSetupTable(struct FName Name); // Function Icarus.HuntingSetupLibrary.RemoveRowFromHuntingSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15bf8a0
	void RefreshConstants(); // Function Icarus.HuntingSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x15bf810
	int32_t NumRows(); // Function Icarus.HuntingSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf760
	bool NotEqual_EnumName(struct FHuntingSetupEnum A, struct FName B); // Function Icarus.HuntingSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf670
	bool NotEqual_EnumEnum(struct FHuntingSetupEnum A, struct FHuntingSetupEnum B); // Function Icarus.HuntingSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf580
	struct FHuntingSetupEnum NameToStruct(struct FName NameValue); // Function Icarus.HuntingSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf4f0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.HuntingSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x15bf460
	struct FHuntingSetupRowHandle MakeLiteralHuntingSetup(struct FHuntingSetupRowHandle RowHandle); // Function Icarus.HuntingSetupLibrary.MakeLiteralHuntingSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf390
	struct FHuntingSetupRowHandle MakeHuntingSetupFromIndex(int32_t Index); // Function Icarus.HuntingSetupLibrary.MakeHuntingSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf300
	struct FHuntingSetupEnum MakeHuntingSetupEnum(struct FHuntingSetupEnum Enum); // Function Icarus.HuntingSetupLibrary.MakeHuntingSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf280
	struct FHuntingSetupRowHandle MakeHuntingSetup(struct FName RowName); // Function Icarus.HuntingSetupLibrary.MakeHuntingSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bf1e0
	bool IsValidName(struct FName NameValue); // Function Icarus.HuntingSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x15bf070
	struct FHuntingSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.HuntingSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15beda0
	struct FName IntToName(int32_t IntValue); // Function Icarus.HuntingSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x15bed10
	void GetHuntingSetupStruct(struct FHuntingSetupRowHandle RowHandle, struct FHuntingSetup HuntingSetup, enum class EValid Paths); // Function Icarus.HuntingSetupLibrary.GetHuntingSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15be330
	bool EqualEqual_FHuntingSetupRowHandleFHuntingSetupRowHandle(struct FHuntingSetupRowHandle RowHandleA, struct FHuntingSetupRowHandle RowHandleB); // Function Icarus.HuntingSetupLibrary.EqualEqual_FHuntingSetupRowHandleFHuntingSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bdea0
	bool EqualEqual_EnumEnum(struct FHuntingSetupEnum A, struct FHuntingSetupEnum B); // Function Icarus.HuntingSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15bddb0
	struct FHuntingSetupRowHandle CastToHuntingSetupRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.HuntingSetupLibrary.CastToHuntingSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15bdac0
	void BreakHuntingSetupEnum(struct FHuntingSetupEnum Enum, struct FName Name, int32_t Index); // Function Icarus.HuntingSetupLibrary.BreakHuntingSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15bd960
	void AddRowToHuntingSetupTable(struct FName Name, struct FHuntingSetup Data, struct FHuntingSetupRowHandle NewRow); // Function Icarus.HuntingSetupLibrary.AddRowToHuntingSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15bd7c0
};

// Class Icarus.HuntingSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UHuntingSetupTable : UIcarusDataTable {
};

// Class Icarus.HuntingWidget
// Size: 0x260 (Inherited: 0x260)
struct UHuntingWidget : UUserWidget {
};

// Class Icarus.IcarusActorUIDInterface
// Size: 0x28 (Inherited: 0x28)
struct UIcarusActorUIDInterface : UInterface {

	void SetIcarusUID(int32_t UID); // Function Icarus.IcarusActorUIDInterface.SetIcarusUID // (Native|Public|BlueprintCallable) // @ game+0x15bfdb0
	int32_t GetIcarusUID(); // Function Icarus.IcarusActorUIDInterface.GetIcarusUID // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15be510
};

// Class Icarus.IcarusActorUIDLibrary
// Size: 0x38 (Inherited: 0x28)
struct UIcarusActorUIDLibrary : UObject {
	char pad_28[0x10]; // 0x28(0x10)

	bool FreeUniqueID(int32_t IDToRemove); // Function Icarus.IcarusActorUIDLibrary.FreeUniqueID // (Final|Native|Public|BlueprintCallable) // @ game+0x15be060
	int32_t ClaimUniqueID(int32_t SuggestedID); // Function Icarus.IcarusActorUIDLibrary.ClaimUniqueID // (Final|Native|Public|BlueprintCallable) // @ game+0x15bdbe0
};

// Class Icarus.IcarusAIBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAIBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	bool IsTargetAlive(struct UObject* TargetObject); // Function Icarus.IcarusAIBlueprintFunctionLibrary.IsTargetAlive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15befe0
	bool GetLastPerceivedTargetLocation(struct AAIController* Controller, struct AActor* Target, struct FVector LastSensedLocation, bool bUseExactStimulusLocation, bool bProjectResult, enum class ETraceTypeQuery TraceChannel, struct FVector ProjectionExtent); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetLastPerceivedTargetLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15be540
	struct FNavAgentProperties GetBestNavPropertiesForAgent(struct FNavAgentProperties InAgentProperties); // Function Icarus.IcarusAIBlueprintFunctionLibrary.GetBestNavPropertiesForAgent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15be100
};

// Class Icarus.IcarusAISpawnFilter
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAISpawnFilter : UObject {

	bool IsSpawnLocationValid(struct AActor* WorldContext, struct FVector InLocation, struct TMap<struct FString, int32_t> FilterParams); // Function Icarus.IcarusAISpawnFilter.IsSpawnLocationValid // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x15bee30
};

// Class Icarus.IcarusAnimBPFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAnimBPFunctionLibrary : UBlueprintFunctionLibrary {

	float GetMontageSlotWeight(struct UAnimInstance* AnimInstance, struct FName SlotName, bool bLocalWeight); // Function Icarus.IcarusAnimBPFunctionLibrary.GetMontageSlotWeight // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15be9c0
	bool GetMontageSectionLength(struct UAnimMontage* AnimMontage, struct FName SectionName, float Length); // Function Icarus.IcarusAnimBPFunctionLibrary.GetMontageSectionLength // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15be8b0
};

// Class Icarus.IcarusAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UIcarusAnimInstance : UAnimInstance {
	struct AIcarusActor* OwningIcarusActor; // 0x2b8(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	bool DoesCurveExist(struct FName CurveName); // Function Icarus.IcarusAnimInstance.DoesCurveExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15bdd10
};

// Class Icarus.IcarusAnimMetaData
// Size: 0x30 (Inherited: 0x28)
struct UIcarusAnimMetaData : UAnimMetaData {
	float SectionWeight; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Icarus.IcarusAnimNotify
// Size: 0x58 (Inherited: 0x38)
struct UIcarusAnimNotify : UAnimNotify {
	struct UTraitComponent* TargetComponent; // 0x38(0x08)
	struct FString NotifyName; // 0x40(0x10)
	bool TriggerWhenMontageReversed; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Icarus.IcarusAnimNotify_UpdateNPCStance
// Size: 0x40 (Inherited: 0x38)
struct UIcarusAnimNotify_UpdateNPCStance : UAnimNotify {
	enum class EGOAPCharacterStance NewStance; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Icarus.IcarusAudioFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusAudioFunctionLibrary : UBlueprintFunctionLibrary {

	void SetEventAudioContextParameters(struct AActor* ContextActor, struct FFMODEventInstance EventInstance, bool bUseOcclusion, struct FName TracePoint, bool bUseWaterImmersion); // Function Icarus.IcarusAudioFunctionLibrary.SetEventAudioContextParameters // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15bfb80
	void SetComponentAudioContextParameters(struct AActor* ContextActor, struct UFMODAudioComponent* AudioComponent, bool bUseOcclusion, struct FName TracePoint, bool bUseWaterImmersion); // Function Icarus.IcarusAudioFunctionLibrary.SetComponentAudioContextParameters // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15bf9e0
	void RegisterEventInstanceToUseListenerRotation(struct FFMODEventInstance Instance); // Function Icarus.IcarusAudioFunctionLibrary.RegisterEventInstanceToUseListenerRotation // (Final|Native|Static|Public) // @ game+0x15bf830
	bool LocationIsInAudibleRangeOfEvent(struct FVector Location, struct UFMODEvent* Event); // Function Icarus.IcarusAudioFunctionLibrary.LocationIsInAudibleRangeOfEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15bf100
	float GetSimpleOcclusionOnce(struct UObject* WorldContextObject, struct FVector Location, struct AActor* IgnoreActor); // Function Icarus.IcarusAudioFunctionLibrary.GetSimpleOcclusionOnce // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15beba0
	struct FTransform GetNearestListenerTransform(struct FVector TargetLocation); // Function Icarus.IcarusAudioFunctionLibrary.GetNearestListenerTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15bead0
	struct UAudioContextComponent* GetLocalPlayerAudioContext(struct UObject* WorldContextObject); // Function Icarus.IcarusAudioFunctionLibrary.GetLocalPlayerAudioContext // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15be820
	struct FVector GetListenerLocation(struct UObject* WorldContextObject); // Function Icarus.IcarusAudioFunctionLibrary.GetListenerLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15be780
	float GetEventMaxDistance(struct UFMODEvent* Event); // Function Icarus.IcarusAudioFunctionLibrary.GetEventMaxDistance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15be2a0
	float GetEventLengthInSeconds(struct UFMODEvent* Event); // Function Icarus.IcarusAudioFunctionLibrary.GetEventLengthInSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15be210
	bool EventInstanceIsInAudibleRange(struct FFMODEventInstance EventInstance); // Function Icarus.IcarusAudioFunctionLibrary.EventInstanceIsInAudibleRange // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15bdfe0
};

// Class Icarus.IcarusFirearmAnimInstance
// Size: 0x9c0 (Inherited: 0x2d0)
struct UIcarusFirearmAnimInstance : UIcarusAnimInstance {
	struct UActionableBehaviour* ActionableBehaviour; // 0x2d0(0x08)
	bool bAnimDataLoaded; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	struct FFirearmData FirearmData; // 0x2e0(0x598)
	struct FFirearmAnimData AnimData; // 0x878(0x130)
	float CurrentCharge; // 0x9a8(0x04)
	bool bIsADS; // 0x9ac(0x01)
	char pad_9AD[0x3]; // 0x9ad(0x03)
	float CurrentAimAlpha; // 0x9b0(0x04)
	char pad_9B4[0xc]; // 0x9b4(0x0c)
};

// Class Icarus.IcarusBowAnimInstance
// Size: 0x9c0 (Inherited: 0x9c0)
struct UIcarusBowAnimInstance : UIcarusFirearmAnimInstance {

	bool IsHandConnectedToString(); // Function Icarus.IcarusBowAnimInstance.IsHandConnectedToString // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x15c4ef0
};

// Class Icarus.IcarusCameraSpringArm
// Size: 0x2b0 (Inherited: 0x280)
struct UIcarusCameraSpringArm : USpringArmComponent {
	bool bThirdPerson; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FVector ThirdPersonOffset; // 0x284(0x0c)
	struct FVector FirstPersonOffset; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct AController* DesiredRotationController; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	void UpdateArmPosition(); // Function Icarus.IcarusCameraSpringArm.UpdateArmPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7980
	void ToggleCameraMode(); // Function Icarus.IcarusCameraSpringArm.ToggleCameraMode // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7810
	void StopRecording(); // Function Icarus.IcarusCameraSpringArm.StopRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7760
	void StartRecording(); // Function Icarus.IcarusCameraSpringArm.StartRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x15c76b0
	void SetRotationLock(bool Locked); // Function Icarus.IcarusCameraSpringArm.SetRotationLock // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7590
	void ReadRecording(); // Function Icarus.IcarusCameraSpringArm.ReadRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x15c73b0
};

// Class Icarus.IcarusSessionBase
// Size: 0x3b0 (Inherited: 0x30)
struct UIcarusSessionBase : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x2e0]; // 0x50(0x2e0)
	struct UFindSessionsCallbackProxyAdvanced* FindSessionsCallbackProxy; // 0x330(0x08)
	struct UCreateSessionCallbackProxyAdvanced* CreateSessionCallbackProxy; // 0x338(0x08)
	char pad_340[0x18]; // 0x340(0x18)
	struct UJoinSessionCallbackProxyAdvanced* JoinSessionCallbackProxy; // 0x358(0x08)
	struct UUpdateSessionCallbackProxyAdvanced* UpdateSessionCallbackProxy; // 0x360(0x08)
	struct UDestroySessionCallbackProxyAdvanced* DestroySessionCallbackProxy; // 0x368(0x08)
	struct UCancelFindSessionsCallbackProxy* CancelFindSessionsCallbackProxy; // 0x370(0x08)
	bool bFindSessionsRetry; // 0x378(0x01)
	char pad_379[0x3]; // 0x379(0x03)
	int32_t FindSessionRetryAttempts; // 0x37c(0x04)
	int32_t FindSessionRetryAttemptsMax; // 0x380(0x04)
	float FindSessionsRetryTime; // 0x384(0x04)
	float FindSessionsRetryMaxTime; // 0x388(0x04)
	float SessionNodeTime; // 0x38c(0x04)
	float SessionNodeMaxTime; // 0x390(0x04)
	char pad_394[0x1c]; // 0x394(0x1c)

	bool SessionTick(float DeltaSeconds); // Function Icarus.IcarusSessionBase.SessionTick // (Native|Protected) // @ game+0x15fbbf0
	void OnUpdateSessionSuccess(); // Function Icarus.IcarusSessionBase.OnUpdateSessionSuccess // (Native|Protected) // @ game+0x15fb900
	void OnUpdateSessionFailure(); // Function Icarus.IcarusSessionBase.OnUpdateSessionFailure // (Native|Protected) // @ game+0x15fb8e0
	void OnPackagedLoadoutUpdated(); // Function Icarus.IcarusSessionBase.OnPackagedLoadoutUpdated // (Final|Native|Protected) // @ game+0x15fb6f0
	void OnPackagedLoadoutSuccess(); // Function Icarus.IcarusSessionBase.OnPackagedLoadoutSuccess // (Native|Protected) // @ game+0x15fb6d0
	void OnPackagedLoadoutFailure(); // Function Icarus.IcarusSessionBase.OnPackagedLoadoutFailure // (Native|Protected) // @ game+0x15fb6b0
	void OnJoinedSessionSuccess(); // Function Icarus.IcarusSessionBase.OnJoinedSessionSuccess // (Native|Protected) // @ game+0x15fb690
	void OnJoinedSessionFailure(); // Function Icarus.IcarusSessionBase.OnJoinedSessionFailure // (Native|Protected) // @ game+0x15fb670
	void OnFindHostedSessionSuccess(struct TArray<struct FBlueprintSessionResult> Results); // Function Icarus.IcarusSessionBase.OnFindHostedSessionSuccess // (Native|Protected|HasOutParms) // @ game+0x15fb5a0
	void OnFindHostedSessionFailure(struct TArray<struct FBlueprintSessionResult> Results); // Function Icarus.IcarusSessionBase.OnFindHostedSessionFailure // (Native|Protected|HasOutParms) // @ game+0x15fb4d0
	void OnDestroyedSessionSuccess(); // Function Icarus.IcarusSessionBase.OnDestroyedSessionSuccess // (Native|Protected) // @ game+0x15fb4b0
	void OnDestroyedSessionFailure(); // Function Icarus.IcarusSessionBase.OnDestroyedSessionFailure // (Native|Protected) // @ game+0x15fb490
	void OnCreateSessionSuccess(); // Function Icarus.IcarusSessionBase.OnCreateSessionSuccess // (Native|Protected) // @ game+0x15fb470
	void OnCreateSessionFailure(); // Function Icarus.IcarusSessionBase.OnCreateSessionFailure // (Native|Protected) // @ game+0x15fb450
	void OnCancelFindSessionsSuccess(); // Function Icarus.IcarusSessionBase.OnCancelFindSessionsSuccess // (Native|Protected) // @ game+0x15fb430
	void OnCancelFindSessionsFailure(); // Function Icarus.IcarusSessionBase.OnCancelFindSessionsFailure // (Native|Protected) // @ game+0x15fb410
};

// Class Icarus.IcarusCanJoinSession
// Size: 0x3b8 (Inherited: 0x3b0)
struct UIcarusCanJoinSession : UIcarusSessionBase {
	struct UCanJoinProspectCallbackProxyGen* CanJoinProspectCallbackProxy; // 0x3b0(0x08)

	void OnCanJoinProspectSuccess(struct FResCanJoinProspect Result); // Function Icarus.IcarusCanJoinSession.OnCanJoinProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x15c5020
	void OnCanJoinProspectFailure(struct FResCanJoinProspect Result); // Function Icarus.IcarusCanJoinSession.OnCanJoinProspectFailure // (Native|Protected|HasOutParms) // @ game+0x15c4f80
	struct UIcarusCanJoinSession* IcarusCanJoinSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController); // Function Icarus.IcarusCanJoinSession.IcarusCanJoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c49b0
};

// Class Icarus.IcarusCharacter
// Size: 0x5a0 (Inherited: 0x4c0)
struct AIcarusCharacter : ACharacter {
	char pad_4C0[0x18]; // 0x4c0(0x18)
	struct UIcarusStatContainer* StatContainer; // 0x4d8(0x08)
	struct UCharacterState* ActorState; // 0x4e0(0x08)
	struct FAIRelationshipsRowHandle AIRelationshipTableRowNew; // 0x4e8(0x18)
	float MinFallTime; // 0x500(0x04)
	char pad_504[0x4]; // 0x504(0x04)
	struct UCurveFloat* FallDamageCurve; // 0x508(0x08)
	char pad_510[0x10]; // 0x510(0x10)
	struct FGameplayTagContainer GameplayTags; // 0x520(0x20)
	char bIsSprinting : 1; // 0x540(0x01)
	char bIsAiming : 1; // 0x540(0x01)
	char pad_540_2 : 6; // 0x540(0x01)
	char pad_541[0x7]; // 0x541(0x07)
	struct ULadderComponent* LadderReference; // 0x548(0x08)
	char pad_550[0x50]; // 0x550(0x50)

	void TryApplyFallDamage(enum class EMovementMode PreviousMoveMode); // Function Icarus.IcarusCharacter.TryApplyFallDamage // (Final|Native|Public) // @ game+0x15c7900
	void StopSprint(bool bClientSimulation); // Function Icarus.IcarusCharacter.StopSprint // (Native|Public|BlueprintCallable) // @ game+0x15c7780
	void StopAim(bool bClientSimulation); // Function Icarus.IcarusCharacter.StopAim // (Native|Public|BlueprintCallable) // @ game+0x15c76d0
	void Sprint(bool bClientSimulation); // Function Icarus.IcarusCharacter.Sprint // (Native|Public|BlueprintCallable) // @ game+0x15c7620
	void OnStatContainerUpdated_Internal(); // Function Icarus.IcarusCharacter.OnStatContainerUpdated_Internal // (Final|Native|Public) // @ game+0x15c7110
	void OnRep_IsSprinting(); // Function Icarus.IcarusCharacter.OnRep_IsSprinting // (Native|Protected) // @ game+0xfa8750
	void OnRep_IsAiming(); // Function Icarus.IcarusCharacter.OnRep_IsAiming // (Final|Native|Protected) // @ game+0x15c5220
	void OnFallDamageApplied(float DamageApplied, float FallSpeed, float FallStrength); // Function Icarus.IcarusCharacter.OnFallDamageApplied // (Native|Event|Public|BlueprintEvent) // @ game+0x15c50c0
	void Multicast_PlayReplicatedMontage(struct UAnimMontage* Montage); // Function Icarus.IcarusCharacter.Multicast_PlayReplicatedMontage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xe2f1b0
	bool IsSprinting(); // Function Icarus.IcarusCharacter.IsSprinting // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15c4f50
	bool IsAiming(); // Function Icarus.IcarusCharacter.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15c4ec0
	void Aim(bool bClientSimulation); // Function Icarus.IcarusCharacter.Aim // (Native|Public|BlueprintCallable) // @ game+0x15c41b0
};

// Class Icarus.IcarusCharacterAnimInstance
// Size: 0x2e0 (Inherited: 0x2d0)
struct UIcarusCharacterAnimInstance : UIcarusAnimInstance {
	struct AIcarusItem* FocusedItem; // 0x2d0(0x08)
	struct AIcarusPlayerCharacter* OwningCharacter; // 0x2d8(0x08)

	void SetFocusedItem(struct AIcarusItem* Item); // Function Icarus.IcarusCharacterAnimInstance.SetFocusedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7500
	void OnFocusedItemUpdated(struct AIcarusItem* Item); // Function Icarus.IcarusCharacterAnimInstance.OnFocusedItemUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x15c51b0
};

// Class Icarus.IcarusCharacterFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusCharacterFunctionLibrary : UBlueprintFunctionLibrary {

	int32_t CalculatePlayerLevel(int32_t ExperiencePoints, struct FCharacterGrowthRowHandle GrowthRowHandle); // Function Icarus.IcarusCharacterFunctionLibrary.CalculatePlayerLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15c4240
};

// Class Icarus.IcarusCheatManager
// Size: 0x78 (Inherited: 0x78)
struct UIcarusCheatManager : UCheatManager {
};

// Class Icarus.IcarusCheatsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusCheatsFunctionLibrary : UBlueprintFunctionLibrary {

	void QueueAutomationScript(struct UObject* WorldContextObject, struct FName ScriptName, struct FLatentActionInfo LatentInfo); // Function Icarus.IcarusCheatsFunctionLibrary.QueueAutomationScript // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c7260
	bool IsCheatsEnabled(); // Function Icarus.IcarusCheatsFunctionLibrary.IsCheatsEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x93be80
	void IfCheatsEnabled(enum class ECheatsEnabled Paths); // Function Icarus.IcarusCheatsFunctionLibrary.IfCheatsEnabled // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c4e40
	struct ACheatController* GetCheatController(struct UObject* WorldContextObject, int32_t PlayerIndex, enum class EValid Paths); // Function Icarus.IcarusCheatsFunctionLibrary.GetCheatController // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c4690
	void EvaluateCheatScript(struct UObject* WorldContextObject, struct TArray<struct FString> ScriptLines, struct FLatentActionInfo LatentInfo); // Function Icarus.IcarusCheatsFunctionLibrary.EvaluateCheatScript // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c44f0
	void EvaluateAutomationScript(struct UObject* WorldContextObject, struct TArray<struct FString> ScriptLines, struct FLatentActionInfo LatentInfo); // Function Icarus.IcarusCheatsFunctionLibrary.EvaluateAutomationScript // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c44f0
};

// Class Icarus.IcarusLaunchSession
// Size: 0x3c8 (Inherited: 0x3b0)
struct UIcarusLaunchSession : UIcarusSessionBase {
	char pad_3B0[0x10]; // 0x3b0(0x10)
	struct UCreateProspectCallbackProxyGen* CreateProspectCallbackProxy; // 0x3c0(0x08)

	void OnCreateProspectSuccess(struct FResCreateProspect Result); // Function Icarus.IcarusLaunchSession.OnCreateProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x15e4920
	void OnCreateProspectFailed(struct FResCreateProspect Result); // Function Icarus.IcarusLaunchSession.OnCreateProspectFailed // (Native|Protected|HasOutParms) // @ game+0x15e4860
	struct UIcarusLaunchSession* IcarusLaunchSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController); // Function Icarus.IcarusLaunchSession.IcarusLaunchSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15e44a0
};

// Class Icarus.IcarusClaimAndLaunchSession
// Size: 0x430 (Inherited: 0x3c8)
struct UIcarusClaimAndLaunchSession : UIcarusLaunchSession {
	struct FIcarusClaimAndLaunchSessionConfirmationSetups Confirmation; // 0x3c8(0x68)

	struct UIcarusClaimAndLaunchSession* IcarusClaimAndLaunchSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController, struct FIcarusClaimAndLaunchSessionConfirmationSetups Confirmation); // Function Icarus.IcarusClaimAndLaunchSession.IcarusClaimAndLaunchSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c4bb0
	void ClaimProspectResult(bool Success, struct FProspectInfo ProspectInfo); // Function Icarus.IcarusClaimAndLaunchSession.ClaimProspectResult // (Final|Native|Protected|HasOutParms) // @ game+0x15c4330
};

// Class Icarus.IcarusController
// Size: 0x598 (Inherited: 0x590)
struct AIcarusController : APlayerController {
	struct FMulticastSparseDelegate OnItemGained; // 0x590(0x01)
	char pad_591[0x7]; // 0x591(0x07)

	void TriggerQuickMove(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusController.TriggerQuickMove // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7830
	void OnServer_UseItemAuto(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use); // Function Icarus.IcarusController.OnServer_UseItemAuto // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c6fa0
	void OnServer_UseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use); // Function Icarus.IcarusController.OnServer_UseItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c6e30
	void OnServer_TransferAll(struct UInventory* FromInventory, struct UInventory* ToInventory); // Function Icarus.IcarusController.OnServer_TransferAll // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c6d30
	void OnServer_TakeAll(struct UInventory* Inventory); // Function Icarus.IcarusController.OnServer_TakeAll // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c6c70
	void OnServer_ShiftItemAuto(struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory); // Function Icarus.IcarusController.OnServer_ShiftItemAuto // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c6b20
	void OnServer_ShiftItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory, int32_t DestinationLocation, int32_t Amount); // Function Icarus.IcarusController.OnServer_ShiftItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c6960
	void OnServer_QuickMoveItem(struct UInventory* Inventory, int32_t Slot, struct UInventoryComponent* LinkedActorInventory); // Function Icarus.IcarusController.OnServer_QuickMoveItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x15c6810
	void OnServer_BounceItem(struct FItemData Item); // Function Icarus.IcarusController.OnServer_BounceItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x15c60e0
	void OnServer_AddItemCheat(struct UInventory* SourceInventory, struct FItemData ItemData); // Function Icarus.IcarusController.OnServer_AddItemCheat // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c5970
	void OnServer_AddItem(struct FItemData ItemTemplate); // Function Icarus.IcarusController.OnServer_AddItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15c5240
	bool IsOnProspect(); // Function Icarus.IcarusController.IsOnProspect // (Native|Public|BlueprintCallable) // @ game+0x15c4f20
	struct UInventoryComponent* GetDynamicWidgetInventory(); // Function Icarus.IcarusController.GetDynamicWidgetInventory // (Native|Event|Public|BlueprintEvent) // @ game+0x15c47a0
};

// Class Icarus.IcarusCorpseAnimInstance
// Size: 0x320 (Inherited: 0x2d0)
struct UIcarusCorpseAnimInstance : UIcarusAnimInstance {
	struct AIcarusCorpse* OwningCorpse; // 0x2d0(0x08)
	struct UAnimSequence* CarryAnim; // 0x2d8(0x08)
	struct FPoseSnapshot RagdollPose; // 0x2e0(0x38)
	bool bIsThirdPerson; // 0x318(0x01)
	bool bIsCarried; // 0x319(0x01)
	char pad_31A[0x6]; // 0x31a(0x06)
};

// Class Icarus.IcarusDamageType
// Size: 0x48 (Inherited: 0x40)
struct UIcarusDamageType : UDamageType {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Icarus.PureDamage
// Size: 0x48 (Inherited: 0x48)
struct UPureDamage : UIcarusDamageType {
};

// Class Icarus.PhysicalDamage
// Size: 0x48 (Inherited: 0x48)
struct UPhysicalDamage : UIcarusDamageType {
};

// Class Icarus.FireDamage
// Size: 0x48 (Inherited: 0x48)
struct UFireDamage : UIcarusDamageType {
};

// Class Icarus.FallDamage
// Size: 0x48 (Inherited: 0x48)
struct UFallDamage : UIcarusDamageType {
};

// Class Icarus.CollisionDamage
// Size: 0x48 (Inherited: 0x48)
struct UCollisionDamage : UIcarusDamageType {
};

// Class Icarus.PoisonDamage
// Size: 0x48 (Inherited: 0x48)
struct UPoisonDamage : UIcarusDamageType {
};

// Class Icarus.WindDamage
// Size: 0x48 (Inherited: 0x48)
struct UWindDamage : UIcarusDamageType {
};

// Class Icarus.IcarusDataTableGenerationLibrary
// Size: 0x118 (Inherited: 0x118)
struct UIcarusDataTableGenerationLibrary : UDataTableValidationLibrary {
};

// Class Icarus.IcarusEQSTestingPawn
// Size: 0x560 (Inherited: 0x550)
struct AIcarusEQSTestingPawn : AEQSTestingPawn {
	struct FMulticastInlineDelegate OnEQSQueryComplete; // 0x550(0x10)

	void SetEQS(struct UEnvQuery* Template); // Function Icarus.IcarusEQSTestingPawn.SetEQS // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7470
	void RunEQSQueryTest(); // Function Icarus.IcarusEQSTestingPawn.RunEQSQueryTest // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7450
	bool GetEQSResultsAsLocations(struct TArray<struct FVector> OutLocations); // Function Icarus.IcarusEQSTestingPawn.GetEQSResultsAsLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15c47d0
};

// Class Icarus.IcarusErrorSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UIcarusErrorSubsystem : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)

	void RequestErrorsForAction(enum class EErrorAction Action); // Function Icarus.IcarusErrorSubsystem.RequestErrorsForAction // (Final|Native|Public|BlueprintCallable) // @ game+0x15c73d0
	void PushError(struct FErrorCodesEnum ErrorCode, enum class EErrorTarget Target, enum class EErrorAction ErrorAction); // Function Icarus.IcarusErrorSubsystem.PushError // (Final|Native|Public|BlueprintCallable) // @ game+0x15c7130
};

// Class Icarus.IcarusFMODFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusFMODFunctionLibrary : UBlueprintFunctionLibrary {

	void StopAllEvents(); // Function Icarus.IcarusFMODFunctionLibrary.StopAllEvents // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ce2c0
	void PlayOneShot(struct UObject* WorldContext, struct UFMODEvent* Event, struct FTransform Transform, bool bUseListenerRotation, bool bUseOcclusion); // Function Icarus.IcarusFMODFunctionLibrary.PlayOneShot // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15cd200
	int32_t GetActiveEventInstanceCount(struct UFMODEvent* Event); // Function Icarus.IcarusFMODFunctionLibrary.GetActiveEventInstanceCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ca960
};

// Class Icarus.IcarusFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIcarusFunctionLibrary : UBlueprintFunctionLibrary {

	struct FVector2D WorldLocationToHeatmapUV(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.WorldLocationToHeatmapUV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15ce610
	bool TriggerExperienceEvent(struct AActor* Target, enum class EExperienceSource Type, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.TriggerExperienceEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ce510
	int32_t TriggerAfflictionChance(struct AActor* Parent, struct FAfflictionChanceRowHandle Affliction, struct AActor* Causer, struct AController* Instigator); // Function Icarus.IcarusFunctionLibrary.TriggerAfflictionChance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ce370
	struct FColor TemperatureToColor(int32_t Temperature); // Function Icarus.IcarusFunctionLibrary.TemperatureToColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15ce2e0
	void SetWidgetNavigation(bool AllowAnalog, bool AllowKey, bool AllowTab); // Function Icarus.IcarusFunctionLibrary.SetWidgetNavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ce1b0
	void SetLandscapeCollisionProfile(struct ALandscapeProxy* Landscape, struct FName ProfileName); // Function Icarus.IcarusFunctionLibrary.SetLandscapeCollisionProfile // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ce0f0
	bool SetGameplayTagContainer(struct UObject* InAsset, struct FGameplayTagContainer InContainer); // Function Icarus.IcarusFunctionLibrary.SetGameplayTagContainer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cdfe0
	bool SetContactShadowsForComponent(struct UPrimitiveComponent* Component, bool bContactShadowsEnabled); // Function Icarus.IcarusFunctionLibrary.SetContactShadowsForComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cdf10
	struct FColor SampleTemperatureColorAtLocation(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleTemperatureColorAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cde30
	int32_t SampleTemperatureAtLocation(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleTemperatureAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cdd60
	bool SampleLocationOutOfBounds(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleLocationOutOfBounds // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cdc90
	struct FColor SampleHeatmapWithUV(struct UGameplayTexture* Texture, struct FVector2D UV); // Function Icarus.IcarusFunctionLibrary.SampleHeatmapWithUV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cdbc0
	struct FColor SampleHeatmapWithLocation(struct UGameplayTexture* Texture, struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleHeatmapWithLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cdab0
	int32_t SampleEnvironmentalTemperature(struct UObject* WorldContextObject, struct FBoxSphereBounds Bounds, struct AActor* Caller, struct FBiomesRowHandle Biome, bool bExcludeFire); // Function Icarus.IcarusFunctionLibrary.SampleEnvironmentalTemperature // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cd8e0
	struct FColor SampleBoundsColorAtLocation(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleBoundsColorAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cd800
	struct FColor SampleBiomeColorAtLocation(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleBiomeColorAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cd720
	struct FBiomesRowHandle SampleBiomeAtLocation(struct UObject* WorldContext, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.SampleBiomeAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cd640
	char RowHandleToEnum(struct FRowHandle InRowHandle, struct UEnum* InEnum); // Function Icarus.IcarusFunctionLibrary.RowHandleToEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cd550
	bool RemoveModifierState(struct AActor* Parent, struct FModifierStatesRowHandle InModifierFilter, int32_t UID); // Function Icarus.IcarusFunctionLibrary.RemoveModifierState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cd400
	bool IsMouseNavigation(struct FFocusEvent InFocusEvent); // Function Icarus.IcarusFunctionLibrary.IsMouseNavigation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15cd160
	bool IsLocationLoaded(struct UObject* WorldContextObject, struct FVector Location, struct TSoftObjectPtr<UWorld> Heightmap); // Function Icarus.IcarusFunctionLibrary.IsLocationLoaded // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15ccff0
	bool IsFLODMesh(struct UStaticMeshComponent* Mesh); // Function Icarus.IcarusFunctionLibrary.IsFLODMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ccf60
	bool IsEditorOnlyActor(struct AActor* Actor); // Function Icarus.IcarusFunctionLibrary.IsEditorOnlyActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cced0
	bool IsConstraining(struct UPhysicsConstraintComponent* PhysicsConstraint); // Function Icarus.IcarusFunctionLibrary.IsConstraining // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cce40
	bool GrantSharedExperience(struct AActor* Source, int32_t Experience); // Function Icarus.IcarusFunctionLibrary.GrantSharedExperience // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ccd70
	bool GrantExperienceToActorWithMultiplier(struct AActor* Target, struct FExperienceEventsRowHandle Event, float Multiplier, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GrantExperienceToActorWithMultiplier // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ccbd0
	bool GrantExperienceToActor(struct AActor* Target, struct FExperienceEventsRowHandle Event, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GrantExperienceToActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cca80
	bool GrantExactExperienceToActor(struct AActor* Target, struct FExperienceEventsRowHandle Event, int32_t ExperienceGranted, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GrantExactExperienceToActor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cc8f0
	struct AWorldSettings* GetWorldSettings(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWorldSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc860
	bool GetWorldData(struct UObject* WorldContextObject, struct FWorldDataRowHandle WorldData); // Function Icarus.IcarusFunctionLibrary.GetWorldData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cc780
	struct UWeatherManagerComponent* GetWeatherManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWeatherManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc6f0
	struct AWeatherController* GetWeatherController(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetWeatherController // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc660
	struct FString GetVoxelCacheFilePath(struct AVoxelResource* VoxelBlueprint); // Function Icarus.IcarusFunctionLibrary.GetVoxelCacheFilePath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc590
	bool GetTerrainData(struct UObject* WorldContextObject, struct FTerrainsRowHandle TerrainData); // Function Icarus.IcarusFunctionLibrary.GetTerrainData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cc4b0
	struct ULevelStreamingDynamic* GetStreamedLevelAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.GetStreamedLevelAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cc3e0
	struct UStaticMesh* GetStaticMeshFromFoliageISM(struct UObject* FoliageType); // Function Icarus.IcarusFunctionLibrary.GetStaticMeshFromFoliageISM // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc350
	struct TArray<struct FStaticMeshCapsuleCollider> GetStaticMeshCapsuleGeo(struct UStaticMesh* StaticMesh); // Function Icarus.IcarusFunctionLibrary.GetStaticMeshCapsuleGeo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc280
	struct FName GetRootBoneName(struct USkeletalMesh* Mesh); // Function Icarus.IcarusFunctionLibrary.GetRootBoneName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cc1f0
	void GetPlayerCharacterState(struct UObject* WorldContextObject, int32_t PlayerIndex, struct UPlayerCharacterState* PlayerCharacterState, bool bSuccess); // Function Icarus.IcarusFunctionLibrary.GetPlayerCharacterState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cc090
	int32_t GetNearestTileIndex(struct UObject* WorldContextObject, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.GetNearestTileIndex // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cbfc0
	struct TArray<struct FName> GetMontageSections(struct UAnimMontage* Montage); // Function Icarus.IcarusFunctionLibrary.GetMontageSections // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cbef0
	struct UAnimMetaData* GetMontageSectionMetaDataByClass(struct UAnimMetaData* Class, struct UAnimMontage* Montage, bool Success, struct FName MontageSection); // Function Icarus.IcarusFunctionLibrary.GetMontageSectionMetaDataByClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cbd90
	struct UModifierStateComponent* GetModifierStateByUID(struct AActor* Parent, int32_t UID); // Function Icarus.IcarusFunctionLibrary.GetModifierStateByUID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cbcc0
	struct AMissionManager* GetMissionManager(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetMissionManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cbc30
	bool GetMapVersions(struct UObject* WorldContextObject, struct TSoftObjectPtr<UWorld> LevelAsset, int32_t MapVersion, int32_t GeneratedVersion); // Function Icarus.IcarusFunctionLibrary.GetMapVersions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cba90
	void GetLinearDriveParams(struct UPhysicsConstraintComponent* PhysicsConstraint, float PositionStrength, float VelocityStrength); // Function Icarus.IcarusFunctionLibrary.GetLinearDriveParams // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15cb970
	int32_t GetLevelIndexAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function Icarus.IcarusFunctionLibrary.GetLevelIndexAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15cb8a0
	struct AIcarusPlayerController* GetIcarusPlayerController(struct UObject* WorldContextObject, int32_t PlayerIndex, enum class EValid IsValid); // Function Icarus.IcarusFunctionLibrary.GetIcarusPlayerController // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cb790
	struct AIcarusPlayerCharacter* GetIcarusPlayerCharacter(struct UObject* WorldContextObject, int32_t PlayerIndex, enum class EValid IsValid); // Function Icarus.IcarusFunctionLibrary.GetIcarusPlayerCharacter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cb680
	bool GetGameplayTagContainer(struct UObject* InAsset, struct FGameplayTagContainer OutContainer); // Function Icarus.IcarusFunctionLibrary.GetGameplayTagContainer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cb570
	int32_t GetExperienceGrantedFromRecipe(struct FProcessorRecipe Recipe, struct FRecipeSet RecipeSet); // Function Icarus.IcarusFunctionLibrary.GetExperienceGrantedFromRecipe // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cb350
	int32_t GetExperienceGrantedFromEvent(struct AActor* Target, struct FExperienceEventsRowHandle Event, struct AActor* Source); // Function Icarus.IcarusFunctionLibrary.GetExperienceGrantedFromEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15cb210
	struct ADisasterController* GetDisasterController(struct UObject* WorldContextObject); // Function Icarus.IcarusFunctionLibrary.GetDisasterController // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15cb180
	struct FVector4 GetCustomPrimitiveDataVector4(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataVector4 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x15cb0a0
	struct FVector GetCustomPrimitiveDataVector3(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataVector3 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x15cafc0
	struct FVector2D GetCustomPrimitiveDataVector2(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataVector2 // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x15caef0
	float GetCustomPrimitiveDataFloatISM(struct UInstancedStaticMeshComponent* ISM, int32_t InstanceIndex, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataFloatISM // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cadf0
	float GetCustomPrimitiveDataFloat(struct UPrimitiveComponent* Primitive, int32_t DataIndex); // Function Icarus.IcarusFunctionLibrary.GetCustomPrimitiveDataFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cad20
	struct UPrimitiveComponent* GetConstrainedComponent(struct UPhysicsConstraintComponent* PhysicsConstraint, enum class EConstraintFrame Frame); // Function Icarus.IcarusFunctionLibrary.GetConstrainedComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15cac50
	struct FTransform GetBoneTransform(struct USkeletalMesh* Mesh, struct FName BoneName); // Function Icarus.IcarusFunctionLibrary.GetBoneTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15cab50
	void GetBackendProxyComponent(struct UObject* WorldContextObject, int32_t PlayerIndex, struct UBackendProxyComponent* BackendProxyComponent, bool bSuccess); // Function Icarus.IcarusFunctionLibrary.GetBackendProxyComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ca9f0
	void FlushLandscapeProxy(struct ALandscapeProxy* Proxy); // Function Icarus.IcarusFunctionLibrary.FlushLandscapeProxy // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15ca8e0
	void FixModifierActivation(struct AActor* Parent, struct FModifierStatesRowHandle RowHandle); // Function Icarus.IcarusFunctionLibrary.FixModifierActivation // (Final|Native|Static|Public|HasOutParms) // @ game+0x15ca800
	float FindPositionFromDistanceCurve(struct UAnimSequenceBase* InAnimSequence, struct FName AnimationCurveName, float Distance); // Function Icarus.IcarusFunctionLibrary.FindPositionFromDistanceCurve // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ca6f0
	struct FName EnumToRowName(char EnumValue, struct UEnum* InEnum); // Function Icarus.IcarusFunctionLibrary.EnumToRowName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ca620
	bool DoesFoliageTypeHaveValidCollisionSetup(struct UFoliageType_InstancedStaticMesh* InFoliageTypeISM, struct FString FailureReason); // Function Icarus.IcarusFunctionLibrary.DoesFoliageTypeHaveValidCollisionSetup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ca530
	bool DoesBoneExist(struct USkeletalMesh* Mesh, struct FName BoneName); // Function Icarus.IcarusFunctionLibrary.DoesBoneExist // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ca460
	int32_t ConvertToEpoch(struct FDateTime Time); // Function Icarus.IcarusFunctionLibrary.ConvertToEpoch // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15ca3e0
	struct FDateTime ConvertToDateTime(int32_t EpochTime); // Function Icarus.IcarusFunctionLibrary.ConvertToDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x15ca350
	int32_t ColorToTemperature(struct FColor Color); // Function Icarus.IcarusFunctionLibrary.ColorToTemperature // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15ca2c0
	struct FBiomesRowHandle ColorToBiome(struct FColor Color); // Function Icarus.IcarusFunctionLibrary.ColorToBiome // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15ca220
	bool CheckDeathEvent(struct AActor* Target, struct AActor* Source, struct FExperienceData Data); // Function Icarus.IcarusFunctionLibrary.CheckDeathEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15c9f90
	bool CapsuleTraceSingleRotated(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FRotator Orientation, float Radius, float HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct FHitResult OutHit, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Icarus.IcarusFunctionLibrary.CapsuleTraceSingleRotated // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15c9a70
	bool CapsuleTraceMultiRotated(struct UObject* WorldContextObject, struct FVector Start, struct FVector End, struct FRotator Orientation, float Radius, float HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, struct TArray<struct AActor*> ActorsToIgnore, enum class EDrawDebugTrace DrawDebugType, struct TArray<struct FHitResult> OutHits, bool bIgnoreSelf, struct FLinearColor TraceColor, struct FLinearColor TraceHitColor, float DrawTime); // Function Icarus.IcarusFunctionLibrary.CapsuleTraceMultiRotated // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15c9580
	void CanHitWithSuccessType(struct AActor* Source, struct AActor* Target, enum class ECanHitResult Result, struct FValidHitTypesRowHandle Out_ValidHitType); // Function Icarus.IcarusFunctionLibrary.CanHitWithSuccessType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c9400
	bool CanHit(struct AActor* Source, struct AActor* Target); // Function Icarus.IcarusFunctionLibrary.CanHit // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15c9330
	struct FColor BiomeToColor(struct FBiomesRowHandle BiomesRow); // Function Icarus.IcarusFunctionLibrary.BiomeToColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15c9270
	void AddTraitComponent(struct AActor* Owner, struct UTraitComponent* TraitComponentClass, struct FRowHandle TraitData, struct UTraitComponent* OutComponent); // Function Icarus.IcarusFunctionLibrary.AddTraitComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15c90e0
	int32_t AddModifierState(struct AActor* Parent, struct FModifier InModifier, struct AActor* Causer, struct AController* Instigator); // Function Icarus.IcarusFunctionLibrary.AddModifierState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15c8f50
};

// Class Icarus.IcarusGameEngine
// Size: 0xe30 (Inherited: 0xe30)
struct UIcarusGameEngine : UGameEngine {
};

// Class Icarus.IcarusGameInstance
// Size: 0x548 (Inherited: 0x1a8)
struct UIcarusGameInstance : UGameInstance {
	bool bLoginAttempted; // 0x1a8(0x01)
	char pad_1A9[0x3]; // 0x1a9(0x03)
	int32_t MapVersion; // 0x1ac(0x04)
	int32_t MapGeneratedVersion; // 0x1b0(0x04)
	char pad_1B4[0x14]; // 0x1b4(0x14)
	struct ULobbyMessageCallbackProxyGen* LobbyMessageCallback; // 0x1c8(0x08)
	char pad_1D0[0x40]; // 0x1d0(0x40)
	struct UScopedViewportBlocker* ProspectLoadViewportBlocker; // 0x210(0x08)
	int32_t ViewportBlockerCount; // 0x218(0x04)
	char pad_21C[0x154]; // 0x21c(0x154)
	struct FMulticastInlineDelegate OnWindowReceivedFocus; // 0x370(0x10)
	struct FMulticastInlineDelegate OnWindowLostFocus; // 0x380(0x10)
	char pad_390[0x40]; // 0x390(0x40)
	struct FBlueprintSessionResult SessionToJoin; // 0x3d0(0x108)
	char pad_4D8[0x18]; // 0x4d8(0x18)
	struct TWeakObjectPtr<struct UUserWidget> InBetweenLoadingScreen; // 0x4f0(0x08)
	char pad_4F8[0x8]; // 0x4f8(0x08)
	struct FMaintenanceStatus CurrentMaintenanceStatus; // 0x500(0x20)
	struct FMulticastInlineDelegate MaintenanceStatusUpdated; // 0x520(0x10)
	struct FMulticastInlineDelegate LobbyQueueLoginUpdated; // 0x530(0x10)
	int32_t CurrentQueueSize; // 0x540(0x04)
	float CurrentQueueSecondsRemaining; // 0x544(0x04)

	void UpdatePresence(struct APlayerController* PlayerController, struct FString NewLocation, struct FName SessionName); // Function Icarus.IcarusGameInstance.UpdatePresence // (Final|Native|Public|BlueprintCallable) // @ game+0x15da120
	void SetLocalSelectedCharacter(struct FOnlineProfileCharacter NewLocalSelectedCharacter); // Function Icarus.IcarusGameInstance.SetLocalSelectedCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15d8b70
	void ResetLocalSelectedCharacter(); // Function Icarus.IcarusGameInstance.ResetLocalSelectedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7760
	void OnSessionInviteAcceptedEvent(int32_t ControllerId, struct FBlueprintSessionResult InviteResult); // Function Icarus.IcarusGameInstance.OnSessionInviteAcceptedEvent // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void OnLobbyMessageComplete(struct FResLobbyMessage Response); // Function Icarus.IcarusGameInstance.OnLobbyMessageComplete // (Final|Native|Protected|HasOutParms) // @ game+0x15d73e0
	void Login(); // Function Icarus.IcarusGameInstance.Login // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7200
	bool IsViewportBlockerActive(); // Function Icarus.IcarusGameInstance.IsViewportBlockerActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d71d0
	bool HasLocalSelectedCharacter(); // Function Icarus.IcarusGameInstance.HasLocalSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6d60
	void HandlePreLoadMap(struct FString MapName); // Function Icarus.IcarusGameInstance.HandlePreLoadMap // (Final|Native|Protected) // @ game+0x15d6cb0
	void HandlePostLoadMap(struct UWorld* World); // Function Icarus.IcarusGameInstance.HandlePostLoadMap // (Final|Native|Protected) // @ game+0x15d6c20
	void HandleHostMigrationAttemptJoin(struct FHostMigrationInfo BackupHostInfo); // Function Icarus.IcarusGameInstance.HandleHostMigrationAttemptJoin // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void HandleHostMigrationAttemptHost(struct FHostMigrationInfo BackupHostInfo); // Function Icarus.IcarusGameInstance.HandleHostMigrationAttemptHost // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	struct FOnlineProfileCharacter GetLocalSelectedCharacter(); // Function Icarus.IcarusGameInstance.GetLocalSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d60e0
};

// Class Icarus.IcarusGameModeBase
// Size: 0x308 (Inherited: 0x308)
struct AIcarusGameModeBase : AGameMode {

	void OnConnectedPlayerInitialised(struct FConnectedPlayer ConnectedPlayer); // Function Icarus.IcarusGameModeBase.OnConnectedPlayerInitialised // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x15d72b0
	void ForceErrorCmd(int32_t InErrorNumber, int32_t ErrorDestination, int32_t ErrorAction); // Function Icarus.IcarusGameModeBase.ForceErrorCmd // (Final|Exec|Native|Public) // @ game+0x15d5b00
};

// Class Icarus.IcarusGameModeSpace
// Size: 0x308 (Inherited: 0x308)
struct AIcarusGameModeSpace : AIcarusGameModeBase {
};

// Class Icarus.IcarusGameModeSurvival
// Size: 0x518 (Inherited: 0x308)
struct AIcarusGameModeSurvival : AIcarusGameModeBase {
	char pad_308[0x8]; // 0x308(0x08)
	struct FMulticastInlineDelegate OnPreEndProspectSession; // 0x310(0x10)
	struct FOnlineProspectInfo TestProspectInfo; // 0x320(0x150)
	bool bDebugPlayerInitialisationDropships; // 0x470(0x01)
	bool bProspectSavedLocally; // 0x471(0x01)
	bool bHostingProspect; // 0x472(0x01)
	enum class EEndProspectSessionContext EndProspectSessionContext; // 0x473(0x01)
	bool bForceLastSaveProspectState; // 0x474(0x01)
	char pad_475[0x7]; // 0x475(0x07)
	float LastProspectSaveStateTime; // 0x47c(0x04)
	float LastProspectHeartbeatTime; // 0x480(0x04)
	int32_t UpdateProspectStateFailedCounter; // 0x484(0x04)
	char pad_488[0x8]; // 0x488(0x08)
	struct UIcarusGameStateRecorder* GameStateRecorder; // 0x490(0x08)
	struct UUpdateProspectCallbackProxyGen* UpdateProspectCallbackProxy; // 0x498(0x08)
	bool bCurrentUpdateProspectIsSaving; // 0x4a0(0x01)
	char pad_4A1[0x7]; // 0x4a1(0x07)
	struct UGameModeStateRecorderComponent* GameModeRecorderComponent; // 0x4a8(0x08)
	struct AWeatherController* WeatherController; // 0x4b0(0x08)
	char pad_4B8[0x60]; // 0x4b8(0x60)

	bool TryResolveRecorderForOwner(struct AActor* SpawnedActor, bool bActorSpawned); // Function Icarus.IcarusGameModeSurvival.TryResolveRecorderForOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15da050
	bool SetupTestProspectInfo(); // Function Icarus.IcarusGameModeSurvival.SetupTestProspectInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x15d9ed0
	void RaiseTheCurtain(); // Function Icarus.IcarusGameModeSurvival.RaiseTheCurtain // (Native|Event|Public|BlueprintEvent) // @ game+0x15d7630
	void OnUpdateProspectSuccess(struct FResUpdateProspect Response); // Function Icarus.IcarusGameModeSurvival.OnUpdateProspectSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x15d75a0
	void OnUpdateProspectFailed(struct FResUpdateProspect Response); // Function Icarus.IcarusGameModeSurvival.OnUpdateProspectFailed // (Final|Native|Protected|HasOutParms) // @ game+0x15d7510
	void OnActorSpawned(struct AActor* SpawnedActor); // Function Icarus.IcarusGameModeSurvival.OnActorSpawned // (Final|Native|Public|Const) // @ game+0x15d7220
	bool IsTestProspectActive(); // Function Icarus.IcarusGameModeSurvival.IsTestProspectActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1523ba0
	void IcarusBeginPlay(); // Function Icarus.IcarusGameModeSurvival.IcarusBeginPlay // (Native|Event|Public|BlueprintEvent) // @ game+0x15d6e70
	bool HasProspectSessionEnded(); // Function Icarus.IcarusGameModeSurvival.HasProspectSessionEnded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6d90
	float GetProspectGameTime(); // Function Icarus.IcarusGameModeSurvival.GetProspectGameTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6510
	struct UIcarusGameStateRecorder* GetGameStateRecorder(); // Function Icarus.IcarusGameModeSurvival.GetGameStateRecorder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5f60
	struct FNetworkStateDebugInfo GatherNetworkHealthInfo(struct APlayerController* HostController); // Function Icarus.IcarusGameModeSurvival.GatherNetworkHealthInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x15d5c10
	void EndProspectSession(enum class EEndProspectSessionContext Context); // Function Icarus.IcarusGameModeSurvival.EndProspectSession // (Final|Native|Public|BlueprintCallable) // @ game+0x15d5a80
	void DebugDatabaseSave(bool SaveToFile); // Function Icarus.IcarusGameModeSurvival.DebugDatabaseSave // (Final|Native|Public|BlueprintCallable) // @ game+0x15d58d0
	void DebugDatabaseLoad(bool LoadFromFile); // Function Icarus.IcarusGameModeSurvival.DebugDatabaseLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x15d5840
	void DatabaseReloadComplete(); // Function Icarus.IcarusGameModeSurvival.DatabaseReloadComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x15d5820
	void DatabaseReloadBegin(); // Function Icarus.IcarusGameModeSurvival.DatabaseReloadBegin // (Final|Native|Public) // @ game+0x15d5800
};

// Class Icarus.IcarusGameStateBase
// Size: 0x2d0 (Inherited: 0x290)
struct AIcarusGameStateBase : AGameState {
	struct UConnectedPlayers* ConnectedPlayers; // 0x290(0x08)
	struct TArray<struct FString> ApprovedPlayerNetIDs; // 0x298(0x10)
	struct FHostMigrationInfo BackupHostMigrationInfo; // 0x2a8(0x28)

	void OnRep_BackupHostMigrationInfo(); // Function Icarus.IcarusGameStateBase.OnRep_BackupHostMigrationInfo // (Final|Native|Public) // @ game+0x15d7490
};

// Class Icarus.IcarusGameStateRecorder
// Size: 0x38 (Inherited: 0x28)
struct UIcarusGameStateRecorder : UObject {
	struct TArray<struct UIcarusStateRecorderComponent*> RecorderComponents; // 0x28(0x10)
};

// Class Icarus.IcarusGameStateSpace
// Size: 0x2d0 (Inherited: 0x2d0)
struct AIcarusGameStateSpace : AIcarusGameStateBase {
};

// Class Icarus.IcarusGameStateSurvival
// Size: 0x4b0 (Inherited: 0x2d0)
struct AIcarusGameStateSurvival : AIcarusGameStateBase {
	struct UWeatherManagerComponent* WeatherManager; // 0x2d0(0x08)
	struct AMissionManager* MissionManager; // 0x2d8(0x08)
	bool DebugLogging; // 0x2e0(0x01)
	bool GOAPDebugging; // 0x2e1(0x01)
	bool bThermalComponentDebugging; // 0x2e2(0x01)
	char pad_2E3[0x1]; // 0x2e3(0x01)
	struct FProspectListRowHandle ProspectInfo; // 0x2e4(0x18)
	int32_t GlobalEnvTempModifier; // 0x2fc(0x04)
	char pad_300[0x10]; // 0x300(0x10)
	struct FMulticastInlineDelegate OnSeedInitialised; // 0x310(0x10)
	int32_t Seed; // 0x320(0x04)
	bool bSeedInitialised; // 0x324(0x01)
	char pad_325[0x3]; // 0x325(0x03)
	struct AFLOD* FLOD; // 0x328(0x08)
	struct ADisasterController* DisasterController; // 0x330(0x08)
	float TimeOfDay; // 0x338(0x04)
	struct FGlobalCheatData GlobalCheatData; // 0x33c(0x02)
	char pad_33E[0x2]; // 0x33e(0x02)
	struct TArray<struct UThermalComponent*> ThermalComponents; // 0x340(0x10)
	struct FOnlineProspectInfo ReplicatedActiveProspect; // 0x350(0x150)
	struct TArray<struct FSessionFlagsRowHandle> SessionFlags; // 0x4a0(0x10)

	void SpawnFloatingDamageNumbers(struct AActor* Actor, struct FIcarusDamagePacket DamagePacket); // Function Icarus.IcarusGameStateSurvival.SpawnFloatingDamageNumbers // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x15d9f00
	void SetSessionFlag(struct FSessionFlagsRowHandle Flag, bool State); // Function Icarus.IcarusGameStateSurvival.SetSessionFlag // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15d9450
	void SetSeed(int32_t NewSeed); // Function Icarus.IcarusGameStateSurvival.SetSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x15d93c0
	void RegisterThermalComponent(struct UThermalComponent* NewComponent); // Function Icarus.IcarusGameStateSurvival.RegisterThermalComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7650
	void OnRep_SessionFlags(); // Function Icarus.IcarusGameStateSurvival.OnRep_SessionFlags // (Final|Native|Public) // @ game+0x15d74f0
	void OnRep_Seed(); // Function Icarus.IcarusGameStateSurvival.OnRep_Seed // (Final|Native|Protected) // @ game+0x15d74d0
	void OnRep_ReplicatedActiveProspect(); // Function Icarus.IcarusGameStateSurvival.OnRep_ReplicatedActiveProspect // (Final|Native|Public) // @ game+0x15d74b0
	bool IsInLastMomentsOfSession(); // Function Icarus.IcarusGameStateSurvival.IsInLastMomentsOfSession // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15d6f30
	bool HasSessionFlag(struct FSessionFlagsRowHandle Flag); // Function Icarus.IcarusGameStateSurvival.HasSessionFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15d6dc0
	int32_t GetTemperatureEffectAtLocation(struct FVector WorldLocation, struct AActor* Querier); // Function Icarus.IcarusGameStateSurvival.GetTemperatureEffectAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6a90
	void GenerateResourceTypeForVoxelActor(struct AVoxelResource* VoxelResourceActor); // Function Icarus.IcarusGameStateSurvival.GenerateResourceTypeForVoxelActor // (Final|Native|Public|BlueprintCallable) // @ game+0x15d5cb0
	void DeregisterThermalComponent(struct UThermalComponent* Component); // Function Icarus.IcarusGameStateSurvival.DeregisterThermalComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x15d5960
};

// Class Icarus.IcarusGameUserSettingsPreGen
// Size: 0x148 (Inherited: 0x120)
struct UIcarusGameUserSettingsPreGen : UGameUserSettings {
	char pad_120[0x10]; // 0x120(0x10)
	struct UGameUserSettingsSubsystem* Subsystem; // 0x130(0x08)
	char pad_138[0x8]; // 0x138(0x08)
	struct UStringTable* StringTable; // 0x140(0x08)

	void PushLock_BP(); // Function Icarus.IcarusGameUserSettingsPreGen.PushLock_BP // (Final|Native|Protected|BlueprintCallable) // @ game+0x15df490
	void PopLock_BP(bool bApplyOnRelease); // Function Icarus.IcarusGameUserSettingsPreGen.PopLock_BP // (Final|Native|Protected|BlueprintCallable) // @ game+0x15df400
};

// Class Icarus.IcarusGameUserSettingsGen
// Size: 0x268 (Inherited: 0x148)
struct UIcarusGameUserSettingsGen : UIcarusGameUserSettingsPreGen {
	struct FMulticastSparseDelegate OnDisplayModeApplied; // 0x148(0x01)
	struct FMulticastSparseDelegate OnResolutionApplied; // 0x149(0x01)
	struct FMulticastSparseDelegate OnResolutionScaleApplied; // 0x14a(0x01)
	struct FMulticastSparseDelegate OnFrameLimitApplied; // 0x14b(0x01)
	struct FMulticastSparseDelegate OnEnableVSyncApplied; // 0x14c(0x01)
	struct FMulticastSparseDelegate OnMotionBlurApplied; // 0x14d(0x01)
	struct FMulticastSparseDelegate OnOverallApplied; // 0x14e(0x01)
	struct FMulticastSparseDelegate OnViewDistanceApplied; // 0x14f(0x01)
	struct FMulticastSparseDelegate OnAntiAliasingApplied; // 0x150(0x01)
	struct FMulticastSparseDelegate OnPostProcessingApplied; // 0x151(0x01)
	struct FMulticastSparseDelegate OnShadowsApplied; // 0x152(0x01)
	struct FMulticastSparseDelegate OnTexturesApplied; // 0x153(0x01)
	struct FMulticastSparseDelegate OnEffectsApplied; // 0x154(0x01)
	struct FMulticastSparseDelegate OnFoliageApplied; // 0x155(0x01)
	struct FMulticastSparseDelegate OnShadingApplied; // 0x156(0x01)
	struct FMulticastSparseDelegate OnUseSimpleBuildingShadowsApplied; // 0x157(0x01)
	struct FMulticastSparseDelegate OnDisableLightningEffectsApplied; // 0x158(0x01)
	struct FMulticastSparseDelegate OnDLSSModeApplied; // 0x159(0x01)
	struct FMulticastSparseDelegate OnDLSSSharpnessApplied; // 0x15a(0x01)
	struct FMulticastSparseDelegate OnRTXEnabledApplied; // 0x15b(0x01)
	struct FMulticastSparseDelegate OnGlobalIlluminationApplied; // 0x15c(0x01)
	struct FMulticastSparseDelegate OnMasterVolumeApplied; // 0x15d(0x01)
	struct FMulticastSparseDelegate OnAmbientVolumeApplied; // 0x15e(0x01)
	struct FMulticastSparseDelegate OnMusicVolumeApplied; // 0x15f(0x01)
	struct FMulticastSparseDelegate OnSFXVolumeApplied; // 0x160(0x01)
	struct FMulticastSparseDelegate OnDialogueVolumeApplied; // 0x161(0x01)
	struct FMulticastSparseDelegate OnLanguageApplied; // 0x162(0x01)
	struct FMulticastSparseDelegate OnFieldOfViewApplied; // 0x163(0x01)
	struct FMulticastSparseDelegate OnEquipmentFieldOfViewApplied; // 0x164(0x01)
	struct FMulticastSparseDelegate OnPlayerMarkerEnabledApplied; // 0x165(0x01)
	struct FMulticastSparseDelegate OnEnableClothSimulationApplied; // 0x166(0x01)
	struct FMulticastSparseDelegate OnCreatureIKEnabledApplied; // 0x167(0x01)
	struct FMulticastSparseDelegate OnShowAimCrosshairApplied; // 0x168(0x01)
	struct FMulticastSparseDelegate OnShowDamageNumbersApplied; // 0x169(0x01)
	struct FMulticastSparseDelegate OnShowBloodEffectsApplied; // 0x16a(0x01)
	struct FMulticastSparseDelegate OnMultiplayerGhostBuildingApplied; // 0x16b(0x01)
	struct FMulticastSparseDelegate OnShowTutorialProspectApplied; // 0x16c(0x01)
	struct FMulticastSparseDelegate OnInputTypeApplied; // 0x16d(0x01)
	struct FMulticastSparseDelegate OnControllerIconsApplied; // 0x16e(0x01)
	struct FMulticastSparseDelegate OnMouseSensitivityXApplied; // 0x16f(0x01)
	struct FMulticastSparseDelegate OnMouseSensitivityYApplied; // 0x170(0x01)
	struct FMulticastSparseDelegate OnToggleCrouchApplied; // 0x171(0x01)
	struct FMulticastSparseDelegate OnToggleAimApplied; // 0x172(0x01)
	struct FMulticastSparseDelegate OnInvertYAxisApplied; // 0x173(0x01)
	struct FMulticastSparseDelegate OnAimSensitivityApplied; // 0x174(0x01)
	enum class EDisplayModeSetting DisplayMode; // 0x175(0x01)
	char pad_176[0x2]; // 0x176(0x02)
	struct FString Resolution; // 0x178(0x10)
	char pad_188[0x10]; // 0x188(0x10)
	float ResolutionScale; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	float FrameLimit; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	bool bEnableVSync; // 0x1a8(0x01)
	char pad_1A9[0x3]; // 0x1a9(0x03)
	float MotionBlur; // 0x1ac(0x04)
	char pad_1B0[0x4]; // 0x1b0(0x04)
	enum class EOverallSetting Overall; // 0x1b4(0x01)
	char pad_1B5[0x1]; // 0x1b5(0x01)
	enum class EViewDistanceSetting ViewDistance; // 0x1b6(0x01)
	char pad_1B7[0x1]; // 0x1b7(0x01)
	enum class EAntiAliasingSetting AntiAliasing; // 0x1b8(0x01)
	char pad_1B9[0x1]; // 0x1b9(0x01)
	enum class EPostProcessingSetting PostProcessing; // 0x1ba(0x01)
	char pad_1BB[0x1]; // 0x1bb(0x01)
	enum class EShadowsSetting Shadows; // 0x1bc(0x01)
	char pad_1BD[0x1]; // 0x1bd(0x01)
	enum class ETexturesSetting Textures; // 0x1be(0x01)
	char pad_1BF[0x1]; // 0x1bf(0x01)
	enum class EEffectsSetting Effects; // 0x1c0(0x01)
	char pad_1C1[0x1]; // 0x1c1(0x01)
	enum class EFoliageSetting Foliage; // 0x1c2(0x01)
	char pad_1C3[0x1]; // 0x1c3(0x01)
	enum class EShadingSetting Shading; // 0x1c4(0x01)
	char pad_1C5[0x1]; // 0x1c5(0x01)
	bool bUseSimpleBuildingShadows; // 0x1c6(0x01)
	char pad_1C7[0x1]; // 0x1c7(0x01)
	bool bDisableLightningEffects; // 0x1c8(0x01)
	char pad_1C9[0x1]; // 0x1c9(0x01)
	enum class EDLSSModeSetting DLSSMode; // 0x1ca(0x01)
	char pad_1CB[0x1]; // 0x1cb(0x01)
	float DLSSSharpness; // 0x1cc(0x04)
	char pad_1D0[0x4]; // 0x1d0(0x04)
	bool bRTXEnabled; // 0x1d4(0x01)
	char pad_1D5[0x1]; // 0x1d5(0x01)
	bool bGlobalIllumination; // 0x1d6(0x01)
	char pad_1D7[0x1]; // 0x1d7(0x01)
	float MasterVolume; // 0x1d8(0x04)
	char pad_1DC[0x4]; // 0x1dc(0x04)
	float AmbientVolume; // 0x1e0(0x04)
	char pad_1E4[0x4]; // 0x1e4(0x04)
	float MusicVolume; // 0x1e8(0x04)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	float SFXVolume; // 0x1f0(0x04)
	char pad_1F4[0x4]; // 0x1f4(0x04)
	float DialogueVolume; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct FString Language; // 0x200(0x10)
	char pad_210[0x10]; // 0x210(0x10)
	float FieldOfView; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	float EquipmentFieldOfView; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	bool bPlayerMarkerEnabled; // 0x230(0x01)
	char pad_231[0x1]; // 0x231(0x01)
	bool bEnableClothSimulation; // 0x232(0x01)
	char pad_233[0x1]; // 0x233(0x01)
	bool bCreatureIKEnabled; // 0x234(0x01)
	char pad_235[0x1]; // 0x235(0x01)
	bool bShowAimCrosshair; // 0x236(0x01)
	char pad_237[0x1]; // 0x237(0x01)
	bool bShowDamageNumbers; // 0x238(0x01)
	char pad_239[0x1]; // 0x239(0x01)
	bool bShowBloodEffects; // 0x23a(0x01)
	char pad_23B[0x1]; // 0x23b(0x01)
	bool bMultiplayerGhostBuilding; // 0x23c(0x01)
	char pad_23D[0x1]; // 0x23d(0x01)
	bool bShowTutorialProspect; // 0x23e(0x01)
	char pad_23F[0x1]; // 0x23f(0x01)
	enum class EInputTypeSetting InputType; // 0x240(0x01)
	char pad_241[0x1]; // 0x241(0x01)
	enum class EControllerIconsSetting ControllerIcons; // 0x242(0x01)
	char pad_243[0x1]; // 0x243(0x01)
	float MouseSensitivityX; // 0x244(0x04)
	char pad_248[0x4]; // 0x248(0x04)
	float MouseSensitivityY; // 0x24c(0x04)
	char pad_250[0x4]; // 0x250(0x04)
	bool bToggleCrouch; // 0x254(0x01)
	char pad_255[0x1]; // 0x255(0x01)
	bool bToggleAim; // 0x256(0x01)
	char pad_257[0x1]; // 0x257(0x01)
	bool bInvertYAxis; // 0x258(0x01)
	char pad_259[0x3]; // 0x259(0x03)
	float AimSensitivity; // 0x25c(0x04)
	char pad_260[0x8]; // 0x260(0x08)

	void SetViewDistance(enum class EViewDistanceSetting InViewDistance); // Function Icarus.IcarusGameUserSettingsGen.SetViewDistance // (Native|Public|BlueprintCallable) // @ game+0x15d9e50
	void SetUseSimpleBuildingShadows(bool bInUseSimpleBuildingShadows); // Function Icarus.IcarusGameUserSettingsGen.SetUseSimpleBuildingShadows // (Native|Public|BlueprintCallable) // @ game+0x15d9dc0
	void SetToggleCrouch(bool bInToggleCrouch); // Function Icarus.IcarusGameUserSettingsGen.SetToggleCrouch // (Native|Public|BlueprintCallable) // @ game+0x15d9d30
	void SetToggleAim(bool bInToggleAim); // Function Icarus.IcarusGameUserSettingsGen.SetToggleAim // (Native|Public|BlueprintCallable) // @ game+0x15d9ca0
	void SetTextures(enum class ETexturesSetting InTextures); // Function Icarus.IcarusGameUserSettingsGen.SetTextures // (Native|Public|BlueprintCallable) // @ game+0x15d9c20
	void SetShowTutorialProspect(bool bInShowTutorialProspect); // Function Icarus.IcarusGameUserSettingsGen.SetShowTutorialProspect // (Native|Public|BlueprintCallable) // @ game+0x15d9b90
	void SetShowDamageNumbers(bool bInShowDamageNumbers); // Function Icarus.IcarusGameUserSettingsGen.SetShowDamageNumbers // (Native|Public|BlueprintCallable) // @ game+0x15d9b00
	void SetShowBloodEffects(bool bInShowBloodEffects); // Function Icarus.IcarusGameUserSettingsGen.SetShowBloodEffects // (Native|Public|BlueprintCallable) // @ game+0x15d9a70
	void SetShowAimCrosshair(bool bInShowAimCrosshair); // Function Icarus.IcarusGameUserSettingsGen.SetShowAimCrosshair // (Native|Public|BlueprintCallable) // @ game+0x15d99e0
	void SetShadows(enum class EShadowsSetting InShadows); // Function Icarus.IcarusGameUserSettingsGen.SetShadows // (Native|Public|BlueprintCallable) // @ game+0x15d9960
	void SetShading(enum class EShadingSetting InShading); // Function Icarus.IcarusGameUserSettingsGen.SetShading // (Native|Public|BlueprintCallable) // @ game+0x15d98e0
	void SetSFXVolume(float InSFXVolume); // Function Icarus.IcarusGameUserSettingsGen.SetSFXVolume // (Native|Public|BlueprintCallable) // @ game+0x15d9330
	void SetSettingValue_String(struct FName SettingName, struct FString NewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_String // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d97b0
	void SetSettingValue_Index(struct FName SettingName, int32_t NewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_Index // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d96e0
	void SetSettingValue_Float(struct FName SettingName, float NewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_Float // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d9610
	void SetSettingValue_Bool(struct FName SettingName, bool bNewValue); // Function Icarus.IcarusGameUserSettingsGen.SetSettingValue_Bool // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d9540
	void SetRTXEnabled(bool bInRTXEnabled); // Function Icarus.IcarusGameUserSettingsGen.SetRTXEnabled // (Native|Public|BlueprintCallable) // @ game+0x15d9110
	void SetResolutionScale(float InResolutionScale); // Function Icarus.IcarusGameUserSettingsGen.SetResolutionScale // (Native|Public|BlueprintCallable) // @ game+0x15d92a0
	void SetResolution(struct FString InResolution); // Function Icarus.IcarusGameUserSettingsGen.SetResolution // (Native|Public|BlueprintCallable) // @ game+0x15d91a0
	void SetPostProcessing(enum class EPostProcessingSetting InPostProcessing); // Function Icarus.IcarusGameUserSettingsGen.SetPostProcessing // (Native|Public|BlueprintCallable) // @ game+0x15d9090
	void SetPlayerMarkerEnabled(bool bInPlayerMarkerEnabled); // Function Icarus.IcarusGameUserSettingsGen.SetPlayerMarkerEnabled // (Native|Public|BlueprintCallable) // @ game+0x15d9000
	void SetOverall(enum class EOverallSetting InOverall); // Function Icarus.IcarusGameUserSettingsGen.SetOverall // (Native|Public|BlueprintCallable) // @ game+0x15d8f80
	void SetMusicVolume(float InMusicVolume); // Function Icarus.IcarusGameUserSettingsGen.SetMusicVolume // (Native|Public|BlueprintCallable) // @ game+0x15d8ef0
	void SetMultiplayerGhostBuilding(bool bInMultiplayerGhostBuilding); // Function Icarus.IcarusGameUserSettingsGen.SetMultiplayerGhostBuilding // (Native|Public|BlueprintCallable) // @ game+0x15d8e60
	void SetMouseSensitivityY(float InMouseSensitivityY); // Function Icarus.IcarusGameUserSettingsGen.SetMouseSensitivityY // (Native|Public|BlueprintCallable) // @ game+0x15d8dd0
	void SetMouseSensitivityX(float InMouseSensitivityX); // Function Icarus.IcarusGameUserSettingsGen.SetMouseSensitivityX // (Native|Public|BlueprintCallable) // @ game+0x15d8d40
	void SetMotionBlur(float InMotionBlur); // Function Icarus.IcarusGameUserSettingsGen.SetMotionBlur // (Native|Public|BlueprintCallable) // @ game+0x15d8cb0
	void SetMasterVolume(float InMasterVolume); // Function Icarus.IcarusGameUserSettingsGen.SetMasterVolume // (Native|Public|BlueprintCallable) // @ game+0x15d8c20
	void SetLanguage(struct FString InLanguage); // Function Icarus.IcarusGameUserSettingsGen.SetLanguage // (Native|Public|BlueprintCallable) // @ game+0x15d8a70
	void SetInvertYAxis(bool bInInvertYAxis); // Function Icarus.IcarusGameUserSettingsGen.SetInvertYAxis // (Native|Public|BlueprintCallable) // @ game+0x15d89e0
	void SetInputType(enum class EInputTypeSetting InInputType); // Function Icarus.IcarusGameUserSettingsGen.SetInputType // (Native|Public|BlueprintCallable) // @ game+0x15d8960
	void SetGlobalIllumination(bool bInGlobalIllumination); // Function Icarus.IcarusGameUserSettingsGen.SetGlobalIllumination // (Native|Public|BlueprintCallable) // @ game+0x15d88d0
	void SetFrameLimit(float InFrameLimit); // Function Icarus.IcarusGameUserSettingsGen.SetFrameLimit // (Native|Public|BlueprintCallable) // @ game+0x15d8840
	void SetFoliage(enum class EFoliageSetting InFoliage); // Function Icarus.IcarusGameUserSettingsGen.SetFoliage // (Native|Public|BlueprintCallable) // @ game+0x15d87c0
	void SetFieldOfView(float InFieldOfView); // Function Icarus.IcarusGameUserSettingsGen.SetFieldOfView // (Native|Public|BlueprintCallable) // @ game+0x15d8730
	void SetEquipmentFieldOfView(float InEquipmentFieldOfView); // Function Icarus.IcarusGameUserSettingsGen.SetEquipmentFieldOfView // (Native|Public|BlueprintCallable) // @ game+0x15d86a0
	void SetEnableVSync(bool bInEnableVSync); // Function Icarus.IcarusGameUserSettingsGen.SetEnableVSync // (Native|Public|BlueprintCallable) // @ game+0x15d8610
	void SetEnableClothSimulation(bool bInEnableClothSimulation); // Function Icarus.IcarusGameUserSettingsGen.SetEnableClothSimulation // (Native|Public|BlueprintCallable) // @ game+0x15d8580
	void SetEffects(enum class EEffectsSetting InEffects); // Function Icarus.IcarusGameUserSettingsGen.SetEffects // (Native|Public|BlueprintCallable) // @ game+0x15d8500
	void SetDLSSSharpness(float InDLSSSharpness); // Function Icarus.IcarusGameUserSettingsGen.SetDLSSSharpness // (Native|Public|BlueprintCallable) // @ game+0x15d82d0
	void SetDLSSMode(enum class EDLSSModeSetting InDLSSMode); // Function Icarus.IcarusGameUserSettingsGen.SetDLSSMode // (Native|Public|BlueprintCallable) // @ game+0x15d8250
	void SetDisplayMode(enum class EDisplayModeSetting InDisplayMode); // Function Icarus.IcarusGameUserSettingsGen.SetDisplayMode // (Native|Public|BlueprintCallable) // @ game+0x15d8480
	void SetDisableLightningEffects(bool bInDisableLightningEffects); // Function Icarus.IcarusGameUserSettingsGen.SetDisableLightningEffects // (Native|Public|BlueprintCallable) // @ game+0x15d83f0
	void SetDialogueVolume(float InDialogueVolume); // Function Icarus.IcarusGameUserSettingsGen.SetDialogueVolume // (Native|Public|BlueprintCallable) // @ game+0x15d8360
	void SetCreatureIKEnabled(bool bInCreatureIKEnabled); // Function Icarus.IcarusGameUserSettingsGen.SetCreatureIKEnabled // (Native|Public|BlueprintCallable) // @ game+0x15d81c0
	void SetControllerIcons(enum class EControllerIconsSetting InControllerIcons); // Function Icarus.IcarusGameUserSettingsGen.SetControllerIcons // (Native|Public|BlueprintCallable) // @ game+0x15d8140
	void SetAntiAliasing(enum class EAntiAliasingSetting InAntiAliasing); // Function Icarus.IcarusGameUserSettingsGen.SetAntiAliasing // (Native|Public|BlueprintCallable) // @ game+0x15d80c0
	void SetAmbientVolume(float InAmbientVolume); // Function Icarus.IcarusGameUserSettingsGen.SetAmbientVolume // (Native|Public|BlueprintCallable) // @ game+0x15d8030
	void SetAimSensitivity(float InAimSensitivity); // Function Icarus.IcarusGameUserSettingsGen.SetAimSensitivity // (Native|Public|BlueprintCallable) // @ game+0x15d7fa0
	void RevertViewDistance(); // Function Icarus.IcarusGameUserSettingsGen.RevertViewDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7f80
	void RevertUseSimpleBuildingShadows(); // Function Icarus.IcarusGameUserSettingsGen.RevertUseSimpleBuildingShadows // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7f60
	void RevertToggleCrouch(); // Function Icarus.IcarusGameUserSettingsGen.RevertToggleCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7f40
	void RevertToggleAim(); // Function Icarus.IcarusGameUserSettingsGen.RevertToggleAim // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7f20
	void RevertTextures(); // Function Icarus.IcarusGameUserSettingsGen.RevertTextures // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7f00
	void RevertShowTutorialProspect(); // Function Icarus.IcarusGameUserSettingsGen.RevertShowTutorialProspect // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7ee0
	void RevertShowDamageNumbers(); // Function Icarus.IcarusGameUserSettingsGen.RevertShowDamageNumbers // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7ec0
	void RevertShowBloodEffects(); // Function Icarus.IcarusGameUserSettingsGen.RevertShowBloodEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7ea0
	void RevertShowAimCrosshair(); // Function Icarus.IcarusGameUserSettingsGen.RevertShowAimCrosshair // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7e80
	void RevertShadows(); // Function Icarus.IcarusGameUserSettingsGen.RevertShadows // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7e60
	void RevertShading(); // Function Icarus.IcarusGameUserSettingsGen.RevertShading // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7e40
	void RevertSFXVolume(); // Function Icarus.IcarusGameUserSettingsGen.RevertSFXVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7d90
	void RevertSetting(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.RevertSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7db0
	void RevertRTXEnabled(); // Function Icarus.IcarusGameUserSettingsGen.RevertRTXEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7d30
	void RevertResolutionScale(); // Function Icarus.IcarusGameUserSettingsGen.RevertResolutionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7d70
	void RevertResolution(); // Function Icarus.IcarusGameUserSettingsGen.RevertResolution // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7d50
	void RevertPostProcessing(); // Function Icarus.IcarusGameUserSettingsGen.RevertPostProcessing // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7d10
	void RevertPlayerMarkerEnabled(); // Function Icarus.IcarusGameUserSettingsGen.RevertPlayerMarkerEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7cf0
	void RevertOverall(); // Function Icarus.IcarusGameUserSettingsGen.RevertOverall // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7cd0
	void RevertMusicVolume(); // Function Icarus.IcarusGameUserSettingsGen.RevertMusicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7cb0
	void RevertMultiplayerGhostBuilding(); // Function Icarus.IcarusGameUserSettingsGen.RevertMultiplayerGhostBuilding // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7c90
	void RevertMouseSensitivityY(); // Function Icarus.IcarusGameUserSettingsGen.RevertMouseSensitivityY // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7c70
	void RevertMouseSensitivityX(); // Function Icarus.IcarusGameUserSettingsGen.RevertMouseSensitivityX // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7c50
	void RevertMotionBlur(); // Function Icarus.IcarusGameUserSettingsGen.RevertMotionBlur // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7c30
	void RevertMasterVolume(); // Function Icarus.IcarusGameUserSettingsGen.RevertMasterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7c10
	void RevertLanguage(); // Function Icarus.IcarusGameUserSettingsGen.RevertLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7bf0
	void RevertInvertYAxis(); // Function Icarus.IcarusGameUserSettingsGen.RevertInvertYAxis // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7bd0
	void RevertInputType(); // Function Icarus.IcarusGameUserSettingsGen.RevertInputType // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7bb0
	void RevertGlobalIllumination(); // Function Icarus.IcarusGameUserSettingsGen.RevertGlobalIllumination // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7b90
	void RevertFrameLimit(); // Function Icarus.IcarusGameUserSettingsGen.RevertFrameLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7b70
	void RevertFoliage(); // Function Icarus.IcarusGameUserSettingsGen.RevertFoliage // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7b50
	void RevertFieldOfView(); // Function Icarus.IcarusGameUserSettingsGen.RevertFieldOfView // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7b30
	void RevertEquipmentFieldOfView(); // Function Icarus.IcarusGameUserSettingsGen.RevertEquipmentFieldOfView // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7b10
	void RevertEnableVSync(); // Function Icarus.IcarusGameUserSettingsGen.RevertEnableVSync // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7af0
	void RevertEnableClothSimulation(); // Function Icarus.IcarusGameUserSettingsGen.RevertEnableClothSimulation // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7ad0
	void RevertEffects(); // Function Icarus.IcarusGameUserSettingsGen.RevertEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7ab0
	void RevertDLSSSharpness(); // Function Icarus.IcarusGameUserSettingsGen.RevertDLSSSharpness // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7a30
	void RevertDLSSMode(); // Function Icarus.IcarusGameUserSettingsGen.RevertDLSSMode // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7a10
	void RevertDisplayMode(); // Function Icarus.IcarusGameUserSettingsGen.RevertDisplayMode // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7a90
	void RevertDisableLightningEffects(); // Function Icarus.IcarusGameUserSettingsGen.RevertDisableLightningEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7a70
	void RevertDialogueVolume(); // Function Icarus.IcarusGameUserSettingsGen.RevertDialogueVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7a50
	void RevertCreatureIKEnabled(); // Function Icarus.IcarusGameUserSettingsGen.RevertCreatureIKEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x15d79f0
	void RevertControllerIcons(); // Function Icarus.IcarusGameUserSettingsGen.RevertControllerIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x15d79d0
	void RevertAntiAliasing(); // Function Icarus.IcarusGameUserSettingsGen.RevertAntiAliasing // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7920
	void RevertAmbientVolume(); // Function Icarus.IcarusGameUserSettingsGen.RevertAmbientVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7900
	void RevertAimSensitivity(); // Function Icarus.IcarusGameUserSettingsGen.RevertAimSensitivity // (Final|Native|Public|BlueprintCallable) // @ game+0x15d78e0
	void ResetSettingsForSection(struct FName CategoryName, struct FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.ResetSettingsForSection // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d7810
	void ResetSettingsForCategory(struct FName CategoryName); // Function Icarus.IcarusGameUserSettingsGen.ResetSettingsForCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d7780
	void ResetGameplaySettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetGameplaySettings // (Native|Public|BlueprintCallable) // @ game+0x15d7740
	void ResetDisplaySettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetDisplaySettings // (Native|Public|BlueprintCallable) // @ game+0x15d7720
	void ResetControlsSettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetControlsSettings // (Native|Public|BlueprintCallable) // @ game+0x15d7700
	void ResetAudioSettings(); // Function Icarus.IcarusGameUserSettingsGen.ResetAudioSettings // (Native|Public|BlueprintCallable) // @ game+0x15d76e0
	bool IsSettingEnabledForEdit(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.IsSettingEnabledForEdit // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15d7130
	bool IsSectionUsingDefaultValues(struct FName CategoryName, struct FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.IsSectionUsingDefaultValues // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d7060
	bool IsSectionEnabledForEdit(struct FName CategoryName, struct FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.IsSectionEnabledForEdit // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15d6f90
	bool IsCategoryUsingDefaultValues(struct FName CategoryName); // Function Icarus.IcarusGameUserSettingsGen.IsCategoryUsingDefaultValues // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d6e90
	enum class EViewDistanceSetting GetViewDistance(); // Function Icarus.IcarusGameUserSettingsGen.GetViewDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6c00
	bool GetUseSimpleBuildingShadows(); // Function Icarus.IcarusGameUserSettingsGen.GetUseSimpleBuildingShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6be0
	bool GetToggleCrouch(); // Function Icarus.IcarusGameUserSettingsGen.GetToggleCrouch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6bc0
	bool GetToggleAim(); // Function Icarus.IcarusGameUserSettingsGen.GetToggleAim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6ba0
	enum class ETexturesSetting GetTextures(); // Function Icarus.IcarusGameUserSettingsGen.GetTextures // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6b80
	bool GetShowTutorialProspect(); // Function Icarus.IcarusGameUserSettingsGen.GetShowTutorialProspect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6a70
	bool GetShowDamageNumbers(); // Function Icarus.IcarusGameUserSettingsGen.GetShowDamageNumbers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6a50
	bool GetShowBloodEffects(); // Function Icarus.IcarusGameUserSettingsGen.GetShowBloodEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6a30
	bool GetShowAimCrosshair(); // Function Icarus.IcarusGameUserSettingsGen.GetShowAimCrosshair // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6a10
	enum class EShadowsSetting GetShadows(); // Function Icarus.IcarusGameUserSettingsGen.GetShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d69f0
	enum class EShadingSetting GetShading(); // Function Icarus.IcarusGameUserSettingsGen.GetShading // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d69d0
	float GetSFXVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetSFXVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6650
	struct FString GetSettingValue_String(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_String // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x15d68f0
	int32_t GetSettingValue_Index(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_Index // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x15d6850
	float GetSettingValue_Float(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_Float // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x15d67b0
	bool GetSettingValue_Bool(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingValue_Bool // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x15d6710
	enum class ESettingType GetSettingType(struct FName SettingName); // Function Icarus.IcarusGameUserSettingsGen.GetSettingType // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x15d6670
	bool GetRTXEnabled(); // Function Icarus.IcarusGameUserSettingsGen.GetRTXEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6540
	float GetResolutionScale(); // Function Icarus.IcarusGameUserSettingsGen.GetResolutionScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6630
	struct FString GetResolution(); // Function Icarus.IcarusGameUserSettingsGen.GetResolution // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6560
	enum class EPostProcessingSetting GetPostProcessing(); // Function Icarus.IcarusGameUserSettingsGen.GetPostProcessing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d64f0
	bool GetPlayerMarkerEnabled(); // Function Icarus.IcarusGameUserSettingsGen.GetPlayerMarkerEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d64d0
	enum class EOverallSetting GetOverall(); // Function Icarus.IcarusGameUserSettingsGen.GetOverall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d64b0
	float GetMusicVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetMusicVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6490
	bool GetMultiplayerGhostBuilding(); // Function Icarus.IcarusGameUserSettingsGen.GetMultiplayerGhostBuilding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6470
	float GetMouseSensitivityY(); // Function Icarus.IcarusGameUserSettingsGen.GetMouseSensitivityY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6450
	float GetMouseSensitivityX(); // Function Icarus.IcarusGameUserSettingsGen.GetMouseSensitivityX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6430
	float GetMotionBlur(); // Function Icarus.IcarusGameUserSettingsGen.GetMotionBlur // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6270
	float GetMinSFXVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinSFXVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinMusicVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMusicVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinMouseSensitivityYValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMouseSensitivityYValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6210
	float GetMinMouseSensitivityXValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMouseSensitivityXValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6210
	float GetMinMotionBlurValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMotionBlurValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinMasterVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinMasterVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinFrameLimitValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinFrameLimitValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6250
	float GetMinFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6230
	float GetMinEquipmentFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinEquipmentFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6190
	float GetMinDLSSSharpnessValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinDLSSSharpnessValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinDialogueVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinDialogueVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinAmbientVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinAmbientVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xd68e40
	float GetMinAimSensitivityValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMinAimSensitivityValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6210
	float GetMaxSFXVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxSFXVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6150
	float GetMaxMusicVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMusicVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6150
	float GetMaxMouseSensitivityYValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMouseSensitivityYValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6130
	float GetMaxMouseSensitivityXValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMouseSensitivityXValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6130
	float GetMaxMotionBlurValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMotionBlurValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d61f0
	float GetMaxMasterVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxMasterVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6150
	float GetMaxFrameLimitValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxFrameLimitValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d61d0
	float GetMaxFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d61b0
	float GetMaxEquipmentFieldOfViewValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxEquipmentFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6190
	float GetMaxDLSSSharpnessValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxDLSSSharpnessValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6170
	float GetMaxDialogueVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxDialogueVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6150
	float GetMaxAmbientVolumeValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxAmbientVolumeValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6150
	float GetMaxAimSensitivityValue(); // Function Icarus.IcarusGameUserSettingsGen.GetMaxAimSensitivityValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6130
	float GetMasterVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetMasterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6110
	struct FString GetLanguage(); // Function Icarus.IcarusGameUserSettingsGen.GetLanguage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d6010
	bool GetInvertYAxis(); // Function Icarus.IcarusGameUserSettingsGen.GetInvertYAxis // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5ff0
	enum class EInputTypeSetting GetInputType(); // Function Icarus.IcarusGameUserSettingsGen.GetInputType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5fd0
	bool GetGlobalIllumination(); // Function Icarus.IcarusGameUserSettingsGen.GetGlobalIllumination // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5f80
	float GetFrameLimit(); // Function Icarus.IcarusGameUserSettingsGen.GetFrameLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5f40
	enum class EFoliageSetting GetFoliage(); // Function Icarus.IcarusGameUserSettingsGen.GetFoliage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5f20
	float GetFieldOfView(); // Function Icarus.IcarusGameUserSettingsGen.GetFieldOfView // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5f00
	float GetEquipmentFieldOfView(); // Function Icarus.IcarusGameUserSettingsGen.GetEquipmentFieldOfView // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5ee0
	bool GetEnableVSync(); // Function Icarus.IcarusGameUserSettingsGen.GetEnableVSync // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5ec0
	bool GetEnableClothSimulation(); // Function Icarus.IcarusGameUserSettingsGen.GetEnableClothSimulation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5ea0
	enum class EEffectsSetting GetEffects(); // Function Icarus.IcarusGameUserSettingsGen.GetEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5e80
	float GetDLSSSharpness(); // Function Icarus.IcarusGameUserSettingsGen.GetDLSSSharpness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5e00
	enum class EDLSSModeSetting GetDLSSMode(); // Function Icarus.IcarusGameUserSettingsGen.GetDLSSMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5de0
	enum class EDisplayModeSetting GetDisplayMode(); // Function Icarus.IcarusGameUserSettingsGen.GetDisplayMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5e60
	bool GetDisableLightningEffects(); // Function Icarus.IcarusGameUserSettingsGen.GetDisableLightningEffects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5e40
	float GetDialogueVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetDialogueVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5e20
	bool GetCreatureIKEnabled(); // Function Icarus.IcarusGameUserSettingsGen.GetCreatureIKEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5dc0
	enum class EControllerIconsSetting GetControllerIcons(); // Function Icarus.IcarusGameUserSettingsGen.GetControllerIcons // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5da0
	enum class EAntiAliasingSetting GetAntiAliasing(); // Function Icarus.IcarusGameUserSettingsGen.GetAntiAliasing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5d80
	float GetAmbientVolume(); // Function Icarus.IcarusGameUserSettingsGen.GetAmbientVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5d60
	float GetAimSensitivity(); // Function Icarus.IcarusGameUserSettingsGen.GetAimSensitivity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15d5d40
	void ApplySettingsForSection(struct FName CategoryName, struct FName SectionName); // Function Icarus.IcarusGameUserSettingsGen.ApplySettingsForSection // (Final|Native|Protected|BlueprintCallable) // @ game+0x15d5620
	void ApplyGameplaySettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyGameplaySettings // (Native|Public|BlueprintCallable) // @ game+0x15d5590
	void ApplyDisplaySettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyDisplaySettings // (Native|Public|BlueprintCallable) // @ game+0x15d5500
	void ApplyControlsSettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyControlsSettings // (Native|Public|BlueprintCallable) // @ game+0x15d5470
	void ApplyAudioSettings(bool bSaveSettings); // Function Icarus.IcarusGameUserSettingsGen.ApplyAudioSettings // (Native|Public|BlueprintCallable) // @ game+0x15d5350
};

// Class Icarus.IcarusGameUserSettings
// Size: 0x280 (Inherited: 0x268)
struct UIcarusGameUserSettings : UIcarusGameUserSettingsGen {
	struct FMulticastSparseDelegate OnMouseSensitivityChanged; // 0x268(0x01)
	struct FMulticastSparseDelegate OnDisplayModeConfirmation; // 0x269(0x01)
	char pad_26A[0x2]; // 0x26a(0x02)
	uint32_t PatchVersion; // 0x26c(0x04)
	char pad_270[0x10]; // 0x270(0x10)

	void RevertChangesFromUI(struct USettingsSection* Section); // Function Icarus.IcarusGameUserSettings.RevertChangesFromUI // (Final|Native|Public|BlueprintCallable) // @ game+0x15d7940
	bool IsPlayerUsingControllerStatic(); // Function Icarus.IcarusGameUserSettings.IsPlayerUsingControllerStatic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15d6f60
	void GetMouseSensitivityParameters(float Yaw, float Pitch, float AimYaw, float AimPitch); // Function Icarus.IcarusGameUserSettings.GetMouseSensitivityParameters // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15d6290
	struct UIcarusGameUserSettings* GetIcarusGameUserSettings(); // Function Icarus.IcarusGameUserSettings.GetIcarusGameUserSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15d5fa0
	void DisplayConfirmationResult(bool bResult); // Function Icarus.IcarusGameUserSettings.DisplayConfirmationResult // (Final|Native|Public|BlueprintCallable) // @ game+0x15d59f0
	struct USettingsView* CreateWidgetsForCategory(struct UUserWidget* OwningWidget, struct UObject* SettingsViewClass, enum class ESettingsCategory Category); // Function Icarus.IcarusGameUserSettings.CreateWidgetsForCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x15d56f0
	void ApplyChangesFromUI(struct USettingsSection* Section); // Function Icarus.IcarusGameUserSettings.ApplyChangesFromUI // (Final|Native|Public|BlueprintCallable) // @ game+0x15d53e0
};

// Class Icarus.IcarusGameViewportClient
// Size: 0x370 (Inherited: 0x360)
struct UIcarusGameViewportClient : UGameViewportClient {
	char pad_360[0x10]; // 0x360(0x10)
};

// Class Icarus.IcarusGOAPAction
// Size: 0x78 (Inherited: 0x28)
struct UIcarusGOAPAction : UObject {
	char pad_28[0x28]; // 0x28(0x28)
	struct AActor* Target; // 0x50(0x08)
	char pad_58[0x20]; // 0x58(0x20)

	bool UpdateCost(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.UpdateCost // (Native|Event|Public|BlueprintEvent) // @ game+0x15dfbc0
	bool PlanAction(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.PlanAction // (Native|Event|Public|BlueprintEvent) // @ game+0x15df360
	bool IsInRange(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.IsInRange // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15deee0
	bool GOAPAnimNotify(struct FString NotifyName, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.GOAPAnimNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x15de1b0
	struct FGOAPAction GetActionData(); // Function Icarus.IcarusGOAPAction.GetActionData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15de290
	bool ExecutionComplete(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.ExecutionComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15de0d0
	bool Execute(struct AIcarusNPCGOAPController* Controller, float Delta); // Function Icarus.IcarusGOAPAction.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x15ddff0
	bool CheckContextualPreconditions(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.CheckContextualPreconditions // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x15ddc20
	bool ArePreconditionsSatisfied(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.ArePreconditionsSatisfied // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ddb80
	bool AreEffectsSatisfied(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPAction.AreEffectsSatisfied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15ddae0
	bool ActionReset(bool Interrupted); // Function Icarus.IcarusGOAPAction.ActionReset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15dda20
};

// Class Icarus.IcarusGOAPAIMemory
// Size: 0xd0 (Inherited: 0xb0)
struct UIcarusGOAPAIMemory : UActorComponent {
	struct TArray<struct FIcarusGOAPAIFact> InteractableObjectMemories; // 0xb0(0x10)
	struct AIcarusNPCGOAPController* CurrentController; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	void UpdateObject(enum class EGOAPObjectType ObjectType, struct AActor* Object, bool CurrentlyPercieved, enum class EGOAPFactSource FactSource); // Function Icarus.IcarusGOAPAIMemory.UpdateObject // (Final|Native|Public|BlueprintCallable) // @ game+0x15dfd40
	bool GetFactForObject(struct AActor* Object, struct FIcarusGOAPAIFact FoundFact); // Function Icarus.IcarusGOAPAIMemory.GetFactForObject // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15de500
	struct FIcarusGOAPAIFact GetClosestKnownInteractable(struct AActor* Actor, enum class EGOAPObjectType ObjectType, bool bOnlyCurrentlyPerceived); // Function Icarus.IcarusGOAPAIMemory.GetClosestKnownInteractable // (Final|Native|Public|BlueprintCallable) // @ game+0x15de3c0
};

// Class Icarus.IcarusGOAPAIState
// Size: 0xc0 (Inherited: 0xb0)
struct UIcarusGOAPAIState : UActorComponent {
	struct AActor* CurrentTarget; // 0xb0(0x08)
	enum class EGOAPObjectType SearchingInteractableType; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	bool ClearAIState(); // Function Icarus.IcarusGOAPAIState.ClearAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x15ddcc0
};

// Class Icarus.IcarusGOAPGoal
// Size: 0x40 (Inherited: 0x28)
struct UIcarusGOAPGoal : UObject {
	struct FGOAPGoalsRowHandle CachedRowHandle; // 0x28(0x18)

	bool SetWorkingData(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPGoal.SetWorkingData // (Native|Event|Public|BlueprintEvent) // @ game+0x15df360
	bool SetInitialState(struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPGoal.SetInitialState // (Native|Event|Public|BlueprintEvent) // @ game+0x15df990
	struct FGOAPGoal GetGoalData(); // Function Icarus.IcarusGOAPGoal.GetGoalData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15de600
};

// Class Icarus.IcarusGOAPInteractableComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UIcarusGOAPInteractableComponent : UActorComponent {
	enum class EGOAPObjectType Type; // 0xb0(0x01)
	bool InUse; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	float InteractTime; // 0xb4(0x04)
	struct UIcarusGOAPAction* CurrentAction; // 0xb8(0x08)
	struct AIcarusNPCGOAPController* CurrentInteractionController; // 0xc0(0x08)
	struct FMulticastSparseDelegate OnInteraction; // 0xc8(0x01)
	struct FMulticastSparseDelegate OnAbort; // 0xc9(0x01)
	struct FMulticastSparseDelegate OnInteractionComplete; // 0xca(0x01)
	char pad_CB[0x5]; // 0xcb(0x05)

	bool Interact(struct UIcarusGOAPAction* Action, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPInteractableComponent.Interact // (Final|Native|Public|BlueprintCallable) // @ game+0x15dee10
	bool CompleteInteraction(); // Function Icarus.IcarusGOAPInteractableComponent.CompleteInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x15ddcf0
	bool Abort(); // Function Icarus.IcarusGOAPInteractableComponent.Abort // (Final|Native|Public|BlueprintCallable) // @ game+0x15dd9f0
};

// Class Icarus.IcarusGOAPInteractableObject
// Size: 0x220 (Inherited: 0x220)
struct AIcarusGOAPInteractableObject : AActor {
};

// Class Icarus.IcarusGOAPMotivation
// Size: 0x60 (Inherited: 0x28)
struct UIcarusGOAPMotivation : UObject {
	struct FGOAPMotivationsRowHandle CachedRowHandle; // 0x28(0x18)
	int32_t CurrentValue; // 0x40(0x04)
	char pad_44[0x1c]; // 0x44(0x1c)

	bool UpdateCost(float Delta, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPMotivation.UpdateCost // (Native|Event|Public|BlueprintEvent) // @ game+0x15dfc60
	bool Update(float Delta, struct AIcarusNPCGOAPController* Controller); // Function Icarus.IcarusGOAPMotivation.Update // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15dfaf0
	bool SetMotivation(int32_t NewValue); // Function Icarus.IcarusGOAPMotivation.SetMotivation // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15dfa30
	void OnMotivationTriggerEvent(struct AIcarusNPCGOAPController* Controller, struct FGOAPMotivationTrigger TriggeredEvent, bool bWasTriggered); // Function Icarus.IcarusGOAPMotivation.OnMotivationTriggerEvent // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	struct FGOAPMotivation GetMotivationData(); // Function Icarus.IcarusGOAPMotivation.GetMotivationData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15de830
};

// Class Icarus.IcarusGOAPPlanner
// Size: 0xb0 (Inherited: 0xb0)
struct UIcarusGOAPPlanner : UActorComponent {
};

// Class Icarus.IcarusHostLobbySession
// Size: 0x3b0 (Inherited: 0x3b0)
struct UIcarusHostLobbySession : UIcarusSessionBase {

	struct UIcarusHostLobbySession* IcarusHostLobbySession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController); // Function Icarus.IcarusHostLobbySession.IcarusHostLobbySession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15dea10
};

// Class Icarus.IcarusHostMigrationSubsystem
// Size: 0x88 (Inherited: 0x30)
struct UIcarusHostMigrationSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate AttemptHost; // 0x30(0x10)
	struct FMulticastInlineDelegate AttemptJoin; // 0x40(0x10)
	bool bHostMigrationEnabled; // 0x50(0x01)
	enum class EHostMigrationStatus HostMigrationStatus; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
	struct FHostMigrationInfo BackupHostMigrationInfo; // 0x58(0x28)
	struct UHostCandidateCallbackProxyGen* HostCandidateCallbackProxy; // 0x80(0x08)

	void ResetHostMigration(); // Function Icarus.IcarusHostMigrationSubsystem.ResetHostMigration // (Final|Native|Public|BlueprintCallable) // @ game+0x15df580
	void OnHostCandidateSuccess(struct FResHostCandidate Response); // Function Icarus.IcarusHostMigrationSubsystem.OnHostCandidateSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x15df0a0
	void OnHostCandidateFailed(struct FResHostCandidate Response); // Function Icarus.IcarusHostMigrationSubsystem.OnHostCandidateFailed // (Final|Native|Protected|HasOutParms) // @ game+0x15defc0
	enum class EHostMigrationStatus GetHostMigrationStatus(); // Function Icarus.IcarusHostMigrationSubsystem.GetHostMigrationStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1163e90
	struct FHostMigrationInfo GetBackupHostMigrationInfo(); // Function Icarus.IcarusHostMigrationSubsystem.GetBackupHostMigrationInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15de370
	void FindBestBackupHostForMigration(); // Function Icarus.IcarusHostMigrationSubsystem.FindBestBackupHostForMigration // (Final|Native|Public|BlueprintCallable) // @ game+0x15de190
};

// Class Icarus.IcarusHostSession
// Size: 0x3c8 (Inherited: 0x3b0)
struct UIcarusHostSession : UIcarusSessionBase {
	bool bHostSessionRetry; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	int32_t HostSessionRetryAttempts; // 0x3b4(0x04)
	int32_t HostSessionRetryAttemptsMax; // 0x3b8(0x04)
	float HostSessionRetryTime; // 0x3bc(0x04)
	float HostSessionRetryTimeMax; // 0x3c0(0x04)
	char pad_3C4[0x4]; // 0x3c4(0x04)

	struct UIcarusHostSession* IcarusHostSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController); // Function Icarus.IcarusHostSession.IcarusHostSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15dec10
};

// Class Icarus.IcarusItemFactory
// Size: 0x28 (Inherited: 0x28)
struct UIcarusItemFactory : UBlueprintFunctionLibrary {

	struct AIcarusItem* SpawnItemActor(struct UObject* WorldContextObject, struct FItemData ItemData, enum class EIcarusItemContext ItemContext, struct FTransform SpawnTransform, struct FIcarusItemSpawnParameters SpawnParameters, bool bAllowSpawningByClient); // Function Icarus.IcarusItemFactory.SpawnItemActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15e51e0
	bool GetItemDataContextParams(struct FItemData ItemData, enum class EIcarusItemContext ItemContext, struct AIcarusItem* OutActorClass, struct TSoftObjectPtr<UStreamableRenderAsset> OutMeshPtr); // Function Icarus.IcarusItemFactory.GetItemDataContextParams // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15e3c70
	struct AIcarusItem* FinishSpawningItemActor(struct AIcarusItem* SpawnedItem, struct FTransform SpawnTransform); // Function Icarus.IcarusItemFactory.FinishSpawningItemActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15e3530
};

// Class Icarus.IcarusJoinSession
// Size: 0x420 (Inherited: 0x3b0)
struct UIcarusJoinSession : UIcarusSessionBase {
	struct UJoinProspectCallbackProxyGen* JoinProspectCallbackProxy; // 0x3b0(0x08)
	struct FIcarusJoinSessionConfirmationSetups Confirmation; // 0x3b8(0x68)

	void OnJoinProspectSuccess(struct FResJoinProspect Result); // Function Icarus.IcarusJoinSession.OnJoinProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x15e4920
	void OnJoinProspectFailure(struct FResJoinProspect Result); // Function Icarus.IcarusJoinSession.OnJoinProspectFailure // (Native|Protected|HasOutParms) // @ game+0x15e4860
	struct UIcarusJoinSession* IcarusJoinSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController, struct FIcarusJoinSessionConfirmationSetups Confirmation); // Function Icarus.IcarusJoinSession.IcarusJoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15e4190
};

// Class Icarus.LevelStreamingDelegateManager
// Size: 0x40 (Inherited: 0x28)
struct ULevelStreamingDelegateManager : UObject {
	struct ULevelStreaming* StreamingLevel; // 0x28(0x08)
	struct FMulticastInlineDelegate OnLevelStreamingStateUpdated; // 0x30(0x10)

	void OnStreamingLevelStateUpdated(); // Function Icarus.LevelStreamingDelegateManager.OnStreamingLevelStateUpdated // (Final|Native|Public) // @ game+0x15e49e0
	void OnLevelUnloaded(); // Function Icarus.LevelStreamingDelegateManager.OnLevelUnloaded // (Final|Native|Private) // @ game+0x15e49e0
	void OnLevelShown(); // Function Icarus.LevelStreamingDelegateManager.OnLevelShown // (Final|Native|Private) // @ game+0x15e49e0
	void OnLevelLoaded(); // Function Icarus.LevelStreamingDelegateManager.OnLevelLoaded // (Final|Native|Private) // @ game+0x15e49e0
	void OnLevelHidden(); // Function Icarus.LevelStreamingDelegateManager.OnLevelHidden // (Final|Native|Private) // @ game+0x15e49e0
};

// Class Icarus.IcarusNavigationSystem
// Size: 0x1690 (Inherited: 0x15e0)
struct UIcarusNavigationSystem : UNavigationSystemV1 {
	struct TSet<struct ULevelStreaming*> CompositionStreamingLevels; // 0x15e0(0x50)
	struct TSet<struct ULevelStreaming*> BlockingStreamingLevels; // 0x1630(0x50)
	struct TArray<struct ULevelStreamingDelegateManager*> LevelStreamingManagers; // 0x1680(0x10)

	void UpdateComponentInNavOctree_BP(struct UActorComponent* Comp); // Function Icarus.IcarusNavigationSystem.UpdateComponentInNavOctree_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x15e56c0
	void UpdateActorInNavOctree_BP(struct AActor* Actor); // Function Icarus.IcarusNavigationSystem.UpdateActorInNavOctree_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x15e55b0
	void OnStreamingLevelStateUpdated(struct ULevelStreaming* UpdatedStreamingLevel, bool bIsVisible); // Function Icarus.IcarusNavigationSystem.OnStreamingLevelStateUpdated // (Final|Native|Protected) // @ game+0x15e4c10
	struct UIcarusNavigationSystem* GetIcarusNavigationSystem(struct UObject* WorldContextObject); // Function Icarus.IcarusNavigationSystem.GetIcarusNavigationSystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15e3be0
	void AddDirtyArea_BP(struct FVector Origin, struct FVector Extent); // Function Icarus.IcarusNavigationSystem.AddDirtyArea_BP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15e3390
};

// Class Icarus.IcarusNavigationSystemConfig
// Size: 0x58 (Inherited: 0x58)
struct UIcarusNavigationSystemConfig : UNavigationSystemModuleConfig {
};

// Class Icarus.IcarusNavQueryFilter
// Size: 0x50 (Inherited: 0x48)
struct UIcarusNavQueryFilter : UNavigationQueryFilter {
	int32_t MaxNavPathSearchNodes; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Icarus.IcarusNotfiyState
// Size: 0x30 (Inherited: 0x30)
struct UIcarusNotfiyState : UAnimNotifyState {
};

// Class Icarus.IcarusNPCCharacter
// Size: 0x620 (Inherited: 0x5a0)
struct AIcarusNPCCharacter : AIcarusCharacter {
	bool implementsVisionSense; // 0x5a0(0x01)
	bool ImplementsSoundSense; // 0x5a1(0x01)
	bool ImplementsDamageSense; // 0x5a2(0x01)
	bool PerceptionLogging; // 0x5a3(0x01)
	struct FName EyeSocket; // 0x5a4(0x08)
	char pad_5AC[0x4]; // 0x5ac(0x04)
	struct TMap<enum class EMovementState, struct FMovementStateData> MoveSpeedMapping; // 0x5b0(0x50)
	enum class EMovementState MovementStateSet; // 0x600(0x01)
	char pad_601[0x7]; // 0x601(0x07)
	struct UBehaviorTree* NpcBehaviourTree; // 0x608(0x08)
	bool bForceMaxLODWhenNotRendered; // 0x610(0x01)
	char pad_611[0xf]; // 0x611(0x0f)

	void UpdateCharacterMoveSpeed(float walk_speed); // Function Icarus.IcarusNPCCharacter.UpdateCharacterMoveSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x15e5640
	void OnActorDeath(struct UActorState* ActorStateIn); // Function Icarus.IcarusNPCCharacter.OnActorDeath // (Native|Event|Public|BlueprintEvent) // @ game+0x15e4720
};

// Class Icarus.IcarusNPCController
// Size: 0x368 (Inherited: 0x328)
struct AIcarusNPCController : AAIController {
	char pad_328[0x28]; // 0x328(0x28)
	struct UBlackboardComponent* AiBlackboardComponent; // 0x350(0x08)
	struct UBehaviorTreeComponent* AiBehaviourTreeComponent; // 0x358(0x08)
	char pad_360[0x8]; // 0x360(0x08)

	bool SetNewBehaviourTree(struct UBehaviorTree* npc_behaviour_tree); // Function Icarus.IcarusNPCController.SetNewBehaviourTree // (Final|Native|Public|BlueprintCallable) // @ game+0x15e5140
	void OnStimulusDetected(struct TArray<struct AActor*> detected); // Function Icarus.IcarusNPCController.OnStimulusDetected // (Final|Native|Private|HasOutParms) // @ game+0x15e4b60
	void CustomizeSenses(); // Function Icarus.IcarusNPCController.CustomizeSenses // (Final|Native|Private) // @ game+0x15e3510
};

// Class Icarus.IcarusNPCGOAPCharacter
// Size: 0x6d0 (Inherited: 0x620)
struct AIcarusNPCGOAPCharacter : AIcarusNPCCharacter {
	struct FAISetupRowHandle AISetup; // 0x618(0x18)
	struct TMap<struct TSoftClassPtr<UObject>, struct FActionAnimData> ActionAnimMapping; // 0x630(0x50)
	struct FMulticastInlineDelegate CharacterStanceUpdated; // 0x680(0x10)
	struct TArray<struct AIcarusNPCGOAPCharacter*> NPCChildren; // 0x690(0x10)
	struct UAnimMontage* JumpMontage; // 0x6a0(0x08)
	float MaxJumpDistance; // 0x6a8(0x04)
	float JumpArc; // 0x6ac(0x04)
	int32_t CurrentLevel; // 0x6b0(0x04)
	struct FMulticastInlineDelegate CreatureLevelUpdated; // 0x6b8(0x10)
	enum class EGOAPCharacterStance CurrentStance; // 0x6c8(0x01)
	char pad_6CD[0x3]; // 0x6cd(0x03)

	void WorldStatsSet(); // Function Icarus.IcarusNPCGOAPCharacter.WorldStatsSet // (Final|Native|Protected) // @ game+0x15e5a30
	bool UpdateMovementState(enum class EMovementState NewState); // Function Icarus.IcarusNPCGOAPCharacter.UpdateMovementState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e5980
	void UpdateCreatureGrowthStats(); // Function Icarus.IcarusNPCGOAPCharacter.UpdateCreatureGrowthStats // (Final|Native|Public|BlueprintCallable) // @ game+0x15e5750
	bool TryJumpOverObstacle(); // Function Icarus.IcarusNPCGOAPCharacter.TryJumpOverObstacle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e5580
	void StatContainerUpdated(); // Function Icarus.IcarusNPCGOAPCharacter.StatContainerUpdated // (Final|Native|Public) // @ game+0x15e5560
	void SetHitEventsEnabled(bool bEnabled); // Function Icarus.IcarusNPCGOAPCharacter.SetHitEventsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x15e50b0
	bool SetCurrentStance(enum class EGOAPCharacterStance NewStance); // Function Icarus.IcarusNPCGOAPCharacter.SetCurrentStance // (Native|Event|Public|BlueprintEvent) // @ game+0x15e5000
	void SetBaseLevel(int32_t Level); // Function Icarus.IcarusNPCGOAPCharacter.SetBaseLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x15e4f70
	void OnRep_Level(); // Function Icarus.IcarusNPCGOAPCharacter.OnRep_Level // (Final|Native|Public) // @ game+0x15e4b40
	void OnCharacterStanceUpdated(enum class EGOAPCharacterStance PreviousStance, enum class EGOAPCharacterStance NewStance); // Function Icarus.IcarusNPCGOAPCharacter.OnCharacterStanceUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x15e47b0
};

// Class Icarus.IcarusNPCGOAPController
// Size: 0x470 (Inherited: 0x368)
struct AIcarusNPCGOAPController : AIcarusNPCController {
	bool bCurrentActionComplete; // 0x368(0x01)
	char pad_369[0x7]; // 0x369(0x07)
	struct UIcarusGOAPInteractableComponent* CurrentInteractable; // 0x370(0x08)
	struct UBlackboardData* DefaultBlackboard; // 0x378(0x08)
	struct FMulticastInlineDelegate OnGOAPStateUpdated; // 0x380(0x10)
	struct FMulticastInlineDelegate OnNewActionSet; // 0x390(0x10)
	enum class EGOAPControllerState CurrentControllerState; // 0x3a0(0x01)
	char pad_3A1[0x3]; // 0x3a1(0x03)
	struct FRandomStream SeededRandomStream; // 0x3a4(0x08)
	char pad_3AC[0x4]; // 0x3ac(0x04)
	struct FMulticastInlineDelegate OnRandomStreamUpdated; // 0x3b0(0x10)
	struct FGOAPState CurrentState; // 0x3c0(0x10)
	struct UIcarusGOAPGoal* CurrentGoal; // 0x3d0(0x08)
	struct UIcarusGOAPAction* CurrentAction; // 0x3d8(0x08)
	struct TArray<struct UIcarusGOAPGoal*> PotentialGoals; // 0x3e0(0x10)
	struct TArray<struct UIcarusGOAPAction*> PotentialActions; // 0x3f0(0x10)
	struct TArray<struct UIcarusGOAPMotivation*> Motivations; // 0x400(0x10)
	struct UIcarusGOAPPlanner* Planner; // 0x410(0x08)
	struct AIcarusNPCGOAPCharacter* NpcCharacter; // 0x418(0x08)
	struct UIcarusGOAPAIState* AIState; // 0x420(0x08)
	struct UIcarusGOAPAIMemory* AIMemory; // 0x428(0x08)
	struct UIcarusGOAPGoal* DefaultGoal; // 0x430(0x08)
	char pad_438[0x38]; // 0x438(0x38)

	bool UpdateMotivationValue(struct FGOAPMotivationsRowHandle Motivation, int32_t NewValue); // Function Icarus.IcarusNPCGOAPController.UpdateMotivationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e5880
	bool UpdateCurrentState(struct FGOAPPropertiesRowHandle Property, bool Value); // Function Icarus.IcarusNPCGOAPController.UpdateCurrentState // (Final|Native|Public|BlueprintCallable) // @ game+0x15e5770
	void SeedRandomStream(int32_t NewSeed); // Function Icarus.IcarusNPCGOAPController.SeedRandomStream // (Final|Native|Public) // @ game+0x15e4ee0
	void RecordAIMemory(enum class EGOAPObjectType ObjectType, struct AActor* Object, bool CurrentlyPercieved, enum class EGOAPFactSource FactSource); // Function Icarus.IcarusNPCGOAPController.RecordAIMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x15e4d80
	bool RecalculateGOAPState(); // Function Icarus.IcarusNPCGOAPController.RecalculateGOAPState // (Native|Event|Public|BlueprintEvent) // @ game+0x15def80
	bool RecalculateGoal(bool bForceNewGoal); // Function Icarus.IcarusNPCGOAPController.RecalculateGoal // (Final|Native|Public|BlueprintCallable) // @ game+0x15e4ce0
	bool OnProcessedNoise(struct AActor* PerceivedActor, struct FAIStimulus EventStimulus); // Function Icarus.IcarusNPCGOAPController.OnProcessedNoise // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e4a30
	bool OnProcessedDamage(struct AActor* PerceivedActor, struct FAIStimulus EventStimulus); // Function Icarus.IcarusNPCGOAPController.OnProcessedDamage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e4a30
	bool MoveToAction(struct UIcarusGOAPAction* Action); // Function Icarus.IcarusNPCGOAPController.MoveToAction // (Native|Event|Public|BlueprintEvent) // @ game+0x15e46a0
	struct AIcarusNPCGOAPCharacter* GetNPCCharacter(); // Function Icarus.IcarusNPCGOAPController.GetNPCCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15e4160
	float GetMotivationValue(struct FGOAPMotivationsRowHandle Motivation); // Function Icarus.IcarusNPCGOAPController.GetMotivationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e4020
	struct TArray<struct UIcarusGOAPMotivation*> GetMotivations(); // Function Icarus.IcarusNPCGOAPController.GetMotivations // (Final|Native|Public|BlueprintCallable) // @ game+0x15e40e0
	bool GetMotivationObject(struct FGOAPMotivationsRowHandle Motivation, struct UIcarusGOAPMotivation* ObjectReference); // Function Icarus.IcarusNPCGOAPController.GetMotivationObject // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15e3f10
	struct FGOAPState GetGOAPState(); // Function Icarus.IcarusNPCGOAPController.GetGOAPState // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3ad0
	struct TArray<struct UIcarusGOAPGoal*> GetGoals(); // Function Icarus.IcarusNPCGOAPController.GetGoals // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3b50
	struct FString GetCurrentPlanDebug(); // Function Icarus.IcarusNPCGOAPController.GetCurrentPlanDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15e3a50
	struct FString GetCurrentGoalDebug(); // Function Icarus.IcarusNPCGOAPController.GetCurrentGoalDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15e39d0
	struct FString GetCurrentActionName(); // Function Icarus.IcarusNPCGOAPController.GetCurrentActionName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15e3950
	struct UIcarusGOAPAction* GetCurrentAction(); // Function Icarus.IcarusNPCGOAPController.GetCurrentAction // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3920
	struct TArray<struct FString> GetAvaliableGoals(); // Function Icarus.IcarusNPCGOAPController.GetAvaliableGoals // (Final|Native|Public|BlueprintCallable) // @ game+0x15e38a0
	struct TArray<struct FString> GetAvaliableActions(); // Function Icarus.IcarusNPCGOAPController.GetAvaliableActions // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3820
	struct UIcarusGOAPAIState* GetAIState(); // Function Icarus.IcarusNPCGOAPController.GetAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3680
	struct UIcarusGOAPAIMemory* GetAIMemory(); // Function Icarus.IcarusNPCGOAPController.GetAIMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3650
	float GetActorThreat(struct AActor* PerceivedActor, bool bIgnoreRelationships); // Function Icarus.IcarusNPCGOAPController.GetActorThreat // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e3740
	struct TArray<struct UIcarusGOAPAction*> GetActions(); // Function Icarus.IcarusNPCGOAPController.GetActions // (Final|Native|Public|BlueprintCallable) // @ game+0x15e36b0
	bool CompleteCurrentAction(bool Succeeded); // Function Icarus.IcarusNPCGOAPController.CompleteCurrentAction // (Final|Native|Public|BlueprintCallable) // @ game+0x15e3470
};

// Class Icarus.IcarusNPCPredatorController
// Size: 0x368 (Inherited: 0x368)
struct AIcarusNPCPredatorController : AIcarusNPCController {
};

// Class Icarus.IcarusNPCPreyController
// Size: 0x368 (Inherited: 0x368)
struct AIcarusNPCPreyController : AIcarusNPCController {
};

// Class Icarus.OrchestrationEvent
// Size: 0xd8 (Inherited: 0x28)
struct UOrchestrationEvent : UObject {
	char pad_28[0xb0]; // 0x28(0xb0)
};

// Class Icarus.IcarusOrchestrationSubsystem
// Size: 0xc8 (Inherited: 0x30)
struct UIcarusOrchestrationSubsystem : UWorldSubsystem {
	struct TArray<struct UOrchestrationEvent*> OrchestrationEvents; // 0x30(0x10)
	char pad_40[0x28]; // 0x40(0x28)
	struct TArray<struct TWeakObjectPtr<struct AActor>> AllActors; // 0x68(0x10)
	char pad_78[0x50]; // 0x78(0x50)

	void MarkOrchestrationFlag(struct FOrchestrationStateFlagsEnum OrchestrationFlagEnum); // Function Icarus.IcarusOrchestrationSubsystem.MarkOrchestrationFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x15e9b70
	struct UOrchestrationEvent* GetOrchestrationEvent(struct FOrchestrationEventsEnum EventToGet); // Function Icarus.IcarusOrchestrationSubsystem.GetOrchestrationEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x15e95c0
	bool CheckOrchestrationFlag(struct FOrchestrationStateFlagsEnum OrchestrationFlag); // Function Icarus.IcarusOrchestrationSubsystem.CheckOrchestrationFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x15e8c00
	bool CheckEvent(struct FOrchestrationEventsEnum EventToCheck); // Function Icarus.IcarusOrchestrationSubsystem.CheckEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15e8b40
	void BindToOrchestrationEvent(struct FDelegate Delegate, struct FOrchestrationEventsEnum EventToBind); // Function Icarus.IcarusOrchestrationSubsystem.BindToOrchestrationEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x15e8a40
};

// Class Icarus.IcarusPayload
// Size: 0x2c8 (Inherited: 0x220)
struct AIcarusPayload : AActor {
	struct AController* PayloadInstigator; // 0x220(0x08)
	struct AActor* Causer; // 0x228(0x08)
	struct AActor* HitActor; // 0x230(0x08)
	struct FHitResult HitResult; // 0x238(0x8c)
	bool WasBounce; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
};

// Class Icarus.IcarusPlayerCharacter
// Size: 0x9f0 (Inherited: 0x5a0)
struct AIcarusPlayerCharacter : AIcarusCharacter {
	float NextAllowedInteractTime; // 0x5a0(0x04)
	struct FMulticastSparseDelegate OnFocusedItemUpdated; // 0x5a4(0x01)
	char pad_5A5[0x3]; // 0x5a5(0x03)
	struct UInventoryComponent* InventoryComponent; // 0x5a8(0x08)
	struct UInventory* EquipmentInventory; // 0x5b0(0x08)
	struct ASeatBase* AttachedToSeat; // 0x5b8(0x08)
	bool BlockInputActions; // 0x5c0(0x01)
	char pad_5C1[0x3]; // 0x5c1(0x03)
	struct FRotator ReplicatedControlRotation; // 0x5c4(0x0c)
	bool bDisableActiveInteractable; // 0x5d0(0x01)
	char pad_5D1[0x3]; // 0x5d1(0x03)
	struct FHitResult CachedActiveInteractableHit; // 0x5d4(0x8c)
	struct FHitResult CachedActiveHighlightableHit; // 0x660(0x8c)
	struct FHitResult CachedContextImageHit; // 0x6ec(0x8c)
	struct FInteractableHitLookup CachedInteractableHitLookup; // 0x778(0xa0)
	float InteractionTraceDistance; // 0x818(0x04)
	struct FCharacterStartingStatsRowHandle StartingStats; // 0x81c(0x18)
	char pad_834[0x4]; // 0x834(0x04)
	struct TMap<int32_t, struct FArmourComponentData> EquippedArmourData; // 0x838(0x50)
	struct FMulticastInlineDelegate OnArmourEquipmentUpdated; // 0x888(0x10)
	bool IsMale; // 0x898(0x01)
	char pad_899[0x7]; // 0x899(0x07)
	struct FFocusedItemData FocusedItemData; // 0x8a0(0x10)
	struct UAudioContextPlayerComponent* AudioContext; // 0x8b0(0x08)
	struct UPlayerVocalisationComponent* VocalisationComponent; // 0x8b8(0x08)
	struct FCharacterVoicesRowHandle Voice; // 0x8c0(0x18)
	int32_t RespawnCount; // 0x8d8(0x04)
	bool HasGrantedLoadout; // 0x8dc(0x01)
	char pad_8DD[0x3]; // 0x8dd(0x03)
	struct FMulticastInlineDelegate PlayerCrouchUpdated; // 0x8e0(0x10)
	struct ADeployable* CurrentlyInteractingWithDeployable; // 0x8f0(0x08)
	char pad_8F8[0xf8]; // 0x8f8(0xf8)

	void WorldStatsSet(); // Function Icarus.IcarusPlayerCharacter.WorldStatsSet // (Final|Native|Protected) // @ game+0x15eb6a0
	enum class EViewTraceResultPriority ViewTraceActiveInteractableResultPredicate(struct FViewTraceResult Result); // Function Icarus.IcarusPlayerCharacter.ViewTraceActiveInteractableResultPredicate // (Final|Native|Public|HasOutParms) // @ game+0x15eb5b0
	enum class EViewTraceResultPriority ViewTraceActiveHighlightableResultPredicate(struct FViewTraceResult Result); // Function Icarus.IcarusPlayerCharacter.ViewTraceActiveHighlightableResultPredicate // (Final|Native|Public|HasOutParms) // @ game+0x15eb4c0
	void UpdateHeldItem(struct FItemData Item); // Function Icarus.IcarusPlayerCharacter.UpdateHeldItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15eb340
	bool UpdateEquipmentForSlot(int32_t SlotNum, struct FArmourRowHandle DataRow); // Function Icarus.IcarusPlayerCharacter.UpdateEquipmentForSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15eb250
	void UpdateCameraPerspective(); // Function Icarus.IcarusPlayerCharacter.UpdateCameraPerspective // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd79c80
	void UpdateCachedActiveInteractableHit(struct FHitResult NewHit); // Function Icarus.IcarusPlayerCharacter.UpdateCachedActiveInteractableHit // (Final|Native|Public|HasOutParms) // @ game+0x15eb170
	void UpdateAllEquipment(); // Function Icarus.IcarusPlayerCharacter.UpdateAllEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x15eb150
	void StopInteractingWithDeployable(); // Function Icarus.IcarusPlayerCharacter.StopInteractingWithDeployable // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15eb130
	void SetVoice(struct FCharacterVoicesRowHandle VoiceRowHandle); // Function Icarus.IcarusPlayerCharacter.SetVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x15eb060
	void SetupCharacterCosmetics(); // Function Icarus.IcarusPlayerCharacter.SetupCharacterCosmetics // (Native|Event|Public|BlueprintEvent) // @ game+0x15eb110
	void SetPlayerMovementLocked(bool bLocked); // Function Icarus.IcarusPlayerCharacter.SetPlayerMovementLocked // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15eafd0
	void SetMontagePlayRate(float PlayRate); // Function Icarus.IcarusPlayerCharacter.SetMontagePlayRate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15eaf60
	void SetInteractingWithDeployable(struct ADeployable* Deployable); // Function Icarus.IcarusPlayerCharacter.SetInteractingWithDeployable // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15eaed0
	void Server_SetCachedInteractableHitLookup(struct FInteractableHitLookup LookUp); // Function Icarus.IcarusPlayerCharacter.Server_SetCachedInteractableHitLookup // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15ead60
	void Server_SetCachedActiveInteractableHit(struct FHitResult Hit); // Function Icarus.IcarusPlayerCharacter.Server_SetCachedActiveInteractableHit // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15eabc0
	void Server_OnInteract(enum class EInteractType InteractType); // Function Icarus.IcarusPlayerCharacter.Server_OnInteract // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x15eab40
	void RequestSwapGender(); // Function Icarus.IcarusPlayerCharacter.RequestSwapGender // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15eab20
	void RecalculateArmourSetBonus(struct UInventory* Inventory); // Function Icarus.IcarusPlayerCharacter.RecalculateArmourSetBonus // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x15eaa90
	void PlayMontage(struct UAnimMontage* Montage, struct UAnimMontage* FP_Montage, bool LockMotion, struct FName StartingSection, struct FName FP_StartingSection, float PlaySpeed); // Function Icarus.IcarusPlayerCharacter.PlayMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15ea8e0
	bool PickupItem(struct AIcarusItem* Item); // Function Icarus.IcarusPlayerCharacter.PickupItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15ea840
	void OnViewTraceResultsUpdated(struct AIcarusPlayerController* RegisteredController); // Function Icarus.IcarusPlayerCharacter.OnViewTraceResultsUpdated // (Final|Native|Public) // @ game+0x15ea7b0
	bool OnUnFocusItem(); // Function Icarus.IcarusPlayerCharacter.OnUnFocusItem // (Native|Event|Public|BlueprintEvent) // @ game+0x15ea780
	void OnServer_UnFocusItem(); // Function Icarus.IcarusPlayerCharacter.OnServer_UnFocusItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x10b49b0
	void OnServer_SetStartingStats(struct FCharacterStartingStatsRowHandle CharacterStartingStatsRowHandle); // Function Icarus.IcarusPlayerCharacter.OnServer_SetStartingStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15ea6c0
	void OnServer_FocusItem(struct UInventory* Inventory, int32_t Location); // Function Icarus.IcarusPlayerCharacter.OnServer_FocusItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15ea5f0
	void OnServer_DropItem(struct UInventory* Inventory, int32_t Location, int32_t Count); // Function Icarus.IcarusPlayerCharacter.OnServer_DropItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15ea4f0
	void OnRep_Gender(); // Function Icarus.IcarusPlayerCharacter.OnRep_Gender // (Final|Native|Public) // @ game+0x15ea4d0
	void OnRep_FocusedItemDataUpdated(); // Function Icarus.IcarusPlayerCharacter.OnRep_FocusedItemDataUpdated // (Final|Native|Public) // @ game+0x15ea4b0
	void OnRep_CharacterVoice(); // Function Icarus.IcarusPlayerCharacter.OnRep_CharacterVoice // (Final|Native|Private|Const) // @ game+0x15ea490
	void OnOwner_ItemUsed(struct FItemsStaticRowHandle ItemData, struct FUsesRowHandle Use); // Function Icarus.IcarusPlayerCharacter.OnOwner_ItemUsed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x15ea350
	void OnOwner_ConsumableExpired(struct FItemsStaticRowHandle ItemData); // Function Icarus.IcarusPlayerCharacter.OnOwner_ConsumableExpired // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x15ea290
	void OnItemUsed(struct FItemsStaticRowHandle ItemData, struct FUsesRowHandle Use); // Function Icarus.IcarusPlayerCharacter.OnItemUsed // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	bool OnInteractableLineTraceHit(struct FHitResult HitResult); // Function Icarus.IcarusPlayerCharacter.OnInteractableLineTraceHit // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x15ea1a0
	void OnInteract(enum class EInteractType InteractType); // Function Icarus.IcarusPlayerCharacter.OnInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x15ea120
	bool OnFocusItem(struct FItemData InventoryItem); // Function Icarus.IcarusPlayerCharacter.OnFocusItem // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x15e9f90
	void OnEquipmentInventoryUpdated(int32_t UpdatedSlot); // Function Icarus.IcarusPlayerCharacter.OnEquipmentInventoryUpdated // (Final|Native|Protected|BlueprintCallable) // @ game+0x15e9f00
	void OnControllerThirdPersonToggled(bool bIsThirdPerson); // Function Icarus.IcarusPlayerCharacter.OnControllerThirdPersonToggled // (Final|Native|Private) // @ game+0x15e9e70
	void OnConsumableExpired(struct FItemsStaticRowHandle ItemData); // Function Icarus.IcarusPlayerCharacter.OnConsumableExpired // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnConnectedPlayersConnectedPlayerInitialised(struct FConnectedPlayer ConnectedPlayer); // Function Icarus.IcarusPlayerCharacter.OnConnectedPlayersConnectedPlayerInitialised // (Final|Native|Protected|HasOutParms) // @ game+0x15e9d40
	void OnConnectedPlayerInitialised(); // Function Icarus.IcarusPlayerCharacter.OnConnectedPlayerInitialised // (Native|Event|Protected|BlueprintEvent) // @ game+0x15e9d20
	void OnAttachedToSeatChanged(struct ASeatBase* PreviousSeat); // Function Icarus.IcarusPlayerCharacter.OnAttachedToSeatChanged // (Native|Event|Public|BlueprintEvent) // @ game+0x15e9c90
	void OnActorHiddenStateUpdated(bool bIsHidden); // Function Icarus.IcarusPlayerCharacter.OnActorHiddenStateUpdated // (Native|Event|Public|BlueprintEvent) // @ game+0x15e9c20
	void MarkNeedsCosmeticArmourUpdate(); // Function Icarus.IcarusPlayerCharacter.MarkNeedsCosmeticArmourUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x15e9b50
	void MarkEquipmentInventoryUpdated(); // Function Icarus.IcarusPlayerCharacter.MarkEquipmentInventoryUpdated // (Final|Native|Public|BlueprintCallable) // @ game+0x15e9b30
	void MarkEquipmentInventorySlotUpdated(struct UInventory* Inventory, int32_t UpdatedSlotNum); // Function Icarus.IcarusPlayerCharacter.MarkEquipmentInventorySlotUpdated // (Final|Native|Public) // @ game+0x15e9a70
	void JumpToMontageSection(struct UAnimMontage* TPMontage, struct UAnimMontage* FPMontage, struct FName NewTPSection, struct FName NewFPSection); // Function Icarus.IcarusPlayerCharacter.JumpToMontageSection // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e9910
	void ItemRemovedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerCharacter.ItemRemovedDelagate // (Final|Native|Public) // @ game+0x15e9840
	void ItemAddedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerCharacter.ItemAddedDelagate // (Final|Native|Public) // @ game+0x15e9770
	bool IsSeated(); // Function Icarus.IcarusPlayerCharacter.IsSeated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e9740
	bool IsHabCharacter(); // Function Icarus.IcarusPlayerCharacter.IsHabCharacter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd68e60
	bool IsDrivingVehicle(); // Function Icarus.IcarusPlayerCharacter.IsDrivingVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e9710
	bool IsClothSimEnabled(); // Function Icarus.IcarusPlayerCharacter.IsClothSimEnabled // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x15e96e0
	bool IsAttachedToVehicle(); // Function Icarus.IcarusPlayerCharacter.IsAttachedToVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e96b0
	struct USkeletalMeshComponent* GetVisibleCharacterMesh(); // Function Icarus.IcarusPlayerCharacter.GetVisibleCharacterMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x9554a0
	struct USkeletalMeshComponent* GetThirdPersonMesh(); // Function Icarus.IcarusPlayerCharacter.GetThirdPersonMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x9554a0
	struct UPlayerCharacterState* GetPlayerCharacterState(); // Function Icarus.IcarusPlayerCharacter.GetPlayerCharacterState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e9680
	float GetInteractCooldown(); // Function Icarus.IcarusPlayerCharacter.GetInteractCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15e9590
	struct AIcarusPlayerState* GetIcarusPlayerState(); // Function Icarus.IcarusPlayerCharacter.GetIcarusPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e9560
	struct AIcarusPlayerController* GetIcarusPlayerController(); // Function Icarus.IcarusPlayerCharacter.GetIcarusPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e9530
	void GetFocusedItemInventoryAndSlot(struct UInventory* FocusedItemInventory, int32_t FocusedItemSlot, enum class EDataValidity Validity); // Function Icarus.IcarusPlayerCharacter.GetFocusedItemInventoryAndSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15e93f0
	struct FItemData GetFocusedItemData(enum class EDataValidity Validity); // Function Icarus.IcarusPlayerCharacter.GetFocusedItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15e92d0
	struct AIcarusItem* GetFocusedItemActor(); // Function Icarus.IcarusPlayerCharacter.GetFocusedItemActor // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a38c80
	struct USkeletalMeshComponent* GetFirstPersonMesh(); // Function Icarus.IcarusPlayerCharacter.GetFirstPersonMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x9554a0
	struct USkeletalMeshComponent* GetFirstPersonBodyMesh(); // Function Icarus.IcarusPlayerCharacter.GetFirstPersonBodyMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x9554a0
	int32_t GetEquippedArmourSet(struct FArmourSetsRowHandle ArmourSet); // Function Icarus.IcarusPlayerCharacter.GetEquippedArmourSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e9210
	struct AVehicleBase* GetAttachedToVehicle(); // Function Icarus.IcarusPlayerCharacter.GetAttachedToVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e91e0
	struct ASeatBase* GetAttachedToSeat(); // Function Icarus.IcarusPlayerCharacter.GetAttachedToSeat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15e91b0
	struct TArray<struct USkeletalMeshComponent*> FindOrCreateEquipmentComponent(int32_t ForSlot); // Function Icarus.IcarusPlayerCharacter.FindOrCreateEquipmentComponent // (Final|Native|Protected) // @ game+0x15e90d0
	bool EquipItem(struct UInventory* Inventory, int32_t Slot); // Function Icarus.IcarusPlayerCharacter.EquipItem // (Final|Native|Public) // @ game+0x15e9000
	void EndMontage(struct UAnimMontage* Montage, struct UAnimMontage* FP_Montage, float BleedOutTime); // Function Icarus.IcarusPlayerCharacter.EndMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e8f10
	bool DropItem(struct FItemData InventoryItem); // Function Icarus.IcarusPlayerCharacter.DropItem // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x15e8d80
	bool ConsumeFocusedItem(int32_t Amount); // Function Icarus.IcarusPlayerCharacter.ConsumeFocusedItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e8ce0
	void ClearEquipmentInventory(); // Function Icarus.IcarusPlayerCharacter.ClearEquipmentInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x15e8cc0
};

// Class Icarus.IcarusPlayerCharacterSpace
// Size: 0x9f0 (Inherited: 0x9f0)
struct AIcarusPlayerCharacterSpace : AIcarusPlayerCharacter {
	struct UInventory* MainInventory; // 0x9e8(0x08)
};

// Class Icarus.IcarusPlayerCharacterSurvival
// Size: 0xb20 (Inherited: 0x9f0)
struct AIcarusPlayerCharacterSurvival : AIcarusPlayerCharacter {
	bool bClientFrozenMovement; // 0x9e8(0x01)
	bool bServerFrozenMovement; // 0x9e9(0x01)
	bool bActualFrozenMovement; // 0x9ea(0x01)
	struct UScopedViewportBlocker* FrozenMovementViewportBlocker; // 0x9f0(0x08)
	float base_turn_rate; // 0x9f8(0x04)
	float base_look_up_rate; // 0x9fc(0x04)
	float PlayerPitch; // 0xa00(0x04)
	float PlayerYaw; // 0xa04(0x04)
	struct UInventory* EnvirosuitInventory; // 0xa08(0x08)
	struct UInventory* BackpackInventory; // 0xa10(0x08)
	struct UInventory* QuickbarInventory; // 0xa18(0x08)
	struct UInventory* UpgradeInventory; // 0xa20(0x08)
	struct UInventory* VisionInventory; // 0xa28(0x08)
	int32_t FocusedQuickbarSlot; // 0xa30(0x04)
	bool bSmoothMouseInput; // 0xa34(0x01)
	float InputSmoothSpeed; // 0xa38(0x04)
	int32_t TickMovementStaminaUpdateHz; // 0xa3c(0x04)
	struct FStaminaActionCostsRowHandle SprintAction; // 0xa40(0x18)
	struct FStaminaActionCostsRowHandle JumpAction; // 0xa58(0x18)
	struct FStaminaActionCostsRowHandle CrouchAction; // 0xa70(0x18)
	struct FStaminaActionCostsRowHandle WalkAction; // 0xa88(0x18)
	struct UFLODInfluencePlayer* FLODInfluence; // 0xaa0(0x08)
	struct UStomachComponent* StomachComponent; // 0xaa8(0x08)
	struct UPlayerTerrainAnchorComponent* TerrainAnchor; // 0xab0(0x08)
	char pad_AB8[0x60]; // 0xab8(0x60)
	struct UPlayerStateRecorderComponent* Recorder; // 0xb18(0x08)

	void UpdateMetaResources(); // Function Icarus.IcarusPlayerCharacterSurvival.UpdateMetaResources // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0d00
	void UpdateFrozenMovement(); // Function Icarus.IcarusPlayerCharacterSurvival.UpdateFrozenMovement // (Final|Native|Protected) // @ game+0x15f0ce0
	bool TickMovementStaminaCost(float DeltaTime); // Function Icarus.IcarusPlayerCharacterSurvival.TickMovementStaminaCost // (Native|Event|Public|BlueprintEvent) // @ game+0x15f0c20
	void StopJump(); // Function Icarus.IcarusPlayerCharacterSurvival.StopJump // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0ab0
	void StartJump(); // Function Icarus.IcarusPlayerCharacterSurvival.StartJump // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0a90
	void StartCrouch(); // Function Icarus.IcarusPlayerCharacterSurvival.StartCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0a70
	void StaminaMovementTickFunction(); // Function Icarus.IcarusPlayerCharacterSurvival.StaminaMovementTickFunction // (Final|Native|Public) // @ game+0x15f0a50
	void SetAimSpaceValues(float Pitch, float Yaw); // Function Icarus.IcarusPlayerCharacterSurvival.SetAimSpaceValues // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x15f0830
	void ServerUpdateClientFrozenMovement(bool bFreezeMovement); // Function Icarus.IcarusPlayerCharacterSurvival.ServerUpdateClientFrozenMovement // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x15f0680
	void ServerPlayerLeftByDropship(); // Function Icarus.IcarusPlayerCharacterSurvival.ServerPlayerLeftByDropship // (Final|Native|Public|BlueprintCallable) // @ game+0x15f04e0
	void Respawn(); // Function Icarus.IcarusPlayerCharacterSurvival.Respawn // (Final|Native|Private) // @ game+0x15f0320
	void OnWaterConsumed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnWaterConsumed // (Final|Native|Private|BlueprintCallable) // @ game+0x15f0080
	void OnTerrainAnchorStateChanged(); // Function Icarus.IcarusPlayerCharacterSurvival.OnTerrainAnchorStateChanged // (Final|Native|Protected) // @ game+0x15f0060
	void OnServer_ExitLadder(); // Function Icarus.IcarusPlayerCharacterSurvival.OnServer_ExitLadder // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x15efff0
	void OnPlayerDeath(struct UActorState* ActorStateIn); // Function Icarus.IcarusPlayerCharacterSurvival.OnPlayerDeath // (Final|Native|Private|BlueprintCallable) // @ game+0x15efcb0
	void OnOxygenConsumed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnOxygenConsumed // (Final|Native|Private|BlueprintCallable) // @ game+0x15efc70
	void OnJumpFailed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnJumpFailed // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnInventoryBouncedItem(struct FItemData Item); // Function Icarus.IcarusPlayerCharacterSurvival.OnInventoryBouncedItem // (Final|Native|Protected) // @ game+0x15ef6c0
	void OnFrozenMovementChanged(); // Function Icarus.IcarusPlayerCharacterSurvival.OnFrozenMovementChanged // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x15ef460
	void OnFoodConsumed(); // Function Icarus.IcarusPlayerCharacterSurvival.OnFoodConsumed // (Final|Native|Private|BlueprintCallable) // @ game+0x15ef440
	void MoveRight(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.MoveRight // (Final|Native|Public) // @ game+0x15ef170
	void MoveForward(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.MoveForward // (Final|Native|Public) // @ game+0x15ef0f0
	bool IsAlive(); // Function Icarus.IcarusPlayerCharacterSurvival.IsAlive // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x15ef080
	void InventoryUpdated(struct UInventory* Inventory, int32_t Location); // Function Icarus.IcarusPlayerCharacterSurvival.InventoryUpdated // (Final|Native|Public) // @ game+0x15eef80
	void EndCrouch(); // Function Icarus.IcarusPlayerCharacterSurvival.EndCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x15ee750
	void AddYaw(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.AddYaw // (Final|Native|Public) // @ game+0x15ee450
	void AddPitch(float Value); // Function Icarus.IcarusPlayerCharacterSurvival.AddPitch // (Final|Native|Public) // @ game+0x15ee3d0
};

// Class Icarus.IcarusPlayerController
// Size: 0x690 (Inherited: 0x598)
struct AIcarusPlayerController : AIcarusController {
	struct AIcarusPlayerCharacter* IcarusPlayerCharacter; // 0x598(0x08)
	char pad_5A0[0x4]; // 0x5a0(0x04)
	float InputAimYawScale; // 0x5a4(0x04)
	float InputAimPitchScale; // 0x5a8(0x04)
	bool bFreeLook; // 0x5ac(0x01)
	char pad_5AD[0x3]; // 0x5ad(0x03)
	struct FRotator FreeLookInput; // 0x5b0(0x0c)
	char pad_5BC[0x4]; // 0x5bc(0x04)
	struct FMulticastInlineDelegate OnToggleThirdPerson; // 0x5c0(0x10)
	bool bIsThirdPerson; // 0x5d0(0x01)
	char pad_5D1[0x7]; // 0x5d1(0x07)
	struct FMulticastInlineDelegate OnViewTraceResultsUpdated; // 0x5d8(0x10)
	bool bCaptureViewTraces; // 0x5e8(0x01)
	char pad_5E9[0x7]; // 0x5e9(0x07)
	struct TMap<struct UObject*, struct FViewTraceRegistration> ViewTraceRegistrations; // 0x5f0(0x50)
	struct TArray<struct FViewTraceResult> ViewTraceResults; // 0x640(0x10)
	float ViewTraceCapsuleRadius; // 0x650(0x04)
	int32_t ViewTraceIterationCount; // 0x654(0x04)
	bool bDebugCaptureViewTraceResultsStats; // 0x658(0x01)
	char pad_659[0x3]; // 0x659(0x03)
	struct FName DebugCaptureViewTraceResultsTag; // 0x65c(0x08)
	char pad_664[0x4]; // 0x664(0x04)
	struct UBackendProxyComponent* BackendProxyComponent; // 0x668(0x08)
	struct UGetFriendsCallbackProxy* GetFriendsListCallBackProxy; // 0x670(0x08)
	char pad_678[0x10]; // 0x678(0x10)
	bool bClientIsInitialisingPlayerProfile; // 0x688(0x01)
	char pad_689[0x7]; // 0x689(0x07)

	bool ViewTraceByChannel(struct FViewTraceResult Result, enum class ECollisionChannel TraceChannel, struct FViewTraceParams ViewTraceParams); // Function Icarus.IcarusPlayerController.ViewTraceByChannel // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x15f0d20
	void ToggleThirdPerson(); // Function Icarus.IcarusPlayerController.ToggleThirdPerson // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15f0cc0
	void SetUIVisibility(bool bHide, bool bHideDebug); // Function Icarus.IcarusPlayerController.SetUIVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void Server_ToggleThirdPerson(bool bThirdPerson); // Function Icarus.IcarusPlayerController.Server_ToggleThirdPerson // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x15f07a0
	void Server_BeginPlayerInitialisation(int32_t ChrSlot); // Function Icarus.IcarusPlayerController.Server_BeginPlayerInitialisation // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x15f0710
	bool RetrieveViewTraceResults(struct UObject* Registrant, struct TArray<struct FViewTraceResult> OutFilteredResults); // Function Icarus.IcarusPlayerController.RetrieveViewTraceResults // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15f0340
	void RegisterForViewTraces(struct UObject* Registrant, float MaxDistance); // Function Icarus.IcarusPlayerController.RegisterForViewTraces // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0250
	void PushUIInput(struct UWidget* WidgetToFocus, bool bAllowGameInput, bool bShowMouse); // Function Icarus.IcarusPlayerController.PushUIInput // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0140
	void PopUIInput(); // Function Icarus.IcarusPlayerController.PopUIInput // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0120
	void OutputProgressState(float Duration); // Function Icarus.IcarusPlayerController.OutputProgressState // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x15f00a0
	void OnServerInitialise_GetPlayerProfileResult(bool bSuccess, struct FOnlineProfileCharacter InCharacterProfile); // Function Icarus.IcarusPlayerController.OnServerInitialise_GetPlayerProfileResult // (Native|Protected|HasOutParms) // @ game+0x15efd80
	void OnServer_PlayerDeath(); // Function Icarus.IcarusPlayerController.OnServer_PlayerDeath // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x15f0010
	void OnRep_IcarusPlayerCharacter(); // Function Icarus.IcarusPlayerController.OnRep_IcarusPlayerCharacter // (Native|Event|Protected|BlueprintEvent) // @ game+0x15efd40
	bool OnPlayerDeath(); // Function Icarus.IcarusPlayerController.OnPlayerDeath // (Native|Event|Public|BlueprintEvent) // @ game+0x15c4ef0
	void OnPawnLeavingGame(); // Function Icarus.IcarusPlayerController.OnPawnLeavingGame // (Native|Event|Protected|BlueprintEvent) // @ game+0x15efc90
	void OnGetFriendsListSuccess(struct TArray<struct FBPFriendInfo> Results); // Function Icarus.IcarusPlayerController.OnGetFriendsListSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x15ef5a0
	void OnGetFriendsListFailure(struct TArray<struct FBPFriendInfo> Results); // Function Icarus.IcarusPlayerController.OnGetFriendsListFailure // (Final|Native|Protected|HasOutParms) // @ game+0x15ef480
	void OnConnectedPlayersConnectedPlayerInitialised(struct FConnectedPlayer ConnectedPlayer); // Function Icarus.IcarusPlayerController.OnConnectedPlayersConnectedPlayerInitialised // (Final|Native|Protected|HasOutParms) // @ game+0x15ef310
	void OnConnectedPlayerInitialised(); // Function Icarus.IcarusPlayerController.OnConnectedPlayerInitialised // (Native|Event|Protected|BlueprintEvent) // @ game+0x15ef2f0
	void NotifyOfCheater(struct FString CharacterName); // Function Icarus.IcarusPlayerController.NotifyOfCheater // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x153fba0
	bool IsAiming(); // Function Icarus.IcarusPlayerController.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15ef050
	void InitialiseLocalSelectedPlayerProfile(); // Function Icarus.IcarusPlayerController.InitialiseLocalSelectedPlayerProfile // (Final|Native|Public|BlueprintCallable) // @ game+0x15eef60
	struct UUserInterfaceBase* GetUserInterfaceInternal(); // Function Icarus.IcarusPlayerController.GetUserInterfaceInternal // (Event|Public|BlueprintEvent|Const) // @ game+0x1a38c80
	struct FPlayerCharacterID GetPlayerCharacterID(); // Function Icarus.IcarusPlayerController.GetPlayerCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15eef10
	struct UNetworkProxyComponent* GetNetworkProxyComponent(); // Function Icarus.IcarusPlayerController.GetNetworkProxyComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x15eeee0
	bool GetIsThirdPerson(); // Function Icarus.IcarusPlayerController.GetIsThirdPerson // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x15eeeb0
	struct AIcarusPlayerState* GetIcarusPlayerState(); // Function Icarus.IcarusPlayerController.GetIcarusPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15eee80
	struct AIcarusPlayerCharacter* GetIcarusPlayerCharacter(); // Function Icarus.IcarusPlayerController.GetIcarusPlayerCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15eee60
	enum class EViewTraceResultPriority GetGenericViewTraceResultPriority(struct FViewTraceResult Result, bool bResultIsRelevant); // Function Icarus.IcarusPlayerController.GetGenericViewTraceResultPriority // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15eed20
	struct TArray<struct FFriendPackage> GetFriends(); // Function Icarus.IcarusPlayerController.GetFriends // (Final|Native|Public|Const) // @ game+0x15eecf0
	struct UCheatOverlayBase* GetCheatOverlay(struct UObject* WorldContextObject); // Function Icarus.IcarusPlayerController.GetCheatOverlay // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a38c80
	struct UBackendProxyComponent* GetBackendProxyComponent(); // Function Icarus.IcarusPlayerController.GetBackendProxyComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15eecd0
	struct FTransform GetAudioListenerTransform(); // Function Icarus.IcarusPlayerController.GetAudioListenerTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15eec70
	void FriendsListUpdated(struct TArray<struct FFriendPackage> NewFriends); // Function Icarus.IcarusPlayerController.FriendsListUpdated // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x15ee9f0
	bool FindBestViewTraceResult(struct UObject* Registrant, struct FDelegate ResultPriorityCallback, struct FViewTraceResult OutBestResult, float DebugDrawDuration); // Function Icarus.IcarusPlayerController.FindBestViewTraceResult // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15ee810
	bool External_CanPerformInputAction(bool bBlockedByUI); // Function Icarus.IcarusPlayerController.External_CanPerformInputAction // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x15ee770
	void ClientYouHaveBeenKicked(); // Function Icarus.IcarusPlayerController.ClientYouHaveBeenKicked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x15ee710
	void ClientQueryForFriendsList(); // Function Icarus.IcarusPlayerController.ClientQueryForFriendsList // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x15ee6f0
	void ClientConnectedPlayerInitialiseComplete(struct FErrorCodesEnum FailureError); // Function Icarus.IcarusPlayerController.ClientConnectedPlayerInitialiseComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x15ee570
	void ClearUIInput(); // Function Icarus.IcarusPlayerController.ClearUIInput // (Final|Native|Public|BlueprintCallable) // @ game+0x15ee550
	void Cheat(struct FString InputString); // Function Icarus.IcarusPlayerController.Cheat // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x153fba0
	void ChatMessageHook(struct FString InputString); // Function Icarus.IcarusPlayerController.ChatMessageHook // (Final|Native|Public|BlueprintCallable) // @ game+0x153fba0
	void CaptureViewTraceResults(float DeltaTime); // Function Icarus.IcarusPlayerController.CaptureViewTraceResults // (Final|Native|Protected) // @ game+0x15ee4d0
	void Bookmark(struct FString InputString); // Function Icarus.IcarusPlayerController.Bookmark // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x153fba0
	bool AddLocalMessage(struct FString Message); // Function Icarus.IcarusPlayerController.AddLocalMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15ee310
};

// Class Icarus.IcarusPlayerControllerSpace
// Size: 0x6b8 (Inherited: 0x690)
struct AIcarusPlayerControllerSpace : AIcarusPlayerController {
	struct FVector CustomUp; // 0x690(0x0c)
	float CustomUpSlerp; // 0x69c(0x04)
	float CustomUpPitchMax; // 0x6a0(0x04)
	float CustomUpPitchMin; // 0x6a4(0x04)
	struct FMulticastInlineDelegate SessionInfoUpdated; // 0x6a8(0x10)

	void SyncInventory(struct UInventory* Inventory, struct TArray<struct FMetaItem> MetaItems); // Function Icarus.IcarusPlayerControllerSpace.SyncInventory // (Final|Native|Protected|HasOutParms) // @ game+0x15f0ad0
	void OnActiveCharacterSet(); // Function Icarus.IcarusPlayerControllerSpace.OnActiveCharacterSet // (Native|Event|Protected|BlueprintEvent) // @ game+0x15ef1f0
	void MetaInventoryUpdatedEventHandler(); // Function Icarus.IcarusPlayerControllerSpace.MetaInventoryUpdatedEventHandler // (Final|Native|Protected) // @ game+0x15ef0d0
	void LoadoutInventoryUpdatedEventHandler(); // Function Icarus.IcarusPlayerControllerSpace.LoadoutInventoryUpdatedEventHandler // (Final|Native|Protected) // @ game+0x15ef0b0
};

// Class Icarus.IcarusPlayerControllerSurvival
// Size: 0x838 (Inherited: 0x690)
struct AIcarusPlayerControllerSurvival : AIcarusPlayerController {
	struct TArray<struct FItemPriority> ItemPriorities; // 0x690(0x10)
	struct UScopedViewportBlocker* InitialisationViewportBlocker; // 0x6a0(0x08)
	bool bServerHasCharacterLoadout; // 0x6a8(0x01)
	char pad_6A9[0x7]; // 0x6a9(0x07)
	struct FOnlineProfileCharacter TestProspectCharacter; // 0x6b0(0x130)
	enum class ELeaveProspectSessionType ServerPendingLeaveProspectSession; // 0x7e0(0x01)
	enum class ELeaveProspectSessionType ReplicatedLeftProspectSession; // 0x7e1(0x01)
	bool bServerReturnToHabComplete; // 0x7e2(0x01)
	bool bClientResetSelectedCharacterOnLeave; // 0x7e3(0x01)
	char pad_7E4[0x4]; // 0x7e4(0x04)
	struct UScopedViewportBlocker* LeaveProspectViewportBlocker; // 0x7e8(0x08)
	struct AIcarusRocketSpawnBase* AssignedDropshipSpawn; // 0x7f0(0x08)
	struct AIcarusRocket* AssignedDropship; // 0x7f8(0x08)
	struct AGravestoneBase* AssignedGravestone; // 0x800(0x08)
	struct UPlayerRecorderComponent* Recorder; // 0x808(0x08)
	float UpdateCharacterMaxCadence; // 0x810(0x04)
	char pad_814[0x24]; // 0x814(0x24)

	void SetAssignedGravestone(struct AGravestoneBase* Gravestone); // Function Icarus.IcarusPlayerControllerSurvival.SetAssignedGravestone // (Final|Native|Public|BlueprintCallable) // @ game+0x15f09c0
	void SetAssignedDropship(struct AIcarusRocket* Dropship); // Function Icarus.IcarusPlayerControllerSurvival.SetAssignedDropship // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0930
	void ServerUpdateCharacterTalents(bool bSkipDelay); // Function Icarus.IcarusPlayerControllerSurvival.ServerUpdateCharacterTalents // (Final|Native|Public|BlueprintCallable) // @ game+0x15f05f0
	void ServerUpdateCharacterProgression(bool bSkipDelay); // Function Icarus.IcarusPlayerControllerSurvival.ServerUpdateCharacterProgression // (Final|Native|Public|BlueprintCallable) // @ game+0x15f0560
	void ServerTryCompleteLeaveProspectSession(); // Function Icarus.IcarusPlayerControllerSurvival.ServerTryCompleteLeaveProspectSession // (Final|Native|Protected) // @ game+0x15f0540
	void ServerSyncCharacterTalents(); // Function Icarus.IcarusPlayerControllerSurvival.ServerSyncCharacterTalents // (Final|Native|Public) // @ game+0x15f0520
	void ServerSyncCharacterProgression(); // Function Icarus.IcarusPlayerControllerSurvival.ServerSyncCharacterProgression // (Final|Native|Public) // @ game+0x15f0500
	void ServerLeaveProspectSession(enum class ELeaveProspectSessionType LeaveProspectSessionType); // Function Icarus.IcarusPlayerControllerSurvival.ServerLeaveProspectSession // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15f0460
	void ServerCancelLeaveProspectSession(); // Function Icarus.IcarusPlayerControllerSurvival.ServerCancelLeaveProspectSession // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x15f0440
	void OnServerUpdateCharacterTalents(bool bSuccess); // Function Icarus.IcarusPlayerControllerSurvival.OnServerUpdateCharacterTalents // (Final|Native|Public) // @ game+0x15eff60
	void OnServerUpdateCharacterProgression(bool bSuccess); // Function Icarus.IcarusPlayerControllerSurvival.OnServerUpdateCharacterProgression // (Final|Native|Public) // @ game+0x15efed0
	void OnServerLeaveProspectSessionComplete(); // Function Icarus.IcarusPlayerControllerSurvival.OnServerLeaveProspectSessionComplete // (Native|Event|Protected|BlueprintEvent) // @ game+0x15efeb0
	void OnServerInitialise_IcarusBeginPlay(); // Function Icarus.IcarusPlayerControllerSurvival.OnServerInitialise_IcarusBeginPlay // (Final|Native|Protected) // @ game+0x15efe90
	void OnServerInitialise_GetCharacterLoadout(); // Function Icarus.IcarusPlayerControllerSurvival.OnServerInitialise_GetCharacterLoadout // (Final|Native|Protected) // @ game+0x15efd60
	void OnLeaveProspectSessionStatisticsUpdated(bool bSuccess); // Function Icarus.IcarusPlayerControllerSurvival.OnLeaveProspectSessionStatisticsUpdated // (Final|Native|Protected) // @ game+0x15efbe0
	void OnLeaveProspectSessionBackToHab(bool bSuccess, struct APlayerController* Controller); // Function Icarus.IcarusPlayerControllerSurvival.OnLeaveProspectSessionBackToHab // (Final|Native|Protected) // @ game+0x15efb10
	void OnClientLeaveProspectSessionComplete(enum class ELeaveProspectSessionType LeaveProspectSessionType, bool bResult); // Function Icarus.IcarusPlayerControllerSurvival.OnClientLeaveProspectSessionComplete // (Native|Event|Protected|BlueprintEvent) // @ game+0x15ef210
	void GatherMetaItems(struct TArray<struct FMetaItem> OutMetaItems, struct TArray<struct FMetaResource> OutMetaResources); // Function Icarus.IcarusPlayerControllerSurvival.GatherMetaItems // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x15eead0
	void EmptyInventories(); // Function Icarus.IcarusPlayerControllerSurvival.EmptyInventories // (Final|Native|Public|BlueprintCallable) // @ game+0x15ee730
	void ClientLeaveProspectSessionComplete(enum class ELeaveProspectSessionType LeaveProspectSessionType, bool bResult); // Function Icarus.IcarusPlayerControllerSurvival.ClientLeaveProspectSessionComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x15ee610
};

// Class Icarus.IcarusPlayerInput
// Size: 0x450 (Inherited: 0x3a8)
struct UIcarusPlayerInput : UPlayerInput {
	struct TMap<struct FKeybindContextsRowHandle, struct FPerInputUserBindings> SavedBindings; // 0x3a8(0x50)
	char pad_3F8[0x58]; // 0x3f8(0x58)
};

// Class Icarus.IcarusPlayerMovementComponent
// Size: 0xc50 (Inherited: 0xb00)
struct UIcarusPlayerMovementComponent : UCharacterMovementComponent {
	bool bSwimming; // 0xb00(0x01)
	char pad_B01[0x3]; // 0xb01(0x03)
	float FluidFriction; // 0xb04(0x04)
	struct UAnimMontage* LadderExitMontage; // 0xb08(0x08)
	float LadderExitTolerance; // 0xb10(0x04)
	float LadderAngleOffset; // 0xb14(0x04)
	bool bMaxOutLadderVelocity; // 0xb18(0x01)
	char pad_B19[0x17]; // 0xb19(0x17)
	struct FTransform LadderStart; // 0xb30(0x30)
	struct FTransform LadderEnd; // 0xb60(0x30)
	float CurrentWaterDepth; // 0xb90(0x04)
	float TimeSpentSliding; // 0xb94(0x04)
	bool bIsSliding; // 0xb98(0x01)
	char pad_B99[0x3]; // 0xb99(0x03)
	struct FHitResult LastSlideHit; // 0xb9c(0x8c)
	float SlidingDurationThreshold; // 0xc28(0x04)
	char pad_C2C[0x4]; // 0xc2c(0x04)
	struct FMulticastInlineDelegate OnCharacterSlidingUpdated; // 0xc30(0x10)
	char pad_C40[0x4]; // 0xc40(0x04)
	bool bCanEverSprint; // 0xc44(0x01)
	char bWantsToSprint : 1; // 0xc45(0x01)
	char bWantsToAim : 1; // 0xc45(0x01)
	char pad_C45_2 : 6; // 0xc45(0x01)
	char pad_C46[0xa]; // 0xc46(0x0a)

	void UpdateWaterDepth(); // Function Icarus.IcarusPlayerMovementComponent.UpdateWaterDepth // (Final|Native|Public|BlueprintCallable) // @ game+0x15f6460
	void SetIsSliding(bool IsSliding); // Function Icarus.IcarusPlayerMovementComponent.SetIsSliding // (Final|Native|Protected|BlueprintCallable) // @ game+0x15f60e0
	bool IsSprinting(); // Function Icarus.IcarusPlayerMovementComponent.IsSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5850
	bool IsClimbingLadder(); // Function Icarus.IcarusPlayerMovementComponent.IsClimbingLadder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f57c0
	bool IsAiming(); // Function Icarus.IcarusPlayerMovementComponent.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5790
	struct FVector GetNormalizedLadderInput(); // Function Icarus.IcarusPlayerMovementComponent.GetNormalizedLadderInput // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5160
	float GetLadderPosition(); // Function Icarus.IcarusPlayerMovementComponent.GetLadderPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5130
	float GetCurrentWaterDepth(); // Function Icarus.IcarusPlayerMovementComponent.GetCurrentWaterDepth // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f50f0
	void ExitWater(); // Function Icarus.IcarusPlayerMovementComponent.ExitWater // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4cc0
	void ExitLadder(); // Function Icarus.IcarusPlayerMovementComponent.ExitLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4ca0
	void EnterWater(); // Function Icarus.IcarusPlayerMovementComponent.EnterWater // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4be0
	void EnterLadder(struct ULadderComponent* Ladder); // Function Icarus.IcarusPlayerMovementComponent.EnterLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4b50
};

// Class Icarus.IcarusPlayerState
// Size: 0x498 (Inherited: 0x320)
struct AIcarusPlayerState : APlayerState {
	struct FOnlineProfileCharacter ActiveCharacter; // 0x320(0x130)
	struct UPlayerCharacterState* ActivePlayerCharacterState; // 0x450(0x08)
	struct FPlayerCharacterID PlayerCharacterID; // 0x458(0x18)
	bool bIsHost; // 0x470(0x01)
	char pad_471[0x7]; // 0x471(0x07)
	struct ACheatController* CheatController; // 0x478(0x08)
	struct UPlayerTalentControllerComponent* PlayerTalentController; // 0x480(0x08)
	struct UBlueprintTalentControllerComponent* BlueprintTalentController; // 0x488(0x08)
	struct UOrbitalTalentControllerComponent* OrbitalTalentController; // 0x490(0x08)

	void SetupTalentComponents(struct UPlayerCharacterState* PlayerState); // Function Icarus.IcarusPlayerState.SetupTalentComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x15f62a0
	void SetActiveCharacter(struct FOnlineProfileCharacter InActiveCharacter); // Function Icarus.IcarusPlayerState.SetActiveCharacter // (Final|Native|Public|HasOutParms) // @ game+0x15f6030
	void OnRep_ActiveCharacter(); // Function Icarus.IcarusPlayerState.OnRep_ActiveCharacter // (Final|Native|Protected) // @ game+0x15f5d50
	void OnCharacterFlagChanged(struct FCharacterFlagsRowHandle Row, bool State); // Function Icarus.IcarusPlayerState.OnCharacterFlagChanged // (Final|Native|Public) // @ game+0x15f5970
	void OnActiveCharacterFlagsChanged(); // Function Icarus.IcarusPlayerState.OnActiveCharacterFlagsChanged // (Final|Native|Public) // @ game+0x15f5950
	void OnActiveCharacterExperienceDebtChanged(); // Function Icarus.IcarusPlayerState.OnActiveCharacterExperienceDebtChanged // (Final|Native|Public) // @ game+0x15f5930
	void OnActiveCharacterExperienceChanged(); // Function Icarus.IcarusPlayerState.OnActiveCharacterExperienceChanged // (Final|Native|Public) // @ game+0x15f5910
	void OnActiveCharacterAliveStateChanged(struct UActorState* ActorState); // Function Icarus.IcarusPlayerState.OnActiveCharacterAliveStateChanged // (Final|Native|Public) // @ game+0x15f5880
	bool HasValidUserID(); // Function Icarus.IcarusPlayerState.HasValidUserID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5380
	bool HasValidPlayerCharacterID(); // Function Icarus.IcarusPlayerState.HasValidPlayerCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5350
	bool HasActiveCharacter(); // Function Icarus.IcarusPlayerState.HasActiveCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5300
	struct FString GetUserID(); // Function Icarus.IcarusPlayerState.GetUserID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5280
	struct FPlayerCharacterID GetPlayerCharacterID(); // Function Icarus.IcarusPlayerState.GetPlayerCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5230
	struct FOnlineProfileCharacter GetActiveCharacter(); // Function Icarus.IcarusPlayerState.GetActiveCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f4ed0
	void BindActivePlayerCharacterState(struct UPlayerCharacterState* PlayerCharacterState); // Function Icarus.IcarusPlayerState.BindActivePlayerCharacterState // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4840
};

// Class Icarus.IcarusPreviewCharacter
// Size: 0x610 (Inherited: 0x4c0)
struct AIcarusPreviewCharacter : ACharacter {
	char pad_4C0[0x8]; // 0x4c0(0x08)
	struct UInventoryComponent* InventoryComponent; // 0x4c8(0x08)
	struct UInventory* EnvirosuitInventory; // 0x4d0(0x08)
	struct UInventory* BackpackInventory; // 0x4d8(0x08)
	struct UInventory* QuickbarInventory; // 0x4e0(0x08)
	struct UInventory* EquipmentInventory; // 0x4e8(0x08)
	struct TArray<struct USkeletalMeshComponent*> ArmourComponents; // 0x4f0(0x10)
	bool IsMale; // 0x500(0x01)
	char pad_501[0x10f]; // 0x501(0x10f)

	bool UpdateEquipmentForSlot(int32_t SlotNum, struct FArmourData Data); // Function Icarus.IcarusPreviewCharacter.UpdateEquipmentForSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15f6350
	void UpdateAllEquipment(); // Function Icarus.IcarusPreviewCharacter.UpdateAllEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x15f6330
	void SetupCharacterCosmetics(); // Function Icarus.IcarusPreviewCharacter.SetupCharacterCosmetics // (Native|Event|Public|BlueprintEvent) // @ game+0x15f6280
	void OnEquipmentInventoryUpdated(struct UInventory* Inventory, int32_t UpdatedSlot); // Function Icarus.IcarusPreviewCharacter.OnEquipmentInventoryUpdated // (Final|Native|Protected) // @ game+0x15f5aa0
	struct USkeletalMeshComponent* FindOrCreateEquipmentComponent(int32_t ForSlot, struct FArmourData WithData); // Function Icarus.IcarusPreviewCharacter.FindOrCreateEquipmentComponent // (Final|Native|Protected|HasOutParms) // @ game+0x15f4dc0
};

// Class Icarus.IcarusProjectileComponent
// Size: 0x220 (Inherited: 0x1d0)
struct UIcarusProjectileComponent : UProjectileMovementComponent {
	struct FRotator VelocityRotationOffset; // 0x1d0(0x0c)
	struct FRotator AngularRotation; // 0x1dc(0x0c)
	struct FName HomingTargetBoneName; // 0x1e8(0x08)
	bool bDisableHomingOncePassedTarget; // 0x1f0(0x01)
	bool bPreventHomingAccelerationBeforeApex; // 0x1f1(0x01)
	bool bScaleHomingMagnitudeByDistanceToTarget; // 0x1f2(0x01)
	char pad_1F3[0x5]; // 0x1f3(0x05)
	struct UCurveFloat* HomingScaleCurve; // 0x1f8(0x08)
	struct UCurveFloat* HomingGravityScale; // 0x200(0x08)
	float HomingNegativeZAccelerationMultiplier; // 0x208(0x04)
	char pad_20C[0x14]; // 0x20c(0x14)

	bool HasReachedApex(); // Function Icarus.IcarusProjectileComponent.HasReachedApex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f5330
};

// Class Icarus.IcarusReplicationGraph
// Size: 0x5e0 (Inherited: 0x4a0)
struct UIcarusReplicationGraph : UReplicationGraph {
	struct UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498(0x08)
	struct UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a0(0x08)
	char pad_4B0[0x130]; // 0x4b0(0x130)

	void OnPlayerCharacterItemFocusedChanged(struct AIcarusPlayerCharacter* PlayerCharacter, struct AIcarusItem* Item, bool bRemoved); // Function Icarus.IcarusReplicationGraph.OnPlayerCharacterItemFocusedChanged // (Final|Native|Protected) // @ game+0x15f5c40
	void OnFLODTileBehaviourHarnessChanged(struct AFLODTile* Tile, bool bRemoved); // Function Icarus.IcarusReplicationGraph.OnFLODTileBehaviourHarnessChanged // (Final|Native|Protected) // @ game+0x15f5b70
};

// Class Icarus.IcarusResumeSession
// Size: 0x5b0 (Inherited: 0x3b0)
struct UIcarusResumeSession : UIcarusSessionBase {
	struct UResumeProspectCallbackProxyGen* ResumeProspectCallbackProxy; // 0x3b0(0x08)
	struct FIcarusResumeSessionConfirmationSetups Confirmations; // 0x3b8(0x1e8)
	char pad_5A0[0x8]; // 0x5a0(0x08)
	int32_t CharacterSlotOverride; // 0x5a8(0x04)
	bool bAttemptHostMigration; // 0x5ac(0x01)
	char pad_5AD[0x3]; // 0x5ad(0x03)

	void ResumeFinish(); // Function Icarus.IcarusResumeSession.ResumeFinish // (Final|Native|Protected) // @ game+0x15f6010
	void ResumeContinue(); // Function Icarus.IcarusResumeSession.ResumeContinue // (Final|Native|Protected) // @ game+0x15f5ff0
	void OnResumeProspectSuccess(struct FResResumeProspect Result); // Function Icarus.IcarusResumeSession.OnResumeProspectSuccess // (Native|Protected|HasOutParms) // @ game+0x15f5e60
	void OnResumeProspectFailure(struct FResResumeProspect Result); // Function Icarus.IcarusResumeSession.OnResumeProspectFailure // (Native|Protected|HasOutParms) // @ game+0x15f5d70
	struct UIcarusResumeSession* IcarusResumeSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController, struct FIcarusResumeSessionConfirmationSetups Confirmations, int32_t CharacterSlotOverride, bool bAttemptHostMigration); // Function Icarus.IcarusResumeSession.IcarusResumeSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15f53b0
};

// Class Icarus.IcarusRocket
// Size: 0x2f8 (Inherited: 0x2a0)
struct AIcarusRocket : AIcarusActor {
	struct FMulticastSparseDelegate RocketAssembled; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	struct FVector SpawnLocation; // 0x2a4(0x0c)
	struct FVector DescentOrigin; // 0x2b0(0x0c)
	float InitialPositionOffset; // 0x2bc(0x04)
	bool DropshipPositionsSet; // 0x2c0(0x01)
	bool PlayerHasLeft; // 0x2c1(0x01)
	char pad_2C2[0x6]; // 0x2c2(0x06)
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x2c8(0x18)
	enum class ERocketState RocketState; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)
	struct TArray<struct AIcarusRocketPart*> RocketParts; // 0x2e8(0x10)

	void TriggerLeaveProspectLaunch(); // Function Icarus.IcarusRocket.TriggerLeaveProspectLaunch // (Native|Event|Public|BlueprintEvent) // @ game+0x846e80
	void SetRocketState(enum class ERocketState InRocketState); // Function Icarus.IcarusRocket.SetRocketState // (Final|Native|Protected|BlueprintCallable) // @ game+0x15f6200
	bool RemovePart(struct AIcarusRocketPart* PartToRemove); // Function Icarus.IcarusRocket.RemovePart // (Final|Native|Public|BlueprintCallable) // @ game+0x15f5f50
	void OnRep_RocketState(); // Function Icarus.IcarusRocket.OnRep_RocketState // (Native|Event|Protected|BlueprintEvent) // @ game+0x846b60
	void OnRep_AssignedPlayerCharacterID(); // Function Icarus.IcarusRocket.OnRep_AssignedPlayerCharacterID // (Native|Event|Protected|BlueprintEvent) // @ game+0x846ea0
	void OnDropshipSpawnPlayerInit(); // Function Icarus.IcarusRocket.OnDropshipSpawnPlayerInit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x8e94f0
	void OnDatabaseReload(); // Function Icarus.IcarusRocket.OnDatabaseReload // (Native|Event|Protected|BlueprintEvent) // @ game+0x15f5a80
	bool InstallPart(struct AIcarusRocketPart* NewPart); // Function Icarus.IcarusRocket.InstallPart // (Final|Native|Public|BlueprintCallable) // @ game+0x15f56f0
	struct TArray<struct AIcarusRocketPart*> GetParts(); // Function Icarus.IcarusRocket.GetParts // (Final|Native|Public|BlueprintCallable) // @ game+0x15f51a0
	struct AIcarusPlayerControllerSurvival* GetAssignedPlayer(); // Function Icarus.IcarusRocket.GetAssignedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15f4f10
	void DefaultInstallPart(struct AIcarusItem* NewPart); // Function Icarus.IcarusRocket.DefaultInstallPart // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4a70
	void DebugLogRocket(struct FString Message); // Function Icarus.IcarusRocket.DebugLogRocket // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4970
	void AssignPlayer(struct FPlayerCharacterID PlayerCharacterID); // Function Icarus.IcarusRocket.AssignPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15f4790
};

// Class Icarus.IcarusRocketPart
// Size: 0x3e0 (Inherited: 0x3c0)
struct AIcarusRocketPart : AIcarusItem {
	char pad_3C0[0x10]; // 0x3c0(0x10)
	int32_t PartIdentifier; // 0x3d0(0x04)
	char pad_3D4[0xc]; // 0x3d4(0x0c)

	void SetPartIdentifier(int32_t ID); // Function Icarus.IcarusRocketPart.SetPartIdentifier // (Final|Native|Public|BlueprintCallable) // @ game+0x15f6170
	void SetEditorInteractable(bool Interactable); // Function Icarus.IcarusRocketPart.SetEditorInteractable // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e9c20
	void SetEditorHighlight(bool Highlight); // Function Icarus.IcarusRocketPart.SetEditorHighlight // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15e9c20
	bool IsConnected(); // Function Icarus.IcarusRocketPart.IsConnected // (Final|Native|Public|BlueprintCallable) // @ game+0x15f57f0
	int32_t GetPartIdentifier(); // Function Icarus.IcarusRocketPart.GetPartIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1068fc0
	int32_t GetConnectionCount(); // Function Icarus.IcarusRocketPart.GetConnectionCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x15f50c0
	void GetClosestConnection(struct FVector HitLocation, struct AIcarusRocketPartConnector* ClosestConnection); // Function Icarus.IcarusRocketPart.GetClosestConnection // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15f4fd0
	struct FName GetChildSocketName(struct AIcarusRocketPartConnector* Connector); // Function Icarus.IcarusRocketPart.GetChildSocketName // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4f40
	void FindConnectableConnector(struct AIcarusRocketPartConnector* OtherConnector, struct AIcarusRocketPartConnector* Connector); // Function Icarus.IcarusRocketPart.FindConnectableConnector // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15f4ce0
	void DestroyAllConnections(); // Function Icarus.IcarusRocketPart.DestroyAllConnections // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4b00
};

// Class Icarus.IcarusRocketPartConnector
// Size: 0x3e0 (Inherited: 0x3c0)
struct AIcarusRocketPartConnector : AIcarusItem {
	enum class ERocketPartConnectionType ConnectionType; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct AIcarusRocketPartConnector* AttachedConnector; // 0x3c8(0x08)
	struct FMulticastSparseDelegate ConnectionUpdated; // 0x3d0(0x01)
	char pad_3D1[0xf]; // 0x3d1(0x0f)

	bool IsConnected(); // Function Icarus.IcarusRocketPartConnector.IsConnected // (Final|Native|Public|BlueprintCallable) // @ game+0x15f5820
	bool EstablishConnection(struct AIcarusRocketPartConnector* OtherConnector); // Function Icarus.IcarusRocketPartConnector.EstablishConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4c00
	bool DestroyConnection(); // Function Icarus.IcarusRocketPartConnector.DestroyConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x15f4b20
	bool CanEstablishConnection(struct AIcarusRocketPartConnector* OtherConnector); // Function Icarus.IcarusRocketPartConnector.CanEstablishConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x15f48d0
};

// Class Icarus.IcarusShipEditorCharacter
// Size: 0x5a0 (Inherited: 0x5a0)
struct AIcarusShipEditorCharacter : AIcarusCharacter {
};

// Class Icarus.IcarusSmartNavLink
// Size: 0x280 (Inherited: 0x270)
struct AIcarusSmartNavLink : ANavLinkProxy {
	enum class ENavigationType NavigationType; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	float NavigationDuration; // 0x274(0x04)
	bool AllowBasicTraversal; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)

	void ReachedSmartLink(struct AActor* Actor, struct FVector Destination); // Function Icarus.IcarusSmartNavLink.ReachedSmartLink // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x15fb920
};

// Class Icarus.IcarusSpawn
// Size: 0x238 (Inherited: 0x220)
struct AIcarusSpawn : AActor {
	struct UCapsuleComponent* SpawnCapsule; // 0x220(0x08)
	char pad_228[0x10]; // 0x228(0x10)

	void ActorEndOverlaps(struct AActor* FirstActor, struct AActor* OtherActor); // Function Icarus.IcarusSpawn.ActorEndOverlaps // (Final|Native|Public) // @ game+0x15fa4b0
	void ActorBeginOverlaps(struct AActor* FirstActor, struct AActor* OtherActor); // Function Icarus.IcarusSpawn.ActorBeginOverlaps // (Final|Native|Public) // @ game+0x15fa3e0
};

// Class Icarus.IcarusSpectatorPawn
// Size: 0x2e0 (Inherited: 0x2a8)
struct AIcarusSpectatorPawn : ASpectatorPawn {
	float InitialMaxSpeed; // 0x2a8(0x04)
	float InitialAcceleration; // 0x2ac(0x04)
	float InitialDeceleration; // 0x2b0(0x04)
	bool bSmoothMouseInput; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)
	float InputSmoothSpeed; // 0x2b8(0x04)
	float LookUpRate; // 0x2bc(0x04)
	float TurnRate; // 0x2c0(0x04)
	bool bFreeLook; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
	struct FRotator FreelookRotation; // 0x2c8(0x0c)
	char pad_2D4[0xc]; // 0x2d4(0x0c)

	void SetSpeedScale(float SpeedScale); // Function Icarus.IcarusSpectatorPawn.SetSpeedScale // (Final|Native|Public|BlueprintCallable) // @ game+0x15fbc90
	void AddYaw(float Value); // Function Icarus.IcarusSpectatorPawn.AddYaw // (Final|Native|Public) // @ game+0x15fa8b0
	void AddPitch(float Value); // Function Icarus.IcarusSpectatorPawn.AddPitch // (Final|Native|Public) // @ game+0x15fa6b0
};

// Class Icarus.IcarusStatContainer
// Size: 0x2d8 (Inherited: 0xb0)
struct UIcarusStatContainer : UActorComponent {
	char pad_B0[0x1]; // 0xb0(0x01)
	struct FMulticastSparseDelegate OnStatContainerUpdated; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
	struct FStatsRepArray ReplicatedStatArray; // 0xb8(0x118)
	char pad_1D0[0x108]; // 0x1d0(0x108)

	bool RemoveStats_BP(enum class EStatSources Source, int32_t UID); // Function Icarus.IcarusStatContainer.RemoveStats_BP // (Final|Native|Public|BlueprintCallable) // @ game+0x15fbb20
	void RemoveBackingStatContainer(struct UIcarusStatContainer* BackingContainer, struct FString Context); // Function Icarus.IcarusStatContainer.RemoveBackingStatContainer // (Final|Native|Public|BlueprintCallable) // @ game+0x15fb9f0
	void OnServer_SerialiseStats(); // Function Icarus.IcarusStatContainer.OnServer_SerialiseStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x15fb8c0
	void OnRep_StatChanges(); // Function Icarus.IcarusStatContainer.OnRep_StatChanges // (Final|Native|Public) // @ game+0x15fb7b0
	struct TMap<struct FStatsEnum, int32_t> GetStatsSlowBP(bool bIncludeVirtual); // Function Icarus.IcarusStatContainer.GetStatsSlowBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15faf20
	int32_t GetStat(struct FStatsEnum Stat); // Function Icarus.IcarusStatContainer.GetStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15fae70
	struct FStatContainer GetInternalContainer(); // Function Icarus.IcarusStatContainer.GetInternalContainer // (Final|Native|Public) // @ game+0x15fa9d0
	bool AddStats_BP(enum class EStatSources Source, int32_t UID, struct TMap<struct FStatsEnum, int32_t> InStats); // Function Icarus.IcarusStatContainer.AddStats_BP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15fa730
	void AddBackingStatContainer(struct UIcarusStatContainer* BackingContainer, struct FString Context); // Function Icarus.IcarusStatContainer.AddBackingStatContainer // (Final|Native|Public|BlueprintCallable) // @ game+0x15fa580
};

// Class Icarus.IcarusStaticMeshComponent
// Size: 0x4d0 (Inherited: 0x4d0)
struct UIcarusStaticMeshComponent : UStaticMeshComponent {
};

// Class Icarus.IcarusTestRail
// Size: 0x2d8 (Inherited: 0x240)
struct AIcarusTestRail : ACameraRig_Rail {
	struct FMulticastInlineDelegate OnTestComplete; // 0x240(0x10)
	struct FMulticastInlineDelegate OnSetupComplete; // 0x250(0x10)
	enum class ETestRailState CurrentState; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	int32_t TimeoutDuration; // 0x264(0x04)
	struct FTestProfileData ProfileData; // 0x268(0x60)
	struct ACharacter* TestCharacter; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)

	void TickTest(float DeltaTime); // Function Icarus.IcarusTestRail.TickTest // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15fbdf0
	void TestComplete(); // Function Icarus.IcarusTestRail.TestComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15fbdd0
	void SetupTest(struct ACharacter* InTestCharacter); // Function Icarus.IcarusTestRail.SetupTest // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15fbd40
	void SetupComplete(); // Function Icarus.IcarusTestRail.SetupComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15fbd10
	void BeginTest(); // Function Icarus.IcarusTestRail.BeginTest // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15fa950
};

// Class Icarus.IcarusUpdateSession
// Size: 0x3b8 (Inherited: 0x3b0)
struct UIcarusUpdateSession : UIcarusSessionBase {
	struct UGetProspectReportCallbackProxyGen* ProspectReportCallbackProxy; // 0x3b0(0x08)

	struct UIcarusUpdateSession* IcarusUpdateSession(struct UObject* WorldContextObject, struct FProspectInfo ProspectInfo, struct APlayerController* PlayerController); // Function Icarus.IcarusUpdateSession.IcarusUpdateSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15fb040
	void GetProspectReportSuccess(struct FResGetProspectReport Response); // Function Icarus.IcarusUpdateSession.GetProspectReportSuccess // (Final|Native|Protected|HasOutParms) // @ game+0x15fac40
	void GetProspectReportFailure(struct FResGetProspectReport Response); // Function Icarus.IcarusUpdateSession.GetProspectReportFailure // (Final|Native|Protected|HasOutParms) // @ game+0x15faa10
};

// Class Icarus.IcarusWeatherAction
// Size: 0x408 (Inherited: 0xb0)
struct UIcarusWeatherAction : UActorComponent {
	struct FMulticastSparseDelegate WeatherActionComplete; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FWeatherEventsRowHandle ParentWeatherEvent; // 0xb4(0x18)
	struct FWeatherActionsRowHandle WeatherActionData; // 0xcc(0x18)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct FIcarusWeatherActionData CachedActionData; // 0xe8(0x2f8)
	struct FMulticastSparseDelegate ActionRowUpdated; // 0x3e0(0x01)
	char pad_3E1[0x3]; // 0x3e1(0x03)
	float TotalLifeTime; // 0x3e4(0x04)
	float CurrentLifeTime; // 0x3e8(0x04)
	struct FBiomesRowHandle BiomeAssigned; // 0x3ec(0x18)
	bool StartEventEnacted; // 0x404(0x01)
	char pad_405[0x3]; // 0x405(0x03)

	void WeatherEventUpdated(struct FWeatherEventsRowHandle Event); // Function Icarus.IcarusWeatherAction.WeatherEventUpdated // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x15fbf40
	void WeatherActionVisualTick(float Delta, struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionVisualTick // (Native|Event|Public|BlueprintEvent) // @ game+0x15fbe70
	void WeatherActionTick(float Delta, struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionTick // (Native|Event|Public|BlueprintEvent) // @ game+0x15fbe70
	void WeatherActionStarted(struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionStarted // (Native|Event|Public|BlueprintEvent) // @ game+0xfc22c0
	void WeatherActionEnded(struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.WeatherActionEnded // (Native|Event|Public|BlueprintEvent) // @ game+0xfc22c0
	void OnRep_WeatherActionData(); // Function Icarus.IcarusWeatherAction.OnRep_WeatherActionData // (Final|Native|Protected) // @ game+0x15fb7d0
	void OnRep_ParentWeatherEvent(); // Function Icarus.IcarusWeatherAction.OnRep_ParentWeatherEvent // (Final|Native|Protected) // @ game+0x15fb710
	void Initialise(float ExpectedLifeTime, struct FBiomesRowHandle Biome, struct FWeatherEventsRowHandle ParentWeatherEvent, struct FWeatherActionsRowHandle ActionData); // Function Icarus.IcarusWeatherAction.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x15fb240
	struct FBiomesRowHandle GetBiomeAssigned(); // Function Icarus.IcarusWeatherAction.GetBiomeAssigned // (Final|Native|Public) // @ game+0x15fa990
	void ActionTick_External(float Delta, struct AWeatherController* WeatherController); // Function Icarus.IcarusWeatherAction.ActionTick_External // (Final|Native|Public) // @ game+0x15fa310
};

// Class Icarus.IcarusWidget
// Size: 0x280 (Inherited: 0x260)
struct UIcarusWidget : UUserWidget {
	struct FFeatureLevelsRowHandle RequiredFeatureLevel; // 0x260(0x18)
	bool bOverrideVisibilityIfFeatureLevelDisabled; // 0x278(0x01)
	enum class ESlateVisibility FeatureLevelVisibilityOverride; // 0x279(0x01)
	char pad_27A[0x6]; // 0x27a(0x06)

	bool IsWidgetFocusable(); // Function Icarus.IcarusWidget.IsWidgetFocusable // (Native|Event|Public|BlueprintEvent|Const) // @ game+0xd68e60
	bool IsFeatureLevelMet(); // Function Icarus.IcarusWidget.IsFeatureLevelMet // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1600dc0
	void GetFocusWidget(bool bValid, struct UWidget* Widget, bool bThis); // Function Icarus.IcarusWidget.GetFocusWidget // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void FocusUpdated(bool bNewFocus); // Function Icarus.IcarusWidget.FocusUpdated // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void FocusIcarusWidget(); // Function Icarus.IcarusWidget.FocusIcarusWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.LevelDataAsset
// Size: 0x40 (Inherited: 0x30)
struct ULevelDataAsset : UDataAsset {
	struct TArray<struct FTileDataStruct> MapTiles; // 0x30(0x10)
};

// Class Icarus.IcarusWorldSettings
// Size: 0x3c8 (Inherited: 0x3a0)
struct AIcarusWorldSettings : AWorldSettings {
	struct TArray<struct FTileDataStruct> LevelData; // 0x3a0(0x10)
	struct FVector WorldBoundaryMin; // 0x3b0(0x0c)
	struct FVector WorldBoundaryMax; // 0x3bc(0x0c)

	void SaveMapTileData(struct FVector2D TextureSize); // Function Icarus.IcarusWorldSettings.SaveMapTileData // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1601590
};

// Class Icarus.IcausAnimNotify_GOAPInteraction
// Size: 0x38 (Inherited: 0x38)
struct UIcausAnimNotify_GOAPInteraction : UAnimNotify {
};

// Class Icarus.InteractableBehaviour
// Size: 0xe8 (Inherited: 0xc0)
struct UInteractableBehaviour : UTraitBehaviour {
	enum class EInteractType InteractType; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	int32_t InteractIndex; // 0xc4(0x04)
	struct FName RequiredInteractTag; // 0xc8(0x08)
	struct FInteractionsRowHandle InteractionsRowHandle; // 0xd0(0x18)

	void Interact(struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableBehaviour.Interact // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1600c80
	struct FText GetInteractionText(); // Function Icarus.InteractableBehaviour.GetInteractionText // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1600ac0
	bool GetInteractData(struct FInteractData OutData); // Function Icarus.InteractableBehaviour.GetInteractData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1600260
	struct UInteractableComponent* GetInteractableComponent(); // Function Icarus.InteractableBehaviour.GetInteractableComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16005f0
	bool CanInteract(struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableBehaviour.CanInteract // (Native|Event|Public|BlueprintEvent) // @ game+0x15ffbe0
};

// Class Icarus.InteractableComponent
// Size: 0x138 (Inherited: 0xe8)
struct UInteractableComponent : UTraitBehaviours {
	struct TMap<enum class EInteractType, struct FInteractStack> WorldInteracts; // 0xe8(0x50)

	void WorldInteract(struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableComponent.WorldInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1601a80
	void WorldHeldInteract(struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableComponent.WorldHeldInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1601940
	void WorldAltHeldInteract(struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableComponent.WorldAltHeldInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1601800
	bool GetInteractData(struct FInteractionsRowHandle InteractionsRowHandle, struct FInteractData OutData); // Function Icarus.InteractableComponent.GetInteractData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16003a0
	bool GetInteractableData(struct FInteractableData OutData); // Function Icarus.InteractableComponent.GetInteractableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1600620
	struct UInteractableBehaviour* GetCurrentInteractForType(enum class EInteractType InteractType, struct AActor* Instigator, struct FHitResult HitResult); // Function Icarus.InteractableComponent.GetCurrentInteractForType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16000b0
	bool CanInteract(); // Function Icarus.InteractableComponent.CanInteract // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x85e5e0
};

// Class Icarus.InteractableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInteractableLibrary : URowLibrary {

	struct FInteractableRowHandle StructToRowHandle(struct FInteractableEnum EnumValue); // Function Icarus.InteractableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601750
	struct FName StructToName(struct FInteractableEnum EnumValue); // Function Icarus.InteractableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16016b0
	int32_t StructToInt(struct FInteractableEnum EnumValue); // Function Icarus.InteractableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601610
	struct FInteractableEnum RowHandleToStruct(struct FInteractableRowHandle RowHandle); // Function Icarus.InteractableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16014d0
	void RemoveRowFromInteractableTable(struct FName Name); // Function Icarus.InteractableLibrary.RemoveRowFromInteractableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1601450
	void RefreshConstants(); // Function Icarus.InteractableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1601430
	int32_t NumRows(); // Function Icarus.InteractableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601400
	bool NotEqual_EnumName(struct FInteractableEnum A, struct FName B); // Function Icarus.InteractableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601310
	bool NotEqual_EnumEnum(struct FInteractableEnum A, struct FInteractableEnum B); // Function Icarus.InteractableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601220
	struct FInteractableEnum NameToStruct(struct FName NameValue); // Function Icarus.InteractableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601190
	int32_t NameToInt(struct FName NameValue); // Function Icarus.InteractableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1601100
	struct FInteractableRowHandle MakeLiteralInteractable(struct FInteractableRowHandle RowHandle); // Function Icarus.InteractableLibrary.MakeLiteralInteractable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1601030
	struct FInteractableRowHandle MakeInteractableFromIndex(int32_t Index); // Function Icarus.InteractableLibrary.MakeInteractableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1600fa0
	struct FInteractableEnum MakeInteractableEnum(struct FInteractableEnum Enum); // Function Icarus.InteractableLibrary.MakeInteractableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1600f20
	struct FInteractableRowHandle MakeInteractable(struct FName RowName); // Function Icarus.InteractableLibrary.MakeInteractable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1600e80
	bool IsValidName(struct FName NameValue); // Function Icarus.InteractableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1600df0
	struct FInteractableEnum IntToStruct(int32_t IntValue); // Function Icarus.InteractableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1600bf0
	struct FName IntToName(int32_t IntValue); // Function Icarus.InteractableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1600b60
	void GetInteractableStruct(struct FInteractableRowHandle RowHandle, struct FInteractableData Interactable, enum class EValid Paths); // Function Icarus.InteractableLibrary.GetInteractableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1600870
	bool EqualEqual_FInteractableRowHandleFInteractableRowHandle(struct FInteractableRowHandle RowHandleA, struct FInteractableRowHandle RowHandleB); // Function Icarus.InteractableLibrary.EqualEqual_FInteractableRowHandleFInteractableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15fff70
	bool EqualEqual_EnumEnum(struct FInteractableEnum A, struct FInteractableEnum B); // Function Icarus.InteractableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15ffe80
	struct FInteractableRowHandle CastToInteractableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.InteractableLibrary.CastToInteractableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ffd60
	void BreakInteractableEnum(struct FInteractableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.InteractableLibrary.BreakInteractableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15ffa80
	void AddRowToInteractableTable(struct FName Name, struct FInteractableData Data, struct FInteractableRowHandle NewRow); // Function Icarus.InteractableLibrary.AddRowToInteractableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15ff5b0
};

// Class Icarus.InteractableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInteractableTable : UIcarusDataTable {
};

// Class Icarus.InteractionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInteractionsLibrary : URowLibrary {

	struct FInteractionsRowHandle StructToRowHandle(struct FInteractionsEnum EnumValue); // Function Icarus.InteractionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160b6f0
	struct FName StructToName(struct FInteractionsEnum EnumValue); // Function Icarus.InteractionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160b650
	int32_t StructToInt(struct FInteractionsEnum EnumValue); // Function Icarus.InteractionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160b5b0
	struct FInteractionsEnum RowHandleToStruct(struct FInteractionsRowHandle RowHandle); // Function Icarus.InteractionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160ae10
	void RemoveRowFromInteractionsTable(struct FName Name); // Function Icarus.InteractionsLibrary.RemoveRowFromInteractionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160ad00
	void RefreshConstants(); // Function Icarus.InteractionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x160ab30
	int32_t NumRows(); // Function Icarus.InteractionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160a9d0
	bool NotEqual_EnumName(struct FInteractionsEnum A, struct FName B); // Function Icarus.InteractionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160a8e0
	bool NotEqual_EnumEnum(struct FInteractionsEnum A, struct FInteractionsEnum B); // Function Icarus.InteractionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160a7f0
	struct FInteractionsEnum NameToStruct(struct FName NameValue); // Function Icarus.InteractionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160a760
	int32_t NameToInt(struct FName NameValue); // Function Icarus.InteractionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x160a6d0
	struct FInteractionsRowHandle MakeLiteralInteractions(struct FInteractionsRowHandle RowHandle); // Function Icarus.InteractionsLibrary.MakeLiteralInteractions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1609ba0
	struct FInteractionsRowHandle MakeInteractionsFromIndex(int32_t Index); // Function Icarus.InteractionsLibrary.MakeInteractionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1609b10
	struct FInteractionsEnum MakeInteractionsEnum(struct FInteractionsEnum Enum); // Function Icarus.InteractionsLibrary.MakeInteractionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1609a90
	struct FInteractionsRowHandle MakeInteractions(struct FName RowName); // Function Icarus.InteractionsLibrary.MakeInteractions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16099f0
	bool IsValidName(struct FName NameValue); // Function Icarus.InteractionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16092e0
	struct FInteractionsEnum IntToStruct(int32_t IntValue); // Function Icarus.InteractionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1609250
	struct FName IntToName(int32_t IntValue); // Function Icarus.InteractionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16091c0
	void GetInteractionsStruct(struct FInteractionsRowHandle RowHandle, struct FInteractData Interactions, enum class EValid Paths); // Function Icarus.InteractionsLibrary.GetInteractionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1608600
	bool EqualEqual_FInteractionsRowHandleFInteractionsRowHandle(struct FInteractionsRowHandle RowHandleA, struct FInteractionsRowHandle RowHandleB); // Function Icarus.InteractionsLibrary.EqualEqual_FInteractionsRowHandleFInteractionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1606d70
	bool EqualEqual_EnumEnum(struct FInteractionsEnum A, struct FInteractionsEnum B); // Function Icarus.InteractionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1606c80
	struct FInteractionsRowHandle CastToInteractionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.InteractionsLibrary.CastToInteractionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1605a20
	void BreakInteractionsEnum(struct FInteractionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.InteractionsLibrary.BreakInteractionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1604970
	void AddRowToInteractionsTable(struct FName Name, struct FInteractData Data, struct FInteractionsRowHandle NewRow); // Function Icarus.InteractionsLibrary.AddRowToInteractionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1603ba0
};

// Class Icarus.InteractionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInteractionsTable : UIcarusDataTable {
};

// Class Icarus.InteractSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UInteractSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnWaterSourceInteractNotify; // 0x30(0x10)

	void BroadcastWaterSourceInteractDelegate(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* WaterSource); // Function Icarus.InteractSubsystem.BroadcastWaterSourceInteractDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512e50
};

// Class Icarus.Inventory
// Size: 0x130 (Inherited: 0xc0)
struct UInventory : UTraitBehaviour {
	int32_t CurrentWeight; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct TArray<struct FInventorySlot> Slots; // 0xc8(0x10)
	struct FVector OverflowSpawnLocation; // 0xd8(0x0c)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct TArray<struct FItemData> InitialItems; // 0xe8(0x10)
	struct FMulticastSparseDelegate OnItemAdded; // 0xf8(0x01)
	struct FMulticastSparseDelegate OnItemRemoved; // 0xf9(0x01)
	struct FMulticastSparseDelegate OnItemRemovedVerbose; // 0xfa(0x01)
	struct FMulticastSparseDelegate Client_OnItemsUpdated; // 0xfb(0x01)
	struct FMulticastSparseDelegate OnWeightUpdated; // 0xfc(0x01)
	struct FMulticastSparseDelegate SlotCountChange; // 0xfd(0x01)
	struct FMulticastSparseDelegate SlotsUpdated; // 0xfe(0x01)
	char pad_FF[0x1]; // 0xff(0x01)
	struct FInventoryInfoRowHandle InventoryInfoRowHandle; // 0x100(0x18)
	char pad_118[0x18]; // 0x118(0x18)

	bool TransferInventory(struct UInventory* Other); // Function Icarus.Inventory.TransferInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x160b840
	void SlottableSetup(struct TArray<struct FSlotWrapper> SlotableSetup); // Function Icarus.Inventory.SlottableSetup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x160b4a0
	bool SetItemDynamicProperty(int32_t Location, enum class EDynamicItemProperties Property, int32_t Value); // Function Icarus.Inventory.SetItemDynamicProperty // (Final|Native|Public|BlueprintCallable) // @ game+0x160b390
	bool SetItem(int32_t Location, struct FItemData NewItem); // Function Icarus.Inventory.SetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x160aed0
	void RemoveSlots(int32_t SlotsToRemove); // Function Icarus.Inventory.RemoveSlots // (Final|Native|Public|BlueprintCallable) // @ game+0x160ad80
	struct FItemData RemoveItem(int32_t Location, int32_t Amount, bool ClearItemSave); // Function Icarus.Inventory.RemoveItem // (Final|Native|Public|BlueprintCallable) // @ game+0x160ab50
	void OverrideQuery(int32_t Index, struct FTagQueriesRowHandle Query); // Function Icarus.Inventory.OverrideQuery // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x160aa40
	void OnStatContainerUpdated(); // Function Icarus.Inventory.OnStatContainerUpdated // (Final|Native|Private) // @ game+0x160aa20
	void OnRep_Slots(); // Function Icarus.Inventory.OnRep_Slots // (Final|Native|Private) // @ game+0x160aa00
	bool ManuallyPlaceItem(struct FItemData Item, int32_t Location, bool AllowStacking); // Function Icarus.Inventory.ManuallyPlaceItem // (Final|Native|Public|BlueprintCallable) // @ game+0x160a1a0
	bool ManuallyForcePlaceItem(struct FItemData Item, int32_t Location, bool AllowStacking); // Function Icarus.Inventory.ManuallyForcePlaceItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1609c70
	bool HasItems(); // Function Icarus.Inventory.HasItems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1609190
	int32_t HasFillableResource(enum class EIcarusResourceType Type, int32_t AmountRequired); // Function Icarus.Inventory.HasFillableResource // (Final|Native|Public|BlueprintCallable) // @ game+0x16090c0
	struct TArray<struct FFindItemSlotInfo> GetItems(struct FGameplayTagQuery Query); // Function Icarus.Inventory.GetItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1608f50
	struct FItemData GetItem(int32_t Location); // Function Icarus.Inventory.GetItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1608e30
	struct FInventoryIDEnum GetInventoryID(); // Function Icarus.Inventory.GetInventoryID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1608bc0
	bool GetInventoryData(struct FInventoryInfo OutData); // Function Icarus.Inventory.GetInventoryData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16088a0
	void ForceAddItems(struct TArray<struct FItemData> Items); // Function Icarus.Inventory.ForceAddItems // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16084d0
	int32_t FindStaticStackTotal(struct FItemStaticData ItemToFind); // Function Icarus.Inventory.FindStaticStackTotal // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1608400
	int32_t FindStatic(struct FItemStaticData ItemToFind, int32_t Amount); // Function Icarus.Inventory.FindStatic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16082d0
	int32_t FindStackableLocation(struct FItemData Item); // Function Icarus.Inventory.FindStackableLocation // (Final|Native|Private|Const) // @ game+0x1607e70
	struct TArray<struct FFindItemSlotInfo> FindItems(struct FItemsStaticRowHandle ItemStaticRow, int32_t RequiredAmount); // Function Icarus.Inventory.FindItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1607b10
	int32_t FindFirstItem(struct FGameplayTagQuery Query); // Function Icarus.Inventory.FindFirstItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1607a20
	int32_t FindEmptyLocation(struct FItemData Item); // Function Icarus.Inventory.FindEmptyLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16075c0
	int32_t FindContainerToFill(enum class EIcarusResourceType Type); // Function Icarus.Inventory.FindContainerToFill // (Final|Native|Public|BlueprintCallable) // @ game+0x1607370
	struct TArray<struct FFindItemSlotInfo> FindContainers(enum class EIcarusResourceType ResourceType); // Function Icarus.Inventory.FindContainers // (Final|Native|Public|BlueprintCallable) // @ game+0x1607400
	int32_t Find(struct FItemData ItemToFind, int32_t Amount); // Function Icarus.Inventory.Find // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1606eb0
	void Empty(); // Function Icarus.Inventory.Empty // (Final|Native|Public|BlueprintCallable) // @ game+0x1606c60
	bool ConsumeItem(int32_t Location, int32_t Amount, bool ClearItemSave); // Function Icarus.Inventory.ConsumeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1606b50
	bool ConsumeFillableResource(int32_t Location, enum class EIcarusResourceType Type, int32_t Units); // Function Icarus.Inventory.ConsumeFillableResource // (Final|Native|Public|BlueprintCallable) // @ game+0x1606a40
	void ClearLastItemInfo(int32_t Location); // Function Icarus.Inventory.ClearLastItemInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x16069b0
	bool CheckSlotValidity(struct FItemData Item, int32_t Location); // Function Icarus.Inventory.CheckSlotValidity // (Final|Native|Private|Const) // @ game+0x16064f0
	bool CheckPlacement(struct FItemData Item, int32_t Location, bool AllowStacking); // Function Icarus.Inventory.CheckPlacement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1605fc0
	bool CheckAutoPlacement(struct FItemData Item); // Function Icarus.Inventory.CheckAutoPlacement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1605b40
	bool CanTransferInventory(struct UInventory* Other); // Function Icarus.Inventory.CanTransferInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1605980
	bool CanStack(struct FItemData Item, int32_t Location); // Function Icarus.Inventory.CanStack // (Final|Native|Private|Const) // @ game+0x16054c0
	bool CanPlace(struct FItemData Item, int32_t Location, bool AllowStacking); // Function Icarus.Inventory.CanPlace // (Final|Native|Private|Const) // @ game+0x1604f90
	bool CanAdd(struct FItemData Item, int32_t Location); // Function Icarus.Inventory.CanAdd // (Final|Native|Private|Const) // @ game+0x1604ad0
	bool AutomaticallyPlaceItem(struct FItemData Item, int32_t PlacedLocation, bool DropItemAtOverFlow, bool AllowStacking); // Function Icarus.Inventory.AutomaticallyPlaceItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16043f0
	int32_t AttemptPartialStackPlacement(struct FItemData Item, int32_t Count); // Function Icarus.Inventory.AttemptPartialStackPlacement // (Final|Native|Public|BlueprintCallable) // @ game+0x1603f30
	void AddSlots(int32_t SlotsToAdd, struct FTagQueriesRowHandle QueryOverride); // Function Icarus.Inventory.AddSlots // (Final|Native|Public|BlueprintCallable) // @ game+0x1603e30
};

// Class Icarus.InventoryComponent
// Size: 0x190 (Inherited: 0xe8)
struct UInventoryComponent : UTraitBehaviours {
	struct TMap<struct FInventoryIDEnum, struct UInventory*> Inventories; // 0xe8(0x50)
	struct TMap<struct FInventoryIDEnum, struct FManuallyAddedInventoryItems> ManuallyAddedItems; // 0x138(0x50)
	struct FMulticastSparseDelegate OnInventoryItemAdded; // 0x188(0x01)
	struct FMulticastSparseDelegate OnInventoryItemRemoved; // 0x189(0x01)
	struct FMulticastSparseDelegate OnInventoryItemRemovedVerbose; // 0x18a(0x01)
	struct FMulticastSparseDelegate OnBounceItem; // 0x18b(0x01)
	bool bRequiresUpdate; // 0x18c(0x01)
	char pad_18D[0x3]; // 0x18d(0x03)

	void UpdateInventorySlotCount(struct UInventory* Inventory, int32_t DesiredSlotCount); // Function Icarus.InventoryComponent.UpdateInventorySlotCount // (Final|Native|Public|BlueprintCallable) // @ game+0x160b8e0
	bool TransferInventories(struct UInventoryComponent* Other); // Function Icarus.InventoryComponent.TransferInventories // (Final|Native|Public|BlueprintCallable) // @ game+0x160b7a0
	void StatsUpdated(); // Function Icarus.InventoryComponent.StatsUpdated // (Final|Native|Public) // @ game+0x160b590
	void ItemRemovedVerboseDelagate(struct UInventory* Inventory, int32_t Slot, struct FItemData ItemData); // Function Icarus.InventoryComponent.ItemRemovedVerboseDelagate // (Final|Native|Public) // @ game+0x1609510
	void ItemRemovedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.InventoryComponent.ItemRemovedDelagate // (Final|Native|Public) // @ game+0x1609440
	void ItemAddedDelagate(struct UInventory* Inventory, int32_t Slot); // Function Icarus.InventoryComponent.ItemAddedDelagate // (Final|Native|Public) // @ game+0x1609370
	int32_t GetTotalWeight(); // Function Icarus.InventoryComponent.GetTotalWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x1609090
	bool GetInventoryInfoData(struct FInventoryInfoRowHandle InventoryInfoRowHandle, struct FInventoryInfo OutData); // Function Icarus.InventoryComponent.GetInventoryInfoData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1608c80
	struct TArray<struct FInventoryIDEnum> GetInventoryIds(); // Function Icarus.InventoryComponent.GetInventoryIds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1608c00
	bool GetInventoryData(struct FInventoryData OutData); // Function Icarus.InventoryComponent.GetInventoryData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16089f0
	struct UInventory* GetInventory(struct FInventoryIDEnum InventoryID); // Function Icarus.InventoryComponent.GetInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16087f0
	int32_t FindItemsTotal(struct FItemsStaticRowHandle ItemsStaticRowHandle); // Function Icarus.InventoryComponent.FindItemsTotal // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1607db0
	struct TArray<struct FFindItemSlotInfo> FindItems(struct FItemsStaticRowHandle ItemsStaticRowHandle, int32_t Count); // Function Icarus.InventoryComponent.FindItems // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1607c60
	struct TArray<struct FFindItemSlotInfo> FindContainers(enum class EIcarusResourceType ResourceType); // Function Icarus.InventoryComponent.FindContainers // (Final|Native|Public|BlueprintCallable) // @ game+0x16074e0
	void CheckInventorySlotStats(); // Function Icarus.InventoryComponent.CheckInventorySlotStats // (Final|Native|Public|BlueprintCallable) // @ game+0x1605fa0
};

// Class Icarus.InventoryIDLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryIDLibrary : URowLibrary {

	struct FInventoryIDRowHandle StructToRowHandle(struct FInventoryIDEnum EnumValue); // Function Icarus.InventoryIDLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161bd30
	struct FName StructToName(struct FInventoryIDEnum EnumValue); // Function Icarus.InventoryIDLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161bbf0
	int32_t StructToInt(struct FInventoryIDEnum EnumValue); // Function Icarus.InventoryIDLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161bab0
	struct FInventoryIDEnum RowHandleToStruct(struct FInventoryIDRowHandle RowHandle); // Function Icarus.InventoryIDLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b630
	void RemoveRowFromInventoryIDTable(struct FName Name); // Function Icarus.InventoryIDLibrary.RemoveRowFromInventoryIDTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161b530
	void RefreshConstants(); // Function Icarus.InventoryIDLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x161b4f0
	int32_t NumRows(); // Function Icarus.InventoryIDLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b490
	bool NotEqual_EnumName(struct FInventoryIDEnum A, struct FName B); // Function Icarus.InventoryIDLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b2b0
	bool NotEqual_EnumEnum(struct FInventoryIDEnum A, struct FInventoryIDEnum B); // Function Icarus.InventoryIDLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b0d0
	struct FInventoryIDEnum NameToStruct(struct FName NameValue); // Function Icarus.InventoryIDLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161afb0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.InventoryIDLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x161ae90
	struct FInventoryIDRowHandle MakeLiteralInventoryID(struct FInventoryIDRowHandle RowHandle); // Function Icarus.InventoryIDLibrary.MakeLiteralInventoryID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161acf0
	struct FInventoryIDRowHandle MakeInventoryIDFromIndex(int32_t Index); // Function Icarus.InventoryIDLibrary.MakeInventoryIDFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161aab0
	struct FInventoryIDEnum MakeInventoryIDEnum(struct FInventoryIDEnum Enum); // Function Icarus.InventoryIDLibrary.MakeInventoryIDEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161aa30
	struct FInventoryIDRowHandle MakeInventoryID(struct FName RowName); // Function Icarus.InventoryIDLibrary.MakeInventoryID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161a990
	bool IsValidName(struct FName NameValue); // Function Icarus.InventoryIDLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x161a4d0
	struct FInventoryIDEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryIDLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161a240
	struct FName IntToName(int32_t IntValue); // Function Icarus.InventoryIDLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x161a120
	void GetInventoryIDStruct(struct FInventoryIDRowHandle RowHandle, struct FInventoryID InventoryID, enum class EValid Paths); // Function Icarus.InventoryIDLibrary.GetInventoryIDStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1615bc0
	bool EqualEqual_FInventoryIDRowHandleFInventoryIDRowHandle(struct FInventoryIDRowHandle RowHandleA, struct FInventoryIDRowHandle RowHandleB); // Function Icarus.InventoryIDLibrary.EqualEqual_FInventoryIDRowHandleFInventoryIDRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1611410
	bool EqualEqual_EnumEnum(struct FInventoryIDEnum A, struct FInventoryIDEnum B); // Function Icarus.InventoryIDLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1611230
	struct FInventoryIDRowHandle CastToInventoryIDRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.InventoryIDLibrary.CastToInventoryIDRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160fc20
	void BreakInventoryIDEnum(struct FInventoryIDEnum Enum, struct FName Name, int32_t Index); // Function Icarus.InventoryIDLibrary.BreakInventoryIDEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x160f370
	void AddRowToInventoryIDTable(struct FName Name, struct FInventoryID Data, struct FInventoryIDRowHandle NewRow); // Function Icarus.InventoryIDLibrary.AddRowToInventoryIDTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160ed70
};

// Class Icarus.InventoryIDTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryIDTable : UIcarusDataTable {
};

// Class Icarus.InventoryInfoLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryInfoLibrary : URowLibrary {

	struct FInventoryInfoRowHandle StructToRowHandle(struct FInventoryInfoEnum EnumValue); // Function Icarus.InventoryInfoLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161bde0
	struct FName StructToName(struct FInventoryInfoEnum EnumValue); // Function Icarus.InventoryInfoLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161bc90
	int32_t StructToInt(struct FInventoryInfoEnum EnumValue); // Function Icarus.InventoryInfoLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161bb50
	struct FInventoryInfoEnum RowHandleToStruct(struct FInventoryInfoRowHandle RowHandle); // Function Icarus.InventoryInfoLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b6f0
	void RemoveRowFromInventoryInfoTable(struct FName Name); // Function Icarus.InventoryInfoLibrary.RemoveRowFromInventoryInfoTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161b5b0
	void RefreshConstants(); // Function Icarus.InventoryInfoLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x161b510
	int32_t NumRows(); // Function Icarus.InventoryInfoLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b4c0
	bool NotEqual_EnumName(struct FInventoryInfoEnum A, struct FName B); // Function Icarus.InventoryInfoLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b3a0
	bool NotEqual_EnumEnum(struct FInventoryInfoEnum A, struct FInventoryInfoEnum B); // Function Icarus.InventoryInfoLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b1c0
	struct FInventoryInfoEnum NameToStruct(struct FName NameValue); // Function Icarus.InventoryInfoLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161b040
	int32_t NameToInt(struct FName NameValue); // Function Icarus.InventoryInfoLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x161af20
	struct FInventoryInfoRowHandle MakeLiteralInventoryInfo(struct FInventoryInfoRowHandle RowHandle); // Function Icarus.InventoryInfoLibrary.MakeLiteralInventoryInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161adc0
	struct FInventoryInfoRowHandle MakeInventoryInfoFromIndex(int32_t Index); // Function Icarus.InventoryInfoLibrary.MakeInventoryInfoFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161ac60
	struct FInventoryInfoEnum MakeInventoryInfoEnum(struct FInventoryInfoEnum Enum); // Function Icarus.InventoryInfoLibrary.MakeInventoryInfoEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161abe0
	struct FInventoryInfoRowHandle MakeInventoryInfo(struct FName RowName); // Function Icarus.InventoryInfoLibrary.MakeInventoryInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161ab40
	bool IsValidName(struct FName NameValue); // Function Icarus.InventoryInfoLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x161a560
	struct FInventoryInfoEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryInfoLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161a2d0
	struct FName IntToName(int32_t IntValue); // Function Icarus.InventoryInfoLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x161a1b0
	void GetInventoryInfoStruct(struct FInventoryInfoRowHandle RowHandle, struct FInventoryInfo InventoryInfo, enum class EValid Paths); // Function Icarus.InventoryInfoLibrary.GetInventoryInfoStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1615fc0
	bool EqualEqual_FInventoryInfoRowHandleFInventoryInfoRowHandle(struct FInventoryInfoRowHandle RowHandleA, struct FInventoryInfoRowHandle RowHandleB); // Function Icarus.InventoryInfoLibrary.EqualEqual_FInventoryInfoRowHandleFInventoryInfoRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1611550
	bool EqualEqual_EnumEnum(struct FInventoryInfoEnum A, struct FInventoryInfoEnum B); // Function Icarus.InventoryInfoLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1611320
	struct FInventoryInfoRowHandle CastToInventoryInfoRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.InventoryInfoLibrary.CastToInventoryInfoRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160fd40
	void BreakInventoryInfoEnum(struct FInventoryInfoEnum Enum, struct FName Name, int32_t Index); // Function Icarus.InventoryInfoLibrary.BreakInventoryInfoEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x160f4d0
	void AddRowToInventoryInfoTable(struct FName Name, struct FInventoryInfo Data, struct FInventoryInfoRowHandle NewRow); // Function Icarus.InventoryInfoLibrary.AddRowToInventoryInfoTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160ef30
};

// Class Icarus.InventoryInfoTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryInfoTable : UIcarusDataTable {
};

// Class Icarus.InventoryItemLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryItemLibrary : UBlueprintFunctionLibrary {

	struct FItemData VerifyItem(struct FItemData ItemData); // Function Icarus.InventoryItemLibrary.VerifyItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161be90
	void SplitInventoryItemStack(struct UInventory* Inventory, int32_t ItemLocation); // Function Icarus.InventoryItemLibrary.SplitInventoryItemStack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x161b9f0
	void SetItemPropertyValue(enum class EDynamicItemProperties Property, int32_t NewValue, struct FItemData Item, enum class ESetDataSuccess Paths); // Function Icarus.InventoryItemLibrary.SetItemPropertyValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161b7b0
	bool ItemMatchesQuery(struct FItemData Item, struct FTagQueriesRowHandle Query); // Function Icarus.InventoryItemLibrary.ItemMatchesQuery // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161a7b0
	void ItemDataValid(struct FItemData Item, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.ItemDataValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161a5f0
	bool IsCustomItem(struct FItemData Item); // Function Icarus.InventoryItemLibrary.IsCustomItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161a360
	bool HasSecondaryItemType(struct FItemData Item, enum class ESecondaryItemTypes ItemType); // Function Icarus.InventoryItemLibrary.HasSecondaryItemType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1619c80
	bool HasPrimaryItemType(struct FItemData Item, enum class EPrimaryItemTypes ItemType); // Function Icarus.InventoryItemLibrary.HasPrimaryItemType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16197e0
	void GetWeightData(struct FItemData Item, struct FWeightData WeightData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetWeightData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1619580
	void GetUsableData(struct FItemData Item, struct FUsableData UsableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetUsableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16192e0
	void GetTransmutableData(struct FItemData Item, struct FTransmutableData Transmutable, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetTransmutableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1619030
	void GetToolDamage(struct FItemData Item, struct FToolDamage ToolDamageData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetToolDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1618dd0
	void GetStaticItemData(struct FItemData Item, struct FItemStaticData StaticData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetStaticItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1618b70
	int32_t GetStat(struct FItemData Item, struct FStatsEnum Stat); // Function Icarus.InventoryItemLibrary.GetStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16186d0
	void GetSlotableData(struct FItemData Item, struct FSlotableData Slotable, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetSlotableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1618440
	void GetRocketableData(struct FItemData Item, struct FRocketableData Rocketable, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetRocketableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1618150
	struct FRefundResult GetRefundResult(struct FItemsStaticRowHandle ItemType, int32_t StackSize); // Function Icarus.InventoryItemLibrary.GetRefundResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1618020
	void GetRangedWeaponData(struct FItemData Item, struct FRangedWeaponData RangedWeaponData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetRangedWeaponData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617cf0
	void GetProjectileDamage(struct FItemData Item, struct AIcarusPlayerCharacter* Player, int32_t ProjectileDamage); // Function Icarus.InventoryItemLibrary.GetProjectileDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617af0
	void GetProcessingData(struct FItemData Item, struct FProcessingData ProcessingData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetProcessingData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617870
	void GetMeshableData(struct FItemData Item, struct FMeshableData MeshableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetMeshableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16175d0
	int32_t GetItemWeight(struct FItemData ItemData, struct AActor* ItemOwner); // Function Icarus.InventoryItemLibrary.GetItemWeight // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16171b0
	void GetItemTypes(struct FItemData Item, struct TArray<enum class EPrimaryItemTypes> PrimaryTypes, struct TArray<enum class ESecondaryItemTypes> SecondaryTypes); // Function Icarus.InventoryItemLibrary.GetItemTypes // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616c90
	struct FGameplayTagContainer GetItemTags(struct FItemData Item); // Function Icarus.InventoryItemLibrary.GetItemTags // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616af0
	void GetItemStats(struct FItemData Item, struct TMap<struct FStatsEnum, int32_t> Stats, bool GetVirtual); // Function Icarus.InventoryItemLibrary.GetItemStats // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616860
	void GetItemPropertyValue(enum class EDynamicItemProperties Property, struct FItemData Item, int32_t IntValue, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetItemPropertyValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616600
	void GetItemProperty(enum class EDynamicItemProperties Property, struct FItemData Item, struct FItemDynamicData DynamicData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetItemProperty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1616370
	struct FString GetItemID(struct FItemData Item); // Function Icarus.InventoryItemLibrary.GetItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16161b0
	void GetItemableData(struct FItemData Item, struct FItemableData ItemableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetItemableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1617360
	void GetInventoryInfoData(struct FItemData Item, struct TArray<struct FInventoryInfo> InventoryInfos, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetInventoryInfoData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1615d50
	void GetInventoryData(struct FItemData Item, struct FInventoryData Inventory, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetInventoryData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1615960
	void GetInteractableData(struct FItemData Item, struct FInteractableData IntectableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetInteractableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1615630
	void GetHighlightableData(struct FItemData Item, struct FHighlightableData HighlightableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetHighlightableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1615360
	void GetHeldItemGrantedStats(struct FItemData Item, struct TMap<struct FStatsEnum, int32_t> Stats); // Function Icarus.InventoryItemLibrary.GetHeldItemGrantedStats // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1614e60
	void GetFocusableData(struct FItemData Item, struct FFocusableData FocusableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetFocusableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1614c00
	void GetFocusableAttachmentData(struct FItemData Item, struct FItemAttachmentData AttachmentData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetFocusableAttachmentData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1614980
	void GetFocusableAnimationData(struct FItemData Item, struct FItemAnimationData AnimationData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetFocusableAnimationData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1614730
	void GetFloatableData(struct FItemData Item, struct FFloatableData FloatableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetFloatableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16144d0
	void GetFirearmData(struct FItemData Item, struct FFirearmData FirearmData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetFirearmData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1614270
	void GetFillableData(struct FItemData Item, struct FFillableData FillableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetFillableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1614010
	void GetEquippableData(struct FItemData Item, struct FEquippableData EquippableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetEquippableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1613d40
	void GetEnergyData(struct FItemData Item, struct FEnergyData EnergyData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetEnergyData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1613af0
	void GetDurableData(struct FItemData Item, struct FDurableData DurableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetDurableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16137f0
	void GetDeployableData(struct FItemData Item, struct FDeployableData DeployableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetDeployableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1613520
	void GetDecayableData(struct FItemData Item, struct FDecayableData Decayable, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetDecayableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16132c0
	void GetConsumableData(struct FItemData Item, struct FConsumableData ConsumableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetConsumableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612fe0
	void GetCombustibleData(struct FItemData Item, struct FCombustibleData CombustibleData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetCombustibleData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612d70
	void GetBuildableData(struct FItemData Item, struct FBuildableData BuildableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetBuildableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612a20
	void GetBallisticData(struct FItemData Item, struct FBallisticData BallisiticData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetBallisticData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612780
	struct FArmourSetsEnum GetArmourSet(struct FItemData Item); // Function Icarus.InventoryItemLibrary.GetArmourSet // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1612600
	void GetArmourData(struct FItemData Item, struct FArmourData ArmourData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetArmourData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16123a0
	void GetAmmoTypeData(struct FItemData Item, struct FAmmoTypeData AmmoTypeData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetAmmoTypeData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16120e0
	void GetActionableData(struct FItemData Item, struct FActionableData ActionableData, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.GetActionableData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1611df0
	int32_t GenerateRewardStackSize(struct AIcarusPlayerCharacter* PlayerCharacter, struct FItemRewardEntry ItemReward, float AdditionalMultiplier); // Function Icarus.InventoryItemLibrary.GenerateRewardStackSize // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1611ca0
	struct FItemData GenerateItemisedRocket(struct FString Name); // Function Icarus.InventoryItemLibrary.GenerateItemisedRocket // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1611b70
	struct FProcessorRecipesRowHandle FindCraftingRecipe(struct FItemsStaticRowHandle ItemsStaticRowHandle, enum class EDataValid Paths); // Function Icarus.InventoryItemLibrary.FindCraftingRecipe // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1611a50
	bool EstablishInventoryLink(struct AIcarusItem* Item, struct UInventory* Inventory, int32_t Location); // Function Icarus.InventoryItemLibrary.EstablishInventoryLink // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1611950
	bool Equals(struct FItemData Item1, struct FItemData Item2); // Function Icarus.InventoryItemLibrary.Equals // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1611690
	void DropInventoryItemStack(struct UInventory* Inventory, int32_t ItemLocation, struct AIcarusPlayerCharacter* FromPlayer); // Function Icarus.InventoryItemLibrary.DropInventoryItemStack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1611130
	void DestroyInventoryItemStack(struct UInventory* Inventory, int32_t ItemLocation, struct AIcarusPlayerController* Player, bool bRefundPartCost); // Function Icarus.InventoryItemLibrary.DestroyInventoryItemStack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1610fe0
	struct FItemData CreateItem(struct FItemData ItemData, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.CreateItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1610ac0
	struct FItemData CreateCustomItem(struct FItemData ItemData, struct TArray<struct FIcarusStatReplicated> AdditionalStats, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.CreateCustomItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16104c0
	struct FMetaItem ConvertToMetaItem(struct FItemData Item); // Function Icarus.InventoryItemLibrary.ConvertToMetaItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1610230
	struct FItemData ConvertToItem(struct FMetaItem MetaItem, struct UObject* WorldContextObject); // Function Icarus.InventoryItemLibrary.ConvertToItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1610090
	bool ContainerItemLeak(struct UInventory* Inventory, int32_t InventoryLocation); // Function Icarus.InventoryItemLibrary.ContainerItemLeak // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160ffc0
	bool ContainerCurrentlyAcceptsType(struct AIcarusActor* Actor, enum class EIcarusResourceType Type); // Function Icarus.InventoryItemLibrary.ContainerCurrentlyAcceptsType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160fef0
	bool ContainerActorLeak(struct AIcarusActor* Actor); // Function Icarus.InventoryItemLibrary.ContainerActorLeak // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160fe60
	bool CanGetReward(struct AIcarusPlayerCharacter* PlayerCharacter, struct FItemRewardEntry ItemReward); // Function Icarus.InventoryItemLibrary.CanGetReward // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160fb30
	bool CanDropItemFromInventory(struct UInventory* Inventory, int32_t ItemLocation); // Function Icarus.InventoryItemLibrary.CanDropItemFromInventory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x160fa60
	bool CanDropItem(struct FItemData ItemData); // Function Icarus.InventoryItemLibrary.CanDropItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x160f8f0
	bool CanCombineItems(struct FItemData Item1, struct FItemData Item2); // Function Icarus.InventoryItemLibrary.CanCombineItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x160f630
	int32_t AttemptToFillItemsInInventory(struct UInventory* Inventory, enum class EIcarusResourceType Type, int32_t Units); // Function Icarus.InventoryItemLibrary.AttemptToFillItemsInInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160f270
	int32_t AddContainerItemCapacity(struct UInventory* Inventory, int32_t InventoryLocation, enum class EIcarusResourceType Resource, int32_t Units); // Function Icarus.InventoryItemLibrary.AddContainerItemCapacity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160ec30
	int32_t AddContainerActorCapacity(struct AIcarusActor* Actor, enum class EIcarusResourceType Resource, int32_t Units); // Function Icarus.InventoryItemLibrary.AddContainerActorCapacity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x160eb30
};

// Class Icarus.InventoryLibrary
// Size: 0x28 (Inherited: 0x28)
struct UInventoryLibrary : URowLibrary {

	struct FInventoryRowHandle StructToRowHandle(struct FInventoryEnum EnumValue); // Function Icarus.InventoryLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1622300
	struct FName StructToName(struct FInventoryEnum EnumValue); // Function Icarus.InventoryLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1622120
	int32_t StructToInt(struct FInventoryEnum EnumValue); // Function Icarus.InventoryLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621f40
	struct FInventoryEnum RowHandleToStruct(struct FInventoryRowHandle RowHandle); // Function Icarus.InventoryLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621c70
	void RemoveRowFromInventoryTable(struct FName Name); // Function Icarus.InventoryLibrary.RemoveRowFromInventoryTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1621af0
	void RefreshConstants(); // Function Icarus.InventoryLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1621a90
	int32_t NumRows(); // Function Icarus.InventoryLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621a00
	bool NotEqual_EnumName(struct FInventoryEnum A, struct FName B); // Function Icarus.InventoryLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621730
	bool NotEqual_EnumEnum(struct FInventoryEnum A, struct FInventoryEnum B); // Function Icarus.InventoryLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621460
	struct FInventoryEnum NameToStruct(struct FName NameValue); // Function Icarus.InventoryLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16212b0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.InventoryLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1621100
	struct FInventoryRowHandle MakeLiteralInventory(struct FInventoryRowHandle RowHandle); // Function Icarus.InventoryLibrary.MakeLiteralInventory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620e90
	struct FInventoryRowHandle MakeInventoryFromIndex(int32_t Index); // Function Icarus.InventoryLibrary.MakeInventoryFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620aa0
	struct FInventoryEnum MakeInventoryEnum(struct FInventoryEnum Enum); // Function Icarus.InventoryLibrary.MakeInventoryEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620a20
	struct FInventoryRowHandle MakeInventory(struct FName RowName); // Function Icarus.InventoryLibrary.MakeInventory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620980
	bool IsValidName(struct FName NameValue); // Function Icarus.InventoryLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16207d0
	struct FInventoryEnum IntToStruct(int32_t IntValue); // Function Icarus.InventoryLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620620
	struct FName IntToName(int32_t IntValue); // Function Icarus.InventoryLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1620470
	void GetInventoryStruct(struct FInventoryRowHandle RowHandle, struct FInventoryData Inventory, enum class EValid Paths); // Function Icarus.InventoryLibrary.GetInventoryStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161fe20
	bool EqualEqual_FInventoryRowHandleFInventoryRowHandle(struct FInventoryRowHandle RowHandleA, struct FInventoryRowHandle RowHandleB); // Function Icarus.InventoryLibrary.EqualEqual_FInventoryRowHandleFInventoryRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fa60
	bool EqualEqual_EnumEnum(struct FInventoryEnum A, struct FInventoryEnum B); // Function Icarus.InventoryLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f790
	struct FInventoryRowHandle CastToInventoryRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.InventoryLibrary.CastToInventoryRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161f430
	void BreakInventoryEnum(struct FInventoryEnum Enum, struct FName Name, int32_t Index); // Function Icarus.InventoryLibrary.BreakInventoryEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x161f010
	void AddRowToInventoryTable(struct FName Name, struct FInventoryData Data, struct FInventoryRowHandle NewRow); // Function Icarus.InventoryLibrary.AddRowToInventoryTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161ea10
};

// Class Icarus.InventoryTable
// Size: 0xb8 (Inherited: 0xb8)
struct UInventoryTable : UIcarusDataTable {
};

// Class Icarus.IRGN_AlwaysRelevant_ForConnection
// Size: 0x298 (Inherited: 0x50)
struct UIRGN_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	char pad_50[0x18]; // 0x50(0x18)
	struct TArray<struct FAlwaysRelevantActorInfo> PastRelevantActors; // 0x68(0x10)
	char pad_78[0x210]; // 0x78(0x210)
	struct AActor* LastPawn; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class Icarus.IRGN_PlayerState_FrequencyLimited
// Size: 0x80 (Inherited: 0x50)
struct UIRGN_PlayerState_FrequencyLimited : UReplicationGraphNode {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Icarus.ItemableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UItemableComponent : UTraitComponent {
	struct FMulticastSparseDelegate OnWorldPickup; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	int32_t Stack; // 0xd4(0x04)

	void SetStack(int32_t NewStack); // Function Icarus.ItemableComponent.SetStack // (Final|Native|Public|BlueprintCallable) // @ game+0x1621eb0
	bool GetItemableData(struct FItemableData OutData); // Function Icarus.ItemableComponent.GetItemableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1620130
};

// Class Icarus.ItemableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemableLibrary : URowLibrary {

	struct FItemableRowHandle StructToRowHandle(struct FItemableEnum EnumValue); // Function Icarus.ItemableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1622460
	struct FName StructToName(struct FItemableEnum EnumValue); // Function Icarus.ItemableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1622260
	int32_t StructToInt(struct FItemableEnum EnumValue); // Function Icarus.ItemableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1622080
	struct FItemableEnum RowHandleToStruct(struct FItemableRowHandle RowHandle); // Function Icarus.ItemableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621df0
	void RemoveRowFromItemableTable(struct FName Name); // Function Icarus.ItemableLibrary.RemoveRowFromItemableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1621bf0
	void RefreshConstants(); // Function Icarus.ItemableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1621ad0
	int32_t NumRows(); // Function Icarus.ItemableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621a60
	bool NotEqual_EnumName(struct FItemableEnum A, struct FName B); // Function Icarus.ItemableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621910
	bool NotEqual_EnumEnum(struct FItemableEnum A, struct FItemableEnum B); // Function Icarus.ItemableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621640
	struct FItemableEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16213d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1621220
	struct FItemableRowHandle MakeLiteralItemable(struct FItemableRowHandle RowHandle); // Function Icarus.ItemableLibrary.MakeLiteralItemable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621030
	struct FItemableRowHandle MakeItemableFromIndex(int32_t Index); // Function Icarus.ItemableLibrary.MakeItemableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620e00
	struct FItemableEnum MakeItemableEnum(struct FItemableEnum Enum); // Function Icarus.ItemableLibrary.MakeItemableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620d80
	struct FItemableRowHandle MakeItemable(struct FName RowName); // Function Icarus.ItemableLibrary.MakeItemable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620ce0
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16208f0
	struct FItemableEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620740
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1620590
	void GetItemableStruct(struct FItemableRowHandle RowHandle, struct FItemableData Itemable, enum class EValid Paths); // Function Icarus.ItemableLibrary.GetItemableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16202d0
	bool EqualEqual_FItemableRowHandleFItemableRowHandle(struct FItemableRowHandle RowHandleA, struct FItemableRowHandle RowHandleB); // Function Icarus.ItemableLibrary.EqualEqual_FItemableRowHandleFItemableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fce0
	bool EqualEqual_EnumEnum(struct FItemableEnum A, struct FItemableEnum B); // Function Icarus.ItemableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f970
	struct FItemableRowHandle CastToItemableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemableLibrary.CastToItemableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161f670
	void BreakItemableEnum(struct FItemableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemableLibrary.BreakItemableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x161f2d0
	void AddRowToItemableTable(struct FName Name, struct FItemableData Data, struct FItemableRowHandle NewRow); // Function Icarus.ItemableLibrary.AddRowToItemableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161ed90
};

// Class Icarus.ItemableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemableTable : UIcarusDataTable {
};

// Class Icarus.ItemAnimationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemAnimationsLibrary : URowLibrary {

	struct FItemAnimationsRowHandle StructToRowHandle(struct FItemAnimationsEnum EnumValue); // Function Icarus.ItemAnimationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16223b0
	struct FName StructToName(struct FItemAnimationsEnum EnumValue); // Function Icarus.ItemAnimationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16221c0
	int32_t StructToInt(struct FItemAnimationsEnum EnumValue); // Function Icarus.ItemAnimationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621fe0
	struct FItemAnimationsEnum RowHandleToStruct(struct FItemAnimationsRowHandle RowHandle); // Function Icarus.ItemAnimationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621d30
	void RemoveRowFromItemAnimationsTable(struct FName Name); // Function Icarus.ItemAnimationsLibrary.RemoveRowFromItemAnimationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1621b70
	void RefreshConstants(); // Function Icarus.ItemAnimationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1621ab0
	int32_t NumRows(); // Function Icarus.ItemAnimationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621a30
	bool NotEqual_EnumName(struct FItemAnimationsEnum A, struct FName B); // Function Icarus.ItemAnimationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621820
	bool NotEqual_EnumEnum(struct FItemAnimationsEnum A, struct FItemAnimationsEnum B); // Function Icarus.ItemAnimationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621550
	struct FItemAnimationsEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemAnimationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1621340
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemAnimationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1621190
	struct FItemAnimationsRowHandle MakeLiteralItemAnimations(struct FItemAnimationsRowHandle RowHandle); // Function Icarus.ItemAnimationsLibrary.MakeLiteralItemAnimations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620f60
	struct FItemAnimationsRowHandle MakeItemAnimationsFromIndex(int32_t Index); // Function Icarus.ItemAnimationsLibrary.MakeItemAnimationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620c50
	struct FItemAnimationsEnum MakeItemAnimationsEnum(struct FItemAnimationsEnum Enum); // Function Icarus.ItemAnimationsLibrary.MakeItemAnimationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620bd0
	struct FItemAnimationsRowHandle MakeItemAnimations(struct FName RowName); // Function Icarus.ItemAnimationsLibrary.MakeItemAnimations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1620b30
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemAnimationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1620860
	struct FItemAnimationsEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemAnimationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16206b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemAnimationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1620500
	void GetItemAnimationsStruct(struct FItemAnimationsRowHandle RowHandle, struct FItemAnimationData ItemAnimations, enum class EValid Paths); // Function Icarus.ItemAnimationsLibrary.GetItemAnimationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161ffb0
	bool EqualEqual_FItemAnimationsRowHandleFItemAnimationsRowHandle(struct FItemAnimationsRowHandle RowHandleA, struct FItemAnimationsRowHandle RowHandleB); // Function Icarus.ItemAnimationsLibrary.EqualEqual_FItemAnimationsRowHandleFItemAnimationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161fba0
	bool EqualEqual_EnumEnum(struct FItemAnimationsEnum A, struct FItemAnimationsEnum B); // Function Icarus.ItemAnimationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x161f880
	struct FItemAnimationsRowHandle CastToItemAnimationsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemAnimationsLibrary.CastToItemAnimationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161f550
	void BreakItemAnimationsEnum(struct FItemAnimationsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemAnimationsLibrary.BreakItemAnimationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x161f170
	void AddRowToItemAnimationsTable(struct FName Name, struct FItemAnimationData Data, struct FItemAnimationsRowHandle NewRow); // Function Icarus.ItemAnimationsLibrary.AddRowToItemAnimationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x161ec20
};

// Class Icarus.ItemAnimationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemAnimationsTable : UIcarusDataTable {
};

// Class Icarus.ItemAttachmentLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemAttachmentLibrary : URowLibrary {

	struct FItemAttachmentRowHandle StructToRowHandle(struct FItemAttachmentEnum EnumValue); // Function Icarus.ItemAttachmentLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16288e0
	struct FName StructToName(struct FItemAttachmentEnum EnumValue); // Function Icarus.ItemAttachmentLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628700
	int32_t StructToInt(struct FItemAttachmentEnum EnumValue); // Function Icarus.ItemAttachmentLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628520
	struct FItemAttachmentEnum RowHandleToStruct(struct FItemAttachmentRowHandle RowHandle); // Function Icarus.ItemAttachmentLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16282e0
	void RemoveRowFromItemAttachmentTable(struct FName Name); // Function Icarus.ItemAttachmentLibrary.RemoveRowFromItemAttachmentTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1628160
	void RefreshConstants(); // Function Icarus.ItemAttachmentLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1628100
	int32_t NumRows(); // Function Icarus.ItemAttachmentLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628070
	bool NotEqual_EnumName(struct FItemAttachmentEnum A, struct FName B); // Function Icarus.ItemAttachmentLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627da0
	bool NotEqual_EnumEnum(struct FItemAttachmentEnum A, struct FItemAttachmentEnum B); // Function Icarus.ItemAttachmentLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627ad0
	struct FItemAttachmentEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemAttachmentLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627920
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemAttachmentLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1627770
	struct FItemAttachmentRowHandle MakeLiteralItemAttachment(struct FItemAttachmentRowHandle RowHandle); // Function Icarus.ItemAttachmentLibrary.MakeLiteralItemAttachment // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627500
	struct FItemAttachmentRowHandle MakeItemAttachmentFromIndex(int32_t Index); // Function Icarus.ItemAttachmentLibrary.MakeItemAttachmentFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627110
	struct FItemAttachmentEnum MakeItemAttachmentEnum(struct FItemAttachmentEnum Enum); // Function Icarus.ItemAttachmentLibrary.MakeItemAttachmentEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627090
	struct FItemAttachmentRowHandle MakeItemAttachment(struct FName RowName); // Function Icarus.ItemAttachmentLibrary.MakeItemAttachment // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626ff0
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemAttachmentLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1626e40
	struct FItemAttachmentEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemAttachmentLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626c90
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemAttachmentLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1626ae0
	void GetItemAttachmentStruct(struct FItemAttachmentRowHandle RowHandle, struct FItemAttachmentData ItemAttachment, enum class EValid Paths); // Function Icarus.ItemAttachmentLibrary.GetItemAttachmentStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16265c0
	bool EqualEqual_FItemAttachmentRowHandleFItemAttachmentRowHandle(struct FItemAttachmentRowHandle RowHandleA, struct FItemAttachmentRowHandle RowHandleB); // Function Icarus.ItemAttachmentLibrary.EqualEqual_FItemAttachmentRowHandleFItemAttachmentRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626200
	bool EqualEqual_EnumEnum(struct FItemAttachmentEnum A, struct FItemAttachmentEnum B); // Function Icarus.ItemAttachmentLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1625f30
	struct FItemAttachmentRowHandle CastToItemAttachmentRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemAttachmentLibrary.CastToItemAttachmentRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1625bd0
	void BreakItemAttachmentEnum(struct FItemAttachmentEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemAttachmentLibrary.BreakItemAttachmentEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16257b0
	void AddRowToItemAttachmentTable(struct FName Name, struct FItemAttachmentData Data, struct FItemAttachmentRowHandle NewRow); // Function Icarus.ItemAttachmentLibrary.AddRowToItemAttachmentTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16251d0
};

// Class Icarus.ItemAttachmentTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemAttachmentTable : UIcarusDataTable {
};

// Class Icarus.ItemAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemAudioDataLibrary : URowLibrary {

	struct FItemAudioDataRowHandle StructToRowHandle(struct FItemAudioDataEnum EnumValue); // Function Icarus.ItemAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628990
	struct FName StructToName(struct FItemAudioDataEnum EnumValue); // Function Icarus.ItemAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16287a0
	int32_t StructToInt(struct FItemAudioDataEnum EnumValue); // Function Icarus.ItemAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16285c0
	struct FItemAudioDataEnum RowHandleToStruct(struct FItemAudioDataRowHandle RowHandle); // Function Icarus.ItemAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16283a0
	void RemoveRowFromItemAudioDataTable(struct FName Name); // Function Icarus.ItemAudioDataLibrary.RemoveRowFromItemAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16281e0
	void RefreshConstants(); // Function Icarus.ItemAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1628120
	int32_t NumRows(); // Function Icarus.ItemAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16280a0
	bool NotEqual_EnumName(struct FItemAudioDataEnum A, struct FName B); // Function Icarus.ItemAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627e90
	bool NotEqual_EnumEnum(struct FItemAudioDataEnum A, struct FItemAudioDataEnum B); // Function Icarus.ItemAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627bc0
	struct FItemAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16279b0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1627800
	struct FItemAudioDataRowHandle MakeLiteralItemAudioData(struct FItemAudioDataRowHandle RowHandle); // Function Icarus.ItemAudioDataLibrary.MakeLiteralItemAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16275d0
	struct FItemAudioDataRowHandle MakeItemAudioDataFromIndex(int32_t Index); // Function Icarus.ItemAudioDataLibrary.MakeItemAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16272c0
	struct FItemAudioDataEnum MakeItemAudioDataEnum(struct FItemAudioDataEnum Enum); // Function Icarus.ItemAudioDataLibrary.MakeItemAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627240
	struct FItemAudioDataRowHandle MakeItemAudioData(struct FName RowName); // Function Icarus.ItemAudioDataLibrary.MakeItemAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16271a0
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1626ed0
	struct FItemAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626d20
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1626b70
	void GetItemAudioDataStruct(struct FItemAudioDataRowHandle RowHandle, struct FItemAudioData ItemAudioData, enum class EValid Paths); // Function Icarus.ItemAudioDataLibrary.GetItemAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1626780
	bool EqualEqual_FItemAudioDataRowHandleFItemAudioDataRowHandle(struct FItemAudioDataRowHandle RowHandleA, struct FItemAudioDataRowHandle RowHandleB); // Function Icarus.ItemAudioDataLibrary.EqualEqual_FItemAudioDataRowHandleFItemAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626340
	bool EqualEqual_EnumEnum(struct FItemAudioDataEnum A, struct FItemAudioDataEnum B); // Function Icarus.ItemAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626020
	struct FItemAudioDataRowHandle CastToItemAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemAudioDataLibrary.CastToItemAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1625cf0
	void BreakItemAudioDataEnum(struct FItemAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemAudioDataLibrary.BreakItemAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1625910
	void AddRowToItemAudioDataTable(struct FName Name, struct FItemAudioData Data, struct FItemAudioDataRowHandle NewRow); // Function Icarus.ItemAudioDataLibrary.AddRowToItemAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16253f0
};

// Class Icarus.ItemAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemAudioDataTable : UIcarusDataTable {
};

// Class Icarus.ItemClassificationsIconsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemClassificationsIconsLibrary : URowLibrary {

	struct FItemClassificationsIconsRowHandle StructToRowHandle(struct FItemClassificationsIconsEnum EnumValue); // Function Icarus.ItemClassificationsIconsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628a40
	struct FName StructToName(struct FItemClassificationsIconsEnum EnumValue); // Function Icarus.ItemClassificationsIconsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628840
	int32_t StructToInt(struct FItemClassificationsIconsEnum EnumValue); // Function Icarus.ItemClassificationsIconsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628660
	struct FItemClassificationsIconsEnum RowHandleToStruct(struct FItemClassificationsIconsRowHandle RowHandle); // Function Icarus.ItemClassificationsIconsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1628460
	void RemoveRowFromItemClassificationsIconsTable(struct FName Name); // Function Icarus.ItemClassificationsIconsLibrary.RemoveRowFromItemClassificationsIconsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1628260
	void RefreshConstants(); // Function Icarus.ItemClassificationsIconsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1628140
	int32_t NumRows(); // Function Icarus.ItemClassificationsIconsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16280d0
	bool NotEqual_EnumName(struct FItemClassificationsIconsEnum A, struct FName B); // Function Icarus.ItemClassificationsIconsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627f80
	bool NotEqual_EnumEnum(struct FItemClassificationsIconsEnum A, struct FItemClassificationsIconsEnum B); // Function Icarus.ItemClassificationsIconsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627cb0
	struct FItemClassificationsIconsEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemClassificationsIconsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627a40
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemClassificationsIconsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1627890
	struct FItemClassificationsIconsRowHandle MakeLiteralItemClassificationsIcons(struct FItemClassificationsIconsRowHandle RowHandle); // Function Icarus.ItemClassificationsIconsLibrary.MakeLiteralItemClassificationsIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16276a0
	struct FItemClassificationsIconsRowHandle MakeItemClassificationsIconsFromIndex(int32_t Index); // Function Icarus.ItemClassificationsIconsLibrary.MakeItemClassificationsIconsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627470
	struct FItemClassificationsIconsEnum MakeItemClassificationsIconsEnum(struct FItemClassificationsIconsEnum Enum); // Function Icarus.ItemClassificationsIconsLibrary.MakeItemClassificationsIconsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16273f0
	struct FItemClassificationsIconsRowHandle MakeItemClassificationsIcons(struct FName RowName); // Function Icarus.ItemClassificationsIconsLibrary.MakeItemClassificationsIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1627350
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemClassificationsIconsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1626f60
	struct FItemClassificationsIconsEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemClassificationsIconsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626db0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemClassificationsIconsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1626c00
	void GetItemClassificationsIconsStruct(struct FItemClassificationsIconsRowHandle RowHandle, struct FItemClassificationsIconsData ItemClassificationsIcons, enum class EValid Paths); // Function Icarus.ItemClassificationsIconsLibrary.GetItemClassificationsIconsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1626920
	bool EqualEqual_FItemClassificationsIconsRowHandleFItemClassificationsIconsRowHandle(struct FItemClassificationsIconsRowHandle RowHandleA, struct FItemClassificationsIconsRowHandle RowHandleB); // Function Icarus.ItemClassificationsIconsLibrary.EqualEqual_FItemClassificationsIconsRowHandleFItemClassificationsIconsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626480
	bool EqualEqual_EnumEnum(struct FItemClassificationsIconsEnum A, struct FItemClassificationsIconsEnum B); // Function Icarus.ItemClassificationsIconsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1626110
	struct FItemClassificationsIconsRowHandle CastToItemClassificationsIconsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemClassificationsIconsLibrary.CastToItemClassificationsIconsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1625e10
	void BreakItemClassificationsIconsEnum(struct FItemClassificationsIconsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemClassificationsIconsLibrary.BreakItemClassificationsIconsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1625a70
	void AddRowToItemClassificationsIconsTable(struct FName Name, struct FItemClassificationsIconsData Data, struct FItemClassificationsIconsRowHandle NewRow); // Function Icarus.ItemClassificationsIconsLibrary.AddRowToItemClassificationsIconsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1625580
};

// Class Icarus.ItemClassificationsIconsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemClassificationsIconsTable : UIcarusDataTable {
};

// Class Icarus.ItemManipulationComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UItemManipulationComponent : UActorComponent {

	bool UseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.UseItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x162e8b0
	bool RepairItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.RepairItem // (Final|Native|Public|BlueprintCallable) // @ game+0x162e240
	bool PlaceItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.PlaceItem // (Final|Native|Public|BlueprintCallable) // @ game+0x162dff0
	int32_t GetTotalFoodRecovery(struct UPlayerCharacterState* TargetPlayer, struct FItemData ItemData); // Function Icarus.ItemManipulationComponent.GetTotalFoodRecovery // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x162cf80
	bool ConsumeItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.ConsumeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x162c3d0
	bool CanUseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct FUseCondition UseCondition, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.CanUseItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x162bea0
	bool CanRepairItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct AIcarusPlayerCharacter* Target); // Function Icarus.ItemManipulationComponent.CanRepairItem // (Final|Native|Public|BlueprintCallable) // @ game+0x162bd90
};

// Class Icarus.ItemRewardFactory
// Size: 0x28 (Inherited: 0x28)
struct UItemRewardFactory : UBlueprintFunctionLibrary {

	struct FItemData GenerateItemFromReward(struct FItemRewardEntry ItemReward, struct UObject* WorldContextObject); // Function Icarus.ItemRewardFactory.GenerateItemFromReward // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162cae0
	struct FItemData GenerateItemData(struct FItemReward ItemReward, struct UObject* WorldContextObject); // Function Icarus.ItemRewardFactory.GenerateItemData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x162c940
};

// Class Icarus.ItemRewardsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemRewardsLibrary : URowLibrary {

	struct FItemRewardsRowHandle StructToRowHandle(struct FItemRewardsEnum EnumValue); // Function Icarus.ItemRewardsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e750
	struct FName StructToName(struct FItemRewardsEnum EnumValue); // Function Icarus.ItemRewardsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e610
	int32_t StructToInt(struct FItemRewardsEnum EnumValue); // Function Icarus.ItemRewardsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e4d0
	struct FItemRewardsEnum RowHandleToStruct(struct FItemRewardsRowHandle RowHandle); // Function Icarus.ItemRewardsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e350
	void RemoveRowFromItemRewardsTable(struct FName Name); // Function Icarus.ItemRewardsLibrary.RemoveRowFromItemRewardsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x162e140
	void RefreshConstants(); // Function Icarus.ItemRewardsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x162e100
	int32_t NumRows(); // Function Icarus.ItemRewardsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162df90
	bool NotEqual_EnumName(struct FItemRewardsEnum A, struct FName B); // Function Icarus.ItemRewardsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162ddb0
	bool NotEqual_EnumEnum(struct FItemRewardsEnum A, struct FItemRewardsEnum B); // Function Icarus.ItemRewardsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162dbd0
	struct FItemRewardsEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemRewardsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162dab0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemRewardsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x162d990
	struct FItemRewardsRowHandle MakeLiteralItemRewards(struct FItemRewardsRowHandle RowHandle); // Function Icarus.ItemRewardsLibrary.MakeLiteralItemRewards // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d7f0
	struct FItemRewardsRowHandle MakeItemRewardsFromIndex(int32_t Index); // Function Icarus.ItemRewardsLibrary.MakeItemRewardsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d5b0
	struct FItemRewardsEnum MakeItemRewardsEnum(struct FItemRewardsEnum Enum); // Function Icarus.ItemRewardsLibrary.MakeItemRewardsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d530
	struct FItemRewardsRowHandle MakeItemRewards(struct FName RowName); // Function Icarus.ItemRewardsLibrary.MakeItemRewards // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d490
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemRewardsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x162d370
	struct FItemRewardsEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemRewardsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d250
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemRewardsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x162d130
	void GetItemRewardsStruct(struct FItemRewardsRowHandle RowHandle, struct FItemRewards ItemRewards, enum class EValid Paths); // Function Icarus.ItemRewardsLibrary.GetItemRewardsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162cc50
	bool EqualEqual_FItemRewardsRowHandleFItemRewardsRowHandle(struct FItemRewardsRowHandle RowHandleA, struct FItemRewardsRowHandle RowHandleB); // Function Icarus.ItemRewardsLibrary.EqualEqual_FItemRewardsRowHandleFItemRewardsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162c6c0
	bool EqualEqual_EnumEnum(struct FItemRewardsEnum A, struct FItemRewardsEnum B); // Function Icarus.ItemRewardsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162c4e0
	struct FItemRewardsRowHandle CastToItemRewardsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemRewardsLibrary.CastToItemRewardsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162c190
	void BreakItemRewardsEnum(struct FItemRewardsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemRewardsLibrary.BreakItemRewardsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x162bad0
	void AddRowToItemRewardsTable(struct FName Name, struct FItemRewards Data, struct FItemRewardsRowHandle NewRow); // Function Icarus.ItemRewardsLibrary.AddRowToItemRewardsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162b6e0
};

// Class Icarus.ItemRewardsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemRewardsTable : UIcarusDataTable {
};

// Class Icarus.ItemsStaticLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemsStaticLibrary : URowLibrary {

	struct FItemsStaticRowHandle StructToRowHandle(struct FItemsStaticEnum EnumValue); // Function Icarus.ItemsStaticLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e800
	struct FName StructToName(struct FItemsStaticEnum EnumValue); // Function Icarus.ItemsStaticLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e6b0
	int32_t StructToInt(struct FItemsStaticEnum EnumValue); // Function Icarus.ItemsStaticLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e570
	struct FItemsStaticEnum RowHandleToStruct(struct FItemsStaticRowHandle RowHandle); // Function Icarus.ItemsStaticLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162e410
	void RemoveRowFromItemsStaticTable(struct FName Name); // Function Icarus.ItemsStaticLibrary.RemoveRowFromItemsStaticTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x162e1c0
	void RefreshConstants(); // Function Icarus.ItemsStaticLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x162e120
	int32_t NumRows(); // Function Icarus.ItemsStaticLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162dfc0
	bool NotEqual_EnumName(struct FItemsStaticEnum A, struct FName B); // Function Icarus.ItemsStaticLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162dea0
	bool NotEqual_EnumEnum(struct FItemsStaticEnum A, struct FItemsStaticEnum B); // Function Icarus.ItemsStaticLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162dcc0
	struct FItemsStaticEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemsStaticLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162db40
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemsStaticLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x162da20
	struct FItemsStaticRowHandle MakeLiteralItemsStatic(struct FItemsStaticRowHandle RowHandle); // Function Icarus.ItemsStaticLibrary.MakeLiteralItemsStatic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d8c0
	struct FItemsStaticRowHandle MakeItemsStaticFromIndex(int32_t Index); // Function Icarus.ItemsStaticLibrary.MakeItemsStaticFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d760
	struct FItemsStaticEnum MakeItemsStaticEnum(struct FItemsStaticEnum Enum); // Function Icarus.ItemsStaticLibrary.MakeItemsStaticEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d6e0
	struct FItemsStaticRowHandle MakeItemsStatic(struct FName RowName); // Function Icarus.ItemsStaticLibrary.MakeItemsStatic // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d640
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemsStaticLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x162d400
	struct FItemsStaticEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemsStaticLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162d2e0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemsStaticLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x162d1c0
	void GetItemsStaticStruct(struct FItemsStaticRowHandle RowHandle, struct FItemStaticData ItemsStatic, enum class EValid Paths); // Function Icarus.ItemsStaticLibrary.GetItemsStaticStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162cde0
	bool EqualEqual_FItemsStaticRowHandleFItemsStaticRowHandle(struct FItemsStaticRowHandle RowHandleA, struct FItemsStaticRowHandle RowHandleB); // Function Icarus.ItemsStaticLibrary.EqualEqual_FItemsStaticRowHandleFItemsStaticRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162c800
	bool EqualEqual_EnumEnum(struct FItemsStaticEnum A, struct FItemsStaticEnum B); // Function Icarus.ItemsStaticLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x162c5d0
	struct FItemsStaticRowHandle CastToItemsStaticRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemsStaticLibrary.CastToItemsStaticRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162c2b0
	void BreakItemsStaticEnum(struct FItemsStaticEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemsStaticLibrary.BreakItemsStaticEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x162bc30
	void AddRowToItemsStaticTable(struct FName Name, struct FItemStaticData Data, struct FItemsStaticRowHandle NewRow); // Function Icarus.ItemsStaticLibrary.AddRowToItemsStaticTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x162b940
};

// Class Icarus.ItemsStaticTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemsStaticTable : UIcarusDataTable {
};

// Class Icarus.ItemTemplateLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemTemplateLibrary : URowLibrary {

	struct FItemTemplateRowHandle StructToRowHandle(struct FItemTemplateEnum EnumValue); // Function Icarus.ItemTemplateLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634a40
	struct FName StructToName(struct FItemTemplateEnum EnumValue); // Function Icarus.ItemTemplateLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634860
	int32_t StructToInt(struct FItemTemplateEnum EnumValue); // Function Icarus.ItemTemplateLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634680
	struct FItemTemplateEnum RowHandleToStruct(struct FItemTemplateRowHandle RowHandle); // Function Icarus.ItemTemplateLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634440
	void RemoveRowFromItemTemplateTable(struct FName Name); // Function Icarus.ItemTemplateLibrary.RemoveRowFromItemTemplateTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16342c0
	void RefreshConstants(); // Function Icarus.ItemTemplateLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1634260
	int32_t NumRows(); // Function Icarus.ItemTemplateLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16341d0
	bool NotEqual_EnumName(struct FItemTemplateEnum A, struct FName B); // Function Icarus.ItemTemplateLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633f00
	bool NotEqual_EnumEnum(struct FItemTemplateEnum A, struct FItemTemplateEnum B); // Function Icarus.ItemTemplateLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633c30
	struct FItemTemplateEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemTemplateLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633a80
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemTemplateLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16338d0
	struct FItemTemplateRowHandle MakeLiteralItemTemplate(struct FItemTemplateRowHandle RowHandle); // Function Icarus.ItemTemplateLibrary.MakeLiteralItemTemplate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633660
	struct FItemTemplateRowHandle MakeItemTemplateFromIndex(int32_t Index); // Function Icarus.ItemTemplateLibrary.MakeItemTemplateFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633270
	struct FItemTemplateEnum MakeItemTemplateEnum(struct FItemTemplateEnum Enum); // Function Icarus.ItemTemplateLibrary.MakeItemTemplateEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16331f0
	struct FItemTemplateRowHandle MakeItemTemplate(struct FName RowName); // Function Icarus.ItemTemplateLibrary.MakeItemTemplate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633150
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemTemplateLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1632fa0
	struct FItemTemplateEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemTemplateLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632df0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemTemplateLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1632c40
	void GetItemTemplateStruct(struct FItemTemplateRowHandle RowHandle, struct FItemData ItemTemplate, enum class EValid Paths); // Function Icarus.ItemTemplateLibrary.GetItemTemplateStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16326a0
	bool EqualEqual_FItemTemplateRowHandleFItemTemplateRowHandle(struct FItemTemplateRowHandle RowHandleA, struct FItemTemplateRowHandle RowHandleB); // Function Icarus.ItemTemplateLibrary.EqualEqual_FItemTemplateRowHandleFItemTemplateRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16322e0
	bool EqualEqual_EnumEnum(struct FItemTemplateEnum A, struct FItemTemplateEnum B); // Function Icarus.ItemTemplateLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632010
	struct FItemTemplateRowHandle CastToItemTemplateRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemTemplateLibrary.CastToItemTemplateRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1631cb0
	void BreakItemTemplateEnum(struct FItemTemplateEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemTemplateLibrary.BreakItemTemplateEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1631890
	void AddRowToItemTemplateTable(struct FName Name, struct FItemData Data, struct FItemTemplateRowHandle NewRow); // Function Icarus.ItemTemplateLibrary.AddRowToItemTemplateTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1630eb0
};

// Class Icarus.ItemTemplateTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemTemplateTable : UIcarusDataTable {
};

// Class Icarus.ItemTraitMasksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemTraitMasksLibrary : URowLibrary {

	struct FItemTraitMasksRowHandle StructToRowHandle(struct FItemTraitMasksEnum EnumValue); // Function Icarus.ItemTraitMasksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634af0
	struct FName StructToName(struct FItemTraitMasksEnum EnumValue); // Function Icarus.ItemTraitMasksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634900
	int32_t StructToInt(struct FItemTraitMasksEnum EnumValue); // Function Icarus.ItemTraitMasksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634720
	struct FItemTraitMasksEnum RowHandleToStruct(struct FItemTraitMasksRowHandle RowHandle); // Function Icarus.ItemTraitMasksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634500
	void RemoveRowFromItemTraitMasksTable(struct FName Name); // Function Icarus.ItemTraitMasksLibrary.RemoveRowFromItemTraitMasksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1634340
	void RefreshConstants(); // Function Icarus.ItemTraitMasksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1634280
	int32_t NumRows(); // Function Icarus.ItemTraitMasksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634200
	bool NotEqual_EnumName(struct FItemTraitMasksEnum A, struct FName B); // Function Icarus.ItemTraitMasksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633ff0
	bool NotEqual_EnumEnum(struct FItemTraitMasksEnum A, struct FItemTraitMasksEnum B); // Function Icarus.ItemTraitMasksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633d20
	struct FItemTraitMasksEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemTraitMasksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633b10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemTraitMasksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1633960
	struct FItemTraitMasksRowHandle MakeLiteralItemTraitMasks(struct FItemTraitMasksRowHandle RowHandle); // Function Icarus.ItemTraitMasksLibrary.MakeLiteralItemTraitMasks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633730
	struct FItemTraitMasksRowHandle MakeItemTraitMasksFromIndex(int32_t Index); // Function Icarus.ItemTraitMasksLibrary.MakeItemTraitMasksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633420
	struct FItemTraitMasksEnum MakeItemTraitMasksEnum(struct FItemTraitMasksEnum Enum); // Function Icarus.ItemTraitMasksLibrary.MakeItemTraitMasksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16333a0
	struct FItemTraitMasksRowHandle MakeItemTraitMasks(struct FName RowName); // Function Icarus.ItemTraitMasksLibrary.MakeItemTraitMasks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633300
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemTraitMasksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1633030
	struct FItemTraitMasksEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemTraitMasksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632e80
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemTraitMasksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1632cd0
	void GetItemTraitMasksStruct(struct FItemTraitMasksRowHandle RowHandle, struct FItemTraitMask ItemTraitMasks, enum class EValid Paths); // Function Icarus.ItemTraitMasksLibrary.GetItemTraitMasksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16328e0
	bool EqualEqual_FItemTraitMasksRowHandleFItemTraitMasksRowHandle(struct FItemTraitMasksRowHandle RowHandleA, struct FItemTraitMasksRowHandle RowHandleB); // Function Icarus.ItemTraitMasksLibrary.EqualEqual_FItemTraitMasksRowHandleFItemTraitMasksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632420
	bool EqualEqual_EnumEnum(struct FItemTraitMasksEnum A, struct FItemTraitMasksEnum B); // Function Icarus.ItemTraitMasksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632100
	struct FItemTraitMasksRowHandle CastToItemTraitMasksRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemTraitMasksLibrary.CastToItemTraitMasksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1631dd0
	void BreakItemTraitMasksEnum(struct FItemTraitMasksEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemTraitMasksLibrary.BreakItemTraitMasksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16319f0
	void AddRowToItemTraitMasksTable(struct FName Name, struct FItemTraitMask Data, struct FItemTraitMasksRowHandle NewRow); // Function Icarus.ItemTraitMasksLibrary.AddRowToItemTraitMasksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16313a0
};

// Class Icarus.ItemTraitMasksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemTraitMasksTable : UIcarusDataTable {
};

// Class Icarus.ItemWeightStatQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UItemWeightStatQueriesLibrary : URowLibrary {

	struct FItemWeightStatQueriesRowHandle StructToRowHandle(struct FItemWeightStatQueriesEnum EnumValue); // Function Icarus.ItemWeightStatQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634ba0
	struct FName StructToName(struct FItemWeightStatQueriesEnum EnumValue); // Function Icarus.ItemWeightStatQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16349a0
	int32_t StructToInt(struct FItemWeightStatQueriesEnum EnumValue); // Function Icarus.ItemWeightStatQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16347c0
	struct FItemWeightStatQueriesEnum RowHandleToStruct(struct FItemWeightStatQueriesRowHandle RowHandle); // Function Icarus.ItemWeightStatQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16345c0
	void RemoveRowFromItemWeightStatQueriesTable(struct FName Name); // Function Icarus.ItemWeightStatQueriesLibrary.RemoveRowFromItemWeightStatQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16343c0
	void RefreshConstants(); // Function Icarus.ItemWeightStatQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16342a0
	int32_t NumRows(); // Function Icarus.ItemWeightStatQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1634230
	bool NotEqual_EnumName(struct FItemWeightStatQueriesEnum A, struct FName B); // Function Icarus.ItemWeightStatQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16340e0
	bool NotEqual_EnumEnum(struct FItemWeightStatQueriesEnum A, struct FItemWeightStatQueriesEnum B); // Function Icarus.ItemWeightStatQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633e10
	struct FItemWeightStatQueriesEnum NameToStruct(struct FName NameValue); // Function Icarus.ItemWeightStatQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633ba0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ItemWeightStatQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16339f0
	struct FItemWeightStatQueriesRowHandle MakeLiteralItemWeightStatQueries(struct FItemWeightStatQueriesRowHandle RowHandle); // Function Icarus.ItemWeightStatQueriesLibrary.MakeLiteralItemWeightStatQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633800
	struct FItemWeightStatQueriesRowHandle MakeItemWeightStatQueriesFromIndex(int32_t Index); // Function Icarus.ItemWeightStatQueriesLibrary.MakeItemWeightStatQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16335d0
	struct FItemWeightStatQueriesEnum MakeItemWeightStatQueriesEnum(struct FItemWeightStatQueriesEnum Enum); // Function Icarus.ItemWeightStatQueriesLibrary.MakeItemWeightStatQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1633550
	struct FItemWeightStatQueriesRowHandle MakeItemWeightStatQueries(struct FName RowName); // Function Icarus.ItemWeightStatQueriesLibrary.MakeItemWeightStatQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16334b0
	bool IsValidName(struct FName NameValue); // Function Icarus.ItemWeightStatQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16330c0
	struct FItemWeightStatQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.ItemWeightStatQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632f10
	struct FName IntToName(int32_t IntValue); // Function Icarus.ItemWeightStatQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1632d60
	void GetItemWeightStatQueriesStruct(struct FItemWeightStatQueriesRowHandle RowHandle, struct FItemWeightStatQueries ItemWeightStatQueries, enum class EValid Paths); // Function Icarus.ItemWeightStatQueriesLibrary.GetItemWeightStatQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1632aa0
	bool EqualEqual_FItemWeightStatQueriesRowHandleFItemWeightStatQueriesRowHandle(struct FItemWeightStatQueriesRowHandle RowHandleA, struct FItemWeightStatQueriesRowHandle RowHandleB); // Function Icarus.ItemWeightStatQueriesLibrary.EqualEqual_FItemWeightStatQueriesRowHandleFItemWeightStatQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1632560
	bool EqualEqual_EnumEnum(struct FItemWeightStatQueriesEnum A, struct FItemWeightStatQueriesEnum B); // Function Icarus.ItemWeightStatQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16321f0
	struct FItemWeightStatQueriesRowHandle CastToItemWeightStatQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ItemWeightStatQueriesLibrary.CastToItemWeightStatQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1631ef0
	void BreakItemWeightStatQueriesEnum(struct FItemWeightStatQueriesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ItemWeightStatQueriesLibrary.BreakItemWeightStatQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1631b50
	void AddRowToItemWeightStatQueriesTable(struct FName Name, struct FItemWeightStatQueries Data, struct FItemWeightStatQueriesRowHandle NewRow); // Function Icarus.ItemWeightStatQueriesLibrary.AddRowToItemWeightStatQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1631690
};

// Class Icarus.ItemWeightStatQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UItemWeightStatQueriesTable : UIcarusDataTable {
};

// Class Icarus.KeybindContextsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeybindContextsLibrary : URowLibrary {

	struct FKeybindContextsRowHandle StructToRowHandle(struct FKeybindContextsEnum EnumValue); // Function Icarus.KeybindContextsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b980
	struct FName StructToName(struct FKeybindContextsEnum EnumValue); // Function Icarus.KeybindContextsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b790
	int32_t StructToInt(struct FKeybindContextsEnum EnumValue); // Function Icarus.KeybindContextsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b5b0
	struct FKeybindContextsEnum RowHandleToStruct(struct FKeybindContextsRowHandle RowHandle); // Function Icarus.KeybindContextsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b390
	void RemoveRowFromKeybindContextsTable(struct FName Name); // Function Icarus.KeybindContextsLibrary.RemoveRowFromKeybindContextsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x163b1d0
	void RefreshConstants(); // Function Icarus.KeybindContextsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x163b110
	int32_t NumRows(); // Function Icarus.KeybindContextsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b090
	bool NotEqual_EnumName(struct FKeybindContextsEnum A, struct FName B); // Function Icarus.KeybindContextsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163ae80
	bool NotEqual_EnumEnum(struct FKeybindContextsEnum A, struct FKeybindContextsEnum B); // Function Icarus.KeybindContextsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163abb0
	struct FKeybindContextsEnum NameToStruct(struct FName NameValue); // Function Icarus.KeybindContextsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a9a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.KeybindContextsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x163a7f0
	struct FKeybindContextsRowHandle MakeLiteralKeybindContexts(struct FKeybindContextsRowHandle RowHandle); // Function Icarus.KeybindContextsLibrary.MakeLiteralKeybindContexts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a5c0
	struct FKeybindContextsRowHandle MakeKeybindContextsFromIndex(int32_t Index); // Function Icarus.KeybindContextsLibrary.MakeKeybindContextsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a1d0
	struct FKeybindContextsEnum MakeKeybindContextsEnum(struct FKeybindContextsEnum Enum); // Function Icarus.KeybindContextsLibrary.MakeKeybindContextsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a150
	struct FKeybindContextsRowHandle MakeKeybindContexts(struct FName RowName); // Function Icarus.KeybindContextsLibrary.MakeKeybindContexts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a0b0
	bool IsValidName(struct FName NameValue); // Function Icarus.KeybindContextsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1639d00
	struct FKeybindContextsEnum IntToStruct(int32_t IntValue); // Function Icarus.KeybindContextsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1639b50
	struct FName IntToName(int32_t IntValue); // Function Icarus.KeybindContextsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16399a0
	void GetKeybindContextsStruct(struct FKeybindContextsRowHandle RowHandle, struct FKeybindContext KeybindContexts, enum class EValid Paths); // Function Icarus.KeybindContextsLibrary.GetKeybindContextsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16395c0
	bool EqualEqual_FKeybindContextsRowHandleFKeybindContextsRowHandle(struct FKeybindContextsRowHandle RowHandleA, struct FKeybindContextsRowHandle RowHandleB); // Function Icarus.KeybindContextsLibrary.EqualEqual_FKeybindContextsRowHandleFKeybindContextsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1638e10
	bool EqualEqual_EnumEnum(struct FKeybindContextsEnum A, struct FKeybindContextsEnum B); // Function Icarus.KeybindContextsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1638af0
	struct FKeybindContextsRowHandle CastToKeybindContextsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.KeybindContextsLibrary.CastToKeybindContextsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16387c0
	void BreakKeybindContextsEnum(struct FKeybindContextsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.KeybindContextsLibrary.BreakKeybindContextsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16383e0
	void AddRowToKeybindContextsTable(struct FName Name, struct FKeybindContext Data, struct FKeybindContextsRowHandle NewRow); // Function Icarus.KeybindContextsLibrary.AddRowToKeybindContextsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1637d10
};

// Class Icarus.KeybindContextsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeybindContextsTable : UIcarusDataTable {
};

// Class Icarus.KeybindingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeybindingsLibrary : URowLibrary {

	struct FKeybindingsRowHandle StructToRowHandle(struct FKeybindingsEnum EnumValue); // Function Icarus.KeybindingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163ba30
	struct FName StructToName(struct FKeybindingsEnum EnumValue); // Function Icarus.KeybindingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b830
	int32_t StructToInt(struct FKeybindingsEnum EnumValue); // Function Icarus.KeybindingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b650
	struct FKeybindingsEnum RowHandleToStruct(struct FKeybindingsRowHandle RowHandle); // Function Icarus.KeybindingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b450
	void RemoveRowFromKeybindingsTable(struct FName Name); // Function Icarus.KeybindingsLibrary.RemoveRowFromKeybindingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x163b250
	void RefreshConstants(); // Function Icarus.KeybindingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x163b130
	int32_t NumRows(); // Function Icarus.KeybindingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b0c0
	bool NotEqual_EnumName(struct FKeybindingsEnum A, struct FName B); // Function Icarus.KeybindingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163af70
	bool NotEqual_EnumEnum(struct FKeybindingsEnum A, struct FKeybindingsEnum B); // Function Icarus.KeybindingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163aca0
	struct FKeybindingsEnum NameToStruct(struct FName NameValue); // Function Icarus.KeybindingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163aa30
	int32_t NameToInt(struct FName NameValue); // Function Icarus.KeybindingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x163a880
	struct FKeybindingsRowHandle MakeLiteralKeybindings(struct FKeybindingsRowHandle RowHandle); // Function Icarus.KeybindingsLibrary.MakeLiteralKeybindings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a690
	struct TArray<struct FKeybindingsRowHandle> MakeKeybindingsRowFromActionName(struct FName InActionName); // Function Icarus.KeybindingsLibrary.MakeKeybindingsRowFromActionName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x163a410
	struct FKeybindingsRowHandle MakeKeybindingsFromIndex(int32_t Index); // Function Icarus.KeybindingsLibrary.MakeKeybindingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a380
	struct FKeybindingsEnum MakeKeybindingsEnum(struct FKeybindingsEnum Enum); // Function Icarus.KeybindingsLibrary.MakeKeybindingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a300
	struct FKeybindingsRowHandle MakeKeybindings(struct FName RowName); // Function Icarus.KeybindingsLibrary.MakeKeybindings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a260
	bool IsValidName(struct FName NameValue); // Function Icarus.KeybindingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1639d90
	struct FKeybindingsEnum IntToStruct(int32_t IntValue); // Function Icarus.KeybindingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1639be0
	struct FName IntToName(int32_t IntValue); // Function Icarus.KeybindingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1639a30
	void GetKeybindingsStruct(struct FKeybindingsRowHandle RowHandle, struct FKeybindData Keybindings, enum class EValid Paths); // Function Icarus.KeybindingsLibrary.GetKeybindingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1639790
	bool EqualEqual_FKeybindingsRowHandleFKeybindingsRowHandle(struct FKeybindingsRowHandle RowHandleA, struct FKeybindingsRowHandle RowHandleB); // Function Icarus.KeybindingsLibrary.EqualEqual_FKeybindingsRowHandleFKeybindingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1638f50
	bool EqualEqual_EnumEnum(struct FKeybindingsEnum A, struct FKeybindingsEnum B); // Function Icarus.KeybindingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1638be0
	struct FKeybindingsRowHandle CastToKeybindingsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.KeybindingsLibrary.CastToKeybindingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16388e0
	void BreakKeybindingsEnum(struct FKeybindingsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.KeybindingsLibrary.BreakKeybindingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1638540
	void AddRowToKeybindingsTable(struct FName Name, struct FKeybindData Data, struct FKeybindingsRowHandle NewRow); // Function Icarus.KeybindingsLibrary.AddRowToKeybindingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1637f90
};

// Class Icarus.KeybindingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeybindingsTable : UIcarusDataTable {
};

// Class Icarus.KeybindingWidget
// Size: 0x298 (Inherited: 0x280)
struct UKeybindingWidget : UIcarusWidget {
	struct FKeybindingsRowHandle KeybindRow; // 0x280(0x18)

	void PostSetup(); // Function Icarus.KeybindingWidget.PostSetup // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.KeyDataFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeyDataFunctionLibrary : UBlueprintFunctionLibrary {

	struct FText GetDisplayNameForKey(struct FKey Key); // Function Icarus.KeyDataFunctionLibrary.GetDisplayNameForKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1639090
};

// Class Icarus.KeyIconDataFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeyIconDataFunctionLibrary : UBlueprintFunctionLibrary {

	void GetIconsForKey(struct FKey Key, enum class EControllerIconSet IconSet, struct FKeyIconData OutData); // Function Icarus.KeyIconDataFunctionLibrary.GetIconsForKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16391c0
};

// Class Icarus.KeyIconsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeyIconsLibrary : URowLibrary {

	struct FKeyIconsRowHandle StructToRowHandle(struct FKeyIconsEnum EnumValue); // Function Icarus.KeyIconsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b8d0
	struct FName StructToName(struct FKeyIconsEnum EnumValue); // Function Icarus.KeyIconsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b6f0
	int32_t StructToInt(struct FKeyIconsEnum EnumValue); // Function Icarus.KeyIconsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b510
	struct FKeyIconsEnum RowHandleToStruct(struct FKeyIconsRowHandle RowHandle); // Function Icarus.KeyIconsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b2d0
	void RemoveRowFromKeyIconsTable(struct FName Name); // Function Icarus.KeyIconsLibrary.RemoveRowFromKeyIconsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x163b150
	void RefreshConstants(); // Function Icarus.KeyIconsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x163b0f0
	int32_t NumRows(); // Function Icarus.KeyIconsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163b060
	bool NotEqual_EnumName(struct FKeyIconsEnum A, struct FName B); // Function Icarus.KeyIconsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163ad90
	bool NotEqual_EnumEnum(struct FKeyIconsEnum A, struct FKeyIconsEnum B); // Function Icarus.KeyIconsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163aac0
	struct FKeyIconsEnum NameToStruct(struct FName NameValue); // Function Icarus.KeyIconsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a910
	int32_t NameToInt(struct FName NameValue); // Function Icarus.KeyIconsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x163a760
	struct FKeyIconsRowHandle MakeLiteralKeyIcons(struct FKeyIconsRowHandle RowHandle); // Function Icarus.KeyIconsLibrary.MakeLiteralKeyIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163a4f0
	struct TArray<struct FKeyIconsRowHandle> MakeKeyIconsRowFromIconSet(enum class EControllerIconSet InIconSet); // Function Icarus.KeyIconsLibrary.MakeKeyIconsRowFromIconSet // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1639fd0
	struct FKeyIconsRowHandle MakeKeyIconsFromIndex(int32_t Index); // Function Icarus.KeyIconsLibrary.MakeKeyIconsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1639f40
	struct FKeyIconsEnum MakeKeyIconsEnum(struct FKeyIconsEnum Enum); // Function Icarus.KeyIconsLibrary.MakeKeyIconsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1639ec0
	struct FKeyIconsRowHandle MakeKeyIcons(struct FName RowName); // Function Icarus.KeyIconsLibrary.MakeKeyIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1639e20
	bool IsValidName(struct FName NameValue); // Function Icarus.KeyIconsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1639c70
	struct FKeyIconsEnum IntToStruct(int32_t IntValue); // Function Icarus.KeyIconsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1639ac0
	struct FName IntToName(int32_t IntValue); // Function Icarus.KeyIconsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1639910
	void GetKeyIconsStruct(struct FKeyIconsRowHandle RowHandle, struct FKeyIconData KeyIcons, enum class EValid Paths); // Function Icarus.KeyIconsLibrary.GetKeyIconsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16393d0
	bool EqualEqual_FKeyIconsRowHandleFKeyIconsRowHandle(struct FKeyIconsRowHandle RowHandleA, struct FKeyIconsRowHandle RowHandleB); // Function Icarus.KeyIconsLibrary.EqualEqual_FKeyIconsRowHandleFKeyIconsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1638cd0
	bool EqualEqual_EnumEnum(struct FKeyIconsEnum A, struct FKeyIconsEnum B); // Function Icarus.KeyIconsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1638a00
	struct FKeyIconsRowHandle CastToKeyIconsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.KeyIconsLibrary.CastToKeyIconsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16386a0
	void BreakKeyIconsEnum(struct FKeyIconsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.KeyIconsLibrary.BreakKeyIconsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1638280
	void AddRowToKeyIconsTable(struct FName Name, struct FKeyIconData Data, struct FKeyIconsRowHandle NewRow); // Function Icarus.KeyIconsLibrary.AddRowToKeyIconsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1637a30
};

// Class Icarus.KeyIconsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeyIconsTable : UIcarusDataTable {
};

// Class Icarus.KeyRebindableWidget
// Size: 0x268 (Inherited: 0x260)
struct UKeyRebindableWidget : UUserWidget {
	bool bListening; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)

	void OnStartRebind(); // Function Icarus.KeyRebindableWidget.OnStartRebind // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	bool OnKeySet(struct FKey NewKey); // Function Icarus.KeyRebindableWidget.OnKeySet // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	void OnEndRebind(); // Function Icarus.KeyRebindableWidget.OnEndRebind // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.KeysLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKeysLibrary : URowLibrary {

	struct FKeysRowHandle StructToRowHandle(struct FKeysEnum EnumValue); // Function Icarus.KeysLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1642090
	struct FName StructToName(struct FKeysEnum EnumValue); // Function Icarus.KeysLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641eb0
	int32_t StructToInt(struct FKeysEnum EnumValue); // Function Icarus.KeysLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641cd0
	struct FKeysEnum RowHandleToStruct(struct FKeysRowHandle RowHandle); // Function Icarus.KeysLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641a90
	void RemoveRowFromKeysTable(struct FName Name); // Function Icarus.KeysLibrary.RemoveRowFromKeysTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1641910
	void RefreshConstants(); // Function Icarus.KeysLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16418b0
	int32_t NumRows(); // Function Icarus.KeysLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641820
	bool NotEqual_EnumName(struct FKeysEnum A, struct FName B); // Function Icarus.KeysLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641550
	bool NotEqual_EnumEnum(struct FKeysEnum A, struct FKeysEnum B); // Function Icarus.KeysLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641280
	struct FKeysEnum NameToStruct(struct FName NameValue); // Function Icarus.KeysLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16410d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.KeysLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1640f20
	struct FKeysRowHandle MakeLiteralKeys(struct FKeysRowHandle RowHandle); // Function Icarus.KeysLibrary.MakeLiteralKeys // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640cb0
	struct FKeysRowHandle MakeKeysRowFromKey(struct FKey InKey); // Function Icarus.KeysLibrary.MakeKeysRowFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1640870
	struct FKeysRowHandle MakeKeysFromIndex(int32_t Index); // Function Icarus.KeysLibrary.MakeKeysFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16407e0
	struct FKeysEnum MakeKeysEnum(struct FKeysEnum Enum); // Function Icarus.KeysLibrary.MakeKeysEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640760
	struct FKeysRowHandle MakeKeys(struct FName RowName); // Function Icarus.KeysLibrary.MakeKeys // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16406c0
	bool IsValidName(struct FName NameValue); // Function Icarus.KeysLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1640510
	struct FKeysEnum IntToStruct(int32_t IntValue); // Function Icarus.KeysLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640360
	struct FName IntToName(int32_t IntValue); // Function Icarus.KeysLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16401b0
	void GetKeysStruct(struct FKeysRowHandle RowHandle, struct FKeyData Keys, enum class EValid Paths); // Function Icarus.KeysLibrary.GetKeysStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163fba0
	bool EqualEqual_FKeysRowHandleFKeysRowHandle(struct FKeysRowHandle RowHandleA, struct FKeysRowHandle RowHandleB); // Function Icarus.KeysLibrary.EqualEqual_FKeysRowHandleFKeysRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163f6e0
	bool EqualEqual_EnumEnum(struct FKeysEnum A, struct FKeysEnum B); // Function Icarus.KeysLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163f410
	struct FKeysRowHandle CastToKeysRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.KeysLibrary.CastToKeysRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163f0b0
	void BreakKeysEnum(struct FKeysEnum Enum, struct FName Name, int32_t Index); // Function Icarus.KeysLibrary.BreakKeysEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x163ec90
	void AddRowToKeysTable(struct FName Name, struct FKeyData Data, struct FKeysRowHandle NewRow); // Function Icarus.KeysLibrary.AddRowToKeysTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163e640
};

// Class Icarus.KeysTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKeysTable : UIcarusDataTable {
};

// Class Icarus.KillQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UKillQuestsLibrary : URowLibrary {

	struct FKillQuestsRowHandle StructToRowHandle(struct FKillQuestsEnum EnumValue); // Function Icarus.KillQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1642140
	struct FName StructToName(struct FKillQuestsEnum EnumValue); // Function Icarus.KillQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641f50
	int32_t StructToInt(struct FKillQuestsEnum EnumValue); // Function Icarus.KillQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641d70
	struct FKillQuestsEnum RowHandleToStruct(struct FKillQuestsRowHandle RowHandle); // Function Icarus.KillQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641b50
	void RemoveRowFromKillQuestsTable(struct FName Name); // Function Icarus.KillQuestsLibrary.RemoveRowFromKillQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1641990
	void RefreshConstants(); // Function Icarus.KillQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16418d0
	int32_t NumRows(); // Function Icarus.KillQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641850
	bool NotEqual_EnumName(struct FKillQuestsEnum A, struct FName B); // Function Icarus.KillQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641640
	bool NotEqual_EnumEnum(struct FKillQuestsEnum A, struct FKillQuestsEnum B); // Function Icarus.KillQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641370
	struct FKillQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.KillQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641160
	int32_t NameToInt(struct FName NameValue); // Function Icarus.KillQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1640fb0
	struct FKillQuestsRowHandle MakeLiteralKillQuests(struct FKillQuestsRowHandle RowHandle); // Function Icarus.KillQuestsLibrary.MakeLiteralKillQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640d80
	struct FKillQuestsRowHandle MakeKillQuestsFromIndex(int32_t Index); // Function Icarus.KillQuestsLibrary.MakeKillQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640a70
	struct FKillQuestsEnum MakeKillQuestsEnum(struct FKillQuestsEnum Enum); // Function Icarus.KillQuestsLibrary.MakeKillQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16409f0
	struct FKillQuestsRowHandle MakeKillQuests(struct FName RowName); // Function Icarus.KillQuestsLibrary.MakeKillQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640950
	bool IsValidName(struct FName NameValue); // Function Icarus.KillQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16405a0
	struct FKillQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.KillQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16403f0
	struct FName IntToName(int32_t IntValue); // Function Icarus.KillQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1640240
	void GetKillQuestsStruct(struct FKillQuestsRowHandle RowHandle, struct FKillQuest KillQuests, enum class EValid Paths); // Function Icarus.KillQuestsLibrary.GetKillQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163fd90
	bool EqualEqual_FKillQuestsRowHandleFKillQuestsRowHandle(struct FKillQuestsRowHandle RowHandleA, struct FKillQuestsRowHandle RowHandleB); // Function Icarus.KillQuestsLibrary.EqualEqual_FKillQuestsRowHandleFKillQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163f820
	bool EqualEqual_EnumEnum(struct FKillQuestsEnum A, struct FKillQuestsEnum B); // Function Icarus.KillQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163f500
	struct FKillQuestsRowHandle CastToKillQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.KillQuestsLibrary.CastToKillQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163f1d0
	void BreakKillQuestsEnum(struct FKillQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.KillQuestsLibrary.BreakKillQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x163edf0
	void AddRowToKillQuestsTable(struct FName Name, struct FKillQuest Data, struct FKillQuestsRowHandle NewRow); // Function Icarus.KillQuestsLibrary.AddRowToKillQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163e8c0
};

// Class Icarus.KillQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UKillQuestsTable : UIcarusDataTable {
};

// Class Icarus.LadderComponent
// Size: 0xb0 (Inherited: 0xb0)
struct ULadderComponent : UActorComponent {

	struct ULadderComponent* GetOutermostLadder(); // Function Icarus.LadderComponent.GetOutermostLadder // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1640180
	struct FTransform GetLadderStart(); // Function Icarus.LadderComponent.GetLadderStart // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x163ff90
	struct FTransform GetLadderEnd(); // Function Icarus.LadderComponent.GetLadderEnd // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x163ff20
};

// Class Icarus.WaterBody
// Size: 0x2d0 (Inherited: 0x2a0)
struct AWaterBody : AIcarusActor {
	struct FWaterSetupRowHandle WaterSetup; // 0x2a0(0x18)
	int32_t MaxFish; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct TArray<struct UFloatableComponent*> OverlappedFloatables; // 0x2c0(0x10)

	void AddFloatableOverlap(struct UFloatableComponent* Component); // Function Icarus.WaterBody.AddFloatableOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x1702730
};

// Class Icarus.Lake
// Size: 0x2f8 (Inherited: 0x2d0)
struct ALake : AWaterBody {
	struct FVector LakeScale; // 0x2d0(0x0c)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct TArray<struct FWaterPoint> WaterPoints; // 0x2e0(0x10)
	struct UFishManager* FishManager; // 0x2f0(0x08)
};

// Class Icarus.LakeSplineComponent
// Size: 0x550 (Inherited: 0x540)
struct ULakeSplineComponent : USplineComponent {
	enum class ESplineLoopDirection SplineDirection; // 0x538(0x01)
	struct FVector AverageLocation; // 0x53c(0x0c)
	float MaxDistSquaredFromAverage; // 0x548(0x04)

	void GenerateSpline(struct TArray<struct FVector> EdgePoints, float PointDensity); // Function Icarus.LakeSplineComponent.GenerateSpline // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x163faa0
};

// Class Icarus.LanguagesLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULanguagesLibrary : URowLibrary {

	struct FLanguagesRowHandle StructToRowHandle(struct FLanguagesEnum EnumValue); // Function Icarus.LanguagesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16421f0
	struct FName StructToName(struct FLanguagesEnum EnumValue); // Function Icarus.LanguagesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641ff0
	int32_t StructToInt(struct FLanguagesEnum EnumValue); // Function Icarus.LanguagesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641e10
	struct FLanguagesEnum RowHandleToStruct(struct FLanguagesRowHandle RowHandle); // Function Icarus.LanguagesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641c10
	void RemoveRowFromLanguagesTable(struct FName Name); // Function Icarus.LanguagesLibrary.RemoveRowFromLanguagesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1641a10
	void RefreshConstants(); // Function Icarus.LanguagesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16418f0
	int32_t NumRows(); // Function Icarus.LanguagesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641880
	bool NotEqual_EnumName(struct FLanguagesEnum A, struct FName B); // Function Icarus.LanguagesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641730
	bool NotEqual_EnumEnum(struct FLanguagesEnum A, struct FLanguagesEnum B); // Function Icarus.LanguagesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1641460
	struct FLanguagesEnum NameToStruct(struct FName NameValue); // Function Icarus.LanguagesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16411f0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.LanguagesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1641040
	struct FLanguagesRowHandle MakeLiteralLanguages(struct FLanguagesRowHandle RowHandle); // Function Icarus.LanguagesLibrary.MakeLiteralLanguages // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640e50
	struct FLanguagesRowHandle MakeLanguagesFromIndex(int32_t Index); // Function Icarus.LanguagesLibrary.MakeLanguagesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640c20
	struct FLanguagesEnum MakeLanguagesEnum(struct FLanguagesEnum Enum); // Function Icarus.LanguagesLibrary.MakeLanguagesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640ba0
	struct FLanguagesRowHandle MakeLanguages(struct FName RowName); // Function Icarus.LanguagesLibrary.MakeLanguages // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640b00
	bool IsValidName(struct FName NameValue); // Function Icarus.LanguagesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1640630
	struct FLanguagesEnum IntToStruct(int32_t IntValue); // Function Icarus.LanguagesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1640480
	struct FName IntToName(int32_t IntValue); // Function Icarus.LanguagesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16402d0
	void GetLanguagesStruct(struct FLanguagesRowHandle RowHandle, struct FLanguagesData Languages, enum class EValid Paths); // Function Icarus.LanguagesLibrary.GetLanguagesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1640000
	bool EqualEqual_FLanguagesRowHandleFLanguagesRowHandle(struct FLanguagesRowHandle RowHandleA, struct FLanguagesRowHandle RowHandleB); // Function Icarus.LanguagesLibrary.EqualEqual_FLanguagesRowHandleFLanguagesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163f960
	bool EqualEqual_EnumEnum(struct FLanguagesEnum A, struct FLanguagesEnum B); // Function Icarus.LanguagesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x163f5f0
	struct FLanguagesRowHandle CastToLanguagesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.LanguagesLibrary.CastToLanguagesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163f2f0
	void BreakLanguagesEnum(struct FLanguagesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.LanguagesLibrary.BreakLanguagesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x163ef50
	void AddRowToLanguagesTable(struct FName Name, struct FLanguagesData Data, struct FLanguagesRowHandle NewRow); // Function Icarus.LanguagesLibrary.AddRowToLanguagesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x163eac0
};

// Class Icarus.LanguagesTable
// Size: 0xb8 (Inherited: 0xb8)
struct ULanguagesTable : UIcarusDataTable {
};

// Class Icarus.LevelSequencesLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULevelSequencesLibrary : URowLibrary {

	struct FLevelSequencesRowHandle StructToRowHandle(struct FLevelSequencesEnum EnumValue); // Function Icarus.LevelSequencesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16476b0
	struct FName StructToName(struct FLevelSequencesEnum EnumValue); // Function Icarus.LevelSequencesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1647570
	int32_t StructToInt(struct FLevelSequencesEnum EnumValue); // Function Icarus.LevelSequencesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1647430
	struct FLevelSequencesEnum RowHandleToStruct(struct FLevelSequencesRowHandle RowHandle); // Function Icarus.LevelSequencesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1647220
	void RemoveRowFromLevelSequencesTable(struct FName Name); // Function Icarus.LevelSequencesLibrary.RemoveRowFromLevelSequencesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1647120
	void RefreshConstants(); // Function Icarus.LevelSequencesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16470c0
	int32_t NumRows(); // Function Icarus.LevelSequencesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646c80
	bool NotEqual_EnumName(struct FLevelSequencesEnum A, struct FName B); // Function Icarus.LevelSequencesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646aa0
	bool NotEqual_EnumEnum(struct FLevelSequencesEnum A, struct FLevelSequencesEnum B); // Function Icarus.LevelSequencesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16468c0
	struct FLevelSequencesEnum NameToStruct(struct FName NameValue); // Function Icarus.LevelSequencesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16467a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.LevelSequencesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1646680
	struct FLevelSequencesRowHandle MakeLiteralLevelSequences(struct FLevelSequencesRowHandle RowHandle); // Function Icarus.LevelSequencesLibrary.MakeLiteralLevelSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646330
	struct FLevelSequencesRowHandle MakeLevelSequencesFromIndex(int32_t Index); // Function Icarus.LevelSequencesLibrary.MakeLevelSequencesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16462a0
	struct FLevelSequencesEnum MakeLevelSequencesEnum(struct FLevelSequencesEnum Enum); // Function Icarus.LevelSequencesLibrary.MakeLevelSequencesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646220
	struct FLevelSequencesRowHandle MakeLevelSequences(struct FName RowName); // Function Icarus.LevelSequencesLibrary.MakeLevelSequences // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646180
	bool IsValidName(struct FName NameValue); // Function Icarus.LevelSequencesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1646060
	struct FLevelSequencesEnum IntToStruct(int32_t IntValue); // Function Icarus.LevelSequencesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1645f40
	struct FName IntToName(int32_t IntValue); // Function Icarus.LevelSequencesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1645e20
	void GetLevelSequencesStruct(struct FLevelSequencesRowHandle RowHandle, struct FLevelSequencesData LevelSequences, enum class EValid Paths); // Function Icarus.LevelSequencesLibrary.GetLevelSequencesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1645870
	bool EqualEqual_FLevelSequencesRowHandleFLevelSequencesRowHandle(struct FLevelSequencesRowHandle RowHandleA, struct FLevelSequencesRowHandle RowHandleB); // Function Icarus.LevelSequencesLibrary.EqualEqual_FLevelSequencesRowHandleFLevelSequencesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16455b0
	bool EqualEqual_EnumEnum(struct FLevelSequencesEnum A, struct FLevelSequencesEnum B); // Function Icarus.LevelSequencesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16453d0
	struct FLevelSequencesRowHandle CastToLevelSequencesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.LevelSequencesLibrary.CastToLevelSequencesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1645190
	void BreakLevelSequencesEnum(struct FLevelSequencesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.LevelSequencesLibrary.BreakLevelSequencesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1644ed0
	void AddRowToLevelSequencesTable(struct FName Name, struct FLevelSequencesData Data, struct FLevelSequencesRowHandle NewRow); // Function Icarus.LevelSequencesLibrary.AddRowToLevelSequencesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16449a0
};

// Class Icarus.LevelSequencesTable
// Size: 0xb8 (Inherited: 0xb8)
struct ULevelSequencesTable : UIcarusDataTable {
};

// Class Icarus.LoadingScreenSettings
// Size: 0xe0 (Inherited: 0x38)
struct ULoadingScreenSettings : UDeveloperSettings {
	struct TSoftClassPtr<UObject> DefaultLoadingScreenWidget; // 0x38(0x28)
	struct TSoftClassPtr<UObject> InbetweenLoadingScreenWidget; // 0x60(0x28)
	struct TMap<struct FString, struct TSoftClassPtr<UObject>> PerLevelLoadingScreens; // 0x88(0x50)
	float MinimumLoadingScreenDisplayTime; // 0xd8(0x04)
	float PostLoadFadeInDuration; // 0xdc(0x04)
};

// Class Icarus.LoadingScreenInterface
// Size: 0x28 (Inherited: 0x28)
struct ULoadingScreenInterface : UInterface {

	void InitLoadingScreen(struct FString LevelName); // Function Icarus.LoadingScreenInterface.InitLoadingScreen // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.MapIconsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMapIconsLibrary : URowLibrary {

	struct FMapIconsRowHandle StructToRowHandle(struct FMapIconsEnum EnumValue); // Function Icarus.MapIconsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1647760
	struct FName StructToName(struct FMapIconsEnum EnumValue); // Function Icarus.MapIconsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1647610
	int32_t StructToInt(struct FMapIconsEnum EnumValue); // Function Icarus.MapIconsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16474d0
	struct FMapIconsEnum RowHandleToStruct(struct FMapIconsRowHandle RowHandle); // Function Icarus.MapIconsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16472e0
	void RemoveRowFromMapIconsTable(struct FName Name); // Function Icarus.MapIconsLibrary.RemoveRowFromMapIconsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16471a0
	void RefreshConstants(); // Function Icarus.MapIconsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16470e0
	int32_t NumRows(); // Function Icarus.MapIconsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646cb0
	bool NotEqual_EnumName(struct FMapIconsEnum A, struct FName B); // Function Icarus.MapIconsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646b90
	bool NotEqual_EnumEnum(struct FMapIconsEnum A, struct FMapIconsEnum B); // Function Icarus.MapIconsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16469b0
	struct FMapIconsEnum NameToStruct(struct FName NameValue); // Function Icarus.MapIconsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646830
	int32_t NameToInt(struct FName NameValue); // Function Icarus.MapIconsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1646710
	struct FMapIconsRowHandle MakeMapIconsFromIndex(int32_t Index); // Function Icarus.MapIconsLibrary.MakeMapIconsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16465f0
	struct FMapIconsEnum MakeMapIconsEnum(struct FMapIconsEnum Enum); // Function Icarus.MapIconsLibrary.MakeMapIconsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646570
	struct FMapIconsRowHandle MakeMapIcons(struct FName RowName); // Function Icarus.MapIconsLibrary.MakeMapIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16464d0
	struct FMapIconsRowHandle MakeLiteralMapIcons(struct FMapIconsRowHandle RowHandle); // Function Icarus.MapIconsLibrary.MakeLiteralMapIcons // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1646400
	bool IsValidName(struct FName NameValue); // Function Icarus.MapIconsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16460f0
	struct FMapIconsEnum IntToStruct(int32_t IntValue); // Function Icarus.MapIconsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1645fd0
	struct FName IntToName(int32_t IntValue); // Function Icarus.MapIconsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1645eb0
	void GetMapIconsStruct(struct FMapIconsRowHandle RowHandle, struct FMapIconsData MapIcons, enum class EValid Paths); // Function Icarus.MapIconsLibrary.GetMapIconsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1645a50
	bool EqualEqual_FMapIconsRowHandleFMapIconsRowHandle(struct FMapIconsRowHandle RowHandleA, struct FMapIconsRowHandle RowHandleB); // Function Icarus.MapIconsLibrary.EqualEqual_FMapIconsRowHandleFMapIconsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16456f0
	bool EqualEqual_EnumEnum(struct FMapIconsEnum A, struct FMapIconsEnum B); // Function Icarus.MapIconsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16454c0
	struct FMapIconsRowHandle CastToMapIconsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.MapIconsLibrary.CastToMapIconsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16452b0
	void BreakMapIconsEnum(struct FMapIconsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.MapIconsLibrary.BreakMapIconsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1645030
	void AddRowToMapIconsTable(struct FName Name, struct FMapIconsData Data, struct FMapIconsRowHandle NewRow); // Function Icarus.MapIconsLibrary.AddRowToMapIconsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1644c20
};

// Class Icarus.MapIconsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMapIconsTable : UIcarusDataTable {
};

// Class Icarus.MatchMakingCallbackProxy
// Size: 0x70 (Inherited: 0x30)
struct UMatchMakingCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFail; // 0x40(0x10)
	char pad_50[0x20]; // 0x50(0x20)

	struct UMatchMakingCallbackProxy* StartMatchMaking(struct FName MatchCode); // Function Icarus.MatchMakingCallbackProxy.StartMatchMaking // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16473a0
};

// Class Icarus.MatchmakingSubsystem
// Size: 0xd0 (Inherited: 0x30)
struct UMatchmakingSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnAvailableSessionsUpdated; // 0x30(0x10)
	bool bBlockFindSessions; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<struct FIcarusSession> BackendSessions; // 0x48(0x10)
	struct TArray<struct FIcarusSession> MultiplayerSessions; // 0x58(0x10)
	struct TArray<struct FIcarusSession> FilteredSessions; // 0x68(0x10)
	struct TArray<struct FIcarusSession> FilteredTutorialSessions; // 0x78(0x10)
	struct TArray<struct FIcarusSession> AvailableSessions; // 0x88(0x10)
	struct TArray<struct FBPFriendInfo> FriendsList; // 0x98(0x10)
	struct AIcarusPlayerController* PlayerController; // 0xa8(0x08)
	struct AIcarusPlayerState* PlayerState; // 0xb0(0x08)
	bool bRequiresFiltering; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct UFindSessionsCallbackProxyAdvanced* FindSessionsCallbackProxy; // 0xc0(0x08)
	struct UGetFriendsCallbackProxy* GetFriendsCallbackProxy; // 0xc8(0x08)

	void RefreshSessions(); // Function Icarus.MatchmakingSubsystem.RefreshSessions // (Final|Native|Public|BlueprintCallable) // @ game+0x1647100
	void OnGetFriendsListSuccess(struct TArray<struct FBPFriendInfo> Results); // Function Icarus.MatchmakingSubsystem.OnGetFriendsListSuccess // (Final|Native|Private|HasOutParms) // @ game+0x1646fa0
	void OnGetFriendsListFailure(struct TArray<struct FBPFriendInfo> Results); // Function Icarus.MatchmakingSubsystem.OnGetFriendsListFailure // (Final|Native|Private|HasOutParms) // @ game+0x1646e80
	void OnFindSessionsSuccess(struct TArray<struct FBlueprintSessionResult> Result); // Function Icarus.MatchmakingSubsystem.OnFindSessionsSuccess // (Final|Native|Private|HasOutParms) // @ game+0x1646db0
	void OnFindSessionsFailure(struct TArray<struct FBlueprintSessionResult> Result); // Function Icarus.MatchmakingSubsystem.OnFindSessionsFailure // (Final|Native|Private|HasOutParms) // @ game+0x1646ce0
	struct TArray<struct FIcarusSession> GetTutorialSessions(); // Function Icarus.MatchmakingSubsystem.GetTutorialSessions // (Final|Native|Public|BlueprintCallable) // @ game+0x1645de0
	struct TArray<struct FSessionsSearchSetting> GetSessionSearchFilters(); // Function Icarus.MatchmakingSubsystem.GetSessionSearchFilters // (Final|Native|Static|Private) // @ game+0x1645d00
	struct TArray<struct FIcarusSession> GetAvailableSessions(); // Function Icarus.MatchmakingSubsystem.GetAvailableSessions // (Final|Native|Public|BlueprintCallable) // @ game+0x1645830
	void BackendProspectListUpdated(); // Function Icarus.MatchmakingSubsystem.BackendProspectListUpdated // (Final|Native|Private) // @ game+0x1644eb0
};

// Class Icarus.MeshableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UMeshableComponent : UTraitComponent {

	bool GetMeshableData(struct FMeshableData OutData); // Function Icarus.MeshableComponent.GetMeshableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1645be0
};

// Class Icarus.MeshableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMeshableLibrary : URowLibrary {

	struct FMeshableRowHandle StructToRowHandle(struct FMeshableEnum EnumValue); // Function Icarus.MeshableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164cf70
	struct FName StructToName(struct FMeshableEnum EnumValue); // Function Icarus.MeshableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164cd90
	int32_t StructToInt(struct FMeshableEnum EnumValue); // Function Icarus.MeshableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164cbb0
	struct FMeshableEnum RowHandleToStruct(struct FMeshableRowHandle RowHandle); // Function Icarus.MeshableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c970
	void RemoveRowFromMeshableTable(struct FName Name); // Function Icarus.MeshableLibrary.RemoveRowFromMeshableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x164c7f0
	void RefreshConstants(); // Function Icarus.MeshableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x164c790
	int32_t NumRows(); // Function Icarus.MeshableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c700
	bool NotEqual_EnumName(struct FMeshableEnum A, struct FName B); // Function Icarus.MeshableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c430
	bool NotEqual_EnumEnum(struct FMeshableEnum A, struct FMeshableEnum B); // Function Icarus.MeshableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c160
	struct FMeshableEnum NameToStruct(struct FName NameValue); // Function Icarus.MeshableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164bfb0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.MeshableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x164be00
	struct FMeshableRowHandle MakeMeshableFromIndex(int32_t Index); // Function Icarus.MeshableLibrary.MakeMeshableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164ba10
	struct FMeshableEnum MakeMeshableEnum(struct FMeshableEnum Enum); // Function Icarus.MeshableLibrary.MakeMeshableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b990
	struct FMeshableRowHandle MakeMeshable(struct FName RowName); // Function Icarus.MeshableLibrary.MakeMeshable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b8f0
	struct FMeshableRowHandle MakeLiteralMeshable(struct FMeshableRowHandle RowHandle); // Function Icarus.MeshableLibrary.MakeLiteralMeshable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b680
	bool IsValidName(struct FName NameValue); // Function Icarus.MeshableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x164b4d0
	struct FMeshableEnum IntToStruct(int32_t IntValue); // Function Icarus.MeshableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b320
	struct FName IntToName(int32_t IntValue); // Function Icarus.MeshableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x164b170
	void GetMeshableStruct(struct FMeshableRowHandle RowHandle, struct FMeshableData Meshable, enum class EValid Paths); // Function Icarus.MeshableLibrary.GetMeshableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164ac80
	bool EqualEqual_FMeshableRowHandleFMeshableRowHandle(struct FMeshableRowHandle RowHandleA, struct FMeshableRowHandle RowHandleB); // Function Icarus.MeshableLibrary.EqualEqual_FMeshableRowHandleFMeshableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a8c0
	bool EqualEqual_EnumEnum(struct FMeshableEnum A, struct FMeshableEnum B); // Function Icarus.MeshableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a5f0
	struct FMeshableRowHandle CastToMeshableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.MeshableLibrary.CastToMeshableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164a290
	void BreakMeshableEnum(struct FMeshableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.MeshableLibrary.BreakMeshableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1649e70
	void AddRowToMeshableTable(struct FName Name, struct FMeshableData Data, struct FMeshableRowHandle NewRow); // Function Icarus.MeshableLibrary.AddRowToMeshableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1649790
};

// Class Icarus.MeshableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMeshableTable : UIcarusDataTable {
};

// Class Icarus.MetaCurrencyLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMetaCurrencyLibrary : URowLibrary {

	struct FMetaCurrencyRowHandle StructToRowHandle(struct FMetaCurrencyEnum EnumValue); // Function Icarus.MetaCurrencyLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164d020
	struct FName StructToName(struct FMetaCurrencyEnum EnumValue); // Function Icarus.MetaCurrencyLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164ce30
	int32_t StructToInt(struct FMetaCurrencyEnum EnumValue); // Function Icarus.MetaCurrencyLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164cc50
	struct FMetaCurrencyEnum RowHandleToStruct(struct FMetaCurrencyRowHandle RowHandle); // Function Icarus.MetaCurrencyLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164ca30
	void RemoveRowFromMetaCurrencyTable(struct FName Name); // Function Icarus.MetaCurrencyLibrary.RemoveRowFromMetaCurrencyTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x164c870
	void RefreshConstants(); // Function Icarus.MetaCurrencyLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x164c7b0
	int32_t NumRows(); // Function Icarus.MetaCurrencyLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c730
	bool NotEqual_EnumName(struct FMetaCurrencyEnum A, struct FName B); // Function Icarus.MetaCurrencyLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c520
	bool NotEqual_EnumEnum(struct FMetaCurrencyEnum A, struct FMetaCurrencyEnum B); // Function Icarus.MetaCurrencyLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c250
	struct FMetaCurrencyEnum NameToStruct(struct FName NameValue); // Function Icarus.MetaCurrencyLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c040
	int32_t NameToInt(struct FName NameValue); // Function Icarus.MetaCurrencyLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x164be90
	struct FMetaCurrencyRowHandle MakeMetaCurrencyFromIndex(int32_t Index); // Function Icarus.MetaCurrencyLibrary.MakeMetaCurrencyFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164bbc0
	struct FMetaCurrencyEnum MakeMetaCurrencyEnum(struct FMetaCurrencyEnum Enum); // Function Icarus.MetaCurrencyLibrary.MakeMetaCurrencyEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164bb40
	struct FMetaCurrencyRowHandle MakeMetaCurrency(struct FName RowName); // Function Icarus.MetaCurrencyLibrary.MakeMetaCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164baa0
	struct FMetaCurrencyRowHandle MakeLiteralMetaCurrency(struct FMetaCurrencyRowHandle RowHandle); // Function Icarus.MetaCurrencyLibrary.MakeLiteralMetaCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b750
	bool IsValidName(struct FName NameValue); // Function Icarus.MetaCurrencyLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x164b560
	struct FMetaCurrencyEnum IntToStruct(int32_t IntValue); // Function Icarus.MetaCurrencyLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b3b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.MetaCurrencyLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x164b200
	void GetMetaCurrencyStruct(struct FMetaCurrencyRowHandle RowHandle, struct FMetaCurrency MetaCurrency, enum class EValid Paths); // Function Icarus.MetaCurrencyLibrary.GetMetaCurrencyStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164ae50
	bool EqualEqual_FMetaCurrencyRowHandleFMetaCurrencyRowHandle(struct FMetaCurrencyRowHandle RowHandleA, struct FMetaCurrencyRowHandle RowHandleB); // Function Icarus.MetaCurrencyLibrary.EqualEqual_FMetaCurrencyRowHandleFMetaCurrencyRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164aa00
	bool EqualEqual_EnumEnum(struct FMetaCurrencyEnum A, struct FMetaCurrencyEnum B); // Function Icarus.MetaCurrencyLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a6e0
	struct FMetaCurrencyRowHandle CastToMetaCurrencyRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.MetaCurrencyLibrary.CastToMetaCurrencyRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164a3b0
	void BreakMetaCurrencyEnum(struct FMetaCurrencyEnum Enum, struct FName Name, int32_t Index); // Function Icarus.MetaCurrencyLibrary.BreakMetaCurrencyEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1649fd0
	void AddRowToMetaCurrencyTable(struct FName Name, struct FMetaCurrency Data, struct FMetaCurrencyRowHandle NewRow); // Function Icarus.MetaCurrencyLibrary.AddRowToMetaCurrencyTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1649a20
};

// Class Icarus.MetaCurrencyTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMetaCurrencyTable : UIcarusDataTable {
};

// Class Icarus.MetaResourceNodesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMetaResourceNodesLibrary : URowLibrary {

	struct FMetaResourceNodesRowHandle StructToRowHandle(struct FMetaResourceNodesEnum EnumValue); // Function Icarus.MetaResourceNodesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164d0d0
	struct FName StructToName(struct FMetaResourceNodesEnum EnumValue); // Function Icarus.MetaResourceNodesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164ced0
	int32_t StructToInt(struct FMetaResourceNodesEnum EnumValue); // Function Icarus.MetaResourceNodesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164ccf0
	struct FMetaResourceNodesEnum RowHandleToStruct(struct FMetaResourceNodesRowHandle RowHandle); // Function Icarus.MetaResourceNodesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164caf0
	void RemoveRowFromMetaResourceNodesTable(struct FName Name); // Function Icarus.MetaResourceNodesLibrary.RemoveRowFromMetaResourceNodesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x164c8f0
	void RefreshConstants(); // Function Icarus.MetaResourceNodesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x164c7d0
	int32_t NumRows(); // Function Icarus.MetaResourceNodesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c760
	bool NotEqual_EnumName(struct FMetaResourceNodesEnum A, struct FName B); // Function Icarus.MetaResourceNodesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c610
	bool NotEqual_EnumEnum(struct FMetaResourceNodesEnum A, struct FMetaResourceNodesEnum B); // Function Icarus.MetaResourceNodesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c340
	struct FMetaResourceNodesEnum NameToStruct(struct FName NameValue); // Function Icarus.MetaResourceNodesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164c0d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.MetaResourceNodesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x164bf20
	struct FMetaResourceNodesRowHandle MakeMetaResourceNodesFromIndex(int32_t Index); // Function Icarus.MetaResourceNodesLibrary.MakeMetaResourceNodesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164bd70
	struct FMetaResourceNodesEnum MakeMetaResourceNodesEnum(struct FMetaResourceNodesEnum Enum); // Function Icarus.MetaResourceNodesLibrary.MakeMetaResourceNodesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164bcf0
	struct FMetaResourceNodesRowHandle MakeMetaResourceNodes(struct FName RowName); // Function Icarus.MetaResourceNodesLibrary.MakeMetaResourceNodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164bc50
	struct FMetaResourceNodesRowHandle MakeLiteralMetaResourceNodes(struct FMetaResourceNodesRowHandle RowHandle); // Function Icarus.MetaResourceNodesLibrary.MakeLiteralMetaResourceNodes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b820
	bool IsValidName(struct FName NameValue); // Function Icarus.MetaResourceNodesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x164b5f0
	struct FMetaResourceNodesEnum IntToStruct(int32_t IntValue); // Function Icarus.MetaResourceNodesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164b440
	struct FName IntToName(int32_t IntValue); // Function Icarus.MetaResourceNodesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x164b290
	void GetMetaResourceNodesStruct(struct FMetaResourceNodesRowHandle RowHandle, struct FMetaResourceNodeInfo MetaResourceNodes, enum class EValid Paths); // Function Icarus.MetaResourceNodesLibrary.GetMetaResourceNodesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164afd0
	bool EqualEqual_FMetaResourceNodesRowHandleFMetaResourceNodesRowHandle(struct FMetaResourceNodesRowHandle RowHandleA, struct FMetaResourceNodesRowHandle RowHandleB); // Function Icarus.MetaResourceNodesLibrary.EqualEqual_FMetaResourceNodesRowHandleFMetaResourceNodesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164ab40
	bool EqualEqual_EnumEnum(struct FMetaResourceNodesEnum A, struct FMetaResourceNodesEnum B); // Function Icarus.MetaResourceNodesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x164a7d0
	struct FMetaResourceNodesRowHandle CastToMetaResourceNodesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.MetaResourceNodesLibrary.CastToMetaResourceNodesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x164a4d0
	void BreakMetaResourceNodesEnum(struct FMetaResourceNodesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.MetaResourceNodesLibrary.BreakMetaResourceNodesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x164a130
	void AddRowToMetaResourceNodesTable(struct FName Name, struct FMetaResourceNodeInfo Data, struct FMetaResourceNodesRowHandle NewRow); // Function Icarus.MetaResourceNodesLibrary.AddRowToMetaResourceNodesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1649c80
};

// Class Icarus.MetaResourceNodesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMetaResourceNodesTable : UIcarusDataTable {
};

// Class Icarus.MetaWorkshopItemsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMetaWorkshopItemsLibrary : URowLibrary {

	struct FMetaWorkshopItemsRowHandle StructToRowHandle(struct FMetaWorkshopItemsEnum EnumValue); // Function Icarus.MetaWorkshopItemsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651c00
	struct FName StructToName(struct FMetaWorkshopItemsEnum EnumValue); // Function Icarus.MetaWorkshopItemsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651b60
	int32_t StructToInt(struct FMetaWorkshopItemsEnum EnumValue); // Function Icarus.MetaWorkshopItemsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651ac0
	struct FMetaWorkshopItemsEnum RowHandleToStruct(struct FMetaWorkshopItemsRowHandle RowHandle); // Function Icarus.MetaWorkshopItemsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651720
	void RemoveRowFromMetaWorkshopItemsTable(struct FName Name); // Function Icarus.MetaWorkshopItemsLibrary.RemoveRowFromMetaWorkshopItemsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16516a0
	void RefreshConstants(); // Function Icarus.MetaWorkshopItemsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1651660
	int32_t NumRows(); // Function Icarus.MetaWorkshopItemsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651380
	bool NotEqual_EnumName(struct FMetaWorkshopItemsEnum A, struct FName B); // Function Icarus.MetaWorkshopItemsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651290
	bool NotEqual_EnumEnum(struct FMetaWorkshopItemsEnum A, struct FMetaWorkshopItemsEnum B); // Function Icarus.MetaWorkshopItemsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16511a0
	struct FMetaWorkshopItemsEnum NameToStruct(struct FName NameValue); // Function Icarus.MetaWorkshopItemsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1651110
	int32_t NameToInt(struct FName NameValue); // Function Icarus.MetaWorkshopItemsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1651080
	struct FMetaWorkshopItemsRowHandle MakeMetaWorkshopItemsFromIndex(int32_t Index); // Function Icarus.MetaWorkshopItemsLibrary.MakeMetaWorkshopItemsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650ff0
	struct FMetaWorkshopItemsEnum MakeMetaWorkshopItemsEnum(struct FMetaWorkshopItemsEnum Enum); // Function Icarus.MetaWorkshopItemsLibrary.MakeMetaWorkshopItemsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650f70
	struct FMetaWorkshopItemsRowHandle MakeMetaWorkshopItems(struct FName RowName); // Function Icarus.MetaWorkshopItemsLibrary.MakeMetaWorkshopItems // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650ed0
	struct FMetaWorkshopItemsRowHandle MakeLiteralMetaWorkshopItems(struct FMetaWorkshopItemsRowHandle RowHandle); // Function Icarus.MetaWorkshopItemsLibrary.MakeLiteralMetaWorkshopItems // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650e00
	bool IsValidName(struct FName NameValue); // Function Icarus.MetaWorkshopItemsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1650d70
	struct FMetaWorkshopItemsEnum IntToStruct(int32_t IntValue); // Function Icarus.MetaWorkshopItemsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650cb0
	struct FName IntToName(int32_t IntValue); // Function Icarus.MetaWorkshopItemsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1650c20
	void GetMetaWorkshopItemsStruct(struct FMetaWorkshopItemsRowHandle RowHandle, struct FMetaWorkshopItem MetaWorkshopItems, enum class EValid Paths); // Function Icarus.MetaWorkshopItemsLibrary.GetMetaWorkshopItemsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16508f0
	bool EqualEqual_FMetaWorkshopItemsRowHandleFMetaWorkshopItemsRowHandle(struct FMetaWorkshopItemsRowHandle RowHandleA, struct FMetaWorkshopItemsRowHandle RowHandleB); // Function Icarus.MetaWorkshopItemsLibrary.EqualEqual_FMetaWorkshopItemsRowHandleFMetaWorkshopItemsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650780
	bool EqualEqual_EnumEnum(struct FMetaWorkshopItemsEnum A, struct FMetaWorkshopItemsEnum B); // Function Icarus.MetaWorkshopItemsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1650690
	struct FMetaWorkshopItemsRowHandle CastToMetaWorkshopItemsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.MetaWorkshopItemsLibrary.CastToMetaWorkshopItemsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650540
	void BreakMetaWorkshopItemsEnum(struct FMetaWorkshopItemsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.MetaWorkshopItemsLibrary.BreakMetaWorkshopItemsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16503e0
	void AddRowToMetaWorkshopItemsTable(struct FName Name, struct FMetaWorkshopItem Data, struct FMetaWorkshopItemsRowHandle NewRow); // Function Icarus.MetaWorkshopItemsLibrary.AddRowToMetaWorkshopItemsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1650200
};

// Class Icarus.MetaWorkshopItemsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMetaWorkshopItemsTable : UIcarusDataTable {
};

// Class Icarus.MineableResource
// Size: 0x2d8 (Inherited: 0x2a0)
struct AMineableResource : AIcarusActor {
	struct TArray<struct UDestructibleComponent*> DestructibleComponents; // 0x2a0(0x10)
	struct FItemTemplateRowHandle DestructionItemDropType; // 0x2b0(0x18)
	struct UStaticMesh* DestructionItemMesh; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)

	void OnClient_DestructibleComponentDestroyed(int32_t ComponentIndex); // Function Icarus.MineableResource.OnClient_DestructibleComponentDestroyed // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x16513b0
};

// Class Icarus.MiningSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UMiningSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnVoxelHitNotify; // 0x30(0x10)

	void BroadcastVoxelHitDelegate(struct AIcarusPlayerCharacter* Player, struct AVoxelResource* Voxel); // Function Icarus.MiningSubsystem.BroadcastVoxelHitDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1512e50
};

// Class Icarus.MissionManager
// Size: 0x2d0 (Inherited: 0x220)
struct AMissionManager : AInfo {
	bool bIsPlayerSpecificMission; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x228(0x18)
	struct FMulticastSparseDelegate OnQuestSpawned; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct TArray<struct AActor*> MarkerArray; // 0x248(0x10)
	struct AQuestBase* ActiveQuest; // 0x258(0x08)
	struct FFactionMissionsRowHandle FactionMissionRow; // 0x260(0x18)
	int32_t CurrentQuestIndex; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct TSet<struct FSessionFlagsRowHandle> RestrictiveFlagArray; // 0x280(0x50)

	void SetFactionMissionRow(struct FFactionMissionsRowHandle InFactionMissionRow); // Function Icarus.MissionManager.SetFactionMissionRow // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1651990
	void SetCurrentQuestIndex(int32_t InIndex); // Function Icarus.MissionManager.SetCurrentQuestIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1651900
	void SetActiveQuest(struct AQuestBase* InQuest); // Function Icarus.MissionManager.SetActiveQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x16517e0
	void OnRestoreFromDatabase(struct FName FactionMissionRowName); // Function Icarus.MissionManager.OnRestoreFromDatabase // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void OnRep_FactionMissionRow(); // Function Icarus.MissionManager.OnRep_FactionMissionRow // (Final|Native|Protected) // @ game+0x1651620
	void OnRep_CurrentQuestIndex(); // Function Icarus.MissionManager.OnRep_CurrentQuestIndex // (Final|Native|Protected) // @ game+0x16515e0
	void OnRep_ActiveQuest(); // Function Icarus.MissionManager.OnRep_ActiveQuest // (Final|Native|Protected) // @ game+0x16515e0
	void OnQuestStateUpdated(struct AQuestBase* Quest, enum class EQuestFinishState State); // Function Icarus.MissionManager.OnQuestStateUpdated // (Final|Native|Public) // @ game+0x1651510
	bool IsMissionComplete(); // Function Icarus.MissionManager.IsMissionComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x1650d40
	bool HasSessionFlag(struct FSessionFlagsRowHandle Flag); // Function Icarus.MissionManager.HasSessionFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1650b70
	struct TArray<struct AIcarusPlayerCharacter*> GetRelevantPlayers(); // Function Icarus.MissionManager.GetRelevantPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x1650af0
	void BP_OnRep_FactionMissionRow(); // Function Icarus.MissionManager.BP_OnRep_FactionMissionRow // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.MissionManagerRecorderComponent
// Size: 0x118 (Inherited: 0xd8)
struct UMissionManagerRecorderComponent : UIcarusStateRecorderComponent {
	struct TArray<struct FName> QuestMarkerNames; // 0xd8(0x10)
	struct FQuestRecord QuestRecord; // 0xe8(0x20)
	struct FName FactionMissionRowName; // 0x108(0x08)
	int32_t QuestIndex; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
};

// Class Icarus.PlayerMissionManagerRecorderComponent
// Size: 0x130 (Inherited: 0x118)
struct UPlayerMissionManagerRecorderComponent : UMissionManagerRecorderComponent {
	struct FPlayerCharacterID PlayerID; // 0x118(0x18)
};

// Class Icarus.ModifiableInterface
// Size: 0x28 (Inherited: 0x28)
struct UModifiableInterface : UInterface {

	void OnModifiersUpdated(struct UModifierStateComponent* ModifiedComponent, bool Removed); // Function Icarus.ModifiableInterface.OnModifiersUpdated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1651440
	int32_t GetNextUID(); // Function Icarus.ModifiableInterface.GetNextUID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14e7e30
};

// Class Icarus.ModificationBehaviour
// Size: 0x28 (Inherited: 0x28)
struct UModificationBehaviour : UObject {
};

// Class Icarus.ModifierStateComponent
// Size: 0x320 (Inherited: 0xb0)
struct UModifierStateComponent : UActorComponent {
	struct FModifierStatesRowHandle DataRowHandleNew; // 0xb0(0x18)
	struct AController* Instigator; // 0xc8(0x08)
	struct AActor* Causer; // 0xd0(0x08)
	struct AActor* ReplicatedOwner; // 0xd8(0x08)
	struct TScriptInterface<IModifiableInterface> OwningModifiableInterface; // 0xe0(0x10)
	int32_t ModifierUID; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct USceneComponent* CosmeticComponent; // 0xf8(0x08)
	float ModifierLifetime; // 0x100(0x04)
	float RemainingTime; // 0x104(0x04)
	bool ModifierIsActive; // 0x108(0x01)
	struct FMulticastSparseDelegate OnModifierUpdated; // 0x109(0x01)
	char pad_10A[0x6]; // 0x10a(0x06)
	struct FModifierStateData CachedModifierStateData; // 0x110(0x1f8)
	char pad_308[0x18]; // 0x308(0x18)

	void SetModifierLifeTime(float LifeTime); // Function Icarus.ModifierStateComponent.SetModifierLifeTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1651a40
	void SetActiveState(bool IsActive); // Function Icarus.ModifierStateComponent.SetActiveState // (Final|Native|Public) // @ game+0x1651870
	void RefreshLifetime(); // Function Icarus.ModifierStateComponent.RefreshLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x1651680
	void OnRep_ReplicatedOwningActor(); // Function Icarus.ModifierStateComponent.OnRep_ReplicatedOwningActor // (Final|Native|Public) // @ game+0x1651640
	void OnRep_DataRowHandle(); // Function Icarus.ModifierStateComponent.OnRep_DataRowHandle // (Final|Native|Public) // @ game+0x1651600
	void ModifierTick(float DeltaTime); // Function Icarus.ModifierStateComponent.ModifierTick // (Native|Event|Public|BlueprintEvent) // @ game+0x155a310
	bool ModifierRemoved(); // Function Icarus.ModifierStateComponent.ModifierRemoved // (Native|Event|Public|BlueprintEvent) // @ game+0x155b020
	bool ModifierApplied(); // Function Icarus.ModifierStateComponent.ModifierApplied // (Native|Event|Public|BlueprintEvent) // @ game+0x14f41e0
	void InitComponent(); // Function Icarus.ModifierStateComponent.InitComponent // (Native|Event|Public|BlueprintEvent) // @ game+0x15069f0
	struct FModifierStateData GetModifierStateData(); // Function Icarus.ModifierStateComponent.GetModifierStateData // (Final|Native|Public|BlueprintCallable) // @ game+0x1650a80
	float GetCurrentLifetimeMultiplier(); // Function Icarus.ModifierStateComponent.GetCurrentLifetimeMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x16508c0
	bool DoesMatchTagQuery(); // Function Icarus.ModifierStateComponent.DoesMatchTagQuery // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1650660
	bool CheckTickConditions(); // Function Icarus.ModifierStateComponent.CheckTickConditions // (Native|Event|Public|BlueprintEvent) // @ game+0x1504a50
};

// Class Icarus.ModifierStateCondition
// Size: 0x28 (Inherited: 0x28)
struct UModifierStateCondition : UObject {
};

// Class Icarus.ModifierStatesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UModifierStatesLibrary : URowLibrary {

	struct FModifierStatesRowHandle StructToRowHandle(struct FModifierStatesEnum EnumValue); // Function Icarus.ModifierStatesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16572a0
	struct FName StructToName(struct FModifierStatesEnum EnumValue); // Function Icarus.ModifierStatesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657160
	int32_t StructToInt(struct FModifierStatesEnum EnumValue); // Function Icarus.ModifierStatesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657020
	struct FModifierStatesEnum RowHandleToStruct(struct FModifierStatesRowHandle RowHandle); // Function Icarus.ModifierStatesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656740
	void RemoveRowFromModifierStatesTable(struct FName Name); // Function Icarus.ModifierStatesLibrary.RemoveRowFromModifierStatesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1656640
	void RefreshConstants(); // Function Icarus.ModifierStatesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1656570
	int32_t NumRows(); // Function Icarus.ModifierStatesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16564f0
	bool NotEqual_EnumName(struct FModifierStatesEnum A, struct FName B); // Function Icarus.ModifierStatesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656310
	bool NotEqual_EnumEnum(struct FModifierStatesEnum A, struct FModifierStatesEnum B); // Function Icarus.ModifierStatesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656130
	struct FModifierStatesEnum NameToStruct(struct FName NameValue); // Function Icarus.ModifierStatesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656010
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ModifierStatesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1655ef0
	struct FModifierStatesRowHandle MakeModifierStatesFromIndex(int32_t Index); // Function Icarus.ModifierStatesLibrary.MakeModifierStatesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655cb0
	struct FModifierStatesEnum MakeModifierStatesEnum(struct FModifierStatesEnum Enum); // Function Icarus.ModifierStatesLibrary.MakeModifierStatesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655c30
	struct FModifierStatesRowHandle MakeModifierStates(struct FName RowName); // Function Icarus.ModifierStatesLibrary.MakeModifierStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655b90
	struct FModifierStatesRowHandle MakeLiteralModifierStates(struct FModifierStatesRowHandle RowHandle); // Function Icarus.ModifierStatesLibrary.MakeLiteralModifierStates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16559f0
	bool IsValidName(struct FName NameValue); // Function Icarus.ModifierStatesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16558d0
	struct FModifierStatesEnum IntToStruct(int32_t IntValue); // Function Icarus.ModifierStatesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16557b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ModifierStatesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1655690
	void GetModifierStatesStruct(struct FModifierStatesRowHandle RowHandle, struct FModifierStateData ModifierStates, enum class EValid Paths); // Function Icarus.ModifierStatesLibrary.GetModifierStatesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16551a0
	bool EqualEqual_FModifierStatesRowHandleFModifierStatesRowHandle(struct FModifierStatesRowHandle RowHandleA, struct FModifierStatesRowHandle RowHandleB); // Function Icarus.ModifierStatesLibrary.EqualEqual_FModifierStatesRowHandleFModifierStatesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1654ef0
	bool EqualEqual_EnumEnum(struct FModifierStatesEnum A, struct FModifierStatesEnum B); // Function Icarus.ModifierStatesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1654d10
	struct FModifierStatesRowHandle CastToModifierStatesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ModifierStatesLibrary.CastToModifierStatesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1654ad0
	void BreakModifierStatesEnum(struct FModifierStatesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ModifierStatesLibrary.BreakModifierStatesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1654810
	void AddRowToModifierStatesTable(struct FName Name, struct FModifierStateData Data, struct FModifierStatesRowHandle NewRow); // Function Icarus.ModifierStatesLibrary.AddRowToModifierStatesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1654420
};

// Class Icarus.ModifierStatesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UModifierStatesTable : UIcarusDataTable {
};

// Class Icarus.MultiPointAudioEmitter
// Size: 0x240 (Inherited: 0x200)
struct UMultiPointAudioEmitter : USceneComponent {
	struct TArray<struct FMultiPointAudioNode> Nodes; // 0x1f8(0x10)
	struct UFMODAudioComponent* AudioComponent; // 0x208(0x08)
	char pad_218[0x28]; // 0x218(0x28)

	void Stop(); // Function Icarus.MultiPointAudioEmitter.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x1656fe0
	void SetNodeDefaultWeighting(struct UObject* NodeObject, float Weighting); // Function Icarus.MultiPointAudioEmitter.SetNodeDefaultWeighting // (Final|Native|Public|BlueprintCallable) // @ game+0x1656ef0
	void SetDebugActive(bool bActive); // Function Icarus.MultiPointAudioEmitter.SetDebugActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1656e60
	void RemoveNode(struct UObject* NodeObject); // Function Icarus.MultiPointAudioEmitter.RemoveNode // (Final|Native|Public|BlueprintCallable) // @ game+0x16565b0
	void Play(); // Function Icarus.MultiPointAudioEmitter.Play // (Final|Native|Public|BlueprintCallable) // @ game+0x1656550
	void Initialize(struct UFMODEvent* Event, bool bUseAutomaticPlayback, float MinDistanceOverride, float MaxDistanceOverride); // Function Icarus.MultiPointAudioEmitter.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x1655530
	float GetTotalWeighting(); // Function Icarus.MultiPointAudioEmitter.GetTotalWeighting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1655500
	int32_t GetNodeCount(); // Function Icarus.MultiPointAudioEmitter.GetNodeCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151e250
	struct UFMODAudioComponent* GetAudioComponent(); // Function Icarus.MultiPointAudioEmitter.GetAudioComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1655170
	void AddNode(struct UObject* NodeObject, bool bRemoveNodeOnZeroWeighting); // Function Icarus.MultiPointAudioEmitter.AddNode // (Final|Native|Public|BlueprintCallable) // @ game+0x1654350
};

// Class Icarus.MultiPointAudioNodeInterface
// Size: 0x28 (Inherited: 0x28)
struct UMultiPointAudioNodeInterface : UInterface {

	float GetMultiPointAudioWeighting(); // Function Icarus.MultiPointAudioNodeInterface.GetMultiPointAudioWeighting // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1655340
	struct FVector GetMultiPointAudioLocation(); // Function Icarus.MultiPointAudioNodeInterface.GetMultiPointAudioLocation // (Native|Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x14e7e60
};

// Class Icarus.MusicPlayer
// Size: 0xb0 (Inherited: 0x28)
struct UMusicPlayer : UObject {
	char pad_28[0x38]; // 0x28(0x38)
	struct UCurveFloat* FadeCurve; // 0x60(0x08)
	char pad_68[0x48]; // 0x68(0x48)
};

// Class Icarus.MusicSubsystem
// Size: 0x78 (Inherited: 0x30)
struct UMusicSubsystem : UGameInstanceSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct UMusicPlayer*> MusicPlayers; // 0x38(0x10)
	char pad_48[0x30]; // 0x48(0x30)

	void StopMusic(); // Function Icarus.MusicSubsystem.StopMusic // (Final|Native|Public|BlueprintCallable) // @ game+0x1657000
	void StartMusic(); // Function Icarus.MusicSubsystem.StartMusic // (Final|Native|Public|BlueprintCallable) // @ game+0x1656fc0
	void SetConfig(struct FMusicSubsystemConfig Config); // Function Icarus.MusicSubsystem.SetConfig // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1656dd0
	void SetConditionWeather(enum class EMusicConditionWeather NewWeather); // Function Icarus.MusicSubsystem.SetConditionWeather // (Final|Native|Public|BlueprintCallable) // @ game+0x1656d50
	void SetConditionTimeOfDay(enum class EMusicConditionTimeOfDay NewTimeOfDay); // Function Icarus.MusicSubsystem.SetConditionTimeOfDay // (Final|Native|Public|BlueprintCallable) // @ game+0x1656cd0
	void SetConditionPlayerState(enum class EMusicConditionPlayerState NewPlayerState); // Function Icarus.MusicSubsystem.SetConditionPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x1656c50
	void SetConditionLocation(enum class EMusicConditionLocation NewLocation); // Function Icarus.MusicSubsystem.SetConditionLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x1656bd0
	void SetConditionGameplayEvent(enum class EMusicConditionGameplayEvent GameplayEvent); // Function Icarus.MusicSubsystem.SetConditionGameplayEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1656b50
	void SetConditionDropTime(enum class EMusicConditionDropTime NewDropTime); // Function Icarus.MusicSubsystem.SetConditionDropTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1656ad0
	void SetConditionDropState(enum class EMusicConditionDropState NewDropState); // Function Icarus.MusicSubsystem.SetConditionDropState // (Final|Native|Public|BlueprintCallable) // @ game+0x1656a50
	void SetConditionDisaster(enum class EMusicConditionDisaster NewDisaster); // Function Icarus.MusicSubsystem.SetConditionDisaster // (Final|Native|Public|BlueprintCallable) // @ game+0x16569d0
	void SetConditionCombatState(enum class EMusicConditionCombatState NewCombatState); // Function Icarus.MusicSubsystem.SetConditionCombatState // (Final|Native|Public|BlueprintCallable) // @ game+0x1656950
	void SetAutoTrackChangeEnabled(bool bEnabled); // Function Icarus.MusicSubsystem.SetAutoTrackChangeEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x16568c0
};

// Class Icarus.MusicTracksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMusicTracksLibrary : URowLibrary {

	struct FMusicTracksRowHandle StructToRowHandle(struct FMusicTracksEnum EnumValue); // Function Icarus.MusicTracksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657350
	struct FName StructToName(struct FMusicTracksEnum EnumValue); // Function Icarus.MusicTracksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1657200
	int32_t StructToInt(struct FMusicTracksEnum EnumValue); // Function Icarus.MusicTracksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16570c0
	struct FMusicTracksEnum RowHandleToStruct(struct FMusicTracksRowHandle RowHandle); // Function Icarus.MusicTracksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656800
	void RemoveRowFromMusicTracksTable(struct FName Name); // Function Icarus.MusicTracksLibrary.RemoveRowFromMusicTracksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16566c0
	void RefreshConstants(); // Function Icarus.MusicTracksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1656590
	int32_t NumRows(); // Function Icarus.MusicTracksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656520
	bool NotEqual_EnumName(struct FMusicTracksEnum A, struct FName B); // Function Icarus.MusicTracksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656400
	bool NotEqual_EnumEnum(struct FMusicTracksEnum A, struct FMusicTracksEnum B); // Function Icarus.MusicTracksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1656220
	struct FMusicTracksEnum NameToStruct(struct FName NameValue); // Function Icarus.MusicTracksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16560a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.MusicTracksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1655f80
	struct FMusicTracksRowHandle MakeMusicTracksFromIndex(int32_t Index); // Function Icarus.MusicTracksLibrary.MakeMusicTracksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655e60
	struct FMusicTracksEnum MakeMusicTracksEnum(struct FMusicTracksEnum Enum); // Function Icarus.MusicTracksLibrary.MakeMusicTracksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655de0
	struct FMusicTracksRowHandle MakeMusicTracks(struct FName RowName); // Function Icarus.MusicTracksLibrary.MakeMusicTracks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655d40
	struct FMusicTracksRowHandle MakeLiteralMusicTracks(struct FMusicTracksRowHandle RowHandle); // Function Icarus.MusicTracksLibrary.MakeLiteralMusicTracks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655ac0
	bool IsValidName(struct FName NameValue); // Function Icarus.MusicTracksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1655960
	struct FMusicTracksEnum IntToStruct(int32_t IntValue); // Function Icarus.MusicTracksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655840
	struct FName IntToName(int32_t IntValue); // Function Icarus.MusicTracksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1655720
	void GetMusicTracksStruct(struct FMusicTracksRowHandle RowHandle, struct FMusicTrack MusicTracks, enum class EValid Paths); // Function Icarus.MusicTracksLibrary.GetMusicTracksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1655370
	bool EqualEqual_FMusicTracksRowHandleFMusicTracksRowHandle(struct FMusicTracksRowHandle RowHandleA, struct FMusicTracksRowHandle RowHandleB); // Function Icarus.MusicTracksLibrary.EqualEqual_FMusicTracksRowHandleFMusicTracksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1655030
	bool EqualEqual_EnumEnum(struct FMusicTracksEnum A, struct FMusicTracksEnum B); // Function Icarus.MusicTracksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1654e00
	struct FMusicTracksRowHandle CastToMusicTracksRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.MusicTracksLibrary.CastToMusicTracksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1654bf0
	void BreakMusicTracksEnum(struct FMusicTracksEnum Enum, struct FName Name, int32_t Index); // Function Icarus.MusicTracksLibrary.BreakMusicTracksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1654970
	void AddRowToMusicTracksTable(struct FName Name, struct FMusicTrack Data, struct FMusicTracksRowHandle NewRow); // Function Icarus.MusicTracksLibrary.AddRowToMusicTracksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16545b0
};

// Class Icarus.MusicTracksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UMusicTracksTable : UIcarusDataTable {
};

// Class Icarus.MutableGameplayTagInterface
// Size: 0x28 (Inherited: 0x28)
struct UMutableGameplayTagInterface : UInterface {

	void SetGameplayTags(struct FGameplayTagContainer InGameplayTags); // Function Icarus.MutableGameplayTagInterface.SetGameplayTags // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x165d940
	struct FGameplayTagContainer GetGameplayTags(); // Function Icarus.MutableGameplayTagInterface.GetGameplayTags // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x165bd80
};

// Class Icarus.NavBlockingStaticMeshComponent
// Size: 0x4d0 (Inherited: 0x4d0)
struct UNavBlockingStaticMeshComponent : UStaticMeshComponent {
};

// Class Icarus.NetworkProxyComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UNetworkProxyComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)

	void CheatingNotification(); // Function Icarus.NetworkProxyComponent.CheatingNotification // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xd79c80
	void Cheat_UnlockCharacterAllFlags(); // Function Icarus.NetworkProxyComponent.Cheat_UnlockCharacterAllFlags // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b8d0
	void Cheat_SetWater(int32_t Water, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetWater // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b7d0
	void Cheat_SetStamina(int32_t Stamina, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetStamina // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b6d0
	void Cheat_SetOxygen(int32_t Oxygen, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetOxygen // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b5d0
	void Cheat_SetHealth(int32_t Health, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetHealth // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b4d0
	void Cheat_SetFood(int32_t Food, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_SetFood // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b3d0
	void Cheat_SetBodyTemperature(float Value); // Function Icarus.NetworkProxyComponent.Cheat_SetBodyTemperature // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b320
	void Cheat_ClearStats(); // Function Icarus.NetworkProxyComponent.Cheat_ClearStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b2d0
	void Cheat_ClearInventory(); // Function Icarus.NetworkProxyComponent.Cheat_ClearInventory // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b280
	void Cheat_AddWater(int32_t Water, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddWater // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b180
	void Cheat_AddStat(struct FStatsEnum Stat, int32_t Value); // Function Icarus.NetworkProxyComponent.Cheat_AddStat // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165b050
	void Cheat_AddStamina(int32_t Stamina, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddStamina // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165af50
	void Cheat_AddOxygen(int32_t Oxygen, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddOxygen // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165ae50
	void Cheat_AddHealth(int32_t Health, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddHealth // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165ad50
	void Cheat_AddFood(int32_t Food, bool bPercent); // Function Icarus.NetworkProxyComponent.Cheat_AddFood // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165ac50
	void Cheat_AddExperienceDebt(int32_t Value); // Function Icarus.NetworkProxyComponent.Cheat_AddExperienceDebt // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165ab90
	void Cheat_AddExperience(int32_t Value); // Function Icarus.NetworkProxyComponent.Cheat_AddExperience // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x165aad0
};

// Class Icarus.NotificationSubsystem
// Size: 0x58 (Inherited: 0x30)
struct UNotificationSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnNotificationsUpdated; // 0x30(0x10)
	struct AIcarusPlayerController* PlayerController; // 0x40(0x08)
	struct TArray<struct FNotification> Notifications; // 0x48(0x10)

	void RefreshNotifications(); // Function Icarus.NotificationSubsystem.RefreshNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x165d6a0
	void NotificationsUpdated(); // Function Icarus.NotificationSubsystem.NotificationsUpdated // (Final|Native|Protected) // @ game+0x165d2a0
	struct TArray<struct FNotification> GetUnseenNotifications(); // Function Icarus.NotificationSubsystem.GetUnseenNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x165c2e0
	struct TArray<struct FNotification> GetNotifications(); // Function Icarus.NotificationSubsystem.GetNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x165bdc0
};

// Class Icarus.ObjectSlot
// Size: 0x2d0 (Inherited: 0x2a0)
struct AObjectSlot : AIcarusActor {
	enum class EObjectSlotType SlotType; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct UHighlightableComponent* HighlightableComponent; // 0x2a8(0x08)
	struct UInteractableComponent* InteractableComponent; // 0x2b0(0x08)
	struct ADeployable* AttachedActor; // 0x2b8(0x08)
	struct AObjectSlot* LinkedSlot; // 0x2c0(0x08)
	struct FMulticastSparseDelegate OnLinkEstablished; // 0x2c8(0x01)
	struct FMulticastSparseDelegate OnLinkDestroyed; // 0x2c9(0x01)
	char pad_2CA[0x6]; // 0x2ca(0x06)

	bool UpdateVisibility(); // Function Icarus.ObjectSlot.UpdateVisibility // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x15c4ef0
	void OnServer_UnlinkSlots(); // Function Icarus.ObjectSlot.OnServer_UnlinkSlots // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x165d640
	void OnServer_LinkSlots(struct AObjectSlot* SlotToConnect); // Function Icarus.ObjectSlot.OnServer_LinkSlots // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x165d5b0
	bool OnServer_Interact(struct AActor* Interactor, struct FHitResult HitResult); // Function Icarus.ObjectSlot.OnServer_Interact // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x165d470
	void OnInteraction(struct AActor* Interactor, struct FHitResult HitResult); // Function Icarus.ObjectSlot.OnInteraction // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x165d320
	struct UInventoryComponent* GetSlotInventory(); // Function Icarus.ObjectSlot.GetSlotInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x165c2b0
	bool CanLink(struct AObjectSlot* SlotToConnect); // Function Icarus.ObjectSlot.CanLink // (Final|Native|Public|BlueprintCallable) // @ game+0x165a7f0
};

// Class Icarus.OneShotAudio
// Size: 0x258 (Inherited: 0x220)
struct AOneShotAudio : AActor {
	struct FSoftObjectPath EventPath; // 0x220(0x18)
	bool bUseListenerRotation; // 0x238(0x01)
	bool bUseOcclusion; // 0x239(0x01)
	char pad_23A[0xe]; // 0x23a(0x0e)
	struct UAudioContextComponent* AudioContext; // 0x248(0x08)
	struct UAudioOcclusionComponent* OcclusionComponent; // 0x250(0x08)
};

// Class Icarus.OrbitalTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UOrbitalTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.OrbitalTalentModel
// Size: 0xd8 (Inherited: 0xd8)
struct UOrbitalTalentModel : UTalentModelInterface {
};

// Class Icarus.OrchestrationEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOrchestrationEventsLibrary : URowLibrary {

	struct FOrchestrationEventsRowHandle StructToRowHandle(struct FOrchestrationEventsEnum EnumValue); // Function Icarus.OrchestrationEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165dc80
	struct FName StructToName(struct FOrchestrationEventsEnum EnumValue); // Function Icarus.OrchestrationEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165db40
	int32_t StructToInt(struct FOrchestrationEventsEnum EnumValue); // Function Icarus.OrchestrationEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165da00
	struct FOrchestrationEventsEnum RowHandleToStruct(struct FOrchestrationEventsRowHandle RowHandle); // Function Icarus.OrchestrationEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165d7c0
	void RemoveRowFromOrchestrationEventsTable(struct FName Name); // Function Icarus.OrchestrationEventsLibrary.RemoveRowFromOrchestrationEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x165d6c0
	void RefreshConstants(); // Function Icarus.OrchestrationEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x165d660
	int32_t NumRows(); // Function Icarus.OrchestrationEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165d2c0
	bool NotEqual_EnumName(struct FOrchestrationEventsEnum A, struct FName B); // Function Icarus.OrchestrationEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165d0c0
	bool NotEqual_EnumEnum(struct FOrchestrationEventsEnum A, struct FOrchestrationEventsEnum B); // Function Icarus.OrchestrationEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165cee0
	struct FOrchestrationEventsEnum NameToStruct(struct FName NameValue); // Function Icarus.OrchestrationEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165cdc0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.OrchestrationEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x165cca0
	struct FOrchestrationEventsRowHandle MakeOrchestrationEventsFromIndex(int32_t Index); // Function Icarus.OrchestrationEventsLibrary.MakeOrchestrationEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165ca60
	struct FOrchestrationEventsEnum MakeOrchestrationEventsEnum(struct FOrchestrationEventsEnum Enum); // Function Icarus.OrchestrationEventsLibrary.MakeOrchestrationEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165c9e0
	struct FOrchestrationEventsRowHandle MakeOrchestrationEvents(struct FName RowName); // Function Icarus.OrchestrationEventsLibrary.MakeOrchestrationEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165c940
	struct FOrchestrationEventsRowHandle MakeLiteralOrchestrationEvents(struct FOrchestrationEventsRowHandle RowHandle); // Function Icarus.OrchestrationEventsLibrary.MakeLiteralOrchestrationEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165c7a0
	bool IsValidName(struct FName NameValue); // Function Icarus.OrchestrationEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x165c680
	struct FOrchestrationEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.OrchestrationEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165c560
	struct FName IntToName(int32_t IntValue); // Function Icarus.OrchestrationEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x165c440
	void GetOrchestrationEventsStruct(struct FOrchestrationEventsRowHandle RowHandle, struct FOrchestrationEventDescription OrchestrationEvents, enum class EValid Paths); // Function Icarus.OrchestrationEventsLibrary.GetOrchestrationEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165bed0
	bool EqualEqual_FOrchestrationEventsRowHandleFOrchestrationEventsRowHandle(struct FOrchestrationEventsRowHandle RowHandleA, struct FOrchestrationEventsRowHandle RowHandleB); // Function Icarus.OrchestrationEventsLibrary.EqualEqual_FOrchestrationEventsRowHandleFOrchestrationEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165bb00
	bool EqualEqual_EnumEnum(struct FOrchestrationEventsEnum A, struct FOrchestrationEventsEnum B); // Function Icarus.OrchestrationEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165b920
	struct FOrchestrationEventsRowHandle CastToOrchestrationEventsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.OrchestrationEventsLibrary.CastToOrchestrationEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165a890
	void BreakOrchestrationEventsEnum(struct FOrchestrationEventsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.OrchestrationEventsLibrary.BreakOrchestrationEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x165a530
	void AddRowToOrchestrationEventsTable(struct FName Name, struct FOrchestrationEventDescription Data, struct FOrchestrationEventsRowHandle NewRow); // Function Icarus.OrchestrationEventsLibrary.AddRowToOrchestrationEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165a030
};

// Class Icarus.OrchestrationEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOrchestrationEventsTable : UIcarusDataTable {
};

// Class Icarus.OrchestrationStateFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOrchestrationStateFlagsLibrary : URowLibrary {

	struct FOrchestrationStateFlagsRowHandle StructToRowHandle(struct FOrchestrationStateFlagsEnum EnumValue); // Function Icarus.OrchestrationStateFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165dd30
	struct FName StructToName(struct FOrchestrationStateFlagsEnum EnumValue); // Function Icarus.OrchestrationStateFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165dbe0
	int32_t StructToInt(struct FOrchestrationStateFlagsEnum EnumValue); // Function Icarus.OrchestrationStateFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165daa0
	struct FOrchestrationStateFlagsEnum RowHandleToStruct(struct FOrchestrationStateFlagsRowHandle RowHandle); // Function Icarus.OrchestrationStateFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165d880
	void RemoveRowFromOrchestrationStateFlagsTable(struct FName Name); // Function Icarus.OrchestrationStateFlagsLibrary.RemoveRowFromOrchestrationStateFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x165d740
	void RefreshConstants(); // Function Icarus.OrchestrationStateFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x165d680
	int32_t NumRows(); // Function Icarus.OrchestrationStateFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165d2f0
	bool NotEqual_EnumName(struct FOrchestrationStateFlagsEnum A, struct FName B); // Function Icarus.OrchestrationStateFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165d1b0
	bool NotEqual_EnumEnum(struct FOrchestrationStateFlagsEnum A, struct FOrchestrationStateFlagsEnum B); // Function Icarus.OrchestrationStateFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165cfd0
	struct FOrchestrationStateFlagsEnum NameToStruct(struct FName NameValue); // Function Icarus.OrchestrationStateFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165ce50
	int32_t NameToInt(struct FName NameValue); // Function Icarus.OrchestrationStateFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x165cd30
	struct FOrchestrationStateFlagsRowHandle MakeOrchestrationStateFlagsFromIndex(int32_t Index); // Function Icarus.OrchestrationStateFlagsLibrary.MakeOrchestrationStateFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165cc10
	struct FOrchestrationStateFlagsEnum MakeOrchestrationStateFlagsEnum(struct FOrchestrationStateFlagsEnum Enum); // Function Icarus.OrchestrationStateFlagsLibrary.MakeOrchestrationStateFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165cb90
	struct FOrchestrationStateFlagsRowHandle MakeOrchestrationStateFlags(struct FName RowName); // Function Icarus.OrchestrationStateFlagsLibrary.MakeOrchestrationStateFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165caf0
	struct FOrchestrationStateFlagsRowHandle MakeLiteralOrchestrationStateFlags(struct FOrchestrationStateFlagsRowHandle RowHandle); // Function Icarus.OrchestrationStateFlagsLibrary.MakeLiteralOrchestrationStateFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165c870
	bool IsValidName(struct FName NameValue); // Function Icarus.OrchestrationStateFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x165c710
	struct FOrchestrationStateFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.OrchestrationStateFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165c5f0
	struct FName IntToName(int32_t IntValue); // Function Icarus.OrchestrationStateFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x165c4d0
	void GetOrchestrationStateFlagsStruct(struct FOrchestrationStateFlagsRowHandle RowHandle, struct FOrchestrationStateFlag OrchestrationStateFlags, enum class EValid Paths); // Function Icarus.OrchestrationStateFlagsLibrary.GetOrchestrationStateFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165c120
	bool EqualEqual_FOrchestrationStateFlagsRowHandleFOrchestrationStateFlagsRowHandle(struct FOrchestrationStateFlagsRowHandle RowHandleA, struct FOrchestrationStateFlagsRowHandle RowHandleB); // Function Icarus.OrchestrationStateFlagsLibrary.EqualEqual_FOrchestrationStateFlagsRowHandleFOrchestrationStateFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165bc40
	bool EqualEqual_EnumEnum(struct FOrchestrationStateFlagsEnum A, struct FOrchestrationStateFlagsEnum B); // Function Icarus.OrchestrationStateFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x165ba10
	struct FOrchestrationStateFlagsRowHandle CastToOrchestrationStateFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.OrchestrationStateFlagsLibrary.CastToOrchestrationStateFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165a9b0
	void BreakOrchestrationStateFlagsEnum(struct FOrchestrationStateFlagsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.OrchestrationStateFlagsLibrary.BreakOrchestrationStateFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x165a690
	void AddRowToOrchestrationStateFlagsTable(struct FName Name, struct FOrchestrationStateFlag Data, struct FOrchestrationStateFlagsRowHandle NewRow); // Function Icarus.OrchestrationStateFlagsLibrary.AddRowToOrchestrationStateFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x165a320
};

// Class Icarus.OrchestrationStateFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOrchestrationStateFlagsTable : UIcarusDataTable {
};

// Class Icarus.OutOfBoundsSubsystem
// Size: 0x90 (Inherited: 0x30)
struct UOutOfBoundsSubsystem : UWorldSubsystem {
	struct TMap<struct AIcarusPlayerCharacter*, struct FOutOfBoundsArray> PlayerVolumeMap; // 0x30(0x50)
	struct FMulticastInlineDelegate OnOutOfBoundsUpdate; // 0x80(0x10)

	void UnRegisterOutOfBoundsForPlayer(struct AIcarusPlayerCharacter* Player, struct AActor* Volume); // Function Icarus.OutOfBoundsSubsystem.UnRegisterOutOfBoundsForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1662e30
	void RegisterOutOfBoundsForPlayer(struct AIcarusPlayerCharacter* Player, struct AActor* Volume); // Function Icarus.OutOfBoundsSubsystem.RegisterOutOfBoundsForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1662450
	bool IsPlayerOutOfBounds(struct AIcarusPlayerCharacter* Player); // Function Icarus.OutOfBoundsSubsystem.IsPlayerOutOfBounds // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661a00
};

// Class Icarus.OutOfBoundsVolume
// Size: 0x268 (Inherited: 0x268)
struct AOutOfBoundsVolume : APhysicsVolume {
};

// Class Icarus.OxygenComponent
// Size: 0x100 (Inherited: 0x100)
struct UOxygenComponent : UResourceNetworkComponent {

	bool GetFuelData(struct FFuelData OutData); // Function Icarus.OxygenComponent.GetFuelData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x159fcb0
};

// Class Icarus.OxygenLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOxygenLibrary : URowLibrary {

	struct FOxygenRowHandle StructToRowHandle(struct FOxygenEnum EnumValue); // Function Icarus.OxygenLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662c10
	struct FName StructToName(struct FOxygenEnum EnumValue); // Function Icarus.OxygenLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662b70
	int32_t StructToInt(struct FOxygenEnum EnumValue); // Function Icarus.OxygenLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662ad0
	struct FOxygenEnum RowHandleToStruct(struct FOxygenRowHandle RowHandle); // Function Icarus.OxygenLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16625a0
	void RemoveRowFromOxygenTable(struct FName Name); // Function Icarus.OxygenLibrary.RemoveRowFromOxygenTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1662520
	void RefreshConstants(); // Function Icarus.OxygenLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1662430
	int32_t NumRows(); // Function Icarus.OxygenLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662290
	bool NotEqual_EnumName(struct FOxygenEnum A, struct FName B); // Function Icarus.OxygenLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1662070
	bool NotEqual_EnumEnum(struct FOxygenEnum A, struct FOxygenEnum B); // Function Icarus.OxygenLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661f80
	struct FOxygenEnum NameToStruct(struct FName NameValue); // Function Icarus.OxygenLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661ef0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.OxygenLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1661e60
	struct FOxygenRowHandle MakeOxygenFromIndex(int32_t Index); // Function Icarus.OxygenLibrary.MakeOxygenFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661dd0
	struct FOxygenEnum MakeOxygenEnum(struct FOxygenEnum Enum); // Function Icarus.OxygenLibrary.MakeOxygenEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661d50
	struct FOxygenRowHandle MakeOxygen(struct FName RowName); // Function Icarus.OxygenLibrary.MakeOxygen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661cb0
	struct FOxygenRowHandle MakeLiteralOxygen(struct FOxygenRowHandle RowHandle); // Function Icarus.OxygenLibrary.MakeLiteralOxygen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661be0
	bool IsValidName(struct FName NameValue); // Function Icarus.OxygenLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1661aa0
	struct FOxygenEnum IntToStruct(int32_t IntValue); // Function Icarus.OxygenLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661970
	struct FName IntToName(int32_t IntValue); // Function Icarus.OxygenLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16618e0
	void GetOxygenStruct(struct FOxygenRowHandle RowHandle, struct FOxygenData Oxygen, enum class EValid Paths); // Function Icarus.OxygenLibrary.GetOxygenStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1661520
	bool EqualEqual_FOxygenRowHandleFOxygenRowHandle(struct FOxygenRowHandle RowHandleA, struct FOxygenRowHandle RowHandleB); // Function Icarus.OxygenLibrary.EqualEqual_FOxygenRowHandleFOxygenRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1661190
	bool EqualEqual_EnumEnum(struct FOxygenEnum A, struct FOxygenEnum B); // Function Icarus.OxygenLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16610a0
	struct FOxygenRowHandle CastToOxygenRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.OxygenLibrary.CastToOxygenRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1660df0
	void BreakOxygenEnum(struct FOxygenEnum Enum, struct FName Name, int32_t Index); // Function Icarus.OxygenLibrary.BreakOxygenEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1660c90
	void AddRowToOxygenTable(struct FName Name, struct FOxygenData Data, struct FOxygenRowHandle NewRow); // Function Icarus.OxygenLibrary.AddRowToOxygenTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1660990
};

// Class Icarus.OxygenTable
// Size: 0xb8 (Inherited: 0xb8)
struct UOxygenTable : UIcarusDataTable {
};

// Class Icarus.PlayerAudioFoliageRecord
// Size: 0x38 (Inherited: 0x28)
struct UPlayerAudioFoliageRecord : UObject {
	struct UFLODRecord* FLODRecord; // 0x28(0x08)
	char pad_30[0x8]; // 0x30(0x08)
};

// Class Icarus.PlayerCharacterIDFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerCharacterIDFunctionLibrary : UBlueprintFunctionLibrary {

	struct FString ToString_PlayerCharacterID(struct FPlayerCharacterID PlayerCharacterID); // Function Icarus.PlayerCharacterIDFunctionLibrary.ToString_PlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1662d40
	bool NotEqual_PlayerCharacterIDPlayerCharacterID(struct FPlayerCharacterID A, struct FPlayerCharacterID B); // Function Icarus.PlayerCharacterIDFunctionLibrary.NotEqual_PlayerCharacterIDPlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1662160
	bool IsValid_PlayerCharacterID(struct FPlayerCharacterID PlayerCharacterID); // Function Icarus.PlayerCharacterIDFunctionLibrary.IsValid_PlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1661b30
	bool EqualEqual_PlayerCharacterIDPlayerCharacterID(struct FPlayerCharacterID A, struct FPlayerCharacterID B); // Function Icarus.PlayerCharacterIDFunctionLibrary.EqualEqual_PlayerCharacterIDPlayerCharacterID // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16612d0
};

// Class Icarus.PlayerCharacterState
// Size: 0x370 (Inherited: 0x2a8)
struct UPlayerCharacterState : UCharacterState {
	struct FWeatherEventsRowHandle LocalWeatherEvent; // 0x2a8(0x18)
	struct FMulticastSparseDelegate OnConsumedFood; // 0x2c0(0x01)
	struct FMulticastSparseDelegate OnConsumedWater; // 0x2c1(0x01)
	struct FMulticastSparseDelegate OnConsumedOxygen; // 0x2c2(0x01)
	struct FMulticastSparseDelegate OnOxygenUpdated; // 0x2c3(0x01)
	struct FMulticastSparseDelegate OnFoodUpdated; // 0x2c4(0x01)
	struct FMulticastSparseDelegate OnWaterUpdated; // 0x2c5(0x01)
	struct FMulticastSparseDelegate OnTemperatureUpdated; // 0x2c6(0x01)
	struct FMulticastSparseDelegate OnChallengesUpdated; // 0x2c7(0x01)
	struct FMulticastSparseDelegate OnChallengeComplete; // 0x2c8(0x01)
	struct FMulticastSparseDelegate OnCharacterFlagsUpdated; // 0x2c9(0x01)
	struct FMulticastSparseDelegate OnFlagsUpdated; // 0x2ca(0x01)
	struct FMulticastSparseDelegate OnCharacterFlagStateChanged; // 0x2cb(0x01)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct FMulticastInlineDelegate LocalWeatherEventUpdated; // 0x2d0(0x10)
	int32_t OxygenLevel; // 0x2e0(0x04)
	int32_t WaterLevel; // 0x2e4(0x04)
	int32_t FoodLevel; // 0x2e8(0x04)
	int32_t MinOxygen; // 0x2ec(0x04)
	int32_t MaxOxygen; // 0x2f0(0x04)
	int32_t MinWater; // 0x2f4(0x04)
	int32_t MaxWater; // 0x2f8(0x04)
	int32_t MinFood; // 0x2fc(0x04)
	int32_t MaxFood; // 0x300(0x04)
	int32_t InternalTemperature; // 0x304(0x04)
	int32_t AIDetectionPercentage; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct TArray<bool> CharacterFlags; // 0x310(0x10)
	struct TArray<bool> Challenges; // 0x320(0x10)
	char pad_330[0x30]; // 0x330(0x30)
	struct UTemperatureSingleton* TemperatureSingleton; // 0x360(0x08)
	char pad_368[0x8]; // 0x368(0x08)

	void UpdateAIDetection(); // Function Icarus.PlayerCharacterState.UpdateAIDetection // (Final|Native|Public|BlueprintCallable) // @ game+0x1662f00
	void TemperatureTick(float DeltaTime); // Function Icarus.PlayerCharacterState.TemperatureTick // (Final|Native|Private) // @ game+0x1662cc0
	void SetWater(int32_t Amount); // Function Icarus.PlayerCharacterState.SetWater // (Final|Native|Public|BlueprintCallable) // @ game+0x1662a40
	void SetOxygen(int32_t Amount); // Function Icarus.PlayerCharacterState.SetOxygen // (Final|Native|Public|BlueprintCallable) // @ game+0x16629b0
	void SetInternalTemperature(int32_t NewTemperature); // Function Icarus.PlayerCharacterState.SetInternalTemperature // (Final|Native|Public|BlueprintCallable) // @ game+0x1662920
	void SetFood(int32_t Amount); // Function Icarus.PlayerCharacterState.SetFood // (Final|Native|Public|BlueprintCallable) // @ game+0x1662890
	void SetCharacterFlags(struct TMap<struct FCharacterFlagsRowHandle, bool> FlagMap); // Function Icarus.PlayerCharacterState.SetCharacterFlags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1662750
	void SetCharacterFlag(struct FCharacterFlagsRowHandle Flag, bool State); // Function Icarus.PlayerCharacterState.SetCharacterFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1662660
	void RecalculateSurvivalVariables(); // Function Icarus.PlayerCharacterState.RecalculateSurvivalVariables // (Final|Native|Protected) // @ game+0x1662410
	void RecalculateSurvivalConsumeRate(); // Function Icarus.PlayerCharacterState.RecalculateSurvivalConsumeRate // (Final|Native|Protected) // @ game+0x16623f0
	void OnSessionFlagsUpdated(struct AActor* FlagActor); // Function Icarus.PlayerCharacterState.OnSessionFlagsUpdated // (Final|Native|Public) // @ game+0x1662360
	void OnRep_LocalWeatherEvent(); // Function Icarus.PlayerCharacterState.OnRep_LocalWeatherEvent // (Final|Native|Protected) // @ game+0x1662300
	void OnRep_CharacterFlags(); // Function Icarus.PlayerCharacterState.OnRep_CharacterFlags // (Final|Native|Public) // @ game+0x16622e0
	void OnRep_Challenges(); // Function Icarus.PlayerCharacterState.OnRep_Challenges // (Final|Native|Protected) // @ game+0x16622c0
	void OnLocalWeatherEventUpdated(); // Function Icarus.PlayerCharacterState.OnLocalWeatherEventUpdated // (Native|Event|Protected|BlueprintEvent) // @ game+0x157a010
	bool HasFlag(struct FFlagsMultiRowHandle Flag); // Function Icarus.PlayerCharacterState.HasFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1661830
	bool HasCompleteChallenge(struct FChallengesRowHandle Challenge); // Function Icarus.PlayerCharacterState.HasCompleteChallenge // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1661780
	bool HasCharacterFlag(struct FCharacterFlagsRowHandle Flag); // Function Icarus.PlayerCharacterState.HasCharacterFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16616d0
	int32_t GetWater(); // Function Icarus.PlayerCharacterState.GetWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16616a0
	int32_t GetOxygen(); // Function Icarus.PlayerCharacterState.GetOxygen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16614f0
	int32_t GetMaxWater(); // Function Icarus.PlayerCharacterState.GetMaxWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16614c0
	int32_t GetMaxOxygen(); // Function Icarus.PlayerCharacterState.GetMaxOxygen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1661490
	int32_t GetMaxFood(); // Function Icarus.PlayerCharacterState.GetMaxFood // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1661460
	int32_t GetInternalTemperature(); // Function Icarus.PlayerCharacterState.GetInternalTemperature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1661430
	int32_t GetFood(); // Function Icarus.PlayerCharacterState.GetFood // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1661400
	void CompleteChallenge(struct FChallengesRowHandle Challenge); // Function Icarus.PlayerCharacterState.CompleteChallenge // (Final|Native|Public|BlueprintCallable) // @ game+0x1660ff0
	void CheckForNewWeatherEvent(); // Function Icarus.PlayerCharacterState.CheckForNewWeatherEvent // (Final|Native|Protected) // @ game+0x1660fd0
	void ChallengeCompleted(struct FChallengesRowHandle ChallengeRow); // Function Icarus.PlayerCharacterState.ChallengeCompleted // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1660f10
	void AddWater(int32_t Amount); // Function Icarus.PlayerCharacterState.AddWater // (Final|Native|Public|BlueprintCallable) // @ game+0x1660c00
	void AddTemperature(int32_t Amount); // Function Icarus.PlayerCharacterState.AddTemperature // (Final|Native|Public|BlueprintCallable) // @ game+0x1660b70
	void AddOxygen(int32_t Amount); // Function Icarus.PlayerCharacterState.AddOxygen // (Final|Native|Public|BlueprintCallable) // @ game+0x1660900
	void AddFood(int32_t Amount); // Function Icarus.PlayerCharacterState.AddFood // (Final|Native|Public|BlueprintCallable) // @ game+0x1660870
};

// Class Icarus.PlayerEnvironmentalAudioComponent
// Size: 0x170 (Inherited: 0xb0)
struct UPlayerEnvironmentalAudioComponent : UActorComponent {
	struct AFLOD* FLOD; // 0xb0(0x08)
	float FoliageCountTraceRadius; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct UPlayerAudioFoliageRecord*> FoliageRecords; // 0xc0(0x10)
	struct TArray<struct UFLODRecord*> PendingFoliageRecords; // 0xd0(0x10)
	struct TSet<struct AFLODTile*> LoadedFLODTiles; // 0xe0(0x50)
	char pad_130[0x4]; // 0x130(0x04)
	float CurrentShelter; // 0x134(0x04)
	char pad_138[0x8]; // 0x138(0x08)
	struct TArray<struct FVector> ShelterTraceDirections; // 0x140(0x10)
	bool bDebugShelter; // 0x150(0x01)
	char pad_151[0x1f]; // 0x151(0x1f)

	void GetShelterValues(float OutShelter, float OutAverageDistance, float OutClosestDistance, enum class EPhysicalSurface OutPrimarySurface); // Function Icarus.PlayerEnvironmentalAudioComponent.GetShelterValues // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1666150
	struct FVector GetShelterTraceLocation(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetShelterTraceLocation // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1a38c80
	struct FVector GetFoliageTraceLocation(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetFoliageTraceLocation // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1a38c80
	int32_t GetCurrentTreeCount(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetCurrentTreeCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1665de0
	int32_t GetCurrentBushCount(); // Function Icarus.PlayerEnvironmentalAudioComponent.GetCurrentBushCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1665db0
};

// Class Icarus.PlayerFootstepAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerFootstepAudioDataLibrary : URowLibrary {

	struct FPlayerFootstepAudioDataRowHandle StructToRowHandle(struct FPlayerFootstepAudioDataEnum EnumValue); // Function Icarus.PlayerFootstepAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16676e0
	struct FName StructToName(struct FPlayerFootstepAudioDataEnum EnumValue); // Function Icarus.PlayerFootstepAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16675a0
	int32_t StructToInt(struct FPlayerFootstepAudioDataEnum EnumValue); // Function Icarus.PlayerFootstepAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667460
	struct FPlayerFootstepAudioDataEnum RowHandleToStruct(struct FPlayerFootstepAudioDataRowHandle RowHandle); // Function Icarus.PlayerFootstepAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16672e0
	void RemoveRowFromPlayerFootstepAudioDataTable(struct FName Name); // Function Icarus.PlayerFootstepAudioDataLibrary.RemoveRowFromPlayerFootstepAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16671e0
	void RefreshConstants(); // Function Icarus.PlayerFootstepAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16671a0
	int32_t NumRows(); // Function Icarus.PlayerFootstepAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667140
	bool NotEqual_EnumName(struct FPlayerFootstepAudioDataEnum A, struct FName B); // Function Icarus.PlayerFootstepAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666f60
	bool NotEqual_EnumEnum(struct FPlayerFootstepAudioDataEnum A, struct FPlayerFootstepAudioDataEnum B); // Function Icarus.PlayerFootstepAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666d80
	struct FPlayerFootstepAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.PlayerFootstepAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666c60
	int32_t NameToInt(struct FName NameValue); // Function Icarus.PlayerFootstepAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1666b40
	struct FPlayerFootstepAudioDataRowHandle MakePlayerFootstepAudioDataFromIndex(int32_t Index); // Function Icarus.PlayerFootstepAudioDataLibrary.MakePlayerFootstepAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666900
	struct FPlayerFootstepAudioDataEnum MakePlayerFootstepAudioDataEnum(struct FPlayerFootstepAudioDataEnum Enum); // Function Icarus.PlayerFootstepAudioDataLibrary.MakePlayerFootstepAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666880
	struct FPlayerFootstepAudioDataRowHandle MakePlayerFootstepAudioData(struct FName RowName); // Function Icarus.PlayerFootstepAudioDataLibrary.MakePlayerFootstepAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16667e0
	struct FPlayerFootstepAudioDataRowHandle MakeLiteralPlayerFootstepAudioData(struct FPlayerFootstepAudioDataRowHandle RowHandle); // Function Icarus.PlayerFootstepAudioDataLibrary.MakeLiteralPlayerFootstepAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666640
	bool IsValidName(struct FName NameValue); // Function Icarus.PlayerFootstepAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1666520
	struct FPlayerFootstepAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerFootstepAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666400
	struct FName IntToName(int32_t IntValue); // Function Icarus.PlayerFootstepAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16662e0
	void GetPlayerFootstepAudioDataStruct(struct FPlayerFootstepAudioDataRowHandle RowHandle, struct FPlayerFootstepAudioData PlayerFootstepAudioData, enum class EValid Paths); // Function Icarus.PlayerFootstepAudioDataLibrary.GetPlayerFootstepAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1665e10
	bool EqualEqual_FPlayerFootstepAudioDataRowHandleFPlayerFootstepAudioDataRowHandle(struct FPlayerFootstepAudioDataRowHandle RowHandleA, struct FPlayerFootstepAudioDataRowHandle RowHandleB); // Function Icarus.PlayerFootstepAudioDataLibrary.EqualEqual_FPlayerFootstepAudioDataRowHandleFPlayerFootstepAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1665b30
	bool EqualEqual_EnumEnum(struct FPlayerFootstepAudioDataEnum A, struct FPlayerFootstepAudioDataEnum B); // Function Icarus.PlayerFootstepAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1665950
	struct FPlayerFootstepAudioDataRowHandle CastToPlayerFootstepAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.PlayerFootstepAudioDataLibrary.CastToPlayerFootstepAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1665710
	void BreakPlayerFootstepAudioDataEnum(struct FPlayerFootstepAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.PlayerFootstepAudioDataLibrary.BreakPlayerFootstepAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1665450
	void AddRowToPlayerFootstepAudioDataTable(struct FName Name, struct FPlayerFootstepAudioData Data, struct FPlayerFootstepAudioDataRowHandle NewRow); // Function Icarus.PlayerFootstepAudioDataLibrary.AddRowToPlayerFootstepAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1665050
};

// Class Icarus.PlayerFootstepAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerFootstepAudioDataTable : UIcarusDataTable {
};

// Class Icarus.PlayerIdentityLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlayerIdentityLibrary : URowLibrary {

	struct FPlayerIdentityRowHandle StructToRowHandle(struct FPlayerIdentityEnum EnumValue); // Function Icarus.PlayerIdentityLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667790
	struct FName StructToName(struct FPlayerIdentityEnum EnumValue); // Function Icarus.PlayerIdentityLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667640
	int32_t StructToInt(struct FPlayerIdentityEnum EnumValue); // Function Icarus.PlayerIdentityLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667500
	struct FPlayerIdentityEnum RowHandleToStruct(struct FPlayerIdentityRowHandle RowHandle); // Function Icarus.PlayerIdentityLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16673a0
	void RemoveRowFromPlayerIdentityTable(struct FName Name); // Function Icarus.PlayerIdentityLibrary.RemoveRowFromPlayerIdentityTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1667260
	void RefreshConstants(); // Function Icarus.PlayerIdentityLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16671c0
	int32_t NumRows(); // Function Icarus.PlayerIdentityLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667170
	bool NotEqual_EnumName(struct FPlayerIdentityEnum A, struct FName B); // Function Icarus.PlayerIdentityLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1667050
	bool NotEqual_EnumEnum(struct FPlayerIdentityEnum A, struct FPlayerIdentityEnum B); // Function Icarus.PlayerIdentityLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666e70
	struct FPlayerIdentityEnum NameToStruct(struct FName NameValue); // Function Icarus.PlayerIdentityLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666cf0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.PlayerIdentityLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1666bd0
	struct FPlayerIdentityRowHandle MakePlayerIdentityFromIndex(int32_t Index); // Function Icarus.PlayerIdentityLibrary.MakePlayerIdentityFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666ab0
	struct FPlayerIdentityEnum MakePlayerIdentityEnum(struct FPlayerIdentityEnum Enum); // Function Icarus.PlayerIdentityLibrary.MakePlayerIdentityEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666a30
	struct FPlayerIdentityRowHandle MakePlayerIdentity(struct FName RowName); // Function Icarus.PlayerIdentityLibrary.MakePlayerIdentity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666990
	struct FPlayerIdentityRowHandle MakeLiteralPlayerIdentity(struct FPlayerIdentityRowHandle RowHandle); // Function Icarus.PlayerIdentityLibrary.MakeLiteralPlayerIdentity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666710
	bool IsValidName(struct FName NameValue); // Function Icarus.PlayerIdentityLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16665b0
	struct FPlayerIdentityEnum IntToStruct(int32_t IntValue); // Function Icarus.PlayerIdentityLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1666490
	struct FName IntToName(int32_t IntValue); // Function Icarus.PlayerIdentityLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1666370
	void GetPlayerIdentityStruct(struct FPlayerIdentityRowHandle RowHandle, struct FPlayerIdentityData PlayerIdentity, enum class EValid Paths); // Function Icarus.PlayerIdentityLibrary.GetPlayerIdentityStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1665fd0
	bool EqualEqual_FPlayerIdentityRowHandleFPlayerIdentityRowHandle(struct FPlayerIdentityRowHandle RowHandleA, struct FPlayerIdentityRowHandle RowHandleB); // Function Icarus.PlayerIdentityLibrary.EqualEqual_FPlayerIdentityRowHandleFPlayerIdentityRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1665c70
	bool EqualEqual_EnumEnum(struct FPlayerIdentityEnum A, struct FPlayerIdentityEnum B); // Function Icarus.PlayerIdentityLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1665a40
	struct FPlayerIdentityRowHandle CastToPlayerIdentityRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.PlayerIdentityLibrary.CastToPlayerIdentityRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1665830
	void BreakPlayerIdentityEnum(struct FPlayerIdentityEnum Enum, struct FName Name, int32_t Index); // Function Icarus.PlayerIdentityLibrary.BreakPlayerIdentityEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16655b0
	void AddRowToPlayerIdentityTable(struct FName Name, struct FPlayerIdentityData Data, struct FPlayerIdentityRowHandle NewRow); // Function Icarus.PlayerIdentityLibrary.AddRowToPlayerIdentityTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1665280
};

// Class Icarus.PlayerIdentityTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerIdentityTable : UIcarusDataTable {
};

// Class Icarus.PlayerMovementAudioComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UPlayerMovementAudioComponent : UActorComponent {
	float CurrentWaterImmersion; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Icarus.PlayerObserverSubsystem
// Size: 0xd0 (Inherited: 0x30)
struct UPlayerObserverSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnPlayerDeath; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayerRevived; // 0x40(0x10)
	struct FMulticastInlineDelegate OnRevivedOtherPlayer; // 0x50(0x10)
	struct FMulticastInlineDelegate OnPlayerLevelledUp; // 0x60(0x10)
	struct FMulticastInlineDelegate OnItemCrafted; // 0x70(0x10)
	struct FMulticastInlineDelegate OnFoodConsumed; // 0x80(0x10)
	struct FMulticastInlineDelegate OnProjectileFired; // 0x90(0x10)
	struct FMulticastInlineDelegate OnNightSurvived; // 0xa0(0x10)
	struct FMulticastInlineDelegate OnExperienceGained; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnDistanceTravelled; // 0xc0(0x10)
};

// Class Icarus.PlayerRecorderComponent
// Size: 0x100 (Inherited: 0xd8)
struct UPlayerRecorderComponent : UIcarusStateRecorderComponent {
	struct FPlayerCharacterID PlayerCharacterID; // 0xd8(0x18)
	int32_t AssignedDropshipSpawnUID; // 0xf0(0x04)
	int32_t AssignedDropshipUID; // 0xf4(0x04)
	int32_t AssignedGravestoneUID; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
};

// Class Icarus.PlayerStateRecorderComponent
// Size: 0x1c0 (Inherited: 0x150)
struct UPlayerStateRecorderComponent : UActorStateRecorderComponent {
	struct FPlayerCharacterID PlayerCharacterID; // 0x148(0x18)
	struct FVector Location; // 0x160(0x0c)
	struct FRotator Rotation; // 0x16c(0x0c)
	bool bIsAlive; // 0x178(0x01)
	int32_t Health; // 0x17c(0x04)
	int32_t FoodLevel; // 0x180(0x04)
	int32_t WaterLevel; // 0x184(0x04)
	int32_t OxygenLevel; // 0x188(0x04)
	struct TArray<struct FStomachContent> StomachContents; // 0x190(0x10)
	struct TArray<struct FModifierStateSaveData> Modifiers; // 0x1a0(0x10)
	int32_t RespawnCount; // 0x1b0(0x04)
	bool HasGrantedLoadout; // 0x1b4(0x01)
	char pad_1B6[0xa]; // 0x1b6(0x0a)
};

// Class Icarus.PlayerSubsystem
// Size: 0x90 (Inherited: 0x30)
struct UPlayerSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnItemAddedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnItemCraftedNotify; // 0x40(0x10)
	struct FMulticastInlineDelegate OnSuitSlotUpdatedNotify; // 0x50(0x10)
	struct FMulticastInlineDelegate OnItemShiftedNotify; // 0x60(0x10)
	struct FMulticastInlineDelegate OnItemConsumedNotify; // 0x70(0x10)
	struct FMulticastInlineDelegate OnEnteredWaterNotify; // 0x80(0x10)

	void BroadcastSuitSlotUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastSuitSlotUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x166bbc0
	void BroadcastItemShiftedDelegate(struct AIcarusPlayerCharacter* Player, struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory, int32_t DestinationLocation, int32_t Amount); // Function Icarus.PlayerSubsystem.BroadcastItemShiftedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x166b9e0
	void BroadcastItemCraftedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.PlayerSubsystem.BroadcastItemCraftedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x166b4b0
	void BroadcastItemConsumedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.PlayerSubsystem.BroadcastItemConsumedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x166af80
	void BroadcastItemAddedDelegate(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.PlayerSubsystem.BroadcastItemAddedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x166aa50
	void BroadcastEnteredWaterDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.PlayerSubsystem.BroadcastEnteredWaterDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x166a9b0
};

// Class Icarus.PlayerTalentControllerComponent
// Size: 0xf8 (Inherited: 0xf8)
struct UPlayerTalentControllerComponent : UTalentControllerComponent {
};

// Class Icarus.PlayerTalentModel
// Size: 0xd8 (Inherited: 0xd8)
struct UPlayerTalentModel : UTalentModelInterface {
};

// Class Icarus.PlayerVocalisationComponent
// Size: 0x1a0 (Inherited: 0x110)
struct UPlayerVocalisationComponent : UVocalisationComponent {
	struct FVocalisationsRowHandle BreathingVocalisation; // 0x108(0x18)
	struct FVocalisationsRowHandle LowHealthVocalisation; // 0x120(0x18)
	float LowHealthVocalisationThreshold; // 0x138(0x04)
	struct TSet<struct UModifierStateComponent*> ActiveModifiers; // 0x140(0x50)
	char pad_194[0xc]; // 0x194(0x0c)

	void UpdatePerspective(bool bIsThirdPerson); // Function Icarus.PlayerVocalisationComponent.UpdatePerspective // (Final|Native|Private) // @ game+0x166f010
	void SetDamageParameter(int32_t DamageAmount); // Function Icarus.PlayerVocalisationComponent.SetDamageParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x166e9f0
	void OnHealthUpdated(struct UActorState* ActorState, float NewHealth); // Function Icarus.PlayerVocalisationComponent.OnHealthUpdated // (Final|Native|Public) // @ game+0x166da40
};

// Class Icarus.Pointer
// Size: 0x140 (Inherited: 0x108)
struct UPointer : UWidget {
	struct FLinearColor Tint; // 0x108(0x10)
	bool bAntiAlias; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	float Thickness; // 0x11c(0x04)
	float Angle; // 0x120(0x04)
	float ArrowLength; // 0x124(0x04)
	float HeadLength; // 0x128(0x04)
	char pad_12C[0x14]; // 0x12c(0x14)

	void SetTint(struct FLinearColor InTint); // Function Icarus.Pointer.SetTint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x166ece0
	void SetThickness(float InThickness); // Function Icarus.Pointer.SetThickness // (Final|Native|Public|BlueprintCallable) // @ game+0x166ec60
	void SetHeadLength(float InLength); // Function Icarus.Pointer.SetHeadLength // (Final|Native|Public|BlueprintCallable) // @ game+0x166ea80
	void SetArrowLength(float InLength); // Function Icarus.Pointer.SetArrowLength // (Final|Native|Public|BlueprintCallable) // @ game+0x166e970
	void SetAntiAlias(bool bInAntiAlias); // Function Icarus.Pointer.SetAntiAlias // (Final|Native|Public|BlueprintCallable) // @ game+0x166e8e0
	void SetAngle(float InDegrees); // Function Icarus.Pointer.SetAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x166e860
	struct FLinearColor GetTint(); // Function Icarus.Pointer.GetTint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x166d110
	float GetThickness(); // Function Icarus.Pointer.GetThickness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166d0e0
	float GetHeadLength(); // Function Icarus.Pointer.GetHeadLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166c1e0
	float GetArrowLength(); // Function Icarus.Pointer.GetArrowLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166c1b0
	bool GetAntiAlias(); // Function Icarus.Pointer.GetAntiAlias // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166c180
	float GetAngle(); // Function Icarus.Pointer.GetAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x166c150
};

// Class Icarus.PreviewCameraSettingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPreviewCameraSettingsLibrary : URowLibrary {

	struct FPreviewCameraSettingsRowHandle StructToRowHandle(struct FPreviewCameraSettingsEnum EnumValue); // Function Icarus.PreviewCameraSettingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ef60
	struct FName StructToName(struct FPreviewCameraSettingsEnum EnumValue); // Function Icarus.PreviewCameraSettingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166eec0
	int32_t StructToInt(struct FPreviewCameraSettingsEnum EnumValue); // Function Icarus.PreviewCameraSettingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166ee20
	struct FPreviewCameraSettingsEnum RowHandleToStruct(struct FPreviewCameraSettingsRowHandle RowHandle); // Function Icarus.PreviewCameraSettingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166e5f0
	void RemoveRowFromPreviewCameraSettingsTable(struct FName Name); // Function Icarus.PreviewCameraSettingsLibrary.RemoveRowFromPreviewCameraSettingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x166e570
	void RefreshConstants(); // Function Icarus.PreviewCameraSettingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x166e550
	int32_t NumRows(); // Function Icarus.PreviewCameraSettingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166da10
	bool NotEqual_EnumName(struct FPreviewCameraSettingsEnum A, struct FName B); // Function Icarus.PreviewCameraSettingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d920
	bool NotEqual_EnumEnum(struct FPreviewCameraSettingsEnum A, struct FPreviewCameraSettingsEnum B); // Function Icarus.PreviewCameraSettingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d830
	struct FPreviewCameraSettingsEnum NameToStruct(struct FName NameValue); // Function Icarus.PreviewCameraSettingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d7a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.PreviewCameraSettingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x166d710
	struct FPreviewCameraSettingsRowHandle MakePreviewCameraSettingsFromIndex(int32_t Index); // Function Icarus.PreviewCameraSettingsLibrary.MakePreviewCameraSettingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d680
	struct FPreviewCameraSettingsEnum MakePreviewCameraSettingsEnum(struct FPreviewCameraSettingsEnum Enum); // Function Icarus.PreviewCameraSettingsLibrary.MakePreviewCameraSettingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d600
	struct FPreviewCameraSettingsRowHandle MakePreviewCameraSettings(struct FName RowName); // Function Icarus.PreviewCameraSettingsLibrary.MakePreviewCameraSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d560
	struct FPreviewCameraSettingsRowHandle MakeLiteralPreviewCameraSettings(struct FPreviewCameraSettingsRowHandle RowHandle); // Function Icarus.PreviewCameraSettingsLibrary.MakeLiteralPreviewCameraSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d490
	bool IsValidName(struct FName NameValue); // Function Icarus.PreviewCameraSettingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x166d400
	struct FPreviewCameraSettingsEnum IntToStruct(int32_t IntValue); // Function Icarus.PreviewCameraSettingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166d270
	struct FName IntToName(int32_t IntValue); // Function Icarus.PreviewCameraSettingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x166d1e0
	void GetPreviewCameraSettingsStruct(struct FPreviewCameraSettingsRowHandle RowHandle, struct FPreviewCameraSettings PreviewCameraSettings, enum class EValid Paths); // Function Icarus.PreviewCameraSettingsLibrary.GetPreviewCameraSettingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166c9d0
	bool EqualEqual_FPreviewCameraSettingsRowHandleFPreviewCameraSettingsRowHandle(struct FPreviewCameraSettingsRowHandle RowHandleA, struct FPreviewCameraSettingsRowHandle RowHandleB); // Function Icarus.PreviewCameraSettingsLibrary.EqualEqual_FPreviewCameraSettingsRowHandleFPreviewCameraSettingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166bfe0
	bool EqualEqual_EnumEnum(struct FPreviewCameraSettingsEnum A, struct FPreviewCameraSettingsEnum B); // Function Icarus.PreviewCameraSettingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x166bef0
	struct FPreviewCameraSettingsRowHandle CastToPreviewCameraSettingsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.PreviewCameraSettingsLibrary.CastToPreviewCameraSettingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166bc80
	void BreakPreviewCameraSettingsEnum(struct FPreviewCameraSettingsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.PreviewCameraSettingsLibrary.BreakPreviewCameraSettingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x166a850
	void AddRowToPreviewCameraSettingsTable(struct FName Name, struct FPreviewCameraSettings Data, struct FPreviewCameraSettingsRowHandle NewRow); // Function Icarus.PreviewCameraSettingsLibrary.AddRowToPreviewCameraSettingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x166a610
};

// Class Icarus.PreviewCameraSettingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UPreviewCameraSettingsTable : UIcarusDataTable {
};

// Class Icarus.ProcessingComponent
// Size: 0x1a8 (Inherited: 0xd0)
struct UProcessingComponent : UTraitComponent {
	char pad_D0[0x8]; // 0xd0(0x08)
	struct TArray<struct FProcessingItem> ProcessingQueue; // 0xd8(0x10)
	char pad_E8[0x1]; // 0xe8(0x01)
	struct FMulticastSparseDelegate OnProcessorStateUpdated; // 0xe9(0x01)
	char pad_EA[0x6]; // 0xea(0x06)
	struct UInventory* Inventory; // 0xf0(0x08)
	struct AResourceDeposit* LinkedResource; // 0xf8(0x08)
	float ProcessingProgress; // 0x100(0x04)
	bool bProcessorActive; // 0x104(0x01)
	char pad_105[0x3]; // 0x105(0x03)
	struct FProcessingItem ProcessingItem; // 0x108(0x28)
	struct FRecipeSet RecipeSetOverride; // 0x130(0x60)
	int32_t MillijoulesProcessed; // 0x190(0x04)
	struct FMulticastSparseDelegate OnProcessingStopped; // 0x194(0x01)
	struct FMulticastSparseDelegate OnProcessingItemUpdated; // 0x195(0x01)
	struct FMulticastSparseDelegate OnProcessingItemCompleted; // 0x196(0x01)
	char pad_197[0x1]; // 0x197(0x01)
	struct TArray<enum class EIcarusResourceType> ActivatedNetworks; // 0x198(0x10)

	void StopProcessing(enum class EProcessorStoppedReason Reason); // Function Icarus.ProcessingComponent.StopProcessing // (Final|Native|Protected) // @ game+0x166eda0
	bool ShelterRequirementsMet(); // Function Icarus.ProcessingComponent.ShelterRequirementsMet // (Final|Native|Public|BlueprintCallable) // @ game+0x166ed70
	void SetProcessorState(bool bActive); // Function Icarus.ProcessingComponent.SetProcessorState // (Final|Native|Protected) // @ game+0x166ebd0
	void SetProcessingItem(struct FProcessingItem NewProcessingItem); // Function Icarus.ProcessingComponent.SetProcessingItem // (Final|Native|Protected) // @ game+0x166eb00
	bool SatisfyQueue(struct FProcessingItem AdditionalRecipe, struct TArray<struct UInventory*> AdditionalInventories, bool ShiftItems); // Function Icarus.ProcessingComponent.SatisfyQueue // (Final|Native|Protected) // @ game+0x166e6b0
	void ProcessNextRecipe(); // Function Icarus.ProcessingComponent.ProcessNextRecipe // (Final|Native|Protected) // @ game+0x166e370
	void ProcessingInventoryItemRemoved(struct UInventory* Inventory, int32_t Location); // Function Icarus.ProcessingComponent.ProcessingInventoryItemRemoved // (Final|Native|Protected) // @ game+0x166e480
	void ProcessingInventoryItemAdded(struct UInventory* Inventory, int32_t Location); // Function Icarus.ProcessingComponent.ProcessingInventoryItemAdded // (Final|Native|Protected) // @ game+0x166e3b0
	void ProcessingComplete(); // Function Icarus.ProcessingComponent.ProcessingComplete // (Final|Native|Protected) // @ game+0x166e390
	void Process(float Delta); // Function Icarus.ProcessingComponent.Process // (Final|Native|Public|BlueprintCallable) // @ game+0x166e2f0
	void PopulateRecipe(struct FProcessingItem SelectedRecipe, struct UInventory* PlayerInventory); // Function Icarus.ProcessingComponent.PopulateRecipe // (Final|Native|Protected) // @ game+0x166e1c0
	void OnServerStopProcessing(struct AIcarusPlayerCharacter* LeavingPlayer); // Function Icarus.ProcessingComponent.OnServerStopProcessing // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166dbe0
	void OnServerStopAndClear(struct AIcarusPlayerCharacter* LeavingPlayer); // Function Icarus.ProcessingComponent.OnServerStopAndClear // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166db50
	void OnServer_StopCurrentRecipe(); // Function Icarus.ProcessingComponent.OnServer_StopCurrentRecipe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166e1a0
	void OnServer_StartProcessing(); // Function Icarus.ProcessingComponent.OnServer_StartProcessing // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166e180
	void OnServer_SetResourceNode(struct AResourceDeposit* ResourceNode); // Function Icarus.ProcessingComponent.OnServer_SetResourceNode // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166e0f0
	void OnServer_SetRecipeSet(struct FRecipeSet Set); // Function Icarus.ProcessingComponent.OnServer_SetRecipeSet // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166df30
	void OnServer_RemoveProcessingRecipe(int32_t Location); // Function Icarus.ProcessingComponent.OnServer_RemoveProcessingRecipe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166dea0
	void OnServer_Process(float Delta); // Function Icarus.ProcessingComponent.OnServer_Process // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166de20
	void OnServer_AddProcessingRecipe(struct FProcessorRecipesRowHandle Recipe, int32_t Count, struct TArray<struct UInventory*> AdditionalInventories, struct AIcarusPlayerCharacter* Player); // Function Icarus.ProcessingComponent.OnServer_AddProcessingRecipe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166dc90
	void OnServer_ActivateProcessor(); // Function Icarus.ProcessingComponent.OnServer_ActivateProcessor // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x166dc70
	void OnRep_ProcessorActive(); // Function Icarus.ProcessingComponent.OnRep_ProcessorActive // (Final|Native|Protected) // @ game+0x166db30
	void OnRep_ProcessingItem(); // Function Icarus.ProcessingComponent.OnRep_ProcessingItem // (Final|Native|Protected) // @ game+0x166db10
	bool IsRecipeUnlocked(struct FProcessorRecipesRowHandle Recipe, struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.ProcessingComponent.IsRecipeUnlocked // (Final|Native|Protected|HasOutParms|Const) // @ game+0x166d300
	void Initialise(struct UInventory* ProcessorInventory); // Function Icarus.ProcessingComponent.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x166d150
	int32_t GetResourceRecipeValidility(enum class EIcarusResourceType ResourceType, int32_t RequiredAmount, struct TArray<struct UInventory*> AdditionalInventories); // Function Icarus.ProcessingComponent.GetResourceRecipeValidility // (Final|Native|Public|BlueprintCallable) // @ game+0x166cf70
	struct FRecipeSet GetRecipeSet(); // Function Icarus.ProcessingComponent.GetRecipeSet // (Final|Native|Public|BlueprintCallable) // @ game+0x166ce30
	bool GetRecipeInputs(); // Function Icarus.ProcessingComponent.GetRecipeInputs // (Final|Native|Protected) // @ game+0x166ce00
	struct TArray<struct FProcessingItem> GetProcessingQueue(); // Function Icarus.ProcessingComponent.GetProcessingQueue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x166cd80
	bool GetProcessingData(struct FProcessingData OutData); // Function Icarus.ProcessingComponent.GetProcessingData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x166cb90
	int32_t GetMaxCraftableStack(struct FProcessorRecipesRowHandle Recipe, struct TArray<struct UInventory*> AdditionalInventories, struct AIcarusPlayerCharacter* CraftingPlayer); // Function Icarus.ProcessingComponent.GetMaxCraftableStack // (Final|Native|Public|BlueprintCallable) // @ game+0x166c840
	int32_t GetItemRecipeValidility(struct FItemData Item, int32_t Multiplier, struct TArray<struct UInventory*> AdditionalInventories, int32_t CurrentAmount, float RequiredPercentage); // Function Icarus.ProcessingComponent.GetItemRecipeValidility // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x166c210
	bool FindRecipe(); // Function Icarus.ProcessingComponent.FindRecipe // (Final|Native|Protected) // @ game+0x166c120
	void DeactivateNetworksForProcessing(); // Function Icarus.ProcessingComponent.DeactivateNetworksForProcessing // (Final|Native|Protected) // @ game+0x166bed0
	bool CheckRecipe(struct FProcessorRecipesRowHandle Recipe, struct AIcarusPlayerCharacter* CraftingPlayer); // Function Icarus.ProcessingComponent.CheckRecipe // (Final|Native|Protected) // @ game+0x166bdd0
	bool CheckEnergyRequirements(); // Function Icarus.ProcessingComponent.CheckEnergyRequirements // (Final|Native|Protected) // @ game+0x166bda0
	bool CanProcess(); // Function Icarus.ProcessingComponent.CanProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x166bc50
	void AddItem(struct FItemData Item); // Function Icarus.ProcessingComponent.AddItem // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x166a1c0
};

// Class Icarus.ProcessingLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProcessingLibrary : URowLibrary {

	struct FProcessingRowHandle StructToRowHandle(struct FProcessingEnum EnumValue); // Function Icarus.ProcessingLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674480
	struct FName StructToName(struct FProcessingEnum EnumValue); // Function Icarus.ProcessingLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16742a0
	int32_t StructToInt(struct FProcessingEnum EnumValue); // Function Icarus.ProcessingLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16740c0
	struct FProcessingEnum RowHandleToStruct(struct FProcessingRowHandle RowHandle); // Function Icarus.ProcessingLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673e80
	void RemoveRowFromProcessingTable(struct FName Name); // Function Icarus.ProcessingLibrary.RemoveRowFromProcessingTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1673d00
	void RefreshConstants(); // Function Icarus.ProcessingLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1673ca0
	int32_t NumRows(); // Function Icarus.ProcessingLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673c10
	bool NotEqual_EnumName(struct FProcessingEnum A, struct FName B); // Function Icarus.ProcessingLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673940
	bool NotEqual_EnumEnum(struct FProcessingEnum A, struct FProcessingEnum B); // Function Icarus.ProcessingLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673670
	struct FProcessingEnum NameToStruct(struct FName NameValue); // Function Icarus.ProcessingLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16734c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ProcessingLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1673310
	struct FProcessingRowHandle MakeProcessingFromIndex(int32_t Index); // Function Icarus.ProcessingLibrary.MakeProcessingFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672f20
	struct FProcessingEnum MakeProcessingEnum(struct FProcessingEnum Enum); // Function Icarus.ProcessingLibrary.MakeProcessingEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672ea0
	struct FProcessingRowHandle MakeProcessing(struct FName RowName); // Function Icarus.ProcessingLibrary.MakeProcessing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672e00
	struct FProcessingRowHandle MakeLiteralProcessing(struct FProcessingRowHandle RowHandle); // Function Icarus.ProcessingLibrary.MakeLiteralProcessing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672b90
	bool IsValidName(struct FName NameValue); // Function Icarus.ProcessingLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16729e0
	struct FProcessingEnum IntToStruct(int32_t IntValue); // Function Icarus.ProcessingLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672830
	struct FName IntToName(int32_t IntValue); // Function Icarus.ProcessingLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1672680
	void GetProcessingStruct(struct FProcessingRowHandle RowHandle, struct FProcessingData Processing, enum class EValid Paths); // Function Icarus.ProcessingLibrary.GetProcessingStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1672170
	bool EqualEqual_FProcessingRowHandleFProcessingRowHandle(struct FProcessingRowHandle RowHandleA, struct FProcessingRowHandle RowHandleB); // Function Icarus.ProcessingLibrary.EqualEqual_FProcessingRowHandleFProcessingRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1671db0
	bool EqualEqual_EnumEnum(struct FProcessingEnum A, struct FProcessingEnum B); // Function Icarus.ProcessingLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1671ae0
	struct FProcessingRowHandle CastToProcessingRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ProcessingLibrary.CastToProcessingRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1671780
	void BreakProcessingEnum(struct FProcessingEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ProcessingLibrary.BreakProcessingEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1671360
	void AddRowToProcessingTable(struct FName Name, struct FProcessingData Data, struct FProcessingRowHandle NewRow); // Function Icarus.ProcessingLibrary.AddRowToProcessingTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1670d80
};

// Class Icarus.ProcessingTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProcessingTable : UIcarusDataTable {
};

// Class Icarus.ProcessorRecipesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProcessorRecipesLibrary : URowLibrary {

	struct FProcessorRecipesRowHandle StructToRowHandle(struct FProcessorRecipesEnum EnumValue); // Function Icarus.ProcessorRecipesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674530
	struct FName StructToName(struct FProcessorRecipesEnum EnumValue); // Function Icarus.ProcessorRecipesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674340
	int32_t StructToInt(struct FProcessorRecipesEnum EnumValue); // Function Icarus.ProcessorRecipesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674160
	struct FProcessorRecipesEnum RowHandleToStruct(struct FProcessorRecipesRowHandle RowHandle); // Function Icarus.ProcessorRecipesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673f40
	void RemoveRowFromProcessorRecipesTable(struct FName Name); // Function Icarus.ProcessorRecipesLibrary.RemoveRowFromProcessorRecipesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1673d80
	void RefreshConstants(); // Function Icarus.ProcessorRecipesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1673cc0
	int32_t NumRows(); // Function Icarus.ProcessorRecipesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673c40
	bool NotEqual_EnumName(struct FProcessorRecipesEnum A, struct FName B); // Function Icarus.ProcessorRecipesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673a30
	bool NotEqual_EnumEnum(struct FProcessorRecipesEnum A, struct FProcessorRecipesEnum B); // Function Icarus.ProcessorRecipesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673760
	struct FProcessorRecipesEnum NameToStruct(struct FName NameValue); // Function Icarus.ProcessorRecipesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673550
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ProcessorRecipesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16733a0
	struct FProcessorRecipesRowHandle MakeProcessorRecipesFromIndex(int32_t Index); // Function Icarus.ProcessorRecipesLibrary.MakeProcessorRecipesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16730d0
	struct FProcessorRecipesEnum MakeProcessorRecipesEnum(struct FProcessorRecipesEnum Enum); // Function Icarus.ProcessorRecipesLibrary.MakeProcessorRecipesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673050
	struct FProcessorRecipesRowHandle MakeProcessorRecipes(struct FName RowName); // Function Icarus.ProcessorRecipesLibrary.MakeProcessorRecipes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672fb0
	struct FProcessorRecipesRowHandle MakeLiteralProcessorRecipes(struct FProcessorRecipesRowHandle RowHandle); // Function Icarus.ProcessorRecipesLibrary.MakeLiteralProcessorRecipes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672c60
	bool IsValidName(struct FName NameValue); // Function Icarus.ProcessorRecipesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1672a70
	struct FProcessorRecipesEnum IntToStruct(int32_t IntValue); // Function Icarus.ProcessorRecipesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16728c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ProcessorRecipesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1672710
	void GetProcessorRecipesStruct(struct FProcessorRecipesRowHandle RowHandle, struct FProcessorRecipe ProcessorRecipes, enum class EValid Paths); // Function Icarus.ProcessorRecipesLibrary.GetProcessorRecipesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1672320
	bool EqualEqual_FProcessorRecipesRowHandleFProcessorRecipesRowHandle(struct FProcessorRecipesRowHandle RowHandleA, struct FProcessorRecipesRowHandle RowHandleB); // Function Icarus.ProcessorRecipesLibrary.EqualEqual_FProcessorRecipesRowHandleFProcessorRecipesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1671ef0
	bool EqualEqual_EnumEnum(struct FProcessorRecipesEnum A, struct FProcessorRecipesEnum B); // Function Icarus.ProcessorRecipesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1671bd0
	struct FProcessorRecipesRowHandle CastToProcessorRecipesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ProcessorRecipesLibrary.CastToProcessorRecipesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16718a0
	void BreakProcessorRecipesEnum(struct FProcessorRecipesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ProcessorRecipesLibrary.BreakProcessorRecipesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16714c0
	void AddRowToProcessorRecipesTable(struct FName Name, struct FProcessorRecipe Data, struct FProcessorRecipesRowHandle NewRow); // Function Icarus.ProcessorRecipesLibrary.AddRowToProcessorRecipesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1670fc0
};

// Class Icarus.ProcessorRecipesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProcessorRecipesTable : UIcarusDataTable {
};

// Class Icarus.ProjectileTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProjectileTypesLibrary : URowLibrary {

	struct FProjectileTypesRowHandle StructToRowHandle(struct FProjectileTypesEnum EnumValue); // Function Icarus.ProjectileTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16745e0
	struct FName StructToName(struct FProjectileTypesEnum EnumValue); // Function Icarus.ProjectileTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16743e0
	int32_t StructToInt(struct FProjectileTypesEnum EnumValue); // Function Icarus.ProjectileTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674200
	struct FProjectileTypesEnum RowHandleToStruct(struct FProjectileTypesRowHandle RowHandle); // Function Icarus.ProjectileTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1674000
	void RemoveRowFromProjectileTypesTable(struct FName Name); // Function Icarus.ProjectileTypesLibrary.RemoveRowFromProjectileTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1673e00
	void RefreshConstants(); // Function Icarus.ProjectileTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1673ce0
	int32_t NumRows(); // Function Icarus.ProjectileTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673c70
	bool NotEqual_EnumName(struct FProjectileTypesEnum A, struct FName B); // Function Icarus.ProjectileTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673b20
	bool NotEqual_EnumEnum(struct FProjectileTypesEnum A, struct FProjectileTypesEnum B); // Function Icarus.ProjectileTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673850
	struct FProjectileTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.ProjectileTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16735e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ProjectileTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1673430
	struct FProjectileTypesRowHandle MakeProjectileTypesFromIndex(int32_t Index); // Function Icarus.ProjectileTypesLibrary.MakeProjectileTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673280
	struct FProjectileTypesEnum MakeProjectileTypesEnum(struct FProjectileTypesEnum Enum); // Function Icarus.ProjectileTypesLibrary.MakeProjectileTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673200
	struct FProjectileTypesRowHandle MakeProjectileTypes(struct FName RowName); // Function Icarus.ProjectileTypesLibrary.MakeProjectileTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1673160
	struct FProjectileTypesRowHandle MakeLiteralProjectileTypes(struct FProjectileTypesRowHandle RowHandle); // Function Icarus.ProjectileTypesLibrary.MakeLiteralProjectileTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672d30
	bool IsValidName(struct FName NameValue); // Function Icarus.ProjectileTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1672b00
	struct FProjectileTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ProjectileTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672950
	struct FName IntToName(int32_t IntValue); // Function Icarus.ProjectileTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16727a0
	void GetProjectileTypesStruct(struct FProjectileTypesRowHandle RowHandle, struct FIcarusProjectileType ProjectileTypes, enum class EValid Paths); // Function Icarus.ProjectileTypesLibrary.GetProjectileTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16724f0
	bool EqualEqual_FProjectileTypesRowHandleFProjectileTypesRowHandle(struct FProjectileTypesRowHandle RowHandleA, struct FProjectileTypesRowHandle RowHandleB); // Function Icarus.ProjectileTypesLibrary.EqualEqual_FProjectileTypesRowHandleFProjectileTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1672030
	bool EqualEqual_EnumEnum(struct FProjectileTypesEnum A, struct FProjectileTypesEnum B); // Function Icarus.ProjectileTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1671cc0
	struct FProjectileTypesRowHandle CastToProjectileTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ProjectileTypesLibrary.CastToProjectileTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16719c0
	void BreakProjectileTypesEnum(struct FProjectileTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ProjectileTypesLibrary.BreakProjectileTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1671620
	void AddRowToProjectileTypesTable(struct FName Name, struct FIcarusProjectileType Data, struct FProjectileTypesRowHandle NewRow); // Function Icarus.ProjectileTypesLibrary.AddRowToProjectileTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1671180
};

// Class Icarus.ProjectileTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProjectileTypesTable : UIcarusDataTable {
};

// Class Icarus.ProspectListLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProspectListLibrary : URowLibrary {

	struct FProspectListRowHandle StructToRowHandle(struct FProspectListEnum EnumValue); // Function Icarus.ProspectListLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16798f0
	struct FName StructToName(struct FProspectListEnum EnumValue); // Function Icarus.ProspectListLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16797b0
	int32_t StructToInt(struct FProspectListEnum EnumValue); // Function Icarus.ProspectListLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679670
	struct FProspectListEnum RowHandleToStruct(struct FProspectListRowHandle RowHandle); // Function Icarus.ProspectListLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679470
	void RemoveRowFromProspectListTable(struct FName Name); // Function Icarus.ProspectListLibrary.RemoveRowFromProspectListTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1679370
	void RefreshConstants(); // Function Icarus.ProspectListLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1679330
	int32_t NumRows(); // Function Icarus.ProspectListLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679220
	bool NotEqual_EnumName(struct FProspectListEnum A, struct FName B); // Function Icarus.ProspectListLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679040
	bool NotEqual_EnumEnum(struct FProspectListEnum A, struct FProspectListEnum B); // Function Icarus.ProspectListLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678e60
	struct FProspectListEnum NameToStruct(struct FName NameValue); // Function Icarus.ProspectListLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678d40
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ProspectListLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1678c20
	struct FProspectListRowHandle MakeProspectListFromIndex(int32_t Index); // Function Icarus.ProspectListLibrary.MakeProspectListFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16789e0
	struct FProspectListEnum MakeProspectListEnum(struct FProspectListEnum Enum); // Function Icarus.ProspectListLibrary.MakeProspectListEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678960
	struct FProspectListRowHandle MakeProspectList(struct FName RowName); // Function Icarus.ProspectListLibrary.MakeProspectList // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16788c0
	struct FProspectListRowHandle MakeLiteralProspectList(struct FProspectListRowHandle RowHandle); // Function Icarus.ProspectListLibrary.MakeLiteralProspectList // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678720
	bool IsValidName(struct FName NameValue); // Function Icarus.ProspectListLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1678570
	struct FProspectListEnum IntToStruct(int32_t IntValue); // Function Icarus.ProspectListLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678450
	struct FName IntToName(int32_t IntValue); // Function Icarus.ProspectListLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1678330
	void GetProspectListStruct(struct FProspectListRowHandle RowHandle, struct FIcarusProspect ProspectList, enum class EValid Paths); // Function Icarus.ProspectListLibrary.GetProspectListStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1677d60
	bool EqualEqual_FProspectListRowHandleFProspectListRowHandle(struct FProspectListRowHandle RowHandleA, struct FProspectListRowHandle RowHandleB); // Function Icarus.ProspectListLibrary.EqualEqual_FProspectListRowHandleFProspectListRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16779e0
	bool EqualEqual_EnumEnum(struct FProspectListEnum A, struct FProspectListEnum B); // Function Icarus.ProspectListLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1677800
	struct FProspectListRowHandle CastToProspectListRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ProspectListLibrary.CastToProspectListRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16775c0
	void BreakProspectListEnum(struct FProspectListEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ProspectListLibrary.BreakProspectListEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1677300
	void AddRowToProspectListTable(struct FName Name, struct FIcarusProspect Data, struct FProspectListRowHandle NewRow); // Function Icarus.ProspectListLibrary.AddRowToProspectListTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1676f00
};

// Class Icarus.ProspectListTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProspectListTable : UIcarusDataTable {
};

// Class Icarus.ProspectStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UProspectStatsLibrary : URowLibrary {

	struct FProspectStatsRowHandle StructToRowHandle(struct FProspectStatsEnum EnumValue); // Function Icarus.ProspectStatsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16799a0
	struct FName StructToName(struct FProspectStatsEnum EnumValue); // Function Icarus.ProspectStatsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679850
	int32_t StructToInt(struct FProspectStatsEnum EnumValue); // Function Icarus.ProspectStatsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679710
	struct FProspectStatsEnum RowHandleToStruct(struct FProspectStatsRowHandle RowHandle); // Function Icarus.ProspectStatsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679530
	void RemoveRowFromProspectStatsTable(struct FName Name); // Function Icarus.ProspectStatsLibrary.RemoveRowFromProspectStatsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16793f0
	void RefreshConstants(); // Function Icarus.ProspectStatsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1679350
	int32_t NumRows(); // Function Icarus.ProspectStatsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679250
	bool NotEqual_EnumName(struct FProspectStatsEnum A, struct FName B); // Function Icarus.ProspectStatsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1679130
	bool NotEqual_EnumEnum(struct FProspectStatsEnum A, struct FProspectStatsEnum B); // Function Icarus.ProspectStatsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678f50
	struct FProspectStatsEnum NameToStruct(struct FName NameValue); // Function Icarus.ProspectStatsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678dd0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ProspectStatsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1678cb0
	struct FProspectStatsRowHandle MakeProspectStatsFromIndex(int32_t Index); // Function Icarus.ProspectStatsLibrary.MakeProspectStatsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678b90
	struct FProspectStatsEnum MakeProspectStatsEnum(struct FProspectStatsEnum Enum); // Function Icarus.ProspectStatsLibrary.MakeProspectStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678b10
	struct FProspectStatsRowHandle MakeProspectStats(struct FName RowName); // Function Icarus.ProspectStatsLibrary.MakeProspectStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1678a70
	struct FProspectStatsRowHandle MakeLiteralProspectStats(struct FProspectStatsRowHandle RowHandle); // Function Icarus.ProspectStatsLibrary.MakeLiteralProspectStats // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16787f0
	bool IsValidName(struct FName NameValue); // Function Icarus.ProspectStatsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1678600
	struct FProspectStatsEnum IntToStruct(int32_t IntValue); // Function Icarus.ProspectStatsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16784e0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ProspectStatsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16783c0
	void GetProspectStatsStruct(struct FProspectStatsRowHandle RowHandle, struct FProspectStat ProspectStats, enum class EValid Paths); // Function Icarus.ProspectStatsLibrary.GetProspectStatsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1677ee0
	bool EqualEqual_FProspectStatsRowHandleFProspectStatsRowHandle(struct FProspectStatsRowHandle RowHandleA, struct FProspectStatsRowHandle RowHandleB); // Function Icarus.ProspectStatsLibrary.EqualEqual_FProspectStatsRowHandleFProspectStatsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1677b20
	bool EqualEqual_EnumEnum(struct FProspectStatsEnum A, struct FProspectStatsEnum B); // Function Icarus.ProspectStatsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16778f0
	struct FProspectStatsRowHandle CastToProspectStatsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ProspectStatsLibrary.CastToProspectStatsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16776e0
	void BreakProspectStatsEnum(struct FProspectStatsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ProspectStatsLibrary.BreakProspectStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1677460
	void AddRowToProspectStatsTable(struct FName Name, struct FProspectStat Data, struct FProspectStatsRowHandle NewRow); // Function Icarus.ProspectStatsLibrary.AddRowToProspectStatsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1677070
};

// Class Icarus.ProspectStatsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UProspectStatsTable : UIcarusDataTable {
};

// Class Icarus.ProspectSubsystem
// Size: 0x1c0 (Inherited: 0x30)
struct UProspectSubsystem : UGameInstanceSubsystem {
	struct FOnlineProspectInfo ActiveProspect; // 0x30(0x150)
	struct FProspectBlob ActiveProspectBlob; // 0x180(0x40)

	bool HasActiveProspect(); // Function Icarus.ProspectSubsystem.HasActiveProspect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1678300
	struct FProspectInfo GetActiveProspectInfo(); // Function Icarus.ProspectSubsystem.GetActiveProspectInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1677d20
	struct FString GetActiveProspectID(); // Function Icarus.ProspectSubsystem.GetActiveProspectID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1677ce0
	struct FIcarusProspect GetActiveProspectData(); // Function Icarus.ProspectSubsystem.GetActiveProspectData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1677ca0
	struct FOnlineProspectInfo GetActiveProspect(); // Function Icarus.ProspectSubsystem.GetActiveProspect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1677c60
};

// Class Icarus.ProspectTalentModel
// Size: 0xd8 (Inherited: 0xd8)
struct UProspectTalentModel : UTalentModelInterface {
};

// Class Icarus.QuestAsyncActionBase
// Size: 0x38 (Inherited: 0x30)
struct UQuestAsyncActionBase : UBlueprintAsyncActionBase {
	struct UObject* WorldContext; // 0x30(0x08)
};

// Class Icarus.QuestBase
// Size: 0x2d8 (Inherited: 0x2a0)
struct AQuestBase : AIcarusActor {
	struct TArray<struct AIcarusActor*> RelevantActors; // 0x2a0(0x10)
	struct FQuestsMultiRowHandle QuestRow; // 0x2b0(0x18)
	struct AQuestMarker* QuestMarker; // 0x2c8(0x08)
	enum class EQuestFinishState QuestState; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)

	void SetQuestState(enum class EQuestFinishState InQuestState); // Function Icarus.QuestBase.SetQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x16795f0
	void OnRestoreFromDatabase(); // Function Icarus.QuestBase.OnRestoreFromDatabase // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnRep_QuestState(); // Function Icarus.QuestBase.OnRep_QuestState // (Final|Native|Protected) // @ game+0x1679310
	struct TArray<struct AIcarusPlayerCharacter*> GetRelevantPlayers(); // Function Icarus.QuestBase.GetRelevantPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x1678280
	bool GetQuestData(struct FQuestData QuestData); // Function Icarus.QuestBase.GetQuestData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16780d0
	void BP_OnRep_QuestState(); // Function Icarus.QuestBase.BP_OnRep_QuestState // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.QuestBlueprintTalentsUpdatedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestBlueprintTalentsUpdatedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnBlueprintTalentsUpdated; // 0x38(0x10)

	void OnQuestBlueprintTalentsUpdatedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.QuestBlueprintTalentsUpdatedAsync.OnQuestBlueprintTalentsUpdatedNotify // (Final|Native|Private) // @ game+0x1679280
	struct UQuestBlueprintTalentsUpdatedAsync* ListenForBlueprintTalentsUpdated(struct UObject* WorldContextObject); // Function Icarus.QuestBlueprintTalentsUpdatedAsync.ListenForBlueprintTalentsUpdated // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1678690
};

// Class Icarus.QuestBuildingPiecePlacedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestBuildingPiecePlacedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnBuildingPiecePlaced; // 0x38(0x10)

	void OnQuestBuildingPiecePlacedNotify(struct AIcarusPlayerCharacter* Player, struct ABuildingBase* Building); // Function Icarus.QuestBuildingPiecePlacedAsync.OnQuestBuildingPiecePlacedNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestBuildingPiecePlacedAsync* ListenForBuildingPiecePlaced(struct UObject* WorldContextObject); // Function Icarus.QuestBuildingPiecePlacedAsync.ListenForBuildingPiecePlaced // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d3a0
};

// Class Icarus.QuestBuildingPieceRemovedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestBuildingPieceRemovedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnBuildingPieceRemoved; // 0x38(0x10)

	void OnQuestBuildingPieceRemovedNotify(struct AIcarusPlayerCharacter* Player, struct ABuildingBase* Building); // Function Icarus.QuestBuildingPieceRemovedAsync.OnQuestBuildingPieceRemovedNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestBuildingPieceRemovedAsync* ListenForBuildingPieceRemoved(struct UObject* WorldContextObject); // Function Icarus.QuestBuildingPieceRemovedAsync.ListenForBuildingPieceRemoved // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d430
};

// Class Icarus.QuestDeployAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestDeployAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnDeploy; // 0x38(0x10)

	void OnQuestDeployNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.QuestDeployAsync.OnQuestDeployNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestDeployAsync* ListenForDeploy(struct UObject* WorldContextObject); // Function Icarus.QuestDeployAsync.ListenForDeploy // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d4c0
};

// Class Icarus.QuestDropShipEnterAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestDropShipEnterAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnDropShipEnter; // 0x38(0x10)

	void OnQuestDropShipEnterNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.QuestDropShipEnterAsync.OnQuestDropShipEnterNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestDropShipEnterAsync* ListenForDropShipEnter(struct UObject* WorldContextObject); // Function Icarus.QuestDropShipEnterAsync.ListenForDropShipEnter // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d550
};

// Class Icarus.QuestDropShipExitAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestDropShipExitAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnDropShipExit; // 0x38(0x10)

	void OnQuestDropShipExitNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.QuestDropShipExitAsync.OnQuestDropShipExitNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestDropShipExitAsync* ListenForDropShipExit(struct UObject* WorldContextObject); // Function Icarus.QuestDropShipExitAsync.ListenForDropShipExit // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d5e0
};

// Class Icarus.QuestDropShipInteractAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestDropShipInteractAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnDropShipInteract; // 0x38(0x10)

	void OnQuestDropShipInteractNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusRocket* Dropship); // Function Icarus.QuestDropShipInteractAsync.OnQuestDropShipInteractNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestDropShipInteractAsync* ListenForDropShipInteract(struct UObject* WorldContextObject); // Function Icarus.QuestDropShipInteractAsync.ListenForDropShipInteract // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d670
};

// Class Icarus.QuestEnemyModifiersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestEnemyModifiersLibrary : URowLibrary {

	struct FQuestEnemyModifiersRowHandle StructToRowHandle(struct FQuestEnemyModifiersEnum EnumValue); // Function Icarus.QuestEnemyModifiersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167e6f0
	struct FName StructToName(struct FQuestEnemyModifiersEnum EnumValue); // Function Icarus.QuestEnemyModifiersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167e650
	int32_t StructToInt(struct FQuestEnemyModifiersEnum EnumValue); // Function Icarus.QuestEnemyModifiersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167e5b0
	struct FQuestEnemyModifiersEnum RowHandleToStruct(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestEnemyModifiersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167e4f0
	void RemoveRowFromQuestEnemyModifiersTable(struct FName Name); // Function Icarus.QuestEnemyModifiersLibrary.RemoveRowFromQuestEnemyModifiersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167e470
	void RefreshConstants(); // Function Icarus.QuestEnemyModifiersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x167e450
	int32_t NumRows(); // Function Icarus.QuestEnemyModifiersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dec0
	bool NotEqual_EnumName(struct FQuestEnemyModifiersEnum A, struct FName B); // Function Icarus.QuestEnemyModifiersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167ddd0
	bool NotEqual_EnumEnum(struct FQuestEnemyModifiersEnum A, struct FQuestEnemyModifiersEnum B); // Function Icarus.QuestEnemyModifiersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dce0
	struct FQuestEnemyModifiersEnum NameToStruct(struct FName NameValue); // Function Icarus.QuestEnemyModifiersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dc50
	int32_t NameToInt(struct FName NameValue); // Function Icarus.QuestEnemyModifiersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x167dbc0
	struct FQuestEnemyModifiersRowHandle MakeQuestEnemyModifiersFromIndex(int32_t Index); // Function Icarus.QuestEnemyModifiersLibrary.MakeQuestEnemyModifiersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167db30
	struct FQuestEnemyModifiersEnum MakeQuestEnemyModifiersEnum(struct FQuestEnemyModifiersEnum Enum); // Function Icarus.QuestEnemyModifiersLibrary.MakeQuestEnemyModifiersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167dab0
	struct FQuestEnemyModifiersRowHandle MakeQuestEnemyModifiers(struct FName RowName); // Function Icarus.QuestEnemyModifiersLibrary.MakeQuestEnemyModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167da10
	struct FQuestEnemyModifiersRowHandle MakeLiteralQuestEnemyModifiers(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestEnemyModifiersLibrary.MakeLiteralQuestEnemyModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167d940
	bool IsValidName(struct FName NameValue); // Function Icarus.QuestEnemyModifiersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x167d310
	struct FQuestEnemyModifiersEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestEnemyModifiersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167d280
	struct FName IntToName(int32_t IntValue); // Function Icarus.QuestEnemyModifiersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x167d1f0
	void GetQuestEnemyModifiersStruct(struct FQuestEnemyModifiersRowHandle RowHandle, struct FQuestEnemyModifier QuestEnemyModifiers, enum class EValid Paths); // Function Icarus.QuestEnemyModifiersLibrary.GetQuestEnemyModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167caf0
	bool EqualEqual_FQuestEnemyModifiersRowHandleFQuestEnemyModifiersRowHandle(struct FQuestEnemyModifiersRowHandle RowHandleA, struct FQuestEnemyModifiersRowHandle RowHandleB); // Function Icarus.QuestEnemyModifiersLibrary.EqualEqual_FQuestEnemyModifiersRowHandleFQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167c560
	bool EqualEqual_EnumEnum(struct FQuestEnemyModifiersEnum A, struct FQuestEnemyModifiersEnum B); // Function Icarus.QuestEnemyModifiersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x167c470
	struct FQuestEnemyModifiersRowHandle CastToQuestEnemyModifiersRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.QuestEnemyModifiersLibrary.CastToQuestEnemyModifiersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167c350
	void BreakQuestEnemyModifiersEnum(struct FQuestEnemyModifiersEnum Enum, struct FName Name, int32_t Index); // Function Icarus.QuestEnemyModifiersLibrary.BreakQuestEnemyModifiersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x167c1f0
	void AddRowToQuestEnemyModifiersTable(struct FName Name, struct FQuestEnemyModifier Data, struct FQuestEnemyModifiersRowHandle NewRow); // Function Icarus.QuestEnemyModifiersLibrary.AddRowToQuestEnemyModifiersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167bed0
};

// Class Icarus.QuestEnemyModifiersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestEnemyModifiersTable : UIcarusDataTable {
};

// Class Icarus.QuestEnteredWaterAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestEnteredWaterAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnEnteredWater; // 0x38(0x10)

	void OnQuestEnteredWaterNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.QuestEnteredWaterAsync.OnQuestEnteredWaterNotify // (Final|Native|Private) // @ game+0x1679280
	struct UQuestEnteredWaterAsync* ListenForEnteredWater(struct UObject* WorldContextObject); // Function Icarus.QuestEnteredWaterAsync.ListenForEnteredWater // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d700
};

// Class Icarus.QuestFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestFunctionLibrary : UBlueprintFunctionLibrary {

	struct FName GetQuestsTableName(enum class EQuestsTableType TableType); // Function Icarus.QuestFunctionLibrary.GetQuestsTableName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167d160
	struct FName GetQuestsModifierTableName(enum class EQuestModifiersTableType TableType); // Function Icarus.QuestFunctionLibrary.GetQuestsModifierTableName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167d0d0
	bool GetQuestModifierDataFromRowHandle(struct FRowHandle RowHandle, struct FQuestModifierData OutData); // Function Icarus.QuestFunctionLibrary.GetQuestModifierDataFromRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167cf80
	bool GetQuestModifierData(struct FQuestModifiersMultiRowHandle RowHandle, struct FQuestModifierData OutData); // Function Icarus.QuestFunctionLibrary.GetQuestModifierData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167ce20
	bool GetQuestModifierClassFromRow(struct FQuestModifiersMultiRowHandle RowHandle, struct TSoftClassPtr<UObject> OutQuestModifierClass); // Function Icarus.QuestFunctionLibrary.GetQuestModifierClassFromRow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167cce0
	bool GetQuestDataFromRowHandle(struct FRowHandle RowHandle, struct FQuestData OutData); // Function Icarus.QuestFunctionLibrary.GetQuestDataFromRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167c9d0
	bool GetQuestData(struct FQuestsMultiRowHandle RowHandle, struct FQuestData OutData); // Function Icarus.QuestFunctionLibrary.GetQuestData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167c8b0
	bool GetQuestClassFromRow(struct FQuestsMultiRowHandle RowHandle, struct TSoftClassPtr<UObject> OutQuestClass); // Function Icarus.QuestFunctionLibrary.GetQuestClassFromRow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x167c770
	struct AMissionManager* GetMissionManagerFromQuest(struct UObject* WorldContextObject, struct AQuestBase* InQuest); // Function Icarus.QuestFunctionLibrary.GetMissionManagerFromQuest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x167c6a0
};

// Class Icarus.QuestGeneratorActivatedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestGeneratorActivatedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnGeneratorActivated; // 0x38(0x10)

	void OnQuestGeneratorActivatedNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.QuestGeneratorActivatedAsync.OnQuestGeneratorActivatedNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestGeneratorActivatedAsync* ListenForGeneratorActivated(struct UObject* WorldContextObject); // Function Icarus.QuestGeneratorActivatedAsync.ListenForGeneratorActivated // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d790
};

// Class Icarus.QuestGeneratorDeactivatedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestGeneratorDeactivatedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnGeneratorDeactivated; // 0x38(0x10)

	void OnQuestGeneratorDeactivatedNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* Deployable); // Function Icarus.QuestGeneratorDeactivatedAsync.OnQuestGeneratorDeactivatedNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestGeneratorDeactivatedAsync* ListenForGeneratorDeactivated(struct UObject* WorldContextObject); // Function Icarus.QuestGeneratorDeactivatedAsync.ListenForGeneratorDeactivated // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d820
};

// Class Icarus.QuestItemAddedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestItemAddedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnItemAdded; // 0x38(0x10)

	void OnQuestItemAddedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.QuestItemAddedAsync.OnQuestItemAddedNotify // (Final|Native|Private) // @ game+0x167dfc0
	struct UQuestItemAddedAsync* ListenForItemAdded(struct UObject* WorldContextObject); // Function Icarus.QuestItemAddedAsync.ListenForItemAdded // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x167d8b0
};

// Class Icarus.QuestItemConsumedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestItemConsumedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnItemConsumed; // 0x38(0x10)

	void OnQuestItemConsumedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.QuestItemConsumedAsync.OnQuestItemConsumedNotify // (Final|Native|Private) // @ game+0x167dfc0
	struct UQuestItemConsumedAsync* ListenForItemConsumed(struct UObject* WorldContextObject); // Function Icarus.QuestItemConsumedAsync.ListenForItemConsumed // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1682c90
};

// Class Icarus.QuestItemCraftedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestItemCraftedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnItemCrafted; // 0x38(0x10)

	void OnQuestItemCraftedNotify(struct AIcarusPlayerCharacter* Player, struct FItemData Item); // Function Icarus.QuestItemCraftedAsync.OnQuestItemCraftedNotify // (Final|Native|Private) // @ game+0x167dfc0
	struct UQuestItemCraftedAsync* ListenForItemCrafted(struct UObject* WorldContextObject); // Function Icarus.QuestItemCraftedAsync.ListenForItemCrafted // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1682d20
};

// Class Icarus.QuestItemShiftedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestItemShiftedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnItemShifted; // 0x38(0x10)

	void OnQuestItemShiftedNotify(struct AIcarusPlayerCharacter* Player, struct UInventory* SourceInventory, int32_t SourceLocation, struct UInventory* DestinationInventory, int32_t DestinationLocation, int32_t Amount); // Function Icarus.QuestItemShiftedAsync.OnQuestItemShiftedNotify // (Final|Native|Private) // @ game+0x16836f0
	struct UQuestItemShiftedAsync* ListenForItemShifted(struct UObject* WorldContextObject); // Function Icarus.QuestItemShiftedAsync.ListenForItemShifted // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1682db0
};

// Class Icarus.QuestMarker
// Size: 0x220 (Inherited: 0x220)
struct AQuestMarker : AActor {
};

// Class Icarus.QuestModifierBase
// Size: 0xc0 (Inherited: 0xb0)
struct UQuestModifierBase : UActorComponent {
	struct TArray<enum class EQuestsTableType> SupportedQuestTypes; // 0xb0(0x10)
};

// Class Icarus.QuestModifiersMultiRowHandleFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestModifiersMultiRowHandleFunctionLibrary : UBlueprintFunctionLibrary {

	struct FQuestModifiersMultiRowHandle Make(enum class EQuestModifiersTableType Enum, struct FName RowName); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.Make // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x1682f60
	struct FName GetTableNameByIndex(char TableIndex); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.GetTableNameByIndex // (Final|Native|Static|Public) // @ game+0x16829c0
	char GetTableIndexByName(struct FName TableName); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.GetTableIndexByName // (Final|Native|Static|Public) // @ game+0x16828a0
	struct FQuestModifiersMultiRowHandle FromQuestWeatherModifiersRowHandle(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.FromQuestWeatherModifiersRowHandle // (Final|Native|Static|Public) // @ game+0x1682320
	struct FQuestModifiersMultiRowHandle FromQuestVocalisationModifiersRowHandle(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.FromQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public) // @ game+0x1682250
	struct FQuestModifiersMultiRowHandle FromQuestEnemyModifiersRowHandle(struct FQuestEnemyModifiersRowHandle RowHandle); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.FromQuestEnemyModifiersRowHandle // (Final|Native|Static|Public) // @ game+0x1682180
	void Break(struct FQuestModifiersMultiRowHandle MultiRowHandle, enum class EQuestModifiersTableType OutEnum, struct FName OutName); // Function Icarus.QuestModifiersMultiRowHandleFunctionLibrary.Break // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1681600
};

// Class Icarus.QuestPlayerTalentsUpdatedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestPlayerTalentsUpdatedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnPlayerTalentsUpdated; // 0x38(0x10)

	void OnQuestPlayerTalentsUpdatedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.QuestPlayerTalentsUpdatedAsync.OnQuestPlayerTalentsUpdatedNotify // (Final|Native|Private) // @ game+0x1679280
	struct UQuestPlayerTalentsUpdatedAsync* ListenForPlayerTalentsUpdated(struct UObject* WorldContextObject); // Function Icarus.QuestPlayerTalentsUpdatedAsync.ListenForPlayerTalentsUpdated // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1682e40
};

// Class Icarus.QuestRecorderInterface
// Size: 0x28 (Inherited: 0x28)
struct UQuestRecorderInterface : UInterface {

	void SetQuestValues(struct TArray<bool> Bools, struct TArray<float> Floats, struct TArray<int32_t> Intergers); // Function Icarus.QuestRecorderInterface.SetQuestValues // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1683a20
	void GetQuestValues(struct TArray<bool> Bools, struct TArray<float> Floats, struct TArray<int32_t> Intergers); // Function Icarus.QuestRecorderInterface.GetQuestValues // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1682590
};

// Class Icarus.QuestRecorderComponent
// Size: 0x1a0 (Inherited: 0x150)
struct UQuestRecorderComponent : UActorStateRecorderComponent {
	struct TArray<bool> SavedBools; // 0x148(0x10)
	struct TArray<float> SavedFloats; // 0x158(0x10)
	struct TArray<int32_t> SavedIntegers; // 0x168(0x10)
	struct TArray<struct FRelevantActorRecord> RelevantActorRecords; // 0x178(0x10)
	struct FName QuestMarkerName; // 0x188(0x08)
	enum class EQuestFinishState SavedQuestState; // 0x190(0x01)
	struct FQuestRowRecord QuestRowRecord; // 0x194(0x0c)
};

// Class Icarus.QuestsMultiRowHandleFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestsMultiRowHandleFunctionLibrary : UBlueprintFunctionLibrary {

	struct FQuestsMultiRowHandle Make(enum class EQuestsTableType Enum, struct FName RowName); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.Make // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x1683050
	struct FName GetTableNameByIndex(char TableIndex); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.GetTableNameByIndex // (Final|Native|Static|Public) // @ game+0x1682a50
	char GetTableIndexByName(struct FName TableName); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.GetTableIndexByName // (Final|Native|Static|Public) // @ game+0x1682930
	struct FQuestsMultiRowHandle FromTravelQuestsRowHandle(struct FTravelQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromTravelQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x16824c0
	struct FQuestsMultiRowHandle FromRecoveryQuestsRowHandle(struct FRecoveryQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromRecoveryQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x16823f0
	struct FQuestsMultiRowHandle FromKillQuestsRowHandle(struct FKillQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromKillQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x16820b0
	struct FQuestsMultiRowHandle FromFetchQuestsRowHandle(struct FFetchQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromFetchQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x1681fe0
	struct FQuestsMultiRowHandle FromDeployQuestsRowHandle(struct FDeployQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromDeployQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x1681f10
	struct FQuestsMultiRowHandle FromDefendQuestsRowHandle(struct FDefendQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromDefendQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x1681e40
	struct FQuestsMultiRowHandle FromCustomQuestsRowHandle(struct FCustomQuestsRowHandle RowHandle); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.FromCustomQuestsRowHandle // (Final|Native|Static|Public) // @ game+0x1681d70
	void Break(struct FQuestsMultiRowHandle MultiRowHandle, enum class EQuestsTableType OutEnum, struct FName OutName); // Function Icarus.QuestsMultiRowHandleFunctionLibrary.Break // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1681760
};

// Class Icarus.QuestSuitSlotUpdatedAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestSuitSlotUpdatedAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnSuitSlotUpdated; // 0x38(0x10)

	void OnQuestSuitSlotUpdatedNotify(struct AIcarusPlayerCharacter* Player); // Function Icarus.QuestSuitSlotUpdatedAsync.OnQuestSuitSlotUpdatedNotify // (Final|Native|Private) // @ game+0x1679280
	struct UQuestSuitSlotUpdatedAsync* ListenForSuitSlotUpdated(struct UObject* WorldContextObject); // Function Icarus.QuestSuitSlotUpdatedAsync.ListenForSuitSlotUpdated // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1682ed0
};

// Class Icarus.QuestVocalisationModifiersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestVocalisationModifiersLibrary : URowLibrary {

	struct FQuestVocalisationModifiersRowHandle StructToRowHandle(struct FQuestVocalisationModifiersEnum EnumValue); // Function Icarus.QuestVocalisationModifiersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683cf0
	struct FName StructToName(struct FQuestVocalisationModifiersEnum EnumValue); // Function Icarus.QuestVocalisationModifiersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683c50
	int32_t StructToInt(struct FQuestVocalisationModifiersEnum EnumValue); // Function Icarus.QuestVocalisationModifiersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683bb0
	struct FQuestVocalisationModifiersEnum RowHandleToStruct(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestVocalisationModifiersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683960
	void RemoveRowFromQuestVocalisationModifiersTable(struct FName Name); // Function Icarus.QuestVocalisationModifiersLibrary.RemoveRowFromQuestVocalisationModifiersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16838e0
	void RefreshConstants(); // Function Icarus.QuestVocalisationModifiersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16838c0
	int32_t NumRows(); // Function Icarus.QuestVocalisationModifiersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16836c0
	bool NotEqual_EnumName(struct FQuestVocalisationModifiersEnum A, struct FName B); // Function Icarus.QuestVocalisationModifiersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16835d0
	bool NotEqual_EnumEnum(struct FQuestVocalisationModifiersEnum A, struct FQuestVocalisationModifiersEnum B); // Function Icarus.QuestVocalisationModifiersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16834e0
	struct FQuestVocalisationModifiersEnum NameToStruct(struct FName NameValue); // Function Icarus.QuestVocalisationModifiersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683450
	int32_t NameToInt(struct FName NameValue); // Function Icarus.QuestVocalisationModifiersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16833c0
	struct FQuestVocalisationModifiersRowHandle MakeQuestVocalisationModifiersFromIndex(int32_t Index); // Function Icarus.QuestVocalisationModifiersLibrary.MakeQuestVocalisationModifiersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683330
	struct FQuestVocalisationModifiersEnum MakeQuestVocalisationModifiersEnum(struct FQuestVocalisationModifiersEnum Enum); // Function Icarus.QuestVocalisationModifiersLibrary.MakeQuestVocalisationModifiersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16832b0
	struct FQuestVocalisationModifiersRowHandle MakeQuestVocalisationModifiers(struct FName RowName); // Function Icarus.QuestVocalisationModifiersLibrary.MakeQuestVocalisationModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683210
	struct FQuestVocalisationModifiersRowHandle MakeLiteralQuestVocalisationModifiers(struct FQuestVocalisationModifiersRowHandle RowHandle); // Function Icarus.QuestVocalisationModifiersLibrary.MakeLiteralQuestVocalisationModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1683140
	bool IsValidName(struct FName NameValue); // Function Icarus.QuestVocalisationModifiersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1682c00
	struct FQuestVocalisationModifiersEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestVocalisationModifiersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1682b70
	struct FName IntToName(int32_t IntValue); // Function Icarus.QuestVocalisationModifiersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1682ae0
	void GetQuestVocalisationModifiersStruct(struct FQuestVocalisationModifiersRowHandle RowHandle, struct FQuestVocalisationModifier QuestVocalisationModifiers, enum class EValid Paths); // Function Icarus.QuestVocalisationModifiersLibrary.GetQuestVocalisationModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1682720
	bool EqualEqual_FQuestVocalisationModifiersRowHandleFQuestVocalisationModifiersRowHandle(struct FQuestVocalisationModifiersRowHandle RowHandleA, struct FQuestVocalisationModifiersRowHandle RowHandleB); // Function Icarus.QuestVocalisationModifiersLibrary.EqualEqual_FQuestVocalisationModifiersRowHandleFQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1681c30
	bool EqualEqual_EnumEnum(struct FQuestVocalisationModifiersEnum A, struct FQuestVocalisationModifiersEnum B); // Function Icarus.QuestVocalisationModifiersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1681b40
	struct FQuestVocalisationModifiersRowHandle CastToQuestVocalisationModifiersRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.QuestVocalisationModifiersLibrary.CastToQuestVocalisationModifiersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1681a20
	void BreakQuestVocalisationModifiersEnum(struct FQuestVocalisationModifiersEnum Enum, struct FName Name, int32_t Index); // Function Icarus.QuestVocalisationModifiersLibrary.BreakQuestVocalisationModifiersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16818c0
	void AddRowToQuestVocalisationModifiersTable(struct FName Name, struct FQuestVocalisationModifier Data, struct FQuestVocalisationModifiersRowHandle NewRow); // Function Icarus.QuestVocalisationModifiersLibrary.AddRowToQuestVocalisationModifiersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1681490
};

// Class Icarus.QuestVocalisationModifiersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestVocalisationModifiersTable : UIcarusDataTable {
};

// Class Icarus.QuestVoxelHitAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestVoxelHitAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnVoxelHit; // 0x38(0x10)

	void OnQuestVoxelHitNotify(struct AIcarusPlayerCharacter* Player, struct AVoxelResource* Voxel); // Function Icarus.QuestVoxelHitAsync.OnQuestVoxelHitNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestVoxelHitAsync* ListenForVoxelHit(struct UObject* WorldContextObject); // Function Icarus.QuestVoxelHitAsync.ListenForVoxelHit // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x16889f0
};

// Class Icarus.QuestWaterSourceInteractAsync
// Size: 0x48 (Inherited: 0x38)
struct UQuestWaterSourceInteractAsync : UQuestAsyncActionBase {
	struct FMulticastInlineDelegate OnWaterSourceInteract; // 0x38(0x10)

	void OnQuestWaterSourceInteractNotify(struct AIcarusPlayerCharacter* Player, struct AIcarusActor* WaterSource); // Function Icarus.QuestWaterSourceInteractAsync.OnQuestWaterSourceInteractNotify // (Final|Native|Private) // @ game+0x167def0
	struct UQuestWaterSourceInteractAsync* ListenForWaterSourceInteract(struct UObject* WorldContextObject); // Function Icarus.QuestWaterSourceInteractAsync.ListenForWaterSourceInteract // (Final|BlueprintAuthorityOnly|Native|Static|Private|BlueprintCallable) // @ game+0x1688a80
};

// Class Icarus.QuestWeatherModifiersLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuestWeatherModifiersLibrary : URowLibrary {

	struct FQuestWeatherModifiersRowHandle StructToRowHandle(struct FQuestWeatherModifiersEnum EnumValue); // Function Icarus.QuestWeatherModifiersLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a540
	struct FName StructToName(struct FQuestWeatherModifiersEnum EnumValue); // Function Icarus.QuestWeatherModifiersLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a360
	int32_t StructToInt(struct FQuestWeatherModifiersEnum EnumValue); // Function Icarus.QuestWeatherModifiersLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a180
	struct FQuestWeatherModifiersEnum RowHandleToStruct(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestWeatherModifiersLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689f40
	void RemoveRowFromQuestWeatherModifiersTable(struct FName Name); // Function Icarus.QuestWeatherModifiersLibrary.RemoveRowFromQuestWeatherModifiersTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1689d30
	void RefreshConstants(); // Function Icarus.QuestWeatherModifiersLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1689cd0
	int32_t NumRows(); // Function Icarus.QuestWeatherModifiersLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689c40
	bool NotEqual_EnumName(struct FQuestWeatherModifiersEnum A, struct FName B); // Function Icarus.QuestWeatherModifiersLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689970
	bool NotEqual_EnumEnum(struct FQuestWeatherModifiersEnum A, struct FQuestWeatherModifiersEnum B); // Function Icarus.QuestWeatherModifiersLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16896a0
	struct FQuestWeatherModifiersEnum NameToStruct(struct FName NameValue); // Function Icarus.QuestWeatherModifiersLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16894f0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.QuestWeatherModifiersLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1689340
	struct FQuestWeatherModifiersRowHandle MakeQuestWeatherModifiersFromIndex(int32_t Index); // Function Icarus.QuestWeatherModifiersLibrary.MakeQuestWeatherModifiersFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688ea0
	struct FQuestWeatherModifiersEnum MakeQuestWeatherModifiersEnum(struct FQuestWeatherModifiersEnum Enum); // Function Icarus.QuestWeatherModifiersLibrary.MakeQuestWeatherModifiersEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688e20
	struct FQuestWeatherModifiersRowHandle MakeQuestWeatherModifiers(struct FName RowName); // Function Icarus.QuestWeatherModifiersLibrary.MakeQuestWeatherModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688d80
	struct FQuestWeatherModifiersRowHandle MakeLiteralQuestWeatherModifiers(struct FQuestWeatherModifiersRowHandle RowHandle); // Function Icarus.QuestWeatherModifiersLibrary.MakeLiteralQuestWeatherModifiers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688b10
	bool IsValidName(struct FName NameValue); // Function Icarus.QuestWeatherModifiersLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1688840
	struct FQuestWeatherModifiersEnum IntToStruct(int32_t IntValue); // Function Icarus.QuestWeatherModifiersLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688690
	struct FName IntToName(int32_t IntValue); // Function Icarus.QuestWeatherModifiersLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16884e0
	void GetQuestWeatherModifiersStruct(struct FQuestWeatherModifiersRowHandle RowHandle, struct FQuestWeatherModifier QuestWeatherModifiers, enum class EValid Paths); // Function Icarus.QuestWeatherModifiersLibrary.GetQuestWeatherModifiersStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1687f90
	bool EqualEqual_FQuestWeatherModifiersRowHandleFQuestWeatherModifiersRowHandle(struct FQuestWeatherModifiersRowHandle RowHandleA, struct FQuestWeatherModifiersRowHandle RowHandleB); // Function Icarus.QuestWeatherModifiersLibrary.EqualEqual_FQuestWeatherModifiersRowHandleFQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1687bd0
	bool EqualEqual_EnumEnum(struct FQuestWeatherModifiersEnum A, struct FQuestWeatherModifiersEnum B); // Function Icarus.QuestWeatherModifiersLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1687900
	struct FQuestWeatherModifiersRowHandle CastToQuestWeatherModifiersRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.QuestWeatherModifiersLibrary.CastToQuestWeatherModifiersRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16875a0
	void BreakQuestWeatherModifiersEnum(struct FQuestWeatherModifiersEnum Enum, struct FName Name, int32_t Index); // Function Icarus.QuestWeatherModifiersLibrary.BreakQuestWeatherModifiersEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1687180
	void AddRowToQuestWeatherModifiersTable(struct FName Name, struct FQuestWeatherModifier Data, struct FQuestWeatherModifiersRowHandle NewRow); // Function Icarus.QuestWeatherModifiersLibrary.AddRowToQuestWeatherModifiersTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1686a80
};

// Class Icarus.QuestWeatherModifiersTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuestWeatherModifiersTable : UIcarusDataTable {
};

// Class Icarus.QuickMoveLibrary
// Size: 0x28 (Inherited: 0x28)
struct UQuickMoveLibrary : URowLibrary {

	struct FQuickMoveRowHandle StructToRowHandle(struct FQuickMoveEnum EnumValue); // Function Icarus.QuickMoveLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a5f0
	struct FName StructToName(struct FQuickMoveEnum EnumValue); // Function Icarus.QuickMoveLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a400
	int32_t StructToInt(struct FQuickMoveEnum EnumValue); // Function Icarus.QuickMoveLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a220
	struct FQuickMoveEnum RowHandleToStruct(struct FQuickMoveRowHandle RowHandle); // Function Icarus.QuickMoveLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a000
	void RemoveRowFromQuickMoveTable(struct FName Name); // Function Icarus.QuickMoveLibrary.RemoveRowFromQuickMoveTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1689db0
	void RefreshConstants(); // Function Icarus.QuickMoveLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1689cf0
	int32_t NumRows(); // Function Icarus.QuickMoveLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689c70
	bool NotEqual_EnumName(struct FQuickMoveEnum A, struct FName B); // Function Icarus.QuickMoveLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689a60
	bool NotEqual_EnumEnum(struct FQuickMoveEnum A, struct FQuickMoveEnum B); // Function Icarus.QuickMoveLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689790
	struct FQuickMoveEnum NameToStruct(struct FName NameValue); // Function Icarus.QuickMoveLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689580
	int32_t NameToInt(struct FName NameValue); // Function Icarus.QuickMoveLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16893d0
	struct FQuickMoveRowHandle MakeQuickMoveRowFromSource(struct FInventoryIDEnum InSource); // Function Icarus.QuickMoveLibrary.MakeQuickMoveRowFromSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16890e0
	struct FQuickMoveRowHandle MakeQuickMoveFromIndex(int32_t Index); // Function Icarus.QuickMoveLibrary.MakeQuickMoveFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689050
	struct FQuickMoveEnum MakeQuickMoveEnum(struct FQuickMoveEnum Enum); // Function Icarus.QuickMoveLibrary.MakeQuickMoveEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688fd0
	struct FQuickMoveRowHandle MakeQuickMove(struct FName RowName); // Function Icarus.QuickMoveLibrary.MakeQuickMove // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688f30
	struct FQuickMoveRowHandle MakeLiteralQuickMove(struct FQuickMoveRowHandle RowHandle); // Function Icarus.QuickMoveLibrary.MakeLiteralQuickMove // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688be0
	bool IsValidName(struct FName NameValue); // Function Icarus.QuickMoveLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16888d0
	struct FQuickMoveEnum IntToStruct(int32_t IntValue); // Function Icarus.QuickMoveLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688720
	struct FName IntToName(int32_t IntValue); // Function Icarus.QuickMoveLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1688570
	void GetQuickMoveStruct(struct FQuickMoveRowHandle RowHandle, struct FQuickMove QuickMove, enum class EValid Paths); // Function Icarus.QuickMoveLibrary.GetQuickMoveStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1688140
	bool EqualEqual_FQuickMoveRowHandleFQuickMoveRowHandle(struct FQuickMoveRowHandle RowHandleA, struct FQuickMoveRowHandle RowHandleB); // Function Icarus.QuickMoveLibrary.EqualEqual_FQuickMoveRowHandleFQuickMoveRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1687d10
	bool EqualEqual_EnumEnum(struct FQuickMoveEnum A, struct FQuickMoveEnum B); // Function Icarus.QuickMoveLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16879f0
	struct FQuickMoveRowHandle CastToQuickMoveRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.QuickMoveLibrary.CastToQuickMoveRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16876c0
	void BreakQuickMoveEnum(struct FQuickMoveEnum Enum, struct FName Name, int32_t Index); // Function Icarus.QuickMoveLibrary.BreakQuickMoveEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16872e0
	void AddRowToQuickMoveTable(struct FName Name, struct FQuickMove Data, struct FQuickMoveRowHandle NewRow); // Function Icarus.QuickMoveLibrary.AddRowToQuickMoveTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1686cd0
};

// Class Icarus.QuickMoveTable
// Size: 0xb8 (Inherited: 0xb8)
struct UQuickMoveTable : UIcarusDataTable {
};

// Class Icarus.RadarMapGridBase
// Size: 0x2e0 (Inherited: 0x260)
struct URadarMapGridBase : UUserWidget {
	struct FSlateFontInfo FontInfo; // 0x260(0x58)
	struct FVector2D NameOffset; // 0x2b8(0x08)
	struct FLinearColor GridTint; // 0x2c0(0x10)
	int32_t GridNumX; // 0x2d0(0x04)
	int32_t GridNumY; // 0x2d4(0x04)
	float GridThickness; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)

	void RenderGridImage(bool bInRenderImage); // Function Icarus.RadarMapGridBase.RenderGridImage // (Final|Native|Public|BlueprintCallable) // @ game+0x1689eb0
	void OnRenderGridImage(bool bInRenderImage); // Function Icarus.RadarMapGridBase.OnRenderGridImage // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.RadialMenuDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct URadialMenuDataLibrary : URowLibrary {

	struct FRadialMenuDataRowHandle StructToRowHandle(struct FRadialMenuDataEnum EnumValue); // Function Icarus.RadialMenuDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a6a0
	struct FName StructToName(struct FRadialMenuDataEnum EnumValue); // Function Icarus.RadialMenuDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a4a0
	int32_t StructToInt(struct FRadialMenuDataEnum EnumValue); // Function Icarus.RadialMenuDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a2c0
	struct FRadialMenuDataEnum RowHandleToStruct(struct FRadialMenuDataRowHandle RowHandle); // Function Icarus.RadialMenuDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168a0c0
	void RemoveRowFromRadialMenuDataTable(struct FName Name); // Function Icarus.RadialMenuDataLibrary.RemoveRowFromRadialMenuDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1689e30
	void RefreshConstants(); // Function Icarus.RadialMenuDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1689d10
	int32_t NumRows(); // Function Icarus.RadialMenuDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689ca0
	bool NotEqual_EnumName(struct FRadialMenuDataEnum A, struct FName B); // Function Icarus.RadialMenuDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689b50
	bool NotEqual_EnumEnum(struct FRadialMenuDataEnum A, struct FRadialMenuDataEnum B); // Function Icarus.RadialMenuDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689880
	struct FRadialMenuDataEnum NameToStruct(struct FName NameValue); // Function Icarus.RadialMenuDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689610
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RadialMenuDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1689460
	struct FRadialMenuDataRowHandle MakeRadialMenuDataFromIndex(int32_t Index); // Function Icarus.RadialMenuDataLibrary.MakeRadialMenuDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16892b0
	struct FRadialMenuDataEnum MakeRadialMenuDataEnum(struct FRadialMenuDataEnum Enum); // Function Icarus.RadialMenuDataLibrary.MakeRadialMenuDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689230
	struct FRadialMenuDataRowHandle MakeRadialMenuData(struct FName RowName); // Function Icarus.RadialMenuDataLibrary.MakeRadialMenuData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1689190
	struct FRadialMenuDataRowHandle MakeLiteralRadialMenuData(struct FRadialMenuDataRowHandle RowHandle); // Function Icarus.RadialMenuDataLibrary.MakeLiteralRadialMenuData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1688cb0
	bool IsValidName(struct FName NameValue); // Function Icarus.RadialMenuDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1688960
	struct FRadialMenuDataEnum IntToStruct(int32_t IntValue); // Function Icarus.RadialMenuDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16887b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.RadialMenuDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1688600
	void GetRadialMenuDataStruct(struct FRadialMenuDataRowHandle RowHandle, struct FRadialMenuData RadialMenuData, enum class EValid Paths); // Function Icarus.RadialMenuDataLibrary.GetRadialMenuDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16882d0
	bool EqualEqual_FRadialMenuDataRowHandleFRadialMenuDataRowHandle(struct FRadialMenuDataRowHandle RowHandleA, struct FRadialMenuDataRowHandle RowHandleB); // Function Icarus.RadialMenuDataLibrary.EqualEqual_FRadialMenuDataRowHandleFRadialMenuDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1687e50
	bool EqualEqual_EnumEnum(struct FRadialMenuDataEnum A, struct FRadialMenuDataEnum B); // Function Icarus.RadialMenuDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1687ae0
	struct FRadialMenuDataRowHandle CastToRadialMenuDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RadialMenuDataLibrary.CastToRadialMenuDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16877e0
	void BreakRadialMenuDataEnum(struct FRadialMenuDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RadialMenuDataLibrary.BreakRadialMenuDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1687440
	void AddRowToRadialMenuDataTable(struct FName Name, struct FRadialMenuData Data, struct FRadialMenuDataRowHandle NewRow); // Function Icarus.RadialMenuDataLibrary.AddRowToRadialMenuDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1686f10
};

// Class Icarus.RadialMenuDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct URadialMenuDataTable : UIcarusDataTable {
};

// Class Icarus.RadialOptionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URadialOptionsLibrary : URowLibrary {

	struct FRadialOptionsRowHandle StructToRowHandle(struct FRadialOptionsEnum EnumValue); // Function Icarus.RadialOptionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16901c0
	struct FName StructToName(struct FRadialOptionsEnum EnumValue); // Function Icarus.RadialOptionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ffe0
	int32_t StructToInt(struct FRadialOptionsEnum EnumValue); // Function Icarus.RadialOptionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168fe00
	struct FRadialOptionsEnum RowHandleToStruct(struct FRadialOptionsRowHandle RowHandle); // Function Icarus.RadialOptionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168fbc0
	void RemoveRowFromRadialOptionsTable(struct FName Name); // Function Icarus.RadialOptionsLibrary.RemoveRowFromRadialOptionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168fa40
	void RefreshConstants(); // Function Icarus.RadialOptionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x168f9e0
	int32_t NumRows(); // Function Icarus.RadialOptionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f8a0
	bool NotEqual_EnumName(struct FRadialOptionsEnum A, struct FName B); // Function Icarus.RadialOptionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f5d0
	bool NotEqual_EnumEnum(struct FRadialOptionsEnum A, struct FRadialOptionsEnum B); // Function Icarus.RadialOptionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f300
	struct FRadialOptionsEnum NameToStruct(struct FName NameValue); // Function Icarus.RadialOptionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f150
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RadialOptionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x168efa0
	struct FRadialOptionsRowHandle MakeRadialOptionsFromIndex(int32_t Index); // Function Icarus.RadialOptionsLibrary.MakeRadialOptionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ebb0
	struct FRadialOptionsEnum MakeRadialOptionsEnum(struct FRadialOptionsEnum Enum); // Function Icarus.RadialOptionsLibrary.MakeRadialOptionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168eb30
	struct FRadialOptionsRowHandle MakeRadialOptions(struct FName RowName); // Function Icarus.RadialOptionsLibrary.MakeRadialOptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ea90
	struct FRadialOptionsRowHandle MakeLiteralRadialOptions(struct FRadialOptionsRowHandle RowHandle); // Function Icarus.RadialOptionsLibrary.MakeLiteralRadialOptions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168e820
	bool IsValidName(struct FName NameValue); // Function Icarus.RadialOptionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x168e670
	struct FRadialOptionsEnum IntToStruct(int32_t IntValue); // Function Icarus.RadialOptionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168e4c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.RadialOptionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x168e310
	void GetRadialOptionsStruct(struct FRadialOptionsRowHandle RowHandle, struct FRadialOption RadialOptions, enum class EValid Paths); // Function Icarus.RadialOptionsLibrary.GetRadialOptionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168dd50
	bool EqualEqual_FRadialOptionsRowHandleFRadialOptionsRowHandle(struct FRadialOptionsRowHandle RowHandleA, struct FRadialOptionsRowHandle RowHandleB); // Function Icarus.RadialOptionsLibrary.EqualEqual_FRadialOptionsRowHandleFRadialOptionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168d990
	bool EqualEqual_EnumEnum(struct FRadialOptionsEnum A, struct FRadialOptionsEnum B); // Function Icarus.RadialOptionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168d6c0
	struct FRadialOptionsRowHandle CastToRadialOptionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RadialOptionsLibrary.CastToRadialOptionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168d360
	void BreakRadialOptionsEnum(struct FRadialOptionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RadialOptionsLibrary.BreakRadialOptionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x168cf40
	void AddRowToRadialOptionsTable(struct FName Name, struct FRadialOption Data, struct FRadialOptionsRowHandle NewRow); // Function Icarus.RadialOptionsLibrary.AddRowToRadialOptionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168c740
};

// Class Icarus.RadialOptionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URadialOptionsTable : UIcarusDataTable {
};

// Class Icarus.RangedWeaponDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct URangedWeaponDataLibrary : URowLibrary {

	struct FRangedWeaponDataRowHandle StructToRowHandle(struct FRangedWeaponDataEnum EnumValue); // Function Icarus.RangedWeaponDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1690270
	struct FName StructToName(struct FRangedWeaponDataEnum EnumValue); // Function Icarus.RangedWeaponDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1690080
	int32_t StructToInt(struct FRangedWeaponDataEnum EnumValue); // Function Icarus.RangedWeaponDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168fea0
	struct FRangedWeaponDataEnum RowHandleToStruct(struct FRangedWeaponDataRowHandle RowHandle); // Function Icarus.RangedWeaponDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168fc80
	void RemoveRowFromRangedWeaponDataTable(struct FName Name); // Function Icarus.RangedWeaponDataLibrary.RemoveRowFromRangedWeaponDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168fac0
	void RefreshConstants(); // Function Icarus.RangedWeaponDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x168fa00
	int32_t NumRows(); // Function Icarus.RangedWeaponDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f8d0
	bool NotEqual_EnumName(struct FRangedWeaponDataEnum A, struct FName B); // Function Icarus.RangedWeaponDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f6c0
	bool NotEqual_EnumEnum(struct FRangedWeaponDataEnum A, struct FRangedWeaponDataEnum B); // Function Icarus.RangedWeaponDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f3f0
	struct FRangedWeaponDataEnum NameToStruct(struct FName NameValue); // Function Icarus.RangedWeaponDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f1e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RangedWeaponDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x168f030
	struct FRangedWeaponDataRowHandle MakeRangedWeaponDataFromIndex(int32_t Index); // Function Icarus.RangedWeaponDataLibrary.MakeRangedWeaponDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ed60
	struct FRangedWeaponDataEnum MakeRangedWeaponDataEnum(struct FRangedWeaponDataEnum Enum); // Function Icarus.RangedWeaponDataLibrary.MakeRangedWeaponDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ece0
	struct FRangedWeaponDataRowHandle MakeRangedWeaponData(struct FName RowName); // Function Icarus.RangedWeaponDataLibrary.MakeRangedWeaponData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ec40
	struct FRangedWeaponDataRowHandle MakeLiteralRangedWeaponData(struct FRangedWeaponDataRowHandle RowHandle); // Function Icarus.RangedWeaponDataLibrary.MakeLiteralRangedWeaponData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168e8f0
	bool IsValidName(struct FName NameValue); // Function Icarus.RangedWeaponDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x168e700
	struct FRangedWeaponDataEnum IntToStruct(int32_t IntValue); // Function Icarus.RangedWeaponDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168e550
	struct FName IntToName(int32_t IntValue); // Function Icarus.RangedWeaponDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x168e3a0
	void GetRangedWeaponDataStruct(struct FRangedWeaponDataRowHandle RowHandle, struct FRangedWeaponData RangedWeaponData, enum class EValid Paths); // Function Icarus.RangedWeaponDataLibrary.GetRangedWeaponDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168ded0
	bool EqualEqual_FRangedWeaponDataRowHandleFRangedWeaponDataRowHandle(struct FRangedWeaponDataRowHandle RowHandleA, struct FRangedWeaponDataRowHandle RowHandleB); // Function Icarus.RangedWeaponDataLibrary.EqualEqual_FRangedWeaponDataRowHandleFRangedWeaponDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168dad0
	bool EqualEqual_EnumEnum(struct FRangedWeaponDataEnum A, struct FRangedWeaponDataEnum B); // Function Icarus.RangedWeaponDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168d7b0
	struct FRangedWeaponDataRowHandle CastToRangedWeaponDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RangedWeaponDataLibrary.CastToRangedWeaponDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168d480
	void BreakRangedWeaponDataEnum(struct FRangedWeaponDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RangedWeaponDataLibrary.BreakRangedWeaponDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x168d0a0
	void AddRowToRangedWeaponDataTable(struct FName Name, struct FRangedWeaponData Data, struct FRangedWeaponDataRowHandle NewRow); // Function Icarus.RangedWeaponDataLibrary.AddRowToRangedWeaponDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168c8f0
};

// Class Icarus.RangedWeaponDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct URangedWeaponDataTable : UIcarusDataTable {
};

// Class Icarus.ReadStorageCallbackProxy
// Size: 0x78 (Inherited: 0x30)
struct UReadStorageCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFail; // 0x40(0x10)
	char pad_50[0x28]; // 0x50(0x28)

	struct UReadStorageCallbackProxy* ReadStorage(struct FString KeyName); // Function Icarus.ReadStorageCallbackProxy.ReadStorage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168f930
};

// Class Icarus.RecipeSetsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URecipeSetsLibrary : URowLibrary {

	struct FRecipeSetsRowHandle StructToRowHandle(struct FRecipeSetsEnum EnumValue); // Function Icarus.RecipeSetsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1690320
	struct FName StructToName(struct FRecipeSetsEnum EnumValue); // Function Icarus.RecipeSetsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1690120
	int32_t StructToInt(struct FRecipeSetsEnum EnumValue); // Function Icarus.RecipeSetsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ff40
	struct FRecipeSetsEnum RowHandleToStruct(struct FRecipeSetsRowHandle RowHandle); // Function Icarus.RecipeSetsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168fd40
	void RemoveRowFromRecipeSetsTable(struct FName Name); // Function Icarus.RecipeSetsLibrary.RemoveRowFromRecipeSetsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x168fb40
	void RefreshConstants(); // Function Icarus.RecipeSetsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x168fa20
	int32_t NumRows(); // Function Icarus.RecipeSetsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f900
	bool NotEqual_EnumName(struct FRecipeSetsEnum A, struct FName B); // Function Icarus.RecipeSetsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f7b0
	bool NotEqual_EnumEnum(struct FRecipeSetsEnum A, struct FRecipeSetsEnum B); // Function Icarus.RecipeSetsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f4e0
	struct FRecipeSetsEnum NameToStruct(struct FName NameValue); // Function Icarus.RecipeSetsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168f270
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RecipeSetsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x168f0c0
	struct FRecipeSetsRowHandle MakeRecipeSetsFromIndex(int32_t Index); // Function Icarus.RecipeSetsLibrary.MakeRecipeSetsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ef10
	struct FRecipeSetsEnum MakeRecipeSetsEnum(struct FRecipeSetsEnum Enum); // Function Icarus.RecipeSetsLibrary.MakeRecipeSetsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168ee90
	struct FRecipeSetsRowHandle MakeRecipeSets(struct FName RowName); // Function Icarus.RecipeSetsLibrary.MakeRecipeSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168edf0
	struct FRecipeSetsRowHandle MakeLiteralRecipeSets(struct FRecipeSetsRowHandle RowHandle); // Function Icarus.RecipeSetsLibrary.MakeLiteralRecipeSets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168e9c0
	bool IsValidName(struct FName NameValue); // Function Icarus.RecipeSetsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x168e790
	struct FRecipeSetsEnum IntToStruct(int32_t IntValue); // Function Icarus.RecipeSetsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168e5e0
	struct FName IntToName(int32_t IntValue); // Function Icarus.RecipeSetsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x168e430
	void GetRecipeSetsStruct(struct FRecipeSetsRowHandle RowHandle, struct FRecipeSet RecipeSets, enum class EValid Paths); // Function Icarus.RecipeSetsLibrary.GetRecipeSetsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168e140
	bool EqualEqual_FRecipeSetsRowHandleFRecipeSetsRowHandle(struct FRecipeSetsRowHandle RowHandleA, struct FRecipeSetsRowHandle RowHandleB); // Function Icarus.RecipeSetsLibrary.EqualEqual_FRecipeSetsRowHandleFRecipeSetsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168dc10
	bool EqualEqual_EnumEnum(struct FRecipeSetsEnum A, struct FRecipeSetsEnum B); // Function Icarus.RecipeSetsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x168d8a0
	struct FRecipeSetsRowHandle CastToRecipeSetsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RecipeSetsLibrary.CastToRecipeSetsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168d5a0
	void BreakRecipeSetsEnum(struct FRecipeSetsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RecipeSetsLibrary.BreakRecipeSetsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x168d200
	void AddRowToRecipeSetsTable(struct FName Name, struct FRecipeSet Data, struct FRecipeSetsRowHandle NewRow); // Function Icarus.RecipeSetsLibrary.AddRowToRecipeSetsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x168ccc0
};

// Class Icarus.RecipeSetsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URecipeSetsTable : UIcarusDataTable {
};

// Class Icarus.RecoveryQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URecoveryQuestsLibrary : URowLibrary {

	struct FRecoveryQuestsRowHandle StructToRowHandle(struct FRecoveryQuestsEnum EnumValue); // Function Icarus.RecoveryQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695b60
	struct FName StructToName(struct FRecoveryQuestsEnum EnumValue); // Function Icarus.RecoveryQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695980
	int32_t StructToInt(struct FRecoveryQuestsEnum EnumValue); // Function Icarus.RecoveryQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16957a0
	struct FRecoveryQuestsEnum RowHandleToStruct(struct FRecoveryQuestsRowHandle RowHandle); // Function Icarus.RecoveryQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695560
	void RemoveRowFromRecoveryQuestsTable(struct FName Name); // Function Icarus.RecoveryQuestsLibrary.RemoveRowFromRecoveryQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16953e0
	void RefreshConstants(); // Function Icarus.RecoveryQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1695380
	int32_t NumRows(); // Function Icarus.RecoveryQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16952f0
	bool NotEqual_EnumName(struct FRecoveryQuestsEnum A, struct FName B); // Function Icarus.RecoveryQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695020
	bool NotEqual_EnumEnum(struct FRecoveryQuestsEnum A, struct FRecoveryQuestsEnum B); // Function Icarus.RecoveryQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694d50
	struct FRecoveryQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.RecoveryQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694ba0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RecoveryQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16949f0
	struct FRecoveryQuestsRowHandle MakeRecoveryQuestsFromIndex(int32_t Index); // Function Icarus.RecoveryQuestsLibrary.MakeRecoveryQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694600
	struct FRecoveryQuestsEnum MakeRecoveryQuestsEnum(struct FRecoveryQuestsEnum Enum); // Function Icarus.RecoveryQuestsLibrary.MakeRecoveryQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694580
	struct FRecoveryQuestsRowHandle MakeRecoveryQuests(struct FName RowName); // Function Icarus.RecoveryQuestsLibrary.MakeRecoveryQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16944e0
	struct FRecoveryQuestsRowHandle MakeLiteralRecoveryQuests(struct FRecoveryQuestsRowHandle RowHandle); // Function Icarus.RecoveryQuestsLibrary.MakeLiteralRecoveryQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694270
	bool IsValidName(struct FName NameValue); // Function Icarus.RecoveryQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16940c0
	struct FRecoveryQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.RecoveryQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1693f10
	struct FName IntToName(int32_t IntValue); // Function Icarus.RecoveryQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1693d60
	void GetRecoveryQuestsStruct(struct FRecoveryQuestsRowHandle RowHandle, struct FRecoveryQuest RecoveryQuests, enum class EValid Paths); // Function Icarus.RecoveryQuestsLibrary.GetRecoveryQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1693870
	bool EqualEqual_FRecoveryQuestsRowHandleFRecoveryQuestsRowHandle(struct FRecoveryQuestsRowHandle RowHandleA, struct FRecoveryQuestsRowHandle RowHandleB); // Function Icarus.RecoveryQuestsLibrary.EqualEqual_FRecoveryQuestsRowHandleFRecoveryQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16934b0
	bool EqualEqual_EnumEnum(struct FRecoveryQuestsEnum A, struct FRecoveryQuestsEnum B); // Function Icarus.RecoveryQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16931e0
	struct FRecoveryQuestsRowHandle CastToRecoveryQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RecoveryQuestsLibrary.CastToRecoveryQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692e80
	void BreakRecoveryQuestsEnum(struct FRecoveryQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RecoveryQuestsLibrary.BreakRecoveryQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1692a60
	void AddRowToRecoveryQuestsTable(struct FName Name, struct FRecoveryQuest Data, struct FRecoveryQuestsRowHandle NewRow); // Function Icarus.RecoveryQuestsLibrary.AddRowToRecoveryQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692360
};

// Class Icarus.RecoveryQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URecoveryQuestsTable : UIcarusDataTable {
};

// Class Icarus.RepGraphClassPoliciesLibrary
// Size: 0x28 (Inherited: 0x28)
struct URepGraphClassPoliciesLibrary : URowLibrary {

	struct FRepGraphClassPoliciesRowHandle StructToRowHandle(struct FRepGraphClassPoliciesEnum EnumValue); // Function Icarus.RepGraphClassPoliciesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695c10
	struct FName StructToName(struct FRepGraphClassPoliciesEnum EnumValue); // Function Icarus.RepGraphClassPoliciesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695a20
	int32_t StructToInt(struct FRepGraphClassPoliciesEnum EnumValue); // Function Icarus.RepGraphClassPoliciesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695840
	struct FRepGraphClassPoliciesEnum RowHandleToStruct(struct FRepGraphClassPoliciesRowHandle RowHandle); // Function Icarus.RepGraphClassPoliciesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695620
	void RemoveRowFromRepGraphClassPoliciesTable(struct FName Name); // Function Icarus.RepGraphClassPoliciesLibrary.RemoveRowFromRepGraphClassPoliciesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1695460
	void RefreshConstants(); // Function Icarus.RepGraphClassPoliciesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16953a0
	int32_t NumRows(); // Function Icarus.RepGraphClassPoliciesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695320
	bool NotEqual_EnumName(struct FRepGraphClassPoliciesEnum A, struct FName B); // Function Icarus.RepGraphClassPoliciesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695110
	bool NotEqual_EnumEnum(struct FRepGraphClassPoliciesEnum A, struct FRepGraphClassPoliciesEnum B); // Function Icarus.RepGraphClassPoliciesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694e40
	struct FRepGraphClassPoliciesEnum NameToStruct(struct FName NameValue); // Function Icarus.RepGraphClassPoliciesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694c30
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RepGraphClassPoliciesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1694a80
	struct FRepGraphClassPoliciesRowHandle MakeRepGraphClassPoliciesFromIndex(int32_t Index); // Function Icarus.RepGraphClassPoliciesLibrary.MakeRepGraphClassPoliciesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16947b0
	struct FRepGraphClassPoliciesEnum MakeRepGraphClassPoliciesEnum(struct FRepGraphClassPoliciesEnum Enum); // Function Icarus.RepGraphClassPoliciesLibrary.MakeRepGraphClassPoliciesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694730
	struct FRepGraphClassPoliciesRowHandle MakeRepGraphClassPolicies(struct FName RowName); // Function Icarus.RepGraphClassPoliciesLibrary.MakeRepGraphClassPolicies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694690
	struct FRepGraphClassPoliciesRowHandle MakeLiteralRepGraphClassPolicies(struct FRepGraphClassPoliciesRowHandle RowHandle); // Function Icarus.RepGraphClassPoliciesLibrary.MakeLiteralRepGraphClassPolicies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694340
	bool IsValidName(struct FName NameValue); // Function Icarus.RepGraphClassPoliciesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1694150
	struct FRepGraphClassPoliciesEnum IntToStruct(int32_t IntValue); // Function Icarus.RepGraphClassPoliciesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1693fa0
	struct FName IntToName(int32_t IntValue); // Function Icarus.RepGraphClassPoliciesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1693df0
	void GetRepGraphClassPoliciesStruct(struct FRepGraphClassPoliciesRowHandle RowHandle, struct FRepGraphClassPolicy RepGraphClassPolicies, enum class EValid Paths); // Function Icarus.RepGraphClassPoliciesLibrary.GetRepGraphClassPoliciesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1693a00
	bool EqualEqual_FRepGraphClassPoliciesRowHandleFRepGraphClassPoliciesRowHandle(struct FRepGraphClassPoliciesRowHandle RowHandleA, struct FRepGraphClassPoliciesRowHandle RowHandleB); // Function Icarus.RepGraphClassPoliciesLibrary.EqualEqual_FRepGraphClassPoliciesRowHandleFRepGraphClassPoliciesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16935f0
	bool EqualEqual_EnumEnum(struct FRepGraphClassPoliciesEnum A, struct FRepGraphClassPoliciesEnum B); // Function Icarus.RepGraphClassPoliciesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16932d0
	struct FRepGraphClassPoliciesRowHandle CastToRepGraphClassPoliciesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RepGraphClassPoliciesLibrary.CastToRepGraphClassPoliciesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692fa0
	void BreakRepGraphClassPoliciesEnum(struct FRepGraphClassPoliciesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RepGraphClassPoliciesLibrary.BreakRepGraphClassPoliciesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1692bc0
	void AddRowToRepGraphClassPoliciesTable(struct FName Name, struct FRepGraphClassPolicy Data, struct FRepGraphClassPoliciesRowHandle NewRow); // Function Icarus.RepGraphClassPoliciesLibrary.AddRowToRepGraphClassPoliciesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1692570
};

// Class Icarus.RepGraphClassPoliciesTable
// Size: 0xb8 (Inherited: 0xb8)
struct URepGraphClassPoliciesTable : UIcarusDataTable {
};

// Class Icarus.RepGraphClassSettingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URepGraphClassSettingsLibrary : URowLibrary {

	struct FRepGraphClassSettingsRowHandle StructToRowHandle(struct FRepGraphClassSettingsEnum EnumValue); // Function Icarus.RepGraphClassSettingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695cc0
	struct FName StructToName(struct FRepGraphClassSettingsEnum EnumValue); // Function Icarus.RepGraphClassSettingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695ac0
	int32_t StructToInt(struct FRepGraphClassSettingsEnum EnumValue); // Function Icarus.RepGraphClassSettingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16958e0
	struct FRepGraphClassSettingsEnum RowHandleToStruct(struct FRepGraphClassSettingsRowHandle RowHandle); // Function Icarus.RepGraphClassSettingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16956e0
	void RemoveRowFromRepGraphClassSettingsTable(struct FName Name); // Function Icarus.RepGraphClassSettingsLibrary.RemoveRowFromRepGraphClassSettingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16954e0
	void RefreshConstants(); // Function Icarus.RepGraphClassSettingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16953c0
	int32_t NumRows(); // Function Icarus.RepGraphClassSettingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695350
	bool NotEqual_EnumName(struct FRepGraphClassSettingsEnum A, struct FName B); // Function Icarus.RepGraphClassSettingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1695200
	bool NotEqual_EnumEnum(struct FRepGraphClassSettingsEnum A, struct FRepGraphClassSettingsEnum B); // Function Icarus.RepGraphClassSettingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694f30
	struct FRepGraphClassSettingsEnum NameToStruct(struct FName NameValue); // Function Icarus.RepGraphClassSettingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694cc0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RepGraphClassSettingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1694b10
	struct FRepGraphClassSettingsRowHandle MakeRepGraphClassSettingsFromIndex(int32_t Index); // Function Icarus.RepGraphClassSettingsLibrary.MakeRepGraphClassSettingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694960
	struct FRepGraphClassSettingsEnum MakeRepGraphClassSettingsEnum(struct FRepGraphClassSettingsEnum Enum); // Function Icarus.RepGraphClassSettingsLibrary.MakeRepGraphClassSettingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16948e0
	struct FRepGraphClassSettingsRowHandle MakeRepGraphClassSettings(struct FName RowName); // Function Icarus.RepGraphClassSettingsLibrary.MakeRepGraphClassSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694840
	struct FRepGraphClassSettingsRowHandle MakeLiteralRepGraphClassSettings(struct FRepGraphClassSettingsRowHandle RowHandle); // Function Icarus.RepGraphClassSettingsLibrary.MakeLiteralRepGraphClassSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694410
	bool IsValidName(struct FName NameValue); // Function Icarus.RepGraphClassSettingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16941e0
	struct FRepGraphClassSettingsEnum IntToStruct(int32_t IntValue); // Function Icarus.RepGraphClassSettingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1694030
	struct FName IntToName(int32_t IntValue); // Function Icarus.RepGraphClassSettingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1693e80
	void GetRepGraphClassSettingsStruct(struct FRepGraphClassSettingsRowHandle RowHandle, struct FRepGraphClassSettings RepGraphClassSettings, enum class EValid Paths); // Function Icarus.RepGraphClassSettingsLibrary.GetRepGraphClassSettingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1693ba0
	bool EqualEqual_FRepGraphClassSettingsRowHandleFRepGraphClassSettingsRowHandle(struct FRepGraphClassSettingsRowHandle RowHandleA, struct FRepGraphClassSettingsRowHandle RowHandleB); // Function Icarus.RepGraphClassSettingsLibrary.EqualEqual_FRepGraphClassSettingsRowHandleFRepGraphClassSettingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1693730
	bool EqualEqual_EnumEnum(struct FRepGraphClassSettingsEnum A, struct FRepGraphClassSettingsEnum B); // Function Icarus.RepGraphClassSettingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16933c0
	struct FRepGraphClassSettingsRowHandle CastToRepGraphClassSettingsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RepGraphClassSettingsLibrary.CastToRepGraphClassSettingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16930c0
	void BreakRepGraphClassSettingsEnum(struct FRepGraphClassSettingsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RepGraphClassSettingsLibrary.BreakRepGraphClassSettingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1692d20
	void AddRowToRepGraphClassSettingsTable(struct FName Name, struct FRepGraphClassSettings Data, struct FRepGraphClassSettingsRowHandle NewRow); // Function Icarus.RepGraphClassSettingsLibrary.AddRowToRepGraphClassSettingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16927f0
};

// Class Icarus.RepGraphClassSettingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URepGraphClassSettingsTable : UIcarusDataTable {
};

// Class Icarus.ResourceComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UResourceComponent : UActorComponent {
	struct TArray<struct FResourceFlow> Resources; // 0xb0(0x10)

	bool WillCauseOverdraw(enum class EIcarusResourceType ResourceType, int32_t FlowRate); // Function Icarus.ResourceComponent.WillCauseOverdraw // (Final|Native|Public|BlueprintCallable) // @ game+0x169a840
	void UpdateResourceFlow(struct UTraitComponent* TraitComponent, enum class EIcarusResourceType ResourceType, int32_t FlowRate); // Function Icarus.ResourceComponent.UpdateResourceFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x169a730
	void StopProducers(enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.StopProducers // (Final|Native|Public) // @ game+0x169a3f0
	void StopConsumers(enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.StopConsumers // (Final|Native|Public) // @ game+0x169a370
	void ProcessResourceFlow(float DeltaTime); // Function Icarus.ResourceComponent.ProcessResourceFlow // (Final|Native|Public) // @ game+0x169a100
	int32_t GetResourceFlowRate(enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.GetResourceFlowRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1699200
	int32_t GetCurrentSourceFlow(struct UTraitComponent* TraitComponent, enum class EIcarusResourceType ResourceType); // Function Icarus.ResourceComponent.GetCurrentSourceFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1699100
};

// Class Icarus.ResourceDeposit
// Size: 0x2c0 (Inherited: 0x2a0)
struct AResourceDeposit : AIcarusActor {
	int32_t ResourceRemaining; // 0x2a0(0x04)
	struct FRecipeSetsRowHandle RecipeSet; // 0x2a4(0x18)
	char pad_2BC[0x4]; // 0x2bc(0x04)
};

// Class Icarus.ResourceDepositRecorderComponent
// Size: 0x150 (Inherited: 0x150)
struct UResourceDepositRecorderComponent : UActorStateRecorderComponent {
	int32_t ResourceRemaining; // 0x148(0x04)
};

// Class Icarus.ResourceInteractionInterface
// Size: 0x28 (Inherited: 0x28)
struct UResourceInteractionInterface : UInterface {
};

// Class Icarus.ResourceNetwork
// Size: 0x310 (Inherited: 0x2a0)
struct AResourceNetwork : AIcarusActor {
	struct TMap<struct ADeployable*, int32_t> ActiveDevices; // 0x2a0(0x50)
	struct TArray<struct ADeployable*> LinkedDevices; // 0x2f0(0x10)
	int32_t ProviderSum; // 0x300(0x04)
	int32_t ConsumerSum; // 0x304(0x04)
	enum class EIcarusResourceType NetworkType; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)

	bool WillOverdraw(int32_t Rate); // Function Icarus.ResourceNetwork.WillOverdraw // (Final|Native|Public|BlueprintCallable) // @ game+0x169a910
	bool UpdateDevice(struct ADeployable* Device, int32_t Rate); // Function Icarus.ResourceNetwork.UpdateDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x169a660
	void RemoveLinkedDevice(struct ADeployable* Device); // Function Icarus.ResourceNetwork.RemoveLinkedDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x169a1a0
	bool IsActiveDevice(struct ADeployable* Device, int32_t Rate); // Function Icarus.ResourceNetwork.IsActiveDevice // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1699950
	enum class EIcarusResourceType GetNetworkType(); // Function Icarus.ResourceNetwork.GetNetworkType // (Final|Native|Public|BlueprintCallable) // @ game+0x16991d0
	bool DeactivateDevice(struct ADeployable* Device); // Function Icarus.ResourceNetwork.DeactivateDevice // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1698d40
	bool ActivateDevice(struct ADeployable* Device, int32_t Rate); // Function Icarus.ResourceNetwork.ActivateDevice // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16986c0
};

// Class Icarus.ResourceNodeAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UResourceNodeAudioDataLibrary : URowLibrary {

	struct FResourceNodeAudioDataRowHandle StructToRowHandle(struct FResourceNodeAudioDataEnum EnumValue); // Function Icarus.ResourceNodeAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a5b0
	struct FName StructToName(struct FResourceNodeAudioDataEnum EnumValue); // Function Icarus.ResourceNodeAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a510
	int32_t StructToInt(struct FResourceNodeAudioDataEnum EnumValue); // Function Icarus.ResourceNodeAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a470
	struct FResourceNodeAudioDataEnum RowHandleToStruct(struct FResourceNodeAudioDataRowHandle RowHandle); // Function Icarus.ResourceNodeAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a2b0
	void RemoveRowFromResourceNodeAudioDataTable(struct FName Name); // Function Icarus.ResourceNodeAudioDataLibrary.RemoveRowFromResourceNodeAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x169a230
	void RefreshConstants(); // Function Icarus.ResourceNodeAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x169a180
	int32_t NumRows(); // Function Icarus.ResourceNodeAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169a030
	bool NotEqual_EnumName(struct FResourceNodeAudioDataEnum A, struct FName B); // Function Icarus.ResourceNodeAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699f40
	bool NotEqual_EnumEnum(struct FResourceNodeAudioDataEnum A, struct FResourceNodeAudioDataEnum B); // Function Icarus.ResourceNodeAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699e50
	struct FResourceNodeAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.ResourceNodeAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699dc0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ResourceNodeAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1699d30
	struct FResourceNodeAudioDataRowHandle MakeResourceNodeAudioDataFromIndex(int32_t Index); // Function Icarus.ResourceNodeAudioDataLibrary.MakeResourceNodeAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699ca0
	struct FResourceNodeAudioDataEnum MakeResourceNodeAudioDataEnum(struct FResourceNodeAudioDataEnum Enum); // Function Icarus.ResourceNodeAudioDataLibrary.MakeResourceNodeAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699c20
	struct FResourceNodeAudioDataRowHandle MakeResourceNodeAudioData(struct FName RowName); // Function Icarus.ResourceNodeAudioDataLibrary.MakeResourceNodeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699b80
	struct FResourceNodeAudioDataRowHandle MakeLiteralResourceNodeAudioData(struct FResourceNodeAudioDataRowHandle RowHandle); // Function Icarus.ResourceNodeAudioDataLibrary.MakeLiteralResourceNodeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1699ab0
	bool IsValidName(struct FName NameValue); // Function Icarus.ResourceNodeAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1699a20
	struct FResourceNodeAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.ResourceNodeAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16998c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ResourceNodeAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1699830
	void GetResourceNodeAudioDataStruct(struct FResourceNodeAudioDataRowHandle RowHandle, struct FResourceNodeAudioData ResourceNodeAudioData, enum class EValid Paths); // Function Icarus.ResourceNodeAudioDataLibrary.GetResourceNodeAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1699430
	bool EqualEqual_FResourceNodeAudioDataRowHandleFResourceNodeAudioDataRowHandle(struct FResourceNodeAudioDataRowHandle RowHandleA, struct FResourceNodeAudioDataRowHandle RowHandleB); // Function Icarus.ResourceNodeAudioDataLibrary.EqualEqual_FResourceNodeAudioDataRowHandleFResourceNodeAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698fc0
	bool EqualEqual_EnumEnum(struct FResourceNodeAudioDataEnum A, struct FResourceNodeAudioDataEnum B); // Function Icarus.ResourceNodeAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1698ed0
	struct FResourceNodeAudioDataRowHandle CastToResourceNodeAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ResourceNodeAudioDataLibrary.CastToResourceNodeAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1698b20
	void BreakResourceNodeAudioDataEnum(struct FResourceNodeAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ResourceNodeAudioDataLibrary.BreakResourceNodeAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16989c0
	void AddRowToResourceNodeAudioDataTable(struct FName Name, struct FResourceNodeAudioData Data, struct FResourceNodeAudioDataRowHandle NewRow); // Function Icarus.ResourceNodeAudioDataLibrary.AddRowToResourceNodeAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16987c0
};

// Class Icarus.ResourceNodeAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UResourceNodeAudioDataTable : UIcarusDataTable {
};

// Class Icarus.RevisionsSubsystem
// Size: 0x80 (Inherited: 0x30)
struct URevisionsSubsystem : UGameInstanceSubsystem {
	struct TMap<struct FString, int32_t> RevisionsMap; // 0x30(0x50)

	int32_t GetRevisionFromPath(struct FString Path); // Function Icarus.RevisionsSubsystem.GetRevisionFromPath // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16996a0
	int32_t GetRevisionFromObject(struct TSoftObjectPtr<UObject> Object); // Function Icarus.RevisionsSubsystem.GetRevisionFromObject // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16995d0
};

// Class Icarus.River
// Size: 0x2d0 (Inherited: 0x2d0)
struct ARiver : AWaterBody {
};

// Class Icarus.RiverAudioComponent
// Size: 0x200 (Inherited: 0x200)
struct URiverAudioComponent : USceneComponent {
	enum class RiverAudioState State; // 0x1f8(0x01)

	float GetInfluenceOfInstancesInRadius(float Radius); // Function Icarus.RiverAudioComponent.GetInfluenceOfInstancesInRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x169e650
};

// Class Icarus.RiverEdgeSplineGeneratorComponent
// Size: 0xb8 (Inherited: 0xb0)
struct URiverEdgeSplineGeneratorComponent : UActorComponent {
	float DistanceStepSize; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)

	void GenerateSplines(struct USplineComponent* RiverSpline, struct USplineComponent* LeftSpline, struct USplineComponent* RightSpline, float WaterfallCullHeight, float SplineMeshHeightOffset, float Scale); // Function Icarus.RiverEdgeSplineGeneratorComponent.GenerateSplines // (Final|Native|Protected|BlueprintCallable|Const) // @ game+0x169e470
	void ClearSplines(struct USplineComponent* LeftSpline, struct USplineComponent* RightSpline); // Function Icarus.RiverEdgeSplineGeneratorComponent.ClearSplines // (Final|Native|Static|Protected|BlueprintCallable) // @ game+0x169df50
};

// Class Icarus.RockBase
// Size: 0x2c8 (Inherited: 0x2a0)
struct ARockBase : AIcarusActor {
	struct TArray<struct FItemConversion> TagsToClasses; // 0x2a0(0x10)
	struct FMulticastInlineDelegate OnRockReplaced; // 0x2b0(0x10)
	char pad_2C0[0x8]; // 0x2c0(0x08)
};

// Class Icarus.RocketableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct URocketableComponent : UTraitComponent {

	bool GetRocketableData(struct FRocketableData OutData); // Function Icarus.RocketableComponent.GetRocketableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x169e6f0
};

// Class Icarus.RocketableLibrary
// Size: 0x28 (Inherited: 0x28)
struct URocketableLibrary : URowLibrary {

	struct FRocketableRowHandle StructToRowHandle(struct FRocketableEnum EnumValue); // Function Icarus.RocketableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0110
	struct FName StructToName(struct FRocketableEnum EnumValue); // Function Icarus.RocketableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ffd0
	int32_t StructToInt(struct FRocketableEnum EnumValue); // Function Icarus.RocketableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fe90
	struct FRocketableEnum RowHandleToStruct(struct FRocketableRowHandle RowHandle); // Function Icarus.RocketableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fd10
	void RemoveRowFromRocketableTable(struct FName Name); // Function Icarus.RocketableLibrary.RemoveRowFromRocketableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x169fc10
	void RefreshConstants(); // Function Icarus.RocketableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x169fbd0
	int32_t NumRows(); // Function Icarus.RocketableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fb70
	bool NotEqual_EnumName(struct FRocketableEnum A, struct FName B); // Function Icarus.RocketableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f990
	bool NotEqual_EnumEnum(struct FRocketableEnum A, struct FRocketableEnum B); // Function Icarus.RocketableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f7b0
	struct FRocketableEnum NameToStruct(struct FName NameValue); // Function Icarus.RocketableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f690
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RocketableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x169f570
	struct FRocketableRowHandle MakeRocketableFromIndex(int32_t Index); // Function Icarus.RocketableLibrary.MakeRocketableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f290
	struct FRocketableEnum MakeRocketableEnum(struct FRocketableEnum Enum); // Function Icarus.RocketableLibrary.MakeRocketableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f210
	struct FRocketableRowHandle MakeRocketable(struct FName RowName); // Function Icarus.RocketableLibrary.MakeRocketable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f170
	struct FRocketableRowHandle MakeLiteralRocketable(struct FRocketableRowHandle RowHandle); // Function Icarus.RocketableLibrary.MakeLiteralRocketable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169efd0
	bool IsValidName(struct FName NameValue); // Function Icarus.RocketableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x169eeb0
	struct FRocketableEnum IntToStruct(int32_t IntValue); // Function Icarus.RocketableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ed90
	struct FName IntToName(int32_t IntValue); // Function Icarus.RocketableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x169ec70
	void GetRocketableStruct(struct FRocketableRowHandle RowHandle, struct FRocketableData Rocketable, enum class EValid Paths); // Function Icarus.RocketableLibrary.GetRocketableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169e900
	bool EqualEqual_FRocketableRowHandleFRocketableRowHandle(struct FRocketableRowHandle RowHandleA, struct FRocketableRowHandle RowHandleB); // Function Icarus.RocketableLibrary.EqualEqual_FRocketableRowHandleFRocketableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169e1f0
	bool EqualEqual_EnumEnum(struct FRocketableEnum A, struct FRocketableEnum B); // Function Icarus.RocketableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169e010
	struct FRocketableRowHandle CastToRocketableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RocketableLibrary.CastToRocketableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169dd10
	void BreakRocketableEnum(struct FRocketableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RocketableLibrary.BreakRocketableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x169da50
	void AddRowToRocketableTable(struct FName Name, struct FRocketableData Data, struct FRocketableRowHandle NewRow); // Function Icarus.RocketableLibrary.AddRowToRocketableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169d5e0
};

// Class Icarus.RocketableTable
// Size: 0xb8 (Inherited: 0xb8)
struct URocketableTable : UIcarusDataTable {
};

// Class Icarus.RocketRecorderComponent
// Size: 0x180 (Inherited: 0x150)
struct URocketRecorderComponent : UActorStateRecorderComponent {
	struct FPlayerCharacterID AssignedPlayerCharacterID; // 0x148(0x18)
	struct FVector SpawnLocation; // 0x160(0x0c)
	struct FVector DescentOrigin; // 0x16c(0x0c)
	bool DropshipPositionsSet; // 0x178(0x01)
	bool PlayerHasLeft; // 0x179(0x01)
	enum class ERocketState RocketState; // 0x17a(0x01)
};

// Class Icarus.IcarusRocketSpawnBase
// Size: 0x2b8 (Inherited: 0x2a0)
struct AIcarusRocketSpawnBase : AIcarusActor {
	struct AIcarusRocket* SpawnDropshipClass; // 0x2a0(0x08)
	struct FString AssignedPlayerID; // 0x2a8(0x10)

	int32_t GetGroupIndex(); // Function Icarus.IcarusRocketSpawnBase.GetGroupIndex // (Event|Public|BlueprintEvent|Const) // @ game+0x1a38c80
};

// Class Icarus.RocketSpawnRecorderComponent
// Size: 0x160 (Inherited: 0x150)
struct URocketSpawnRecorderComponent : UActorStateRecorderComponent {
	struct FRocketSpawnStateRecord SpawnRecord; // 0x148(0x18)
};

// Class Icarus.Ruleset
// Size: 0x48 (Inherited: 0x28)
struct URuleset : UObject {
	struct URulesetSubsystem* RulesetSubsystem; // 0x28(0x08)
	struct FRulesetsRowHandle RulesetRowHandle; // 0x30(0x18)

	void ReceiveOnRulesetCreated(); // Function Icarus.Ruleset.ReceiveOnRulesetCreated // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.RulesetFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URulesetFunctionLibrary : UBlueprintFunctionLibrary {
};

// Class Icarus.RulesetsLibrary
// Size: 0x28 (Inherited: 0x28)
struct URulesetsLibrary : URowLibrary {

	struct FRulesetsRowHandle StructToRowHandle(struct FRulesetsEnum EnumValue); // Function Icarus.RulesetsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a01c0
	struct FName StructToName(struct FRulesetsEnum EnumValue); // Function Icarus.RulesetsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a0070
	int32_t StructToInt(struct FRulesetsEnum EnumValue); // Function Icarus.RulesetsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ff30
	struct FRulesetsEnum RowHandleToStruct(struct FRulesetsRowHandle RowHandle); // Function Icarus.RulesetsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fdd0
	void RemoveRowFromRulesetsTable(struct FName Name); // Function Icarus.RulesetsLibrary.RemoveRowFromRulesetsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x169fc90
	void RefreshConstants(); // Function Icarus.RulesetsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x169fbf0
	int32_t NumRows(); // Function Icarus.RulesetsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fba0
	bool NotEqual_EnumName(struct FRulesetsEnum A, struct FName B); // Function Icarus.RulesetsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169fa80
	bool NotEqual_EnumEnum(struct FRulesetsEnum A, struct FRulesetsEnum B); // Function Icarus.RulesetsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f8a0
	struct FRulesetsEnum NameToStruct(struct FName NameValue); // Function Icarus.RulesetsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f720
	int32_t NameToInt(struct FName NameValue); // Function Icarus.RulesetsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x169f600
	struct FRulesetsRowHandle MakeRulesetsRowFromRulesetClass(struct UObject* InRulesetClass); // Function Icarus.RulesetsLibrary.MakeRulesetsRowFromRulesetClass // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f4d0
	struct FRulesetsRowHandle MakeRulesetsFromIndex(int32_t Index); // Function Icarus.RulesetsLibrary.MakeRulesetsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f440
	struct FRulesetsEnum MakeRulesetsEnum(struct FRulesetsEnum Enum); // Function Icarus.RulesetsLibrary.MakeRulesetsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f3c0
	struct FRulesetsRowHandle MakeRulesets(struct FName RowName); // Function Icarus.RulesetsLibrary.MakeRulesets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f320
	struct FRulesetsRowHandle MakeLiteralRulesets(struct FRulesetsRowHandle RowHandle); // Function Icarus.RulesetsLibrary.MakeLiteralRulesets // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169f0a0
	bool IsValidName(struct FName NameValue); // Function Icarus.RulesetsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x169ef40
	struct FRulesetsEnum IntToStruct(int32_t IntValue); // Function Icarus.RulesetsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169ee20
	struct FName IntToName(int32_t IntValue); // Function Icarus.RulesetsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x169ed00
	void GetRulesetsStruct(struct FRulesetsRowHandle RowHandle, struct FRulesetData Rulesets, enum class EValid Paths); // Function Icarus.RulesetsLibrary.GetRulesetsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169eaf0
	bool EqualEqual_FRulesetsRowHandleFRulesetsRowHandle(struct FRulesetsRowHandle RowHandleA, struct FRulesetsRowHandle RowHandleB); // Function Icarus.RulesetsLibrary.EqualEqual_FRulesetsRowHandleFRulesetsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169e330
	bool EqualEqual_EnumEnum(struct FRulesetsEnum A, struct FRulesetsEnum B); // Function Icarus.RulesetsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x169e100
	struct FRulesetsRowHandle CastToRulesetsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.RulesetsLibrary.CastToRulesetsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169de30
	void BreakRulesetsEnum(struct FRulesetsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.RulesetsLibrary.BreakRulesetsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x169dbb0
	void AddRowToRulesetsTable(struct FName Name, struct FRulesetData Data, struct FRulesetsRowHandle NewRow); // Function Icarus.RulesetsLibrary.AddRowToRulesetsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x169d880
};

// Class Icarus.RulesetsTable
// Size: 0xb8 (Inherited: 0xb8)
struct URulesetsTable : UIcarusDataTable {
};

// Class Icarus.RulesetSubsystem
// Size: 0xa0 (Inherited: 0x30)
struct URulesetSubsystem : UWorldSubsystem {
	char pad_30[0x20]; // 0x30(0x20)
	struct TMap<struct FRulesetsRowHandle, struct URuleset*> Rulesets; // 0x50(0x50)

	void WorldStatsReady(); // Function Icarus.RulesetSubsystem.WorldStatsReady // (Final|Native|Protected) // @ game+0x16a6720
	bool HasRuleset(struct FRulesetsRowHandle RulesetType); // Function Icarus.RulesetSubsystem.HasRuleset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16a4900
	struct URuleset* GetRuleset(struct FRulesetsRowHandle RulesetType); // Function Icarus.RulesetSubsystem.GetRuleset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16a4360
	void AddRuleset(struct FRulesetsRowHandle Ruleset); // Function Icarus.RulesetSubsystem.AddRuleset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16a3310
};

// Class Icarus.ScopedViewportBlocker
// Size: 0x40 (Inherited: 0x28)
struct UScopedViewportBlocker : UObject {
	bool bViewportBlockerIncremented; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FName ViewportBlockerContext; // 0x2c(0x08)
	char pad_34[0xc]; // 0x34(0x0c)
};

// Class Icarus.ScriptedEvent
// Size: 0x270 (Inherited: 0x220)
struct AScriptedEvent : AActor {
	struct FBiomesRowHandle AssociatedBiome; // 0x220(0x18)
	enum class EIcarusProspectDifficulty ProspectDifficulty; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	float TimeoutInSeconds; // 0x23c(0x04)
	float TickFrequency; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct TArray<struct AActor*> TargetActors; // 0x248(0x10)
	struct FMulticastInlineDelegate OnScriptedEventFinished; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)

	bool ShouldAbortEvent(); // Function Icarus.ScriptedEvent.ShouldAbortEvent // (Native|Event|Public|BlueprintEvent) // @ game+0xd68e60
	bool IsEventCompleted(); // Function Icarus.ScriptedEvent.IsEventCompleted // (Native|Event|Public|BlueprintEvent) // @ game+0xd68e60
	void EventStart(); // Function Icarus.ScriptedEvent.EventStart // (Native|Event|Protected|BlueprintEvent) // @ game+0x846c20
	void EventEnd(enum class EEventEndReason EndReason); // Function Icarus.ScriptedEvent.EventEnd // (Native|Event|Protected|BlueprintEvent) // @ game+0x16a4120
	struct TArray<struct AActor*> DetermineTargetActors(); // Function Icarus.ScriptedEvent.DetermineTargetActors // (Native|Event|Protected|BlueprintEvent) // @ game+0x16a3bc0
	bool CanPerformEvent(); // Function Icarus.ScriptedEvent.CanPerformEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x15def80
	void AbortScriptedEvent(); // Function Icarus.ScriptedEvent.AbortScriptedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x16a2e80
};

// Class Icarus.ScriptedEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UScriptedEventsLibrary : URowLibrary {

	struct FScriptedEventsRowHandle StructToRowHandle(struct FScriptedEventsEnum EnumValue); // Function Icarus.ScriptedEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a65c0
	struct FName StructToName(struct FScriptedEventsEnum EnumValue); // Function Icarus.ScriptedEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6480
	int32_t StructToInt(struct FScriptedEventsEnum EnumValue); // Function Icarus.ScriptedEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6340
	struct FScriptedEventsEnum RowHandleToStruct(struct FScriptedEventsRowHandle RowHandle); // Function Icarus.ScriptedEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6030
	void RemoveRowFromScriptedEventsTable(struct FName Name); // Function Icarus.ScriptedEventsLibrary.RemoveRowFromScriptedEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a5f30
	void RefreshConstants(); // Function Icarus.ScriptedEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a5ef0
	int32_t NumRows(); // Function Icarus.ScriptedEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5ca0
	bool NotEqual_EnumName(struct FScriptedEventsEnum A, struct FName B); // Function Icarus.ScriptedEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5ac0
	bool NotEqual_EnumEnum(struct FScriptedEventsEnum A, struct FScriptedEventsEnum B); // Function Icarus.ScriptedEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a58e0
	struct FScriptedEventsEnum NameToStruct(struct FName NameValue); // Function Icarus.ScriptedEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a57c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ScriptedEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a56a0
	struct FScriptedEventsRowHandle MakeScriptedEventsFromIndex(int32_t Index); // Function Icarus.ScriptedEventsLibrary.MakeScriptedEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5230
	struct FScriptedEventsEnum MakeScriptedEventsEnum(struct FScriptedEventsEnum Enum); // Function Icarus.ScriptedEventsLibrary.MakeScriptedEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a51b0
	struct FScriptedEventsRowHandle MakeScriptedEvents(struct FName RowName); // Function Icarus.ScriptedEventsLibrary.MakeScriptedEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5110
	struct FScriptedEventsRowHandle MakeLiteralScriptedEvents(struct FScriptedEventsRowHandle RowHandle); // Function Icarus.ScriptedEventsLibrary.MakeLiteralScriptedEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a4f70
	bool IsValidName(struct FName NameValue); // Function Icarus.ScriptedEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16a4c50
	struct FScriptedEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.ScriptedEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a4ad0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ScriptedEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16a49b0
	void GetScriptedEventsStruct(struct FScriptedEventsRowHandle RowHandle, struct FScriptedEventData ScriptedEvents, enum class EValid Paths); // Function Icarus.ScriptedEventsLibrary.GetScriptedEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a4410
	bool EqualEqual_FScriptedEventsRowHandleFScriptedEventsRowHandle(struct FScriptedEventsRowHandle RowHandleA, struct FScriptedEventsRowHandle RowHandleB); // Function Icarus.ScriptedEventsLibrary.EqualEqual_FScriptedEventsRowHandleFScriptedEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a3ea0
	bool EqualEqual_EnumEnum(struct FScriptedEventsEnum A, struct FScriptedEventsEnum B); // Function Icarus.ScriptedEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a3cc0
	struct FScriptedEventsRowHandle CastToScriptedEventsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ScriptedEventsLibrary.CastToScriptedEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a3800
	void BreakScriptedEventsEnum(struct FScriptedEventsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ScriptedEventsLibrary.BreakScriptedEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16a34a0
	void AddRowToScriptedEventsTable(struct FName Name, struct FScriptedEventData Data, struct FScriptedEventsRowHandle NewRow); // Function Icarus.ScriptedEventsLibrary.AddRowToScriptedEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a2ea0
};

// Class Icarus.ScriptedEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UScriptedEventsTable : UIcarusDataTable {
};

// Class Icarus.SearchBox
// Size: 0xe30 (Inherited: 0x260)
struct USearchBox : UUserWidget {
	char pad_260[0x10]; // 0x260(0x10)
	struct FSearchBoxStyle Style; // 0x270(0xa90)
	struct FText HintText; // 0xd00(0x18)
	struct FText InitialText; // 0xd18(0x18)
	bool IsSearching; // 0xd30(0x01)
	char pad_D31[0x7]; // 0xd31(0x07)
	struct FMulticastInlineDelegate OnSearchTextChanged; // 0xd38(0x10)
	struct FMulticastInlineDelegate OnSearchTextCommitted; // 0xd48(0x10)
	struct FMulticastInlineDelegate OnSearchKeyDownHandler; // 0xd58(0x10)
	char pad_D68[0xb8]; // 0xd68(0xb8)
	bool SelectAllTextWhenFocused; // 0xe20(0x01)
	char pad_E21[0x3]; // 0xe21(0x03)
	float MinDesiredWidth; // 0xe24(0x04)
	bool DelayChangeNotificationsWhileTyping; // 0xe28(0x01)
	bool bCommitting; // 0xe29(0x01)
	char pad_E2A[0x6]; // 0xe2a(0x06)

	void SetText(struct FText Text); // Function Icarus.SearchBox.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x16a6260
	void SelectAllText(); // Function Icarus.SearchBox.SelectAllText // (Final|Native|Public|BlueprintCallable) // @ game+0x16a61b0
	void SearchBoxReply__DelegateSignature(struct FKeyEvent KeyEvent); // DelegateFunction Icarus.SearchBox.SearchBoxReply__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x1a38c80
	void OnSearchBoxCommittedEvent__DelegateSignature(struct FText Text, enum class ETextCommit CommitMethod); // DelegateFunction Icarus.SearchBox.OnSearchBoxCommittedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x1a38c80
	void OnSearchBoxChangedEvent__DelegateSignature(struct FText Text); // DelegateFunction Icarus.SearchBox.OnSearchBoxChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x1a38c80
	void KeyDownHandled(); // Function Icarus.SearchBox.KeyDownHandled // (Final|Native|Public|BlueprintCallable) // @ game+0x16a4d70
	struct FText GetText(); // Function Icarus.SearchBox.GetText // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a4860
	struct FText GetSearchText(); // Function Icarus.SearchBox.GetSearchText // (Final|Native|Public|BlueprintCallable) // @ game+0x16a4600
};

// Class Icarus.SeatBase
// Size: 0x2d0 (Inherited: 0x2a0)
struct ASeatBase : AIcarusActor {
	struct TWeakObjectPtr<struct AVehicleBase> AttachedToVehicle; // 0x2a0(0x08)
	struct TWeakObjectPtr<struct AIcarusPlayerCharacter> AttachedPlayer; // 0x2a8(0x08)
	struct FName AttachSocketName; // 0x2b0(0x08)
	float MinViewPitch; // 0x2b8(0x04)
	float MaxViewPitch; // 0x2bc(0x04)
	float MinViewYaw; // 0x2c0(0x04)
	float MaxViewYaw; // 0x2c4(0x04)
	bool bAllowCameraControl; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	void SetAttachedToVehicle(struct AVehicleBase* Vehicle); // Function Icarus.SeatBase.SetAttachedToVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x16a61d0
	void OnRep_AttachedToVehicle(); // Function Icarus.SeatBase.OnRep_AttachedToVehicle // (Native|Event|Protected|BlueprintEvent) // @ game+0x846ea0
	void OnRep_AttachedPlayer(); // Function Icarus.SeatBase.OnRep_AttachedPlayer // (Native|Event|Protected|BlueprintEvent) // @ game+0x15f5a80
	void OnAttachedPlayerDestroyed(struct AActor* DestroyedAttachedPlayer); // Function Icarus.SeatBase.OnAttachedPlayerDestroyed // (Native|Event|Protected|BlueprintEvent) // @ game+0x16a5d00
	void Multicast_DetachPlayerFromSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FVector ExitLocation, struct FRotator ExitRotation, bool bChangeSeat); // Function Icarus.SeatBase.Multicast_DetachPlayerFromSeat // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x16a5540
	void Multicast_AttachPlayerToSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FRotator EnterRotation); // Function Icarus.SeatBase.Multicast_AttachPlayerToSeat // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x16a5470
	bool LeaveSeat(bool bChangeSeat, bool bForce); // Function Icarus.SeatBase.LeaveSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16a4d90
	bool IsPossessTargetLocallyControlled(); // Function Icarus.SeatBase.IsPossessTargetLocallyControlled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16a4c20
	bool IsDriverSeat(); // Function Icarus.SeatBase.IsDriverSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16a4bf0
	struct FRotator GetSeatedPlayerControlRotation(); // Function Icarus.SeatBase.GetSeatedPlayerControlRotation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16a46a0
	struct AIcarusPlayerController* GetPossesTargetController(); // Function Icarus.SeatBase.GetPossesTargetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16a4330
	struct APawn* GetPossesTarget(); // Function Icarus.SeatBase.GetPossesTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16a4300
	struct AVehicleBase* GetAttachedToVehicle(); // Function Icarus.SeatBase.GetAttachedToVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16a42d0
	struct AIcarusPlayerCharacter* GetAttachedPlayer(); // Function Icarus.SeatBase.GetAttachedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16a42a0
	bool FindExit(struct FVector OutExitLocation, struct FRotator OutExitRotation); // Function Icarus.SeatBase.FindExit // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x16a41a0
	bool EnterSeat(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.SeatBase.EnterSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x16a3c20
	void DetachPlayerFromSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FVector ExitLocation, struct FRotator ExitRotation, bool bChangeSeat); // Function Icarus.SeatBase.DetachPlayerFromSeat // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16a3a40
	bool CanPlayerEnterSeat(struct AIcarusPlayerCharacter* PlayerCharacter); // Function Icarus.SeatBase.CanPlayerEnterSeat // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16a3760
	void AttachPlayerToSeat(struct AIcarusPlayerCharacter* PlayerCharacter, struct FRotator EnterRotation); // Function Icarus.SeatBase.AttachPlayerToSeat // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x16a33c0
};

// Class Icarus.SessionFlagAsyncAction
// Size: 0x60 (Inherited: 0x30)
struct USessionFlagAsyncAction : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSessionFlagUpdated; // 0x30(0x10)
	struct UObject* WorldContext; // 0x40(0x08)
	struct FSessionFlagsRowHandle SessionFlagToCheck; // 0x48(0x18)

	void OnSessionFlagUpdatedNotify(struct AMissionManager* MissionManager, struct FSessionFlagsRowHandle Flag, bool State); // Function Icarus.SessionFlagAsyncAction.OnSessionFlagUpdatedNotify // (Final|Native|Private) // @ game+0x16a5d90
	struct USessionFlagAsyncAction* ListenForSessionFlag(struct UObject* WorldContextObject, struct FSessionFlagsRowHandle SessionFlag); // Function Icarus.SessionFlagAsyncAction.ListenForSessionFlag // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // @ game+0x16a4e80
};

// Class Icarus.SessionFlagsLibrary
// Size: 0x28 (Inherited: 0x28)
struct USessionFlagsLibrary : URowLibrary {

	struct FSessionFlagsRowHandle StructToRowHandle(struct FSessionFlagsEnum EnumValue); // Function Icarus.SessionFlagsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6670
	struct FName StructToName(struct FSessionFlagsEnum EnumValue); // Function Icarus.SessionFlagsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a6520
	int32_t StructToInt(struct FSessionFlagsEnum EnumValue); // Function Icarus.SessionFlagsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a63e0
	struct FSessionFlagsEnum RowHandleToStruct(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.SessionFlagsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a60f0
	void RemoveRowFromSessionFlagsTable(struct FName Name); // Function Icarus.SessionFlagsLibrary.RemoveRowFromSessionFlagsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16a5fb0
	void RefreshConstants(); // Function Icarus.SessionFlagsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16a5f10
	int32_t NumRows(); // Function Icarus.SessionFlagsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5cd0
	bool NotEqual_EnumName(struct FSessionFlagsEnum A, struct FName B); // Function Icarus.SessionFlagsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5bb0
	bool NotEqual_EnumEnum(struct FSessionFlagsEnum A, struct FSessionFlagsEnum B); // Function Icarus.SessionFlagsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a59d0
	struct FSessionFlagsEnum NameToStruct(struct FName NameValue); // Function Icarus.SessionFlagsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5850
	int32_t NameToInt(struct FName NameValue); // Function Icarus.SessionFlagsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16a5730
	struct FSessionFlagsRowHandle MakeSessionFlagsFromIndex(int32_t Index); // Function Icarus.SessionFlagsLibrary.MakeSessionFlagsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a53e0
	struct FSessionFlagsEnum MakeSessionFlagsEnum(struct FSessionFlagsEnum Enum); // Function Icarus.SessionFlagsLibrary.MakeSessionFlagsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5360
	struct FSessionFlagsRowHandle MakeSessionFlags(struct FName RowName); // Function Icarus.SessionFlagsLibrary.MakeSessionFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a52c0
	struct FSessionFlagsRowHandle MakeLiteralSessionFlags(struct FSessionFlagsRowHandle RowHandle); // Function Icarus.SessionFlagsLibrary.MakeLiteralSessionFlags // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a5040
	bool IsValidName(struct FName NameValue); // Function Icarus.SessionFlagsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16a4ce0
	struct FSessionFlagsEnum IntToStruct(int32_t IntValue); // Function Icarus.SessionFlagsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a4b60
	struct FName IntToName(int32_t IntValue); // Function Icarus.SessionFlagsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16a4a40
	void GetSessionFlagsStruct(struct FSessionFlagsRowHandle RowHandle, struct FSessionFlag SessionFlags, enum class EValid Paths); // Function Icarus.SessionFlagsLibrary.GetSessionFlagsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a46e0
	bool EqualEqual_FSessionFlagsRowHandleFSessionFlagsRowHandle(struct FSessionFlagsRowHandle RowHandleA, struct FSessionFlagsRowHandle RowHandleB); // Function Icarus.SessionFlagsLibrary.EqualEqual_FSessionFlagsRowHandleFSessionFlagsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a3fe0
	bool EqualEqual_EnumEnum(struct FSessionFlagsEnum A, struct FSessionFlagsEnum B); // Function Icarus.SessionFlagsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16a3db0
	struct FSessionFlagsRowHandle CastToSessionFlagsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.SessionFlagsLibrary.CastToSessionFlagsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a3920
	void BreakSessionFlagsEnum(struct FSessionFlagsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.SessionFlagsLibrary.BreakSessionFlagsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16a3600
	void AddRowToSessionFlagsTable(struct FName Name, struct FSessionFlag Data, struct FSessionFlagsRowHandle NewRow); // Function Icarus.SessionFlagsLibrary.AddRowToSessionFlagsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16a3160
};

// Class Icarus.SessionFlagsTable
// Size: 0xb8 (Inherited: 0xb8)
struct USessionFlagsTable : UIcarusDataTable {
};

// Class Icarus.SessionFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct USessionFunctionLibrary : UBlueprintFunctionLibrary {

	bool ProspectInfoIsValid(struct FIcarusSession IcarusSession, bool RequiresSession); // Function Icarus.SessionFunctionLibrary.ProspectInfoIsValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ac900
	struct TArray<struct FSessionPropertyKeyPair> MakeSessionExtraSettingsFromProspect(struct FProspectInfo ProspectInfo); // Function Icarus.SessionFunctionLibrary.MakeSessionExtraSettingsFromProspect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ac210
	struct FProspectInfo MakeProspectInfoFromExtraSettings(struct TArray<struct FSessionPropertyKeyPair> ExtraSettings); // Function Icarus.SessionFunctionLibrary.MakeProspectInfoFromExtraSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ac0d0
	bool HasJoinedProspect(struct FString UserID, struct TArray<struct FAssociatedMemberInfo> Members); // Function Icarus.SessionFunctionLibrary.HasJoinedProspect // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16abca0
	struct FString GetGatewayAddressFromExtraSettings(struct TArray<struct FSessionPropertyKeyPair> ExtraSettings); // Function Icarus.SessionFunctionLibrary.GetGatewayAddressFromExtraSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ab930
	struct FString GetGameVersionFromExtraSettings(struct TArray<struct FSessionPropertyKeyPair> ExtraSettings); // Function Icarus.SessionFunctionLibrary.GetGameVersionFromExtraSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ab820
	struct FIcarusSession CreateIcarusSessionFromSession(struct FBlueprintSessionResult Session); // Function Icarus.SessionFunctionLibrary.CreateIcarusSessionFromSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ab330
};

// Class Icarus.SettingRowBorder
// Size: 0x288 (Inherited: 0x280)
struct USettingRowBorder : UIcarusWidget {
	struct USettingWidget* SettingWidget; // 0x280(0x08)

	void SetSettingWidget(struct USettingWidget* InSettingWidget); // Function Icarus.SettingRowBorder.SetSettingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x16acc90
	void HideName(); // Function Icarus.SettingRowBorder.HideName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingsMenu
// Size: 0x280 (Inherited: 0x280)
struct USettingsMenu : UIcarusWidget {

	void Save(bool bForce); // Function Icarus.SettingsMenu.Save // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingsSection
// Size: 0x300 (Inherited: 0x260)
struct USettingsSection : UUserWidget {
	struct USettingsView* SettingsView; // 0x260(0x08)
	struct FName SettingCategory; // 0x268(0x08)
	struct FName SettingSection; // 0x270(0x08)
	struct FText EditConditionReason; // 0x278(0x18)
	struct FText ConfirmMessage; // 0x290(0x18)
	bool bEditConditionHides; // 0x2a8(0x01)
	bool bHasApply; // 0x2a9(0x01)
	bool bHasReset; // 0x2aa(0x01)
	bool bHasConfirm; // 0x2ab(0x01)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct TMap<struct FName, struct USettingWidget*> WidgetsMap; // 0x2b0(0x50)

	void SetSettingsView(struct USettingsView* View); // Function Icarus.SettingsSection.SetSettingsView // (Final|Native|Public|BlueprintCallable) // @ game+0x16acdb0
	void SetDisplayName(struct FText DisplayName); // Function Icarus.SettingsSection.SetDisplayName // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void RevertSettings(); // Function Icarus.SettingsSection.RevertSettings // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void PostSetup(); // Function Icarus.SettingsSection.PostSetup // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnRefresh(); // Function Icarus.SettingsSection.OnRefresh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void DirtySection(); // Function Icarus.SettingsSection.DirtySection // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	struct USettingWidget_Switch* CreateSwitch(); // Function Icarus.SettingsSection.CreateSwitch // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	struct USettingWidget_Language* CreateLanguage(); // Function Icarus.SettingsSection.CreateLanguage // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	struct USettingWidget_Keybindings* CreateKeybindings(); // Function Icarus.SettingsSection.CreateKeybindings // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	struct USettingWidget_DiscreteRange* CreateDiscreteRange(); // Function Icarus.SettingsSection.CreateDiscreteRange // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	struct USettingWidget_ContinuousRange* CreateContinuousRange(); // Function Icarus.SettingsSection.CreateContinuousRange // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	struct USettingWidget_Combo* CreateCombo(); // Function Icarus.SettingsSection.CreateCombo // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
	void ApplySettings(); // Function Icarus.SettingsSection.ApplySettings // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingsView
// Size: 0x290 (Inherited: 0x280)
struct USettingsView : UIcarusWidget {
	struct FName SettingCategory; // 0x280(0x08)
	struct USettingsMenu* SettingsMenu; // 0x288(0x08)

	void SetSettingsMenu(struct USettingsMenu* Menu); // Function Icarus.SettingsView.SetSettingsMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x16acd20
	void PostSetup(); // Function Icarus.SettingsView.PostSetup // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnRefresh(); // Function Icarus.SettingsView.OnRefresh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void LoadApplySaveSettings(bool bLoadSettings, bool bApplySettings, bool bSaveSettings); // Function Icarus.SettingsView.LoadApplySaveSettings // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	struct USettingsSection* CreateNewSection(); // Function Icarus.SettingsView.CreateNewSection // (Event|Protected|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget
// Size: 0x340 (Inherited: 0x280)
struct USettingWidget : UIcarusWidget {
	struct USettingRowBorder* RowBorder; // 0x280(0x08)
	struct FName SettingName; // 0x288(0x08)
	struct FText DisplayName; // 0x290(0x18)
	struct FText Description; // 0x2a8(0x18)
	struct FText EditConditionReason; // 0x2c0(0x18)
	bool bEditConditionHides; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	struct USettingsSection* Section; // 0x2e0(0x08)
	char pad_2E8[0x58]; // 0x2e8(0x58)

	void Setup(); // Function Icarus.SettingWidget.Setup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void Refresh(); // Function Icarus.SettingWidget.Refresh // (Final|Native|Public) // @ game+0x16acb10
	void Change(); // Function Icarus.SettingWidget.Change // (Final|Native|Public|BlueprintCallable) // @ game+0x16ab310
	void Apply(); // Function Icarus.SettingWidget.Apply // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget_Combo
// Size: 0x340 (Inherited: 0x340)
struct USettingWidget_Combo : USettingWidget {

	void SetValueIndex(int32_t Index); // Function Icarus.SettingWidget_Combo.SetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void SetOptions(struct TArray<struct FText> Options); // Function Icarus.SettingWidget_Combo.SetOptions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void SetHideOptions(struct TArray<struct FText> HideOptions); // Function Icarus.SettingWidget_Combo.SetHideOptions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget_ContinuousRange
// Size: 0x340 (Inherited: 0x340)
struct USettingWidget_ContinuousRange : USettingWidget {

	void SetValue(float Value, bool bForceRefresh); // Function Icarus.SettingWidget_ContinuousRange.SetValue // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void SetStepSize(float StepSize); // Function Icarus.SettingWidget_ContinuousRange.SetStepSize // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void SetRange(float MinVal, float MaxVal); // Function Icarus.SettingWidget_ContinuousRange.SetRange // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void SetApplyDuringDrag(bool bApplyDuringDrag); // Function Icarus.SettingWidget_ContinuousRange.SetApplyDuringDrag // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget_DiscreteRange
// Size: 0x340 (Inherited: 0x340)
struct USettingWidget_DiscreteRange : USettingWidget {

	void SetValueIndex(int32_t Index, bool bForceRefresh); // Function Icarus.SettingWidget_DiscreteRange.SetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void SetOptions(struct TArray<struct FText> Options); // Function Icarus.SettingWidget_DiscreteRange.SetOptions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget_Keybindings
// Size: 0x340 (Inherited: 0x340)
struct USettingWidget_Keybindings : USettingWidget {

	struct UKeybindingWidget* CreateKeybindingWidget(struct FKeybindingsRowHandle Keybinding); // Function Icarus.SettingWidget_Keybindings.CreateKeybindingWidget // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void ClearKeybindingWidgets(); // Function Icarus.SettingWidget_Keybindings.ClearKeybindingWidgets // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget_Language
// Size: 0x350 (Inherited: 0x340)
struct USettingWidget_Language : USettingWidget {
	char pad_340[0x10]; // 0x340(0x10)

	void SetOptions(struct TArray<struct FText> NewOptions); // Function Icarus.SettingWidget_Language.SetOptions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void SetLanguage(struct FString Language); // Function Icarus.SettingWidget_Language.SetLanguage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.SettingWidget_Switch
// Size: 0x340 (Inherited: 0x340)
struct USettingWidget_Switch : USettingWidget {

	void SetValueIndex(int32_t Index); // Function Icarus.SettingWidget_Switch.SetValueIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void SetLabels(struct TArray<struct FText> Labels); // Function Icarus.SettingWidget_Switch.SetLabels // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.ShelteredComponent
// Size: 0x120 (Inherited: 0xd0)
struct UShelteredComponent : UTraitComponent {
	enum class EShelterTraceFrequency TraceFrequency; // 0xd0(0x01)
	bool bTraceEnabled; // 0xd1(0x01)
	bool bPerformingTrace; // 0xd2(0x01)
	bool bEnabledByWeather; // 0xd3(0x01)
	bool bForceNextUpdate; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
	int32_t TotalFirstBurstFails; // 0xd8(0x04)
	int32_t TotalFirstBurstSuccesses; // 0xdc(0x04)
	int32_t TotalSecondBurstFails; // 0xe0(0x04)
	int32_t TotalSecondBurstSuccess; // 0xe4(0x04)
	char pad_E8[0x2c]; // 0xe8(0x2c)
	bool Debug; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
	int32_t DebugDraw; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)

	void ShelterTraceComplete(); // Function Icarus.ShelteredComponent.ShelterTraceComplete // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	int32_t GetShelteredTemperatureEffect(int32_t CurrentExternalTemperature); // Function Icarus.ShelteredComponent.GetShelteredTemperatureEffect // (Native|Event|Public|BlueprintEvent) // @ game+0x16aba40
};

// Class Icarus.ShelterSubsystem
// Size: 0x60 (Inherited: 0x30)
struct UShelterSubsystem : UWorldSubsystem {
	char pad_30[0x2d]; // 0x30(0x2d)
	bool bWaitingForThreadedTask; // 0x5d(0x01)
	char pad_5E[0x2]; // 0x5e(0x02)
};

// Class Icarus.SimpleCharacter
// Size: 0x4d0 (Inherited: 0x4c0)
struct ASimpleCharacter : ACharacter {
	char pad_4C0[0x8]; // 0x4c0(0x08)
	bool bForceMaxLODWhenNotRendered; // 0x4c8(0x01)
	char pad_4C9[0x7]; // 0x4c9(0x07)
};

// Class Icarus.SlotableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct USlotableComponent : UTraitComponent {

	struct AIcarusActor* GetActorInSlot(int32_t Index); // Function Icarus.SlotableComponent.GetActorInSlot // (Native|Event|Public|BlueprintEvent) // @ game+0x16ab780
};

// Class Icarus.SlotableLibrary
// Size: 0x28 (Inherited: 0x28)
struct USlotableLibrary : URowLibrary {

	struct FSlotableRowHandle StructToRowHandle(struct FSlotableEnum EnumValue); // Function Icarus.SlotableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acf80
	struct FName StructToName(struct FSlotableEnum EnumValue); // Function Icarus.SlotableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acee0
	int32_t StructToInt(struct FSlotableEnum EnumValue); // Function Icarus.SlotableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ace40
	struct FSlotableEnum RowHandleToStruct(struct FSlotableRowHandle RowHandle); // Function Icarus.SlotableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16acbd0
	void RemoveRowFromSlotableTable(struct FName Name); // Function Icarus.SlotableLibrary.RemoveRowFromSlotableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16acb50
	void RefreshConstants(); // Function Icarus.SlotableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16acb30
	int32_t NumRows(); // Function Icarus.SlotableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac8d0
	bool NotEqual_EnumName(struct FSlotableEnum A, struct FName B); // Function Icarus.SlotableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac7e0
	bool NotEqual_EnumEnum(struct FSlotableEnum A, struct FSlotableEnum B); // Function Icarus.SlotableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac6f0
	struct FSlotableEnum NameToStruct(struct FName NameValue); // Function Icarus.SlotableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac660
	int32_t NameToInt(struct FName NameValue); // Function Icarus.SlotableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16ac5d0
	struct FSlotableRowHandle MakeSlotableFromIndex(int32_t Index); // Function Icarus.SlotableLibrary.MakeSlotableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac540
	struct FSlotableEnum MakeSlotableEnum(struct FSlotableEnum Enum); // Function Icarus.SlotableLibrary.MakeSlotableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac4c0
	struct FSlotableRowHandle MakeSlotable(struct FName RowName); // Function Icarus.SlotableLibrary.MakeSlotable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac420
	struct FSlotableRowHandle MakeLiteralSlotable(struct FSlotableRowHandle RowHandle); // Function Icarus.SlotableLibrary.MakeLiteralSlotable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ac000
	bool IsValidName(struct FName NameValue); // Function Icarus.SlotableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16abf70
	struct FSlotableEnum IntToStruct(int32_t IntValue); // Function Icarus.SlotableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16abee0
	struct FName IntToName(int32_t IntValue); // Function Icarus.SlotableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16abe50
	void GetSlotableStruct(struct FSlotableRowHandle RowHandle, struct FSlotableData Slotable, enum class EValid Paths); // Function Icarus.SlotableLibrary.GetSlotableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16abae0
	bool EqualEqual_FSlotableRowHandleFSlotableRowHandle(struct FSlotableRowHandle RowHandleA, struct FSlotableRowHandle RowHandleB); // Function Icarus.SlotableLibrary.EqualEqual_FSlotableRowHandleFSlotableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ab640
	bool EqualEqual_EnumEnum(struct FSlotableEnum A, struct FSlotableEnum B); // Function Icarus.SlotableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ab550
	struct FSlotableRowHandle CastToSlotableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.SlotableLibrary.CastToSlotableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ab1f0
	void BreakSlotableEnum(struct FSlotableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.SlotableLibrary.BreakSlotableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ab090
	void AddRowToSlotableTable(struct FName Name, struct FSlotableData Data, struct FSlotableRowHandle NewRow); // Function Icarus.SlotableLibrary.AddRowToSlotableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16aae60
};

// Class Icarus.SlotableTable
// Size: 0xb8 (Inherited: 0xb8)
struct USlotableTable : UIcarusDataTable {
};

// Class Icarus.SplineGripTargetComponent
// Size: 0x550 (Inherited: 0x540)
struct USplineGripTargetComponent : USplineComponent {
	struct UBodySetup* ShapeBodySetup; // 0x538(0x08)
	char pad_548[0x8]; // 0x548(0x08)

	struct FBox CalcBoundingBox(); // Function Icarus.SplineGripTargetComponent.CalcBoundingBox // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16afae0
};

// Class Icarus.StaminaActionCostsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStaminaActionCostsLibrary : URowLibrary {

	struct FStaminaActionCostsRowHandle StructToRowHandle(struct FStaminaActionCostsEnum EnumValue); // Function Icarus.StaminaActionCostsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2820
	struct FName StructToName(struct FStaminaActionCostsEnum EnumValue); // Function Icarus.StaminaActionCostsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2640
	int32_t StructToInt(struct FStaminaActionCostsEnum EnumValue); // Function Icarus.StaminaActionCostsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2460
	struct FStaminaActionCostsEnum RowHandleToStruct(struct FStaminaActionCostsRowHandle RowHandle); // Function Icarus.StaminaActionCostsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2220
	void RemoveRowFromStaminaActionCostsTable(struct FName Name); // Function Icarus.StaminaActionCostsLibrary.RemoveRowFromStaminaActionCostsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b20a0
	void RefreshConstants(); // Function Icarus.StaminaActionCostsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b2040
	int32_t NumRows(); // Function Icarus.StaminaActionCostsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1fb0
	bool NotEqual_EnumName(struct FStaminaActionCostsEnum A, struct FName B); // Function Icarus.StaminaActionCostsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1ce0
	bool NotEqual_EnumEnum(struct FStaminaActionCostsEnum A, struct FStaminaActionCostsEnum B); // Function Icarus.StaminaActionCostsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1a10
	struct FStaminaActionCostsEnum NameToStruct(struct FName NameValue); // Function Icarus.StaminaActionCostsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1860
	int32_t NameToInt(struct FName NameValue); // Function Icarus.StaminaActionCostsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b16b0
	struct FStaminaActionCostsRowHandle MakeStaminaActionCostsFromIndex(int32_t Index); // Function Icarus.StaminaActionCostsLibrary.MakeStaminaActionCostsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b12c0
	struct FStaminaActionCostsEnum MakeStaminaActionCostsEnum(struct FStaminaActionCostsEnum Enum); // Function Icarus.StaminaActionCostsLibrary.MakeStaminaActionCostsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1240
	struct FStaminaActionCostsRowHandle MakeStaminaActionCosts(struct FName RowName); // Function Icarus.StaminaActionCostsLibrary.MakeStaminaActionCosts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b11a0
	struct FStaminaActionCostsRowHandle MakeLiteralStaminaActionCosts(struct FStaminaActionCostsRowHandle RowHandle); // Function Icarus.StaminaActionCostsLibrary.MakeLiteralStaminaActionCosts // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0f30
	bool IsValidName(struct FName NameValue); // Function Icarus.StaminaActionCostsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b0d80
	struct FStaminaActionCostsEnum IntToStruct(int32_t IntValue); // Function Icarus.StaminaActionCostsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0bd0
	struct FName IntToName(int32_t IntValue); // Function Icarus.StaminaActionCostsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b0a20
	void GetStaminaActionCostsStruct(struct FStaminaActionCostsRowHandle RowHandle, struct FStaminaCost StaminaActionCosts, enum class EValid Paths); // Function Icarus.StaminaActionCostsLibrary.GetStaminaActionCostsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0520
	bool EqualEqual_FStaminaActionCostsRowHandleFStaminaActionCostsRowHandle(struct FStaminaActionCostsRowHandle RowHandleA, struct FStaminaActionCostsRowHandle RowHandleB); // Function Icarus.StaminaActionCostsLibrary.EqualEqual_FStaminaActionCostsRowHandleFStaminaActionCostsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0160
	bool EqualEqual_EnumEnum(struct FStaminaActionCostsEnum A, struct FStaminaActionCostsEnum B); // Function Icarus.StaminaActionCostsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16afe90
	struct FStaminaActionCostsRowHandle CastToStaminaActionCostsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.StaminaActionCostsLibrary.CastToStaminaActionCostsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16afb30
	void BreakStaminaActionCostsEnum(struct FStaminaActionCostsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.StaminaActionCostsLibrary.BreakStaminaActionCostsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16af6c0
	void AddRowToStaminaActionCostsTable(struct FName Name, struct FStaminaCost Data, struct FStaminaActionCostsRowHandle NewRow); // Function Icarus.StaminaActionCostsLibrary.AddRowToStaminaActionCostsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16af080
};

// Class Icarus.StaminaActionCostsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStaminaActionCostsTable : UIcarusDataTable {
};

// Class Icarus.StatAfflictionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatAfflictionsLibrary : URowLibrary {

	struct FStatAfflictionsRowHandle StructToRowHandle(struct FStatAfflictionsEnum EnumValue); // Function Icarus.StatAfflictionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b28d0
	struct FName StructToName(struct FStatAfflictionsEnum EnumValue); // Function Icarus.StatAfflictionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b26e0
	int32_t StructToInt(struct FStatAfflictionsEnum EnumValue); // Function Icarus.StatAfflictionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2500
	struct FStatAfflictionsEnum RowHandleToStruct(struct FStatAfflictionsRowHandle RowHandle); // Function Icarus.StatAfflictionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b22e0
	void RemoveRowFromStatAfflictionsTable(struct FName Name); // Function Icarus.StatAfflictionsLibrary.RemoveRowFromStatAfflictionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b2120
	void RefreshConstants(); // Function Icarus.StatAfflictionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b2060
	int32_t NumRows(); // Function Icarus.StatAfflictionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1fe0
	bool NotEqual_EnumName(struct FStatAfflictionsEnum A, struct FName B); // Function Icarus.StatAfflictionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1dd0
	bool NotEqual_EnumEnum(struct FStatAfflictionsEnum A, struct FStatAfflictionsEnum B); // Function Icarus.StatAfflictionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1b00
	struct FStatAfflictionsEnum NameToStruct(struct FName NameValue); // Function Icarus.StatAfflictionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b18f0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.StatAfflictionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b1740
	struct FStatAfflictionsRowHandle MakeStatAfflictionsFromIndex(int32_t Index); // Function Icarus.StatAfflictionsLibrary.MakeStatAfflictionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1470
	struct FStatAfflictionsEnum MakeStatAfflictionsEnum(struct FStatAfflictionsEnum Enum); // Function Icarus.StatAfflictionsLibrary.MakeStatAfflictionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b13f0
	struct FStatAfflictionsRowHandle MakeStatAfflictions(struct FName RowName); // Function Icarus.StatAfflictionsLibrary.MakeStatAfflictions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1350
	struct FStatAfflictionsRowHandle MakeLiteralStatAfflictions(struct FStatAfflictionsRowHandle RowHandle); // Function Icarus.StatAfflictionsLibrary.MakeLiteralStatAfflictions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1000
	bool IsValidName(struct FName NameValue); // Function Icarus.StatAfflictionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b0e10
	struct FStatAfflictionsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatAfflictionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0c60
	struct FName IntToName(int32_t IntValue); // Function Icarus.StatAfflictionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b0ab0
	void GetStatAfflictionsStruct(struct FStatAfflictionsRowHandle RowHandle, struct FStatAfflictions StatAfflictions, enum class EValid Paths); // Function Icarus.StatAfflictionsLibrary.GetStatAfflictionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b06b0
	bool EqualEqual_FStatAfflictionsRowHandleFStatAfflictionsRowHandle(struct FStatAfflictionsRowHandle RowHandleA, struct FStatAfflictionsRowHandle RowHandleB); // Function Icarus.StatAfflictionsLibrary.EqualEqual_FStatAfflictionsRowHandleFStatAfflictionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b02a0
	bool EqualEqual_EnumEnum(struct FStatAfflictionsEnum A, struct FStatAfflictionsEnum B); // Function Icarus.StatAfflictionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16aff80
	struct FStatAfflictionsRowHandle CastToStatAfflictionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.StatAfflictionsLibrary.CastToStatAfflictionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16afc50
	void BreakStatAfflictionsEnum(struct FStatAfflictionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.StatAfflictionsLibrary.BreakStatAfflictionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16af820
	void AddRowToStatAfflictionsTable(struct FName Name, struct FStatAfflictions Data, struct FStatAfflictionsRowHandle NewRow); // Function Icarus.StatAfflictionsLibrary.AddRowToStatAfflictionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16af280
};

// Class Icarus.StatAfflictionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatAfflictionsTable : UIcarusDataTable {
};

// Class Icarus.StatCategoriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatCategoriesLibrary : URowLibrary {

	struct FStatCategoriesRowHandle StructToRowHandle(struct FStatCategoriesEnum EnumValue); // Function Icarus.StatCategoriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2980
	struct FName StructToName(struct FStatCategoriesEnum EnumValue); // Function Icarus.StatCategoriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2780
	int32_t StructToInt(struct FStatCategoriesEnum EnumValue); // Function Icarus.StatCategoriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b25a0
	struct FStatCategoriesEnum RowHandleToStruct(struct FStatCategoriesRowHandle RowHandle); // Function Icarus.StatCategoriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b23a0
	void RemoveRowFromStatCategoriesTable(struct FName Name); // Function Icarus.StatCategoriesLibrary.RemoveRowFromStatCategoriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b21a0
	void RefreshConstants(); // Function Icarus.StatCategoriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b2080
	int32_t NumRows(); // Function Icarus.StatCategoriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b2010
	bool NotEqual_EnumName(struct FStatCategoriesEnum A, struct FName B); // Function Icarus.StatCategoriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1ec0
	bool NotEqual_EnumEnum(struct FStatCategoriesEnum A, struct FStatCategoriesEnum B); // Function Icarus.StatCategoriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1bf0
	struct FStatCategoriesEnum NameToStruct(struct FName NameValue); // Function Icarus.StatCategoriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1980
	int32_t NameToInt(struct FName NameValue); // Function Icarus.StatCategoriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b17d0
	struct FStatCategoriesRowHandle MakeStatCategoriesFromIndex(int32_t Index); // Function Icarus.StatCategoriesLibrary.MakeStatCategoriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1620
	struct FStatCategoriesEnum MakeStatCategoriesEnum(struct FStatCategoriesEnum Enum); // Function Icarus.StatCategoriesLibrary.MakeStatCategoriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b15a0
	struct FStatCategoriesRowHandle MakeStatCategories(struct FName RowName); // Function Icarus.StatCategoriesLibrary.MakeStatCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b1500
	struct FStatCategoriesRowHandle MakeLiteralStatCategories(struct FStatCategoriesRowHandle RowHandle); // Function Icarus.StatCategoriesLibrary.MakeLiteralStatCategories // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b10d0
	bool IsValidName(struct FName NameValue); // Function Icarus.StatCategoriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b0ea0
	struct FStatCategoriesEnum IntToStruct(int32_t IntValue); // Function Icarus.StatCategoriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0cf0
	struct FName IntToName(int32_t IntValue); // Function Icarus.StatCategoriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b0b40
	void GetStatCategoriesStruct(struct FStatCategoriesRowHandle RowHandle, struct FStatCategory StatCategories, enum class EValid Paths); // Function Icarus.StatCategoriesLibrary.GetStatCategoriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b0860
	bool EqualEqual_FStatCategoriesRowHandleFStatCategoriesRowHandle(struct FStatCategoriesRowHandle RowHandleA, struct FStatCategoriesRowHandle RowHandleB); // Function Icarus.StatCategoriesLibrary.EqualEqual_FStatCategoriesRowHandleFStatCategoriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b03e0
	bool EqualEqual_EnumEnum(struct FStatCategoriesEnum A, struct FStatCategoriesEnum B); // Function Icarus.StatCategoriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b0070
	struct FStatCategoriesRowHandle CastToStatCategoriesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.StatCategoriesLibrary.CastToStatCategoriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16afd70
	void BreakStatCategoriesEnum(struct FStatCategoriesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.StatCategoriesLibrary.BreakStatCategoriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16af980
	void AddRowToStatCategoriesTable(struct FName Name, struct FStatCategory Data, struct FStatCategoriesRowHandle NewRow); // Function Icarus.StatCategoriesLibrary.AddRowToStatCategoriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16af4b0
};

// Class Icarus.StatCategoriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatCategoriesTable : UIcarusDataTable {
};

// Class Icarus.StaticItem
// Size: 0x3d0 (Inherited: 0x3c0)
struct AStaticItem : AIcarusItem {
	struct UStaticMeshComponent* StaticMeshRoot; // 0x3c0(0x08)
	char pad_3C8[0x8]; // 0x3c8(0x08)
};

// Class Icarus.StatisticsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatisticsLibrary : URowLibrary {

	struct FStatisticsRowHandle StructToRowHandle(struct FStatisticsEnum EnumValue); // Function Icarus.StatisticsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b88d0
	struct FName StructToName(struct FStatisticsEnum EnumValue); // Function Icarus.StatisticsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8790
	int32_t StructToInt(struct FStatisticsEnum EnumValue); // Function Icarus.StatisticsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8650
	struct FStatisticsEnum RowHandleToStruct(struct FStatisticsRowHandle RowHandle); // Function Icarus.StatisticsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b8360
	void RemoveRowFromStatisticsTable(struct FName Name); // Function Icarus.StatisticsLibrary.RemoveRowFromStatisticsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b8170
	void RefreshConstants(); // Function Icarus.StatisticsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16b8130
	int32_t NumRows(); // Function Icarus.StatisticsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7df0
	bool NotEqual_EnumName(struct FStatisticsEnum A, struct FName B); // Function Icarus.StatisticsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7c10
	bool NotEqual_EnumEnum(struct FStatisticsEnum A, struct FStatisticsEnum B); // Function Icarus.StatisticsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7a30
	struct FStatisticsEnum NameToStruct(struct FName NameValue); // Function Icarus.StatisticsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7910
	int32_t NameToInt(struct FName NameValue); // Function Icarus.StatisticsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16b77f0
	struct FStatisticsRowHandle MakeStatisticsFromIndex(int32_t Index); // Function Icarus.StatisticsLibrary.MakeStatisticsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b74e0
	struct FStatisticsEnum MakeStatisticsEnum(struct FStatisticsEnum Enum); // Function Icarus.StatisticsLibrary.MakeStatisticsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7460
	struct FStatisticsRowHandle MakeStatistics(struct FName RowName); // Function Icarus.StatisticsLibrary.MakeStatistics // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b73c0
	struct FStatisticsRowHandle MakeLiteralStatistics(struct FStatisticsRowHandle RowHandle); // Function Icarus.StatisticsLibrary.MakeLiteralStatistics // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7220
	bool IsValidName(struct FName NameValue); // Function Icarus.StatisticsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16b7100
	struct FStatisticsEnum IntToStruct(int32_t IntValue); // Function Icarus.StatisticsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6fe0
	struct FName IntToName(int32_t IntValue); // Function Icarus.StatisticsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16b6ec0
	void GetStatisticsStruct(struct FStatisticsRowHandle RowHandle, struct FStatistic Statistics, enum class EValid Paths); // Function Icarus.StatisticsLibrary.GetStatisticsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b68c0
	bool EqualEqual_FStatisticsRowHandleFStatisticsRowHandle(struct FStatisticsRowHandle RowHandleA, struct FStatisticsRowHandle RowHandleB); // Function Icarus.StatisticsLibrary.EqualEqual_FStatisticsRowHandleFStatisticsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b6090
	bool EqualEqual_EnumEnum(struct FStatisticsEnum A, struct FStatisticsEnum B); // Function Icarus.StatisticsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b5eb0
	struct FStatisticsRowHandle CastToStatisticsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.StatisticsLibrary.CastToStatisticsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5ac0
	void BreakStatisticsEnum(struct FStatisticsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.StatisticsLibrary.BreakStatisticsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16b5800
	void AddRowToStatisticsTable(struct FName Name, struct FStatistic Data, struct FStatisticsRowHandle NewRow); // Function Icarus.StatisticsLibrary.AddRowToStatisticsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5480
};

// Class Icarus.StatisticsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatisticsTable : UIcarusDataTable {
};

// Class Icarus.StatisticTrackerSubsystem
// Size: 0x80 (Inherited: 0x30)
struct UStatisticTrackerSubsystem : UWorldSubsystem {
	char pad_30[0x50]; // 0x30(0x50)

	bool SetStatisticValue(struct FString PlayerID, struct FStatisticsRowHandle StatisticRow, int32_t Value); // Function Icarus.StatisticTrackerSubsystem.SetStatisticValue // (Final|Native|Public|BlueprintCallable) // @ game+0x16b84e0
	void OnTreeChopped(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnTreeChopped // (Final|Native|Private) // @ game+0x16b8080
	void OnPlayerRevivedOtherPlayer(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnPlayerRevivedOtherPlayer // (Final|Native|Private) // @ game+0x16b7fb0
	void OnPlayerRevived(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnPlayerRevived // (Final|Native|Private) // @ game+0x16b7f00
	void OnPlayerDeath(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.OnPlayerDeath // (Final|Native|Private) // @ game+0x16b7e50
	bool IncrementStatistic(struct FString PlayerID, struct FStatisticsRowHandle StatisticRow); // Function Icarus.StatisticTrackerSubsystem.IncrementStatistic // (Final|Native|Public|BlueprintCallable) // @ game+0x16b6da0
	struct FPlayerStatistics GetTrackedStatisticsForPlayer(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.GetTrackedStatisticsForPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16b6c00
	bool ClearTrackedStatisticsForPlayer(struct FString PlayerID); // Function Icarus.StatisticTrackerSubsystem.ClearTrackedStatisticsForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x16b5df0
};

// Class Icarus.StatsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStatsFunctionLibrary : UBlueprintFunctionLibrary {

	bool RollChanceStat(struct FStatsEnum Stat, struct UIcarusStatContainer* StatContainer); // Function Icarus.StatsFunctionLibrary.RollChanceStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b8270
	float ModifyValueByPlusPercent(int32_t Value, int32_t StatValue); // Function Icarus.StatsFunctionLibrary.ModifyValueByPlusPercent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16b7720
	bool HasStatDescription(struct FStatsEnum Stat); // Function Icarus.StatsFunctionLibrary.HasStatDescription // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b6d00
	void GetStatTitleBP(struct FStatsEnum Stat, int32_t Value, struct FText TitleDescription, enum class EFunctionOutcome Outcome); // Function Icarus.StatsFunctionLibrary.GetStatTitleBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b66f0
	struct TMap<struct FStatCategoriesEnum, struct FStatCollection> GetStatDisplay(struct UIcarusStatContainer* StatContainer); // Function Icarus.StatsFunctionLibrary.GetStatDisplay // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16b65b0
	void GetStatDescriptionBP(struct FStatsEnum Stat, int32_t Value, struct FText Description, enum class EFunctionOutcome Outcome); // Function Icarus.StatsFunctionLibrary.GetStatDescriptionBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b63e0
	bool CheckStatComparison(struct FStatComparison Comparison, struct UIcarusStatContainer* StatContainer); // Function Icarus.StatsFunctionLibrary.CheckStatComparison // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16b5d00
};

// Class Icarus.StatsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UStatsTable : UIcarusDataTable {
};

// Class Icarus.StomachComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UStomachComponent : UActorComponent {
	struct TArray<struct FStomachContent> StomachContents; // 0xb0(0x10)
	struct FMulticastSparseDelegate StomachContentsUpdated; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)

	void OnRep_StomachContents(); // Function Icarus.StomachComponent.OnRep_StomachContents // (Final|Native|Public) // @ game+0x16b8060
	void FoodModifierRemoved(struct UModifierStateComponent* Component, bool bRemoved); // Function Icarus.StomachComponent.FoodModifierRemoved // (Final|Native|Public) // @ game+0x16b6310
};

// Class Icarus.SurfacesLibrary
// Size: 0x28 (Inherited: 0x28)
struct USurfacesLibrary : URowLibrary {

	struct FSurfacesRowHandle StructToRowHandle(struct FSurfacesEnum EnumValue); // Function Icarus.SurfacesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bebd0
	struct FName StructToName(struct FSurfacesEnum EnumValue); // Function Icarus.SurfacesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be9f0
	int32_t StructToInt(struct FSurfacesEnum EnumValue); // Function Icarus.SurfacesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be810
	struct FSurfacesEnum RowHandleToStruct(struct FSurfacesRowHandle RowHandle); // Function Icarus.SurfacesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be5d0
	void RemoveRowFromSurfacesTable(struct FName Name); // Function Icarus.SurfacesLibrary.RemoveRowFromSurfacesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16be450
	void RefreshConstants(); // Function Icarus.SurfacesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16be3f0
	int32_t NumRows(); // Function Icarus.SurfacesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be360
	bool NotEqual_EnumName(struct FSurfacesEnum A, struct FName B); // Function Icarus.SurfacesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be090
	bool NotEqual_EnumEnum(struct FSurfacesEnum A, struct FSurfacesEnum B); // Function Icarus.SurfacesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bddc0
	struct FSurfacesEnum NameToStruct(struct FName NameValue); // Function Icarus.SurfacesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdc10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.SurfacesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16bda60
	struct FSurfacesRowHandle MakeSurfacesRowFromSurfaceType(enum class EPhysicalSurface InSurfaceType); // Function Icarus.SurfacesLibrary.MakeSurfacesRowFromSurfaceType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bd570
	struct FSurfacesRowHandle MakeSurfacesFromIndex(int32_t Index); // Function Icarus.SurfacesLibrary.MakeSurfacesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd4e0
	struct FSurfacesEnum MakeSurfacesEnum(struct FSurfacesEnum Enum); // Function Icarus.SurfacesLibrary.MakeSurfacesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd460
	struct FSurfacesRowHandle MakeSurfaces(struct FName RowName); // Function Icarus.SurfacesLibrary.MakeSurfaces // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd3c0
	struct FSurfacesRowHandle MakeLiteralSurfaces(struct FSurfacesRowHandle RowHandle); // Function Icarus.SurfacesLibrary.MakeLiteralSurfaces // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd150
	bool IsValidName(struct FName NameValue); // Function Icarus.SurfacesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16bcfa0
	struct FSurfacesEnum IntToStruct(int32_t IntValue); // Function Icarus.SurfacesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bcdf0
	struct FName IntToName(int32_t IntValue); // Function Icarus.SurfacesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16bcc40
	void GetSurfacesStruct(struct FSurfacesRowHandle RowHandle, struct FSurfacesData Surfaces, enum class EValid Paths); // Function Icarus.SurfacesLibrary.GetSurfacesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bc700
	bool EqualEqual_FSurfacesRowHandleFSurfacesRowHandle(struct FSurfacesRowHandle RowHandleA, struct FSurfacesRowHandle RowHandleB); // Function Icarus.SurfacesLibrary.EqualEqual_FSurfacesRowHandleFSurfacesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bc340
	bool EqualEqual_EnumEnum(struct FSurfacesEnum A, struct FSurfacesEnum B); // Function Icarus.SurfacesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bc070
	struct FSurfacesRowHandle CastToSurfacesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.SurfacesLibrary.CastToSurfacesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bbd10
	void BreakSurfacesEnum(struct FSurfacesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.SurfacesLibrary.BreakSurfacesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bb8f0
	void AddRowToSurfacesTable(struct FName Name, struct FSurfacesData Data, struct FSurfacesRowHandle NewRow); // Function Icarus.SurfacesLibrary.AddRowToSurfacesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bb2c0
};

// Class Icarus.SurfacesTable
// Size: 0xb8 (Inherited: 0xb8)
struct USurfacesTable : UIcarusDataTable {
};

// Class Icarus.TagQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTagQueriesLibrary : URowLibrary {

	struct FTagQueriesRowHandle StructToRowHandle(struct FTagQueriesEnum EnumValue); // Function Icarus.TagQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bec80
	struct FName StructToName(struct FTagQueriesEnum EnumValue); // Function Icarus.TagQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bea90
	int32_t StructToInt(struct FTagQueriesEnum EnumValue); // Function Icarus.TagQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be8b0
	struct FTagQueriesEnum RowHandleToStruct(struct FTagQueriesRowHandle RowHandle); // Function Icarus.TagQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be690
	void RemoveRowFromTagQueriesTable(struct FName Name); // Function Icarus.TagQueriesLibrary.RemoveRowFromTagQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16be4d0
	void RefreshConstants(); // Function Icarus.TagQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16be410
	int32_t NumRows(); // Function Icarus.TagQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be390
	bool NotEqual_EnumName(struct FTagQueriesEnum A, struct FName B); // Function Icarus.TagQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be180
	bool NotEqual_EnumEnum(struct FTagQueriesEnum A, struct FTagQueriesEnum B); // Function Icarus.TagQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdeb0
	struct FTagQueriesEnum NameToStruct(struct FName NameValue); // Function Icarus.TagQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdca0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TagQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16bdaf0
	struct FTagQueriesRowHandle MakeTagQueriesFromIndex(int32_t Index); // Function Icarus.TagQueriesLibrary.MakeTagQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd730
	struct FTagQueriesEnum MakeTagQueriesEnum(struct FTagQueriesEnum Enum); // Function Icarus.TagQueriesLibrary.MakeTagQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd6b0
	struct FTagQueriesRowHandle MakeTagQueries(struct FName RowName); // Function Icarus.TagQueriesLibrary.MakeTagQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd610
	struct FTagQueriesRowHandle MakeLiteralTagQueries(struct FTagQueriesRowHandle RowHandle); // Function Icarus.TagQueriesLibrary.MakeLiteralTagQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd220
	bool IsValidName(struct FName NameValue); // Function Icarus.TagQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16bd030
	struct FTagQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.TagQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bce80
	struct FName IntToName(int32_t IntValue); // Function Icarus.TagQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16bccd0
	void GetTagQueriesStruct(struct FTagQueriesRowHandle RowHandle, struct FTagQueries TagQueries, enum class EValid Paths); // Function Icarus.TagQueriesLibrary.GetTagQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bc8a0
	bool EqualEqual_FTagQueriesRowHandleFTagQueriesRowHandle(struct FTagQueriesRowHandle RowHandleA, struct FTagQueriesRowHandle RowHandleB); // Function Icarus.TagQueriesLibrary.EqualEqual_FTagQueriesRowHandleFTagQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bc480
	bool EqualEqual_EnumEnum(struct FTagQueriesEnum A, struct FTagQueriesEnum B); // Function Icarus.TagQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bc160
	struct FTagQueriesRowHandle CastToTagQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TagQueriesLibrary.CastToTagQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bbe30
	void BreakTagQueriesEnum(struct FTagQueriesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TagQueriesLibrary.BreakTagQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bba50
	void AddRowToTagQueriesTable(struct FName Name, struct FTagQueries Data, struct FTagQueriesRowHandle NewRow); // Function Icarus.TagQueriesLibrary.AddRowToTagQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bb460
};

// Class Icarus.TagQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTagQueriesTable : UIcarusDataTable {
};

// Class Icarus.TalentArchetypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentArchetypesLibrary : URowLibrary {

	struct FTalentArchetypesRowHandle StructToRowHandle(struct FTalentArchetypesEnum EnumValue); // Function Icarus.TalentArchetypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bed30
	struct FName StructToName(struct FTalentArchetypesEnum EnumValue); // Function Icarus.TalentArchetypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16beb30
	int32_t StructToInt(struct FTalentArchetypesEnum EnumValue); // Function Icarus.TalentArchetypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be950
	struct FTalentArchetypesEnum RowHandleToStruct(struct FTalentArchetypesRowHandle RowHandle); // Function Icarus.TalentArchetypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be750
	void RemoveRowFromTalentArchetypesTable(struct FName Name); // Function Icarus.TalentArchetypesLibrary.RemoveRowFromTalentArchetypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16be550
	void RefreshConstants(); // Function Icarus.TalentArchetypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16be430
	int32_t NumRows(); // Function Icarus.TalentArchetypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be3c0
	bool NotEqual_EnumName(struct FTalentArchetypesEnum A, struct FName B); // Function Icarus.TalentArchetypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16be270
	bool NotEqual_EnumEnum(struct FTalentArchetypesEnum A, struct FTalentArchetypesEnum B); // Function Icarus.TalentArchetypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdfa0
	struct FTalentArchetypesEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentArchetypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bdd30
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentArchetypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16bdb80
	struct TArray<struct FTalentArchetypesRowHandle> MakeTalentArchetypesRowFromModel(struct FTalentModelsRowHandle InModel); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypesRowFromModel // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bd970
	struct FTalentArchetypesRowHandle MakeTalentArchetypesFromIndex(int32_t Index); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd8e0
	struct FTalentArchetypesEnum MakeTalentArchetypesEnum(struct FTalentArchetypesEnum Enum); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd860
	struct FTalentArchetypesRowHandle MakeTalentArchetypes(struct FName RowName); // Function Icarus.TalentArchetypesLibrary.MakeTalentArchetypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd7c0
	struct FTalentArchetypesRowHandle MakeLiteralTalentArchetypes(struct FTalentArchetypesRowHandle RowHandle); // Function Icarus.TalentArchetypesLibrary.MakeLiteralTalentArchetypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bd2f0
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentArchetypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16bd0c0
	struct FTalentArchetypesEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentArchetypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bcf10
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentArchetypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16bcd60
	void GetTalentArchetypesStruct(struct FTalentArchetypesRowHandle RowHandle, struct FTalentArchetype TalentArchetypes, enum class EValid Paths); // Function Icarus.TalentArchetypesLibrary.GetTalentArchetypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bca60
	bool EqualEqual_FTalentArchetypesRowHandleFTalentArchetypesRowHandle(struct FTalentArchetypesRowHandle RowHandleA, struct FTalentArchetypesRowHandle RowHandleB); // Function Icarus.TalentArchetypesLibrary.EqualEqual_FTalentArchetypesRowHandleFTalentArchetypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bc5c0
	bool EqualEqual_EnumEnum(struct FTalentArchetypesEnum A, struct FTalentArchetypesEnum B); // Function Icarus.TalentArchetypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16bc250
	struct FTalentArchetypesRowHandle CastToTalentArchetypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentArchetypesLibrary.CastToTalentArchetypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bbf50
	void BreakTalentArchetypesEnum(struct FTalentArchetypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentArchetypesLibrary.BreakTalentArchetypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16bbbb0
	void AddRowToTalentArchetypesTable(struct FName Name, struct FTalentArchetype Data, struct FTalentArchetypesRowHandle NewRow); // Function Icarus.TalentArchetypesLibrary.AddRowToTalentArchetypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16bb670
};

// Class Icarus.TalentArchetypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentArchetypesTable : UIcarusDataTable {
};

// Class Icarus.TalentControllerInterface
// Size: 0x28 (Inherited: 0x28)
struct UTalentControllerInterface : UInterface {

	void UnlockTalent(struct FTalentsRowHandle Talent); // Function Icarus.TalentControllerInterface.UnlockTalent // (Native|Protected|BlueprintCallable) // @ game+0x16c5580
	struct UTalentViewInterface* SetView(struct FTalentViewsRowHandle InView); // Function Icarus.TalentControllerInterface.SetView // (Native|Public|BlueprintCallable) // @ game+0x16c4fa0
	void SetModelView(struct FTalentModelViewsRowHandle InModelView); // Function Icarus.TalentControllerInterface.SetModelView // (Native|Public|BlueprintCallable) // @ game+0x16c4ee0
	struct UTalentModelInterface* SetModel(struct FTalentModelsRowHandle InModel); // Function Icarus.TalentControllerInterface.SetModel // (Native|Public|BlueprintCallable) // @ game+0x16c4e20
	void SetIsInteractionEnabled(bool IsEnabled); // Function Icarus.TalentControllerInterface.SetIsInteractionEnabled // (Native|Public|BlueprintCallable) // @ game+0x16c4d00
	bool IsInteractionEnabled(); // Function Icarus.TalentControllerInterface.IsInteractionEnabled // (Native|Public|BlueprintCallable) // @ game+0x16c3a50
	bool HasView(); // Function Icarus.TalentControllerInterface.HasView // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c37e0
	struct UTalentViewInterface* GetView(); // Function Icarus.TalentControllerInterface.GetView // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c37b0
	struct FTalentModelViewsRowHandle GetModelViewData(); // Function Icarus.TalentControllerInterface.GetModelViewData // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2da0
	struct UTalentModelInterface_Const* GetModel_Const(); // Function Icarus.TalentControllerInterface.GetModel_Const // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2de0
	struct UTalentModelInterface* GetModel(); // Function Icarus.TalentControllerInterface.GetModel // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x16c2b40
	bool AreAnyFlagsSet(struct TArray<struct FFlagsMultiRowHandle> Flags); // Function Icarus.TalentControllerInterface.AreAnyFlagsSet // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16c1c60
	bool AreAllFlagsSet(struct TArray<struct FFlagsMultiRowHandle> Flags); // Function Icarus.TalentControllerInterface.AreAllFlagsSet // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16c1b80
};

// Class Icarus.TalentLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentLibrary : UBlueprintFunctionLibrary {

	struct FTalentTreesRowHandle GetTalentTree(struct FTalentsRowHandle Talent); // Function Icarus.TalentLibrary.GetTalentTree // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3370
	struct TArray<struct FTalentsRowHandle> GetTalentsForTree(struct FTalentTreesRowHandle TalentTree); // Function Icarus.TalentLibrary.GetTalentsForTree // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3680
	struct FTalentModelViewsRowHandle GetModelView(struct FTalentModelsRowHandle Model); // Function Icarus.TalentLibrary.GetModelView // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c2cd0
	struct FTalentModelsRowHandle GetModel(struct FTalentArchetypesRowHandle Archetype); // Function Icarus.TalentLibrary.GetModel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c2b70
	struct FTalentArchetypesRowHandle GetArchetype(struct FTalentTreesRowHandle TalentTree); // Function Icarus.TalentLibrary.GetArchetype // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c2930
};

// Class Icarus.TalentMenuWidget
// Size: 0x260 (Inherited: 0x260)
struct UTalentMenuWidget : UUserWidget {
};

// Class Icarus.TalentModelDataStatics
// Size: 0x28 (Inherited: 0x28)
struct UTalentModelDataStatics : UObject {

	void BreakTalentModelData(struct FTalentModelData ModelData, int32_t Rank, int32_t MaxRank, enum class ETalentState State); // Function Icarus.TalentModelDataStatics.BreakTalentModelData // (Final|Native|Static|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c1d40
};

// Class Icarus.TalentModelsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentModelsLibrary : URowLibrary {

	struct FTalentModelsRowHandle StructToRowHandle(struct FTalentModelsEnum EnumValue); // Function Icarus.TalentModelsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c54b0
	struct FName StructToName(struct FTalentModelsEnum EnumValue); // Function Icarus.TalentModelsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5360
	int32_t StructToInt(struct FTalentModelsEnum EnumValue); // Function Icarus.TalentModelsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5220
	struct FTalentModelsEnum RowHandleToStruct(struct FTalentModelsRowHandle RowHandle); // Function Icarus.TalentModelsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4ba0
	void RemoveRowFromTalentModelsTable(struct FName Name); // Function Icarus.TalentModelsLibrary.RemoveRowFromTalentModelsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16c4a40
	void RefreshConstants(); // Function Icarus.TalentModelsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16c49a0
	int32_t NumRows(); // Function Icarus.TalentModelsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4810
	bool NotEqual_EnumName(struct FTalentModelsEnum A, struct FName B); // Function Icarus.TalentModelsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c46f0
	bool NotEqual_EnumEnum(struct FTalentModelsEnum A, struct FTalentModelsEnum B); // Function Icarus.TalentModelsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4510
	struct FTalentModelsEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentModelsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4300
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentModelsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16c41e0
	struct FTalentModelsRowHandle MakeTalentModelsFromIndex(int32_t Index); // Function Icarus.TalentModelsLibrary.MakeTalentModelsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c40c0
	struct FTalentModelsEnum MakeTalentModelsEnum(struct FTalentModelsEnum Enum); // Function Icarus.TalentModelsLibrary.MakeTalentModelsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4040
	struct FTalentModelsRowHandle MakeTalentModels(struct FName RowName); // Function Icarus.TalentModelsLibrary.MakeTalentModels // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3fa0
	struct FTalentModelsRowHandle MakeLiteralTalentModels(struct FTalentModelsRowHandle RowHandle); // Function Icarus.TalentModelsLibrary.MakeLiteralTalentModels // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3d20
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentModelsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16c3bc0
	struct FTalentModelsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentModelsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c39c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentModelsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16c38a0
	void GetTalentModelsStruct(struct FTalentModelsRowHandle RowHandle, struct FTalentModel TalentModels, enum class EValid Paths); // Function Icarus.TalentModelsLibrary.GetTalentModelsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c30a0
	bool EqualEqual_FTalentModelsRowHandleFTalentModelsRowHandle(struct FTalentModelsRowHandle RowHandleA, struct FTalentModelsRowHandle RowHandleB); // Function Icarus.TalentModelsLibrary.EqualEqual_FTalentModelsRowHandleFTalentModelsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c27f0
	bool EqualEqual_EnumEnum(struct FTalentModelsEnum A, struct FTalentModelsEnum B); // Function Icarus.TalentModelsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c25c0
	struct FTalentModelsRowHandle CastToTalentModelsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentModelsLibrary.CastToTalentModelsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c23b0
	void BreakTalentModelsEnum(struct FTalentModelsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentModelsLibrary.BreakTalentModelsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c2030
	void AddRowToTalentModelsTable(struct FName Name, struct FTalentModel Data, struct FTalentModelsRowHandle NewRow); // Function Icarus.TalentModelsLibrary.AddRowToTalentModelsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c1940
};

// Class Icarus.TalentModelsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentModelsTable : UIcarusDataTable {
};

// Class Icarus.TalentModelViewsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentModelViewsLibrary : URowLibrary {

	struct FTalentModelViewsRowHandle StructToRowHandle(struct FTalentModelViewsEnum EnumValue); // Function Icarus.TalentModelViewsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5400
	struct FName StructToName(struct FTalentModelViewsEnum EnumValue); // Function Icarus.TalentModelViewsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c52c0
	int32_t StructToInt(struct FTalentModelViewsEnum EnumValue); // Function Icarus.TalentModelViewsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c5180
	struct FTalentModelViewsEnum RowHandleToStruct(struct FTalentModelViewsRowHandle RowHandle); // Function Icarus.TalentModelViewsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4ae0
	void RemoveRowFromTalentModelViewsTable(struct FName Name); // Function Icarus.TalentModelViewsLibrary.RemoveRowFromTalentModelViewsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16c49c0
	void RefreshConstants(); // Function Icarus.TalentModelViewsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16c4980
	int32_t NumRows(); // Function Icarus.TalentModelViewsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c47e0
	bool NotEqual_EnumName(struct FTalentModelViewsEnum A, struct FName B); // Function Icarus.TalentModelViewsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4600
	bool NotEqual_EnumEnum(struct FTalentModelViewsEnum A, struct FTalentModelViewsEnum B); // Function Icarus.TalentModelViewsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4420
	struct FTalentModelViewsEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentModelViewsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c4270
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentModelViewsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16c4150
	struct FTalentModelViewsRowHandle MakeTalentModelViewsFromIndex(int32_t Index); // Function Icarus.TalentModelViewsLibrary.MakeTalentModelViewsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3f10
	struct FTalentModelViewsEnum MakeTalentModelViewsEnum(struct FTalentModelViewsEnum Enum); // Function Icarus.TalentModelViewsLibrary.MakeTalentModelViewsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3e90
	struct FTalentModelViewsRowHandle MakeTalentModelViews(struct FName RowName); // Function Icarus.TalentModelViewsLibrary.MakeTalentModelViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3df0
	struct FTalentModelViewsRowHandle MakeLiteralTalentModelViews(struct FTalentModelViewsRowHandle RowHandle); // Function Icarus.TalentModelViewsLibrary.MakeLiteralTalentModelViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3c50
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentModelViewsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16c3b30
	struct FTalentModelViewsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentModelViewsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c3930
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentModelViewsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16c3810
	void GetTalentModelViewsStruct(struct FTalentModelViewsRowHandle RowHandle, struct FTalentModelView TalentModelViews, enum class EValid Paths); // Function Icarus.TalentModelViewsLibrary.GetTalentModelViewsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c2ef0
	bool EqualEqual_FTalentModelViewsRowHandleFTalentModelViewsRowHandle(struct FTalentModelViewsRowHandle RowHandleA, struct FTalentModelViewsRowHandle RowHandleB); // Function Icarus.TalentModelViewsLibrary.EqualEqual_FTalentModelViewsRowHandleFTalentModelViewsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c26b0
	bool EqualEqual_EnumEnum(struct FTalentModelViewsEnum A, struct FTalentModelViewsEnum B); // Function Icarus.TalentModelViewsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c24d0
	struct FTalentModelViewsRowHandle CastToTalentModelViewsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentModelViewsLibrary.CastToTalentModelViewsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c2290
	void BreakTalentModelViewsEnum(struct FTalentModelViewsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentModelViewsLibrary.BreakTalentModelViewsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c1ed0
	void AddRowToTalentModelViewsTable(struct FName Name, struct FTalentModelView Data, struct FTalentModelViewsRowHandle NewRow); // Function Icarus.TalentModelViewsLibrary.AddRowToTalentModelViewsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c1720
};

// Class Icarus.TalentModelViewsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentModelViewsTable : UIcarusDataTable {
};

// Class Icarus.TalentRanksFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentRanksFunctionLibrary : UBlueprintFunctionLibrary {

	struct FTalentRank GetTalentRank(struct FTalentRanksRowHandle Reference, int32_t Investment, enum class EValid Paths); // Function Icarus.TalentRanksFunctionLibrary.GetTalentRank // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c98f0
	struct FTalentRanksRowHandle FindRequiredTalentRank(struct FTalentsRowHandle Talent); // Function Icarus.TalentRanksFunctionLibrary.FindRequiredTalentRank // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16c9820
};

// Class Icarus.TalentRanksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentRanksLibrary : URowLibrary {

	struct FTalentRanksRowHandle StructToRowHandle(struct FTalentRanksEnum EnumValue); // Function Icarus.TalentRanksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc280
	struct FName StructToName(struct FTalentRanksEnum EnumValue); // Function Icarus.TalentRanksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc0a0
	int32_t StructToInt(struct FTalentRanksEnum EnumValue); // Function Icarus.TalentRanksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cbec0
	struct FTalentRanksEnum RowHandleToStruct(struct FTalentRanksRowHandle RowHandle); // Function Icarus.TalentRanksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cbb80
	void RemoveRowFromTalentRanksTable(struct FName Name); // Function Icarus.TalentRanksLibrary.RemoveRowFromTalentRanksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16cb970
	void RefreshConstants(); // Function Icarus.TalentRanksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16cb910
	int32_t NumRows(); // Function Icarus.TalentRanksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb7f0
	bool NotEqual_EnumName(struct FTalentRanksEnum A, struct FName B); // Function Icarus.TalentRanksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb520
	bool NotEqual_EnumEnum(struct FTalentRanksEnum A, struct FTalentRanksEnum B); // Function Icarus.TalentRanksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb250
	struct FTalentRanksEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentRanksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb0a0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentRanksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16caef0
	struct FTalentRanksRowHandle MakeTalentRanksFromIndex(int32_t Index); // Function Icarus.TalentRanksLibrary.MakeTalentRanksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca920
	struct FTalentRanksEnum MakeTalentRanksEnum(struct FTalentRanksEnum Enum); // Function Icarus.TalentRanksLibrary.MakeTalentRanksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca8a0
	struct FTalentRanksRowHandle MakeTalentRanks(struct FName RowName); // Function Icarus.TalentRanksLibrary.MakeTalentRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca800
	struct FTalentRanksRowHandle MakeLiteralTalentRanks(struct FTalentRanksRowHandle RowHandle); // Function Icarus.TalentRanksLibrary.MakeLiteralTalentRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca590
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentRanksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ca3e0
	struct FTalentRanksEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentRanksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca230
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentRanksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ca080
	void GetTalentRanksStruct(struct FTalentRanksRowHandle RowHandle, struct FTalentRank TalentRanks, enum class EValid Paths); // Function Icarus.TalentRanksLibrary.GetTalentRanksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c9b50
	bool EqualEqual_FTalentRanksRowHandleFTalentRanksRowHandle(struct FTalentRanksRowHandle RowHandleA, struct FTalentRanksRowHandle RowHandleB); // Function Icarus.TalentRanksLibrary.EqualEqual_FTalentRanksRowHandleFTalentRanksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9460
	bool EqualEqual_EnumEnum(struct FTalentRanksEnum A, struct FTalentRanksEnum B); // Function Icarus.TalentRanksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9190
	struct FTalentRanksRowHandle CastToTalentRanksRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentRanksLibrary.CastToTalentRanksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8e30
	void BreakTalentRanksEnum(struct FTalentRanksEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentRanksLibrary.BreakTalentRanksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c8980
	void AddRowToTalentRanksTable(struct FName Name, struct FTalentRank Data, struct FTalentRanksRowHandle NewRow); // Function Icarus.TalentRanksLibrary.AddRowToTalentRanksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8320
};

// Class Icarus.TalentRanksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentRanksTable : UIcarusDataTable {
};

// Class Icarus.TalentsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentsLibrary : URowLibrary {

	struct FTalentsRowHandle StructToRowHandle(struct FTalentsEnum EnumValue); // Function Icarus.TalentsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc3e0
	struct FName StructToName(struct FTalentsEnum EnumValue); // Function Icarus.TalentsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc1e0
	int32_t StructToInt(struct FTalentsEnum EnumValue); // Function Icarus.TalentsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc000
	struct FTalentsEnum RowHandleToStruct(struct FTalentsRowHandle RowHandle); // Function Icarus.TalentsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cbd00
	void RemoveRowFromTalentsTable(struct FName Name); // Function Icarus.TalentsLibrary.RemoveRowFromTalentsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16cba70
	void RefreshConstants(); // Function Icarus.TalentsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16cb950
	int32_t NumRows(); // Function Icarus.TalentsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb850
	bool NotEqual_EnumName(struct FTalentsEnum A, struct FName B); // Function Icarus.TalentsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb700
	bool NotEqual_EnumEnum(struct FTalentsEnum A, struct FTalentsEnum B); // Function Icarus.TalentsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb430
	struct FTalentsEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb1c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16cb010
	struct TArray<struct FTalentsRowHandle> MakeTalentsRowFromTalentTree(struct FTalentTreesRowHandle InTalentTree); // Function Icarus.TalentsLibrary.MakeTalentsRowFromTalentTree // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16cae00
	struct FTalentsRowHandle MakeTalentsFromIndex(int32_t Index); // Function Icarus.TalentsLibrary.MakeTalentsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cad70
	struct FTalentsEnum MakeTalentsEnum(struct FTalentsEnum Enum); // Function Icarus.TalentsLibrary.MakeTalentsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cacf0
	struct FTalentsRowHandle MakeTalents(struct FName RowName); // Function Icarus.TalentsLibrary.MakeTalents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cac50
	struct FTalentsRowHandle MakeLiteralTalents(struct FTalentsRowHandle RowHandle); // Function Icarus.TalentsLibrary.MakeLiteralTalents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca730
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ca500
	struct FTalentsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca350
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ca1a0
	void GetTalentsStruct(struct FTalentsRowHandle RowHandle, struct FTalent Talents, enum class EValid Paths); // Function Icarus.TalentsLibrary.GetTalentsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c9f00
	bool EqualEqual_FTalentsRowHandleFTalentsRowHandle(struct FTalentsRowHandle RowHandleA, struct FTalentsRowHandle RowHandleB); // Function Icarus.TalentsLibrary.EqualEqual_FTalentsRowHandleFTalentsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c96e0
	bool EqualEqual_EnumEnum(struct FTalentsEnum A, struct FTalentsEnum B); // Function Icarus.TalentsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9370
	struct FTalentsRowHandle CastToTalentsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentsLibrary.CastToTalentsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c9070
	void BreakTalentsEnum(struct FTalentsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentsLibrary.BreakTalentsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c8c40
	void AddRowToTalentsTable(struct FName Name, struct FTalent Data, struct FTalentsRowHandle NewRow); // Function Icarus.TalentsLibrary.AddRowToTalentsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8810
};

// Class Icarus.TalentsSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UTalentsSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnBlueprintTalentsUpdatedNotify; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayerTalentsUpdatedNotify; // 0x40(0x10)

	void BroadcastPlayerTalentsUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.TalentsSubsystem.BroadcastPlayerTalentsUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16c8da0
	void BroadcastBlueprintTalentsUpdatedDelegate(struct AIcarusPlayerCharacter* Player); // Function Icarus.TalentsSubsystem.BroadcastBlueprintTalentsUpdatedDelegate // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x15788c0
};

// Class Icarus.TalentsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentsTable : UIcarusDataTable {
};

// Class Icarus.TalentSubsystem
// Size: 0x30 (Inherited: 0x30)
struct UTalentSubsystem : UGameInstanceSubsystem {
};

// Class Icarus.TalentTooltipWidget
// Size: 0x280 (Inherited: 0x260)
struct UTalentTooltipWidget : UUserWidget {
	struct UTalentModelInterface_Const* Model; // 0x260(0x08)
	struct FTalentsRowHandle Talent; // 0x268(0x18)

	void SetTalent(struct UTalentModelInterface_Const* InModel, struct FTalentsRowHandle InTalent); // Function Icarus.TalentTooltipWidget.SetTalent // (Final|Native|Public|BlueprintCallable) // @ game+0x16cbdc0
	void OnTalentSet(); // Function Icarus.TalentTooltipWidget.OnTalentSet // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.TalentTreeCanvas
// Size: 0x2b0 (Inherited: 0x260)
struct UTalentTreeCanvas : UUserWidget {
	char pad_260[0x50]; // 0x260(0x50)

	void Reset(struct UTalentModelInterface_Const* Model); // Function Icarus.TalentTreeCanvas.Reset // (Final|Native|Public) // @ game+0x16cbaf0
	void Refresh(struct UTalentModelInterface_Const* Model); // Function Icarus.TalentTreeCanvas.Refresh // (Final|Native|Public) // @ game+0x16cb880
};

// Class Icarus.TalentTreesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentTreesLibrary : URowLibrary {

	struct FTalentTreesRowHandle StructToRowHandle(struct FTalentTreesEnum EnumValue); // Function Icarus.TalentTreesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc330
	struct FName StructToName(struct FTalentTreesEnum EnumValue); // Function Icarus.TalentTreesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cc140
	int32_t StructToInt(struct FTalentTreesEnum EnumValue); // Function Icarus.TalentTreesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cbf60
	struct FTalentTreesEnum RowHandleToStruct(struct FTalentTreesRowHandle RowHandle); // Function Icarus.TalentTreesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cbc40
	void RemoveRowFromTalentTreesTable(struct FName Name); // Function Icarus.TalentTreesLibrary.RemoveRowFromTalentTreesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16cb9f0
	void RefreshConstants(); // Function Icarus.TalentTreesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16cb930
	int32_t NumRows(); // Function Icarus.TalentTreesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb820
	bool NotEqual_EnumName(struct FTalentTreesEnum A, struct FName B); // Function Icarus.TalentTreesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb610
	bool NotEqual_EnumEnum(struct FTalentTreesEnum A, struct FTalentTreesEnum B); // Function Icarus.TalentTreesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb340
	struct FTalentTreesEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentTreesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cb130
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentTreesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16caf80
	struct TArray<struct FTalentTreesRowHandle> MakeTalentTreesRowFromArchetype(struct FTalentArchetypesRowHandle InArchetype); // Function Icarus.TalentTreesLibrary.MakeTalentTreesRowFromArchetype // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16cab60
	struct FTalentTreesRowHandle MakeTalentTreesFromIndex(int32_t Index); // Function Icarus.TalentTreesLibrary.MakeTalentTreesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16caad0
	struct FTalentTreesEnum MakeTalentTreesEnum(struct FTalentTreesEnum Enum); // Function Icarus.TalentTreesLibrary.MakeTalentTreesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16caa50
	struct FTalentTreesRowHandle MakeTalentTrees(struct FName RowName); // Function Icarus.TalentTreesLibrary.MakeTalentTrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca9b0
	struct FTalentTreesRowHandle MakeLiteralTalentTrees(struct FTalentTreesRowHandle RowHandle); // Function Icarus.TalentTreesLibrary.MakeLiteralTalentTrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca660
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentTreesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ca470
	struct FTalentTreesEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentTreesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ca2c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentTreesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ca110
	void GetTalentTreesStruct(struct FTalentTreesRowHandle RowHandle, struct FTalentTree TalentTrees, enum class EValid Paths); // Function Icarus.TalentTreesLibrary.GetTalentTreesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c9d20
	bool EqualEqual_FTalentTreesRowHandleFTalentTreesRowHandle(struct FTalentTreesRowHandle RowHandleA, struct FTalentTreesRowHandle RowHandleB); // Function Icarus.TalentTreesLibrary.EqualEqual_FTalentTreesRowHandleFTalentTreesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c95a0
	bool EqualEqual_EnumEnum(struct FTalentTreesEnum A, struct FTalentTreesEnum B); // Function Icarus.TalentTreesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16c9280
	struct FTalentTreesRowHandle CastToTalentTreesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentTreesLibrary.CastToTalentTreesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8f50
	void BreakTalentTreesEnum(struct FTalentTreesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentTreesLibrary.BreakTalentTreesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16c8ae0
	void AddRowToTalentTreesTable(struct FName Name, struct FTalentTree Data, struct FTalentTreesRowHandle NewRow); // Function Icarus.TalentTreesLibrary.AddRowToTalentTreesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16c8570
};

// Class Icarus.TalentTreesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentTreesTable : UIcarusDataTable {
};

// Class Icarus.TalentTreeWidget
// Size: 0x2e0 (Inherited: 0x260)
struct UTalentTreeWidget : UUserWidget {
	struct UTalentViewInterface* TalentView; // 0x260(0x08)
	struct UTalentTreeCanvas* TalentTreeCanvas; // 0x268(0x08)
	struct FTalentTreesRowHandle TalentTree; // 0x270(0x18)
	struct TSet<struct FTalentsRowHandle> Talents; // 0x288(0x50)
	char pad_2D8[0x8]; // 0x2d8(0x08)

	void SetTalentTree(struct UTalentViewInterface* View, struct FTalentTreesRowHandle NewTalentTree); // Function Icarus.TalentTreeWidget.SetTalentTree // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16d1b60
	void SetOrientation(enum class EOrientation Orientation); // Function Icarus.TalentTreeWidget.SetOrientation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	void SetEditorCanvas(struct UUserWidget* EditorCanvas); // Function Icarus.TalentTreeWidget.SetEditorCanvas // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnTalentTreeCreated(); // Function Icarus.TalentTreeWidget.OnTalentTreeCreated // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void OnTalentRemoved(struct FTalentsRowHandle Talent); // Function Icarus.TalentTreeWidget.OnTalentRemoved // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void OnTalentChanged(struct FTalentsRowHandle Talent); // Function Icarus.TalentTreeWidget.OnTalentChanged // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void OnTalentAdded(struct FTalentsRowHandle Talent); // Function Icarus.TalentTreeWidget.OnTalentAdded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	void OnModelStateChanged(struct UTalentModelInterface_Const* Model); // Function Icarus.TalentTreeWidget.OnModelStateChanged // (Final|Native|Protected) // @ game+0x16d1640
	struct FVector2D GetCanvasSize(); // Function Icarus.TalentTreeWidget.GetCanvasSize // (Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x1a38c80
	struct FVector2D GetCanvasOffset(bool bAbsolute); // Function Icarus.TalentTreeWidget.GetCanvasOffset // (Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x1a38c80
	void ClearTalentTree(); // Function Icarus.TalentTreeWidget.ClearTalentTree // (Event|Public|BlueprintEvent|Const) // @ game+0x1a38c80
};

// Class Icarus.TalentViewInterface
// Size: 0x270 (Inherited: 0x260)
struct UTalentViewInterface : UUserWidget {
	char pad_260[0x10]; // 0x260(0x10)

	void SetController(struct TScriptInterface<ITalentControllerInterface> InController); // Function Icarus.TalentViewInterface.SetController // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16d1a10
	void OnModelViewChanged(struct UTalentModelInterface* InModel, struct UTalentViewInterface* InView); // Function Icarus.TalentViewInterface.OnModelViewChanged // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	struct FTalentViewsRowHandle GetViewData(); // Function Icarus.TalentViewInterface.GetViewData // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d0710
	struct TArray<struct UTalentTreeWidget*> GetTalentTreeWidgets(); // Function Icarus.TalentViewInterface.GetTalentTreeWidgets // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a38c80
	struct UTalentModelInterface_Const* GetModel(); // Function Icarus.TalentViewInterface.GetModel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d0360
	struct TScriptInterface<ITalentControllerInterface> GetController(); // Function Icarus.TalentViewInterface.GetController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d0320
};

// Class Icarus.TalentViewsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTalentViewsLibrary : URowLibrary {

	struct FTalentViewsRowHandle StructToRowHandle(struct FTalentViewsEnum EnumValue); // Function Icarus.TalentViewsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1ed0
	struct FName StructToName(struct FTalentViewsEnum EnumValue); // Function Icarus.TalentViewsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1d90
	int32_t StructToInt(struct FTalentViewsEnum EnumValue); // Function Icarus.TalentViewsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1c50
	struct FTalentViewsEnum RowHandleToStruct(struct FTalentViewsRowHandle RowHandle); // Function Icarus.TalentViewsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1890
	void RemoveRowFromTalentViewsTable(struct FName Name); // Function Icarus.TalentViewsLibrary.RemoveRowFromTalentViewsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16d1790
	void RefreshConstants(); // Function Icarus.TalentViewsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16d1750
	int32_t NumRows(); // Function Icarus.TalentViewsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d15e0
	bool NotEqual_EnumName(struct FTalentViewsEnum A, struct FName B); // Function Icarus.TalentViewsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1400
	bool NotEqual_EnumEnum(struct FTalentViewsEnum A, struct FTalentViewsEnum B); // Function Icarus.TalentViewsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1220
	struct FTalentViewsEnum NameToStruct(struct FName NameValue); // Function Icarus.TalentViewsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1100
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TalentViewsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16d0fe0
	struct FTalentViewsRowHandle MakeTalentViewsFromIndex(int32_t Index); // Function Icarus.TalentViewsLibrary.MakeTalentViewsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0da0
	struct FTalentViewsEnum MakeTalentViewsEnum(struct FTalentViewsEnum Enum); // Function Icarus.TalentViewsLibrary.MakeTalentViewsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0d20
	struct FTalentViewsRowHandle MakeTalentViews(struct FName RowName); // Function Icarus.TalentViewsLibrary.MakeTalentViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0c80
	struct FTalentViewsRowHandle MakeLiteralTalentViews(struct FTalentViewsRowHandle RowHandle); // Function Icarus.TalentViewsLibrary.MakeLiteralTalentViews // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0ae0
	bool IsValidName(struct FName NameValue); // Function Icarus.TalentViewsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16d09c0
	struct FTalentViewsEnum IntToStruct(int32_t IntValue); // Function Icarus.TalentViewsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0870
	struct FName IntToName(int32_t IntValue); // Function Icarus.TalentViewsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16d0750
	void GetTalentViewsStruct(struct FTalentViewsRowHandle RowHandle, struct FTalentView TalentViews, enum class EValid Paths); // Function Icarus.TalentViewsLibrary.GetTalentViewsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d0390
	bool EqualEqual_FTalentViewsRowHandleFTalentViewsRowHandle(struct FTalentViewsRowHandle RowHandleA, struct FTalentViewsRowHandle RowHandleB); // Function Icarus.TalentViewsLibrary.EqualEqual_FTalentViewsRowHandleFTalentViewsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0060
	bool EqualEqual_EnumEnum(struct FTalentViewsEnum A, struct FTalentViewsEnum B); // Function Icarus.TalentViewsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cfe80
	struct FTalentViewsRowHandle CastToTalentViewsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TalentViewsLibrary.CastToTalentViewsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cfc40
	void BreakTalentViewsEnum(struct FTalentViewsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TalentViewsLibrary.BreakTalentViewsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16cf980
	void AddRowToTalentViewsTable(struct FName Name, struct FTalentView Data, struct FTalentViewsRowHandle NewRow); // Function Icarus.TalentViewsLibrary.AddRowToTalentViewsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cf610
};

// Class Icarus.TalentViewsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTalentViewsTable : UIcarusDataTable {
};

// Class Icarus.TalentWidget
// Size: 0x278 (Inherited: 0x260)
struct UTalentWidget : UUserWidget {
	struct FTalentsRowHandle Talent; // 0x260(0x18)

	void SetTalent(struct FTalentsRowHandle InTalent); // Function Icarus.TalentWidget.SetTalent // (Final|Native|Public|BlueprintCallable) // @ game+0x16d1ab0
	void OnTalentSet(); // Function Icarus.TalentWidget.OnTalentSet // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.TemperatureSingleton
// Size: 0x38 (Inherited: 0x28)
struct UTemperatureSingleton : UObject {
	struct UCurveFloat* DefaultTempIncCurve; // 0x28(0x08)
	struct UCurveFloat* DefaultTempDecCurve; // 0x30(0x08)
};

// Class Icarus.TerrainAnchorComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTerrainAnchorComponent : UActorComponent {
	struct FMulticastSparseDelegate OnTerrainAchorStateChanged; // 0xb0(0x01)
	bool bAutoRegisterSubject; // 0xb1(0x01)
	bool bRegisterIfLoaded; // 0xb2(0x01)
	bool bIsRegisteredSubject; // 0xb3(0x01)
	enum class ETerrainAnchorState AnchorState; // 0xb4(0x01)
	bool bInitialised; // 0xb5(0x01)
	char pad_B6[0x2]; // 0xb6(0x02)

	void ReevaluateAnchorState(); // Function Icarus.TerrainAnchorComponent.ReevaluateAnchorState // (Final|Native|Public|BlueprintCallable) // @ game+0x16d1730
	bool IsTerrainAnchorValid(); // Function Icarus.TerrainAnchorComponent.IsTerrainAnchorValid // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d0990
	struct FBox2D GetAnchorBounds(); // Function Icarus.TerrainAnchorComponent.GetAnchorBounds // (Native|Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x16d02e0
};

// Class Icarus.PlayerTerrainAnchorComponent
// Size: 0xb8 (Inherited: 0xb8)
struct UPlayerTerrainAnchorComponent : UTerrainAnchorComponent {
};

// Class Icarus.TerrainAnchorSubsystem
// Size: 0xa0 (Inherited: 0x30)
struct UTerrainAnchorSubsystem : UWorldSubsystem {
	bool bDisabled; // 0x30(0x01)
	bool bDisableWithoutWorldData; // 0x31(0x01)
	bool bInitialized; // 0x32(0x01)
	bool bAsyncRevaluateAnchorsRunning; // 0x33(0x01)
	char pad_34[0x4]; // 0x34(0x04)
	struct TMap<struct AActor*, struct UTerrainAnchorComponent*> RegisteredSubjects; // 0x38(0x50)
	struct TArray<struct ULevelStreamingBinding*> StreamingLevelBindings; // 0x88(0x10)
	struct FTimerHandle TerrainAnchorsDirtyTimerHandle; // 0x98(0x08)
};

// Class Icarus.LevelStreamingBinding
// Size: 0x50 (Inherited: 0x28)
struct ULevelStreamingBinding : UObject {
	struct ULevelStreaming* StreamingLevel; // 0x28(0x08)
	struct ALandscapeProxy* LevelLandscapeProxy; // 0x30(0x08)
	struct FBox2D LevelBounds; // 0x38(0x14)
	bool bLevelAnchorValid; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)

	void OnStreamingLevelUnloaded(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelUnloaded // (Final|Native|Private) // @ game+0x16d1710
	void OnStreamingLevelShown(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelShown // (Final|Native|Private) // @ game+0x16d16f0
	void OnStreamingLevelLoaded(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelLoaded // (Final|Native|Private) // @ game+0x16d16f0
	void OnStreamingLevelHidden(); // Function Icarus.LevelStreamingBinding.OnStreamingLevelHidden // (Final|Native|Private) // @ game+0x16d16d0
};

// Class Icarus.TerrainsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTerrainsLibrary : URowLibrary {

	struct FTerrainsRowHandle StructToRowHandle(struct FTerrainsEnum EnumValue); // Function Icarus.TerrainsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1f80
	struct FName StructToName(struct FTerrainsEnum EnumValue); // Function Icarus.TerrainsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1e30
	int32_t StructToInt(struct FTerrainsEnum EnumValue); // Function Icarus.TerrainsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1cf0
	struct FTerrainsEnum RowHandleToStruct(struct FTerrainsRowHandle RowHandle); // Function Icarus.TerrainsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1950
	void RemoveRowFromTerrainsTable(struct FName Name); // Function Icarus.TerrainsLibrary.RemoveRowFromTerrainsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16d1810
	void RefreshConstants(); // Function Icarus.TerrainsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16d1770
	int32_t NumRows(); // Function Icarus.TerrainsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1610
	bool NotEqual_EnumName(struct FTerrainsEnum A, struct FName B); // Function Icarus.TerrainsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d14f0
	bool NotEqual_EnumEnum(struct FTerrainsEnum A, struct FTerrainsEnum B); // Function Icarus.TerrainsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1310
	struct FTerrainsEnum NameToStruct(struct FName NameValue); // Function Icarus.TerrainsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d1190
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TerrainsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16d1070
	struct FTerrainsRowHandle MakeTerrainsFromIndex(int32_t Index); // Function Icarus.TerrainsLibrary.MakeTerrainsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0f50
	struct FTerrainsEnum MakeTerrainsEnum(struct FTerrainsEnum Enum); // Function Icarus.TerrainsLibrary.MakeTerrainsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0ed0
	struct FTerrainsRowHandle MakeTerrains(struct FName RowName); // Function Icarus.TerrainsLibrary.MakeTerrains // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0e30
	struct FTerrainsRowHandle MakeLiteralTerrains(struct FTerrainsRowHandle RowHandle); // Function Icarus.TerrainsLibrary.MakeLiteralTerrains // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0bb0
	bool IsValidName(struct FName NameValue); // Function Icarus.TerrainsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16d0a50
	struct FTerrainsEnum IntToStruct(int32_t IntValue); // Function Icarus.TerrainsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d0900
	struct FName IntToName(int32_t IntValue); // Function Icarus.TerrainsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16d07e0
	void GetTerrainsStruct(struct FTerrainsRowHandle RowHandle, struct FIcarusTerrain Terrains, enum class EValid Paths); // Function Icarus.TerrainsLibrary.GetTerrainsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d0570
	bool EqualEqual_FTerrainsRowHandleFTerrainsRowHandle(struct FTerrainsRowHandle RowHandleA, struct FTerrainsRowHandle RowHandleB); // Function Icarus.TerrainsLibrary.EqualEqual_FTerrainsRowHandleFTerrainsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d01a0
	bool EqualEqual_EnumEnum(struct FTerrainsEnum A, struct FTerrainsEnum B); // Function Icarus.TerrainsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16cff70
	struct FTerrainsRowHandle CastToTerrainsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TerrainsLibrary.CastToTerrainsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cfd60
	void BreakTerrainsEnum(struct FTerrainsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TerrainsLibrary.BreakTerrainsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16cfae0
	void AddRowToTerrainsTable(struct FName Name, struct FIcarusTerrain Data, struct FTerrainsRowHandle NewRow); // Function Icarus.TerrainsLibrary.AddRowToTerrainsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16cf7f0
};

// Class Icarus.TerrainsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTerrainsTable : UIcarusDataTable {
};

// Class Icarus.ThermalComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UThermalComponent : UTraitComponent {
	struct AIcarusGameStateSurvival* GameState; // 0xd0(0x08)

	bool GetThermalData(struct FThermalData OutData); // Function Icarus.ThermalComponent.GetThermalData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d5820
	int32_t GetTemperatureEffectAtLocation(struct FVector InLocation, struct AActor* QueryActor, bool bDrawDebug, float DebugDrawDuration); // Function Icarus.ThermalComponent.GetTemperatureEffectAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d5680
	void DestroyThermalComponent(); // Function Icarus.ThermalComponent.DestroyThermalComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x16d4fd0
};

// Class Icarus.ThermalLibrary
// Size: 0x28 (Inherited: 0x28)
struct UThermalLibrary : URowLibrary {

	struct FThermalRowHandle StructToRowHandle(struct FThermalEnum EnumValue); // Function Icarus.ThermalLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7c10
	struct FName StructToName(struct FThermalEnum EnumValue); // Function Icarus.ThermalLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7a30
	int32_t StructToInt(struct FThermalEnum EnumValue); // Function Icarus.ThermalLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7850
	struct FThermalEnum RowHandleToStruct(struct FThermalRowHandle RowHandle); // Function Icarus.ThermalLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7610
	void RemoveRowFromThermalTable(struct FName Name); // Function Icarus.ThermalLibrary.RemoveRowFromThermalTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16d7490
	void RefreshConstants(); // Function Icarus.ThermalLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16d7430
	int32_t NumRows(); // Function Icarus.ThermalLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d73a0
	bool NotEqual_EnumName(struct FThermalEnum A, struct FName B); // Function Icarus.ThermalLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d70d0
	bool NotEqual_EnumEnum(struct FThermalEnum A, struct FThermalEnum B); // Function Icarus.ThermalLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6e00
	struct FThermalEnum NameToStruct(struct FName NameValue); // Function Icarus.ThermalLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6c50
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ThermalLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16d6aa0
	struct FThermalRowHandle MakeThermalFromIndex(int32_t Index); // Function Icarus.ThermalLibrary.MakeThermalFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d66b0
	struct FThermalEnum MakeThermalEnum(struct FThermalEnum Enum); // Function Icarus.ThermalLibrary.MakeThermalEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6630
	struct FThermalRowHandle MakeThermal(struct FName RowName); // Function Icarus.ThermalLibrary.MakeThermal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6590
	struct FThermalRowHandle MakeLiteralThermal(struct FThermalRowHandle RowHandle); // Function Icarus.ThermalLibrary.MakeLiteralThermal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6320
	bool IsValidName(struct FName NameValue); // Function Icarus.ThermalLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16d6170
	struct FThermalEnum IntToStruct(int32_t IntValue); // Function Icarus.ThermalLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d5fc0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ThermalLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16d5e10
	void GetThermalStruct(struct FThermalRowHandle RowHandle, struct FThermalData Thermal, enum class EValid Paths); // Function Icarus.ThermalLibrary.GetThermalStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5990
	bool EqualEqual_FThermalRowHandleFThermalRowHandle(struct FThermalRowHandle RowHandleA, struct FThermalRowHandle RowHandleB); // Function Icarus.ThermalLibrary.EqualEqual_FThermalRowHandleFThermalRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d52c0
	bool EqualEqual_EnumEnum(struct FThermalEnum A, struct FThermalEnum B); // Function Icarus.ThermalLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d4ff0
	struct FThermalRowHandle CastToThermalRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ThermalLibrary.CastToThermalRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d4c70
	void BreakThermalEnum(struct FThermalEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ThermalLibrary.BreakThermalEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16d4850
	void AddRowToThermalTable(struct FName Name, struct FThermalData Data, struct FThermalRowHandle NewRow); // Function Icarus.ThermalLibrary.AddRowToThermalTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d4240
};

// Class Icarus.ThermalTable
// Size: 0xb8 (Inherited: 0xb8)
struct UThermalTable : UIcarusDataTable {
};

// Class Icarus.TimelineRanksLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTimelineRanksLibrary : URowLibrary {

	struct FTimelineRanksRowHandle StructToRowHandle(struct FTimelineRanksEnum EnumValue); // Function Icarus.TimelineRanksLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7d70
	struct FName StructToName(struct FTimelineRanksEnum EnumValue); // Function Icarus.TimelineRanksLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7b70
	int32_t StructToInt(struct FTimelineRanksEnum EnumValue); // Function Icarus.TimelineRanksLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7990
	struct FTimelineRanksEnum RowHandleToStruct(struct FTimelineRanksRowHandle RowHandle); // Function Icarus.TimelineRanksLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7790
	void RemoveRowFromTimelineRanksTable(struct FName Name); // Function Icarus.TimelineRanksLibrary.RemoveRowFromTimelineRanksTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16d7590
	void RefreshConstants(); // Function Icarus.TimelineRanksLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16d7470
	int32_t NumRows(); // Function Icarus.TimelineRanksLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7400
	bool NotEqual_EnumName(struct FTimelineRanksEnum A, struct FName B); // Function Icarus.TimelineRanksLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d72b0
	bool NotEqual_EnumEnum(struct FTimelineRanksEnum A, struct FTimelineRanksEnum B); // Function Icarus.TimelineRanksLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6fe0
	struct FTimelineRanksEnum NameToStruct(struct FName NameValue); // Function Icarus.TimelineRanksLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6d70
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TimelineRanksLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16d6bc0
	struct FTimelineRanksRowHandle MakeTimelineRanksFromIndex(int32_t Index); // Function Icarus.TimelineRanksLibrary.MakeTimelineRanksFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6a10
	struct FTimelineRanksEnum MakeTimelineRanksEnum(struct FTimelineRanksEnum Enum); // Function Icarus.TimelineRanksLibrary.MakeTimelineRanksEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6990
	struct FTimelineRanksRowHandle MakeTimelineRanks(struct FName RowName); // Function Icarus.TimelineRanksLibrary.MakeTimelineRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d68f0
	struct FTimelineRanksRowHandle MakeLiteralTimelineRanks(struct FTimelineRanksRowHandle RowHandle); // Function Icarus.TimelineRanksLibrary.MakeLiteralTimelineRanks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d64c0
	bool IsValidName(struct FName NameValue); // Function Icarus.TimelineRanksLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16d6290
	struct FTimelineRanksEnum IntToStruct(int32_t IntValue); // Function Icarus.TimelineRanksLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d60e0
	struct FName IntToName(int32_t IntValue); // Function Icarus.TimelineRanksLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16d5f30
	void GetTimelineRanksStruct(struct FTimelineRanksRowHandle RowHandle, struct FTimelineRanks TimelineRanks, enum class EValid Paths); // Function Icarus.TimelineRanksLibrary.GetTimelineRanksStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5c90
	bool EqualEqual_FTimelineRanksRowHandleFTimelineRanksRowHandle(struct FTimelineRanksRowHandle RowHandleA, struct FTimelineRanksRowHandle RowHandleB); // Function Icarus.TimelineRanksLibrary.EqualEqual_FTimelineRanksRowHandleFTimelineRanksRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d5540
	bool EqualEqual_EnumEnum(struct FTimelineRanksEnum A, struct FTimelineRanksEnum B); // Function Icarus.TimelineRanksLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d51d0
	struct FTimelineRanksRowHandle CastToTimelineRanksRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TimelineRanksLibrary.CastToTimelineRanksRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d4eb0
	void BreakTimelineRanksEnum(struct FTimelineRanksEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TimelineRanksLibrary.BreakTimelineRanksEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16d4b10
	void AddRowToTimelineRanksTable(struct FName Name, struct FTimelineRanks Data, struct FTimelineRanksRowHandle NewRow); // Function Icarus.TimelineRanksLibrary.AddRowToTimelineRanksTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d4620
};

// Class Icarus.TimelineRanksTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTimelineRanksTable : UIcarusDataTable {
};

// Class Icarus.TimeOfDayLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTimeOfDayLibrary : URowLibrary {

	struct FTimeOfDayRowHandle StructToRowHandle(struct FTimeOfDayEnum EnumValue); // Function Icarus.TimeOfDayLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7cc0
	struct FName StructToName(struct FTimeOfDayEnum EnumValue); // Function Icarus.TimeOfDayLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d7ad0
	int32_t StructToInt(struct FTimeOfDayEnum EnumValue); // Function Icarus.TimeOfDayLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d78f0
	struct FTimeOfDayEnum RowHandleToStruct(struct FTimeOfDayRowHandle RowHandle); // Function Icarus.TimeOfDayLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d76d0
	void RemoveRowFromTimeOfDayTable(struct FName Name); // Function Icarus.TimeOfDayLibrary.RemoveRowFromTimeOfDayTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16d7510
	void RefreshConstants(); // Function Icarus.TimeOfDayLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16d7450
	int32_t NumRows(); // Function Icarus.TimeOfDayLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d73d0
	bool NotEqual_EnumName(struct FTimeOfDayEnum A, struct FName B); // Function Icarus.TimeOfDayLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d71c0
	bool NotEqual_EnumEnum(struct FTimeOfDayEnum A, struct FTimeOfDayEnum B); // Function Icarus.TimeOfDayLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6ef0
	struct FTimeOfDayEnum NameToStruct(struct FName NameValue); // Function Icarus.TimeOfDayLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6ce0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TimeOfDayLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16d6b30
	struct FTimeOfDayRowHandle MakeTimeOfDayFromIndex(int32_t Index); // Function Icarus.TimeOfDayLibrary.MakeTimeOfDayFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6860
	struct FTimeOfDayEnum MakeTimeOfDayEnum(struct FTimeOfDayEnum Enum); // Function Icarus.TimeOfDayLibrary.MakeTimeOfDayEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d67e0
	struct FTimeOfDayRowHandle MakeTimeOfDay(struct FName RowName); // Function Icarus.TimeOfDayLibrary.MakeTimeOfDay // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6740
	struct FTimeOfDayRowHandle MakeLiteralTimeOfDay(struct FTimeOfDayRowHandle RowHandle); // Function Icarus.TimeOfDayLibrary.MakeLiteralTimeOfDay // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d63f0
	bool IsValidName(struct FName NameValue); // Function Icarus.TimeOfDayLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16d6200
	struct FTimeOfDayEnum IntToStruct(int32_t IntValue); // Function Icarus.TimeOfDayLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d6050
	struct FName IntToName(int32_t IntValue); // Function Icarus.TimeOfDayLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16d5ea0
	void GetTimeOfDayStruct(struct FTimeOfDayRowHandle RowHandle, struct FTimeOfDay TimeOfDay, enum class EValid Paths); // Function Icarus.TimeOfDayLibrary.GetTimeOfDayStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d5b10
	bool EqualEqual_FTimeOfDayRowHandleFTimeOfDayRowHandle(struct FTimeOfDayRowHandle RowHandleA, struct FTimeOfDayRowHandle RowHandleB); // Function Icarus.TimeOfDayLibrary.EqualEqual_FTimeOfDayRowHandleFTimeOfDayRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d5400
	bool EqualEqual_EnumEnum(struct FTimeOfDayEnum A, struct FTimeOfDayEnum B); // Function Icarus.TimeOfDayLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16d50e0
	struct FTimeOfDayRowHandle CastToTimeOfDayRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TimeOfDayLibrary.CastToTimeOfDayRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d4d90
	void BreakTimeOfDayEnum(struct FTimeOfDayEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TimeOfDayLibrary.BreakTimeOfDayEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16d49b0
	void AddRowToTimeOfDayTable(struct FName Name, struct FTimeOfDay Data, struct FTimeOfDayRowHandle NewRow); // Function Icarus.TimeOfDayLibrary.AddRowToTimeOfDayTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16d4450
};

// Class Icarus.TimeOfDaySubsystem
// Size: 0x78 (Inherited: 0x30)
struct UTimeOfDaySubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnPlayersSleptNotify; // 0x30(0x10)
	struct UCurveFloat* TimeScaleCurve; // 0x40(0x08)
	float TimeScale; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct AIcarusGameStateSurvival* CachedGameState; // 0x50(0x08)
	char pad_58[0x20]; // 0x58(0x20)

	bool TimeOfDayTick(float DeltaSeconds); // Function Icarus.TimeOfDaySubsystem.TimeOfDayTick // (Native|Protected) // @ game+0x16dd3a0
	void SetTimeScale(float NewScale); // Function Icarus.TimeOfDaySubsystem.SetTimeScale // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16dcf40
	void SetTimeOfDayHour(int32_t Hour); // Function Icarus.TimeOfDaySubsystem.SetTimeOfDayHour // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16dceb0
	void SetTimeOfDay(float Total); // Function Icarus.TimeOfDaySubsystem.SetTimeOfDay // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16dce30
	void ProspectInfoFetched(); // Function Icarus.TimeOfDaySubsystem.ProspectInfoFetched // (Final|Native|Protected) // @ game+0x16dcb50
	bool IsSleeping(struct AIcarusPlayerCharacter* Player); // Function Icarus.TimeOfDaySubsystem.IsSleeping // (Final|Native|Public|BlueprintCallable) // @ game+0x16dbc90
	float GetTimeTotal(); // Function Icarus.TimeOfDaySubsystem.GetTimeTotal // (Final|Native|Public|BlueprintCallable) // @ game+0x16db640
	float GetTimeScale(); // Function Icarus.TimeOfDaySubsystem.GetTimeScale // (Final|Native|Public|BlueprintCallable) // @ game+0x16db610
	float GetTimeRealtime(); // Function Icarus.TimeOfDaySubsystem.GetTimeRealtime // (Final|Native|Public|BlueprintCallable) // @ game+0x16db5e0
	void GetTimeOfDay(float Total, float Normalized, float Realtime); // Function Icarus.TimeOfDaySubsystem.GetTimeOfDay // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16db4a0
	float GetTimeNormalized(); // Function Icarus.TimeOfDaySubsystem.GetTimeNormalized // (Final|Native|Public|BlueprintCallable) // @ game+0x16db470
	enum class ESleepResult CanSleep(); // Function Icarus.TimeOfDaySubsystem.CanSleep // (Final|Native|Public|BlueprintCallable) // @ game+0x16dab70
	void AttemptToSleep(); // Function Icarus.TimeOfDaySubsystem.AttemptToSleep // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x16da890
};

// Class Icarus.TimeOfDayTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTimeOfDayTable : UIcarusDataTable {
};

// Class Icarus.ToolDamageLibrary
// Size: 0x28 (Inherited: 0x28)
struct UToolDamageLibrary : URowLibrary {

	struct FToolDamageRowHandle StructToRowHandle(struct FToolDamageEnum EnumValue); // Function Icarus.ToolDamageLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd240
	struct FName StructToName(struct FToolDamageEnum EnumValue); // Function Icarus.ToolDamageLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd100
	int32_t StructToInt(struct FToolDamageEnum EnumValue); // Function Icarus.ToolDamageLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dcfc0
	struct FToolDamageEnum RowHandleToStruct(struct FToolDamageRowHandle RowHandle); // Function Icarus.ToolDamageLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dccb0
	void RemoveRowFromToolDamageTable(struct FName Name); // Function Icarus.ToolDamageLibrary.RemoveRowFromToolDamageTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16dcbb0
	void RefreshConstants(); // Function Icarus.ToolDamageLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16dcb70
	int32_t NumRows(); // Function Icarus.ToolDamageLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc950
	bool NotEqual_EnumName(struct FToolDamageEnum A, struct FName B); // Function Icarus.ToolDamageLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc770
	bool NotEqual_EnumEnum(struct FToolDamageEnum A, struct FToolDamageEnum B); // Function Icarus.ToolDamageLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc590
	struct FToolDamageEnum NameToStruct(struct FName NameValue); // Function Icarus.ToolDamageLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc470
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ToolDamageLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16dc350
	struct FToolDamageRowHandle MakeToolDamageFromIndex(int32_t Index); // Function Icarus.ToolDamageLibrary.MakeToolDamageFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc110
	struct FToolDamageEnum MakeToolDamageEnum(struct FToolDamageEnum Enum); // Function Icarus.ToolDamageLibrary.MakeToolDamageEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc090
	struct FToolDamageRowHandle MakeToolDamage(struct FName RowName); // Function Icarus.ToolDamageLibrary.MakeToolDamage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dbff0
	struct FToolDamageRowHandle MakeLiteralToolDamage(struct FToolDamageRowHandle RowHandle); // Function Icarus.ToolDamageLibrary.MakeLiteralToolDamage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dbe50
	bool IsValidName(struct FName NameValue); // Function Icarus.ToolDamageLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16dbd30
	struct FToolDamageEnum IntToStruct(int32_t IntValue); // Function Icarus.ToolDamageLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dbb70
	struct FName IntToName(int32_t IntValue); // Function Icarus.ToolDamageLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16dba50
	void GetToolDamageStruct(struct FToolDamageRowHandle RowHandle, struct FToolDamage ToolDamage, enum class EValid Paths); // Function Icarus.ToolDamageLibrary.GetToolDamageStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16db670
	bool EqualEqual_FToolDamageRowHandleFToolDamageRowHandle(struct FToolDamageRowHandle RowHandleA, struct FToolDamageRowHandle RowHandleB); // Function Icarus.ToolDamageLibrary.EqualEqual_FToolDamageRowHandleFToolDamageRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16db060
	bool EqualEqual_EnumEnum(struct FToolDamageEnum A, struct FToolDamageEnum B); // Function Icarus.ToolDamageLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dae80
	struct FToolDamageRowHandle CastToToolDamageRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ToolDamageLibrary.CastToToolDamageRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16daba0
	void BreakToolDamageEnum(struct FToolDamageEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ToolDamageLibrary.BreakToolDamageEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16da8b0
	void AddRowToToolDamageTable(struct FName Name, struct FToolDamage Data, struct FToolDamageRowHandle NewRow); // Function Icarus.ToolDamageLibrary.AddRowToToolDamageTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16da4b0
};

// Class Icarus.ToolDamageTable
// Size: 0xb8 (Inherited: 0xb8)
struct UToolDamageTable : UIcarusDataTable {
};

// Class Icarus.ToolTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UToolTypesLibrary : URowLibrary {

	struct FToolTypesRowHandle StructToRowHandle(struct FToolTypesEnum EnumValue); // Function Icarus.ToolTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd2f0
	struct FName StructToName(struct FToolTypesEnum EnumValue); // Function Icarus.ToolTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd1a0
	int32_t StructToInt(struct FToolTypesEnum EnumValue); // Function Icarus.ToolTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dd060
	struct FToolTypesEnum RowHandleToStruct(struct FToolTypesRowHandle RowHandle); // Function Icarus.ToolTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dcd70
	void RemoveRowFromToolTypesTable(struct FName Name); // Function Icarus.ToolTypesLibrary.RemoveRowFromToolTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16dcc30
	void RefreshConstants(); // Function Icarus.ToolTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16dcb90
	int32_t NumRows(); // Function Icarus.ToolTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc980
	bool NotEqual_EnumName(struct FToolTypesEnum A, struct FName B); // Function Icarus.ToolTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc860
	bool NotEqual_EnumEnum(struct FToolTypesEnum A, struct FToolTypesEnum B); // Function Icarus.ToolTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc680
	struct FToolTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.ToolTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc500
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ToolTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16dc3e0
	struct FToolTypesRowHandle MakeToolTypesFromIndex(int32_t Index); // Function Icarus.ToolTypesLibrary.MakeToolTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc2c0
	struct FToolTypesEnum MakeToolTypesEnum(struct FToolTypesEnum Enum); // Function Icarus.ToolTypesLibrary.MakeToolTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc240
	struct FToolTypesRowHandle MakeToolTypes(struct FName RowName); // Function Icarus.ToolTypesLibrary.MakeToolTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dc1a0
	struct FToolTypesRowHandle MakeLiteralToolTypes(struct FToolTypesRowHandle RowHandle); // Function Icarus.ToolTypesLibrary.MakeLiteralToolTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dbf20
	bool IsValidName(struct FName NameValue); // Function Icarus.ToolTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16dbdc0
	struct FToolTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ToolTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16dbc00
	struct FName IntToName(int32_t IntValue); // Function Icarus.ToolTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16dbae0
	void GetToolTypesStruct(struct FToolTypesRowHandle RowHandle, struct FIcarusToolType ToolTypes, enum class EValid Paths); // Function Icarus.ToolTypesLibrary.GetToolTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16db7f0
	bool EqualEqual_FToolTypesRowHandleFToolTypesRowHandle(struct FToolTypesRowHandle RowHandleA, struct FToolTypesRowHandle RowHandleB); // Function Icarus.ToolTypesLibrary.EqualEqual_FToolTypesRowHandleFToolTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16db1a0
	bool EqualEqual_EnumEnum(struct FToolTypesEnum A, struct FToolTypesEnum B); // Function Icarus.ToolTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16daf70
	struct FToolTypesRowHandle CastToToolTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ToolTypesLibrary.CastToToolTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16dacc0
	void BreakToolTypesEnum(struct FToolTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ToolTypesLibrary.BreakToolTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16daa10
	void AddRowToToolTypesTable(struct FName Name, struct FIcarusToolType Data, struct FToolTypesRowHandle NewRow); // Function Icarus.ToolTypesLibrary.AddRowToToolTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16da6b0
};

// Class Icarus.ToolTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UToolTypesTable : UIcarusDataTable {
};

// Class Icarus.TraitFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTraitFunctionLibrary : UBlueprintFunctionLibrary {

	struct UTraitComponent* GetTrait(struct AActor* Actor, struct UTraitComponent* TraitClass, enum class EValid Paths); // Function Icarus.TraitFunctionLibrary.GetTrait // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x16e1130
};

// Class Icarus.TransmutableComponent
// Size: 0xd8 (Inherited: 0xd0)
struct UTransmutableComponent : UTraitComponent {
	int32_t TransmutableUnits; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)

	void SetTransmutableUnits(int32_t NewUnits); // Function Icarus.TransmutableComponent.SetTransmutableUnits // (Final|Native|Public|BlueprintCallable) // @ game+0x16e3350
	bool GetTransmutableData(struct FTransmutableData OutData); // Function Icarus.TransmutableComponent.GetTransmutableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16e1240
};

// Class Icarus.TransmutableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTransmutableLibrary : URowLibrary {

	struct FTransmutableRowHandle StructToRowHandle(struct FTransmutableEnum EnumValue); // Function Icarus.TransmutableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e37a0
	struct FName StructToName(struct FTransmutableEnum EnumValue); // Function Icarus.TransmutableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e35c0
	int32_t StructToInt(struct FTransmutableEnum EnumValue); // Function Icarus.TransmutableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e33e0
	struct FTransmutableEnum RowHandleToStruct(struct FTransmutableRowHandle RowHandle); // Function Icarus.TransmutableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3110
	void RemoveRowFromTransmutableTable(struct FName Name); // Function Icarus.TransmutableLibrary.RemoveRowFromTransmutableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e2f90
	void RefreshConstants(); // Function Icarus.TransmutableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16e2f30
	int32_t NumRows(); // Function Icarus.TransmutableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2ea0
	bool NotEqual_EnumName(struct FTransmutableEnum A, struct FName B); // Function Icarus.TransmutableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2bd0
	bool NotEqual_EnumEnum(struct FTransmutableEnum A, struct FTransmutableEnum B); // Function Icarus.TransmutableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2900
	struct FTransmutableEnum NameToStruct(struct FName NameValue); // Function Icarus.TransmutableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2750
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TransmutableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16e25a0
	struct FTransmutableRowHandle MakeTransmutableFromIndex(int32_t Index); // Function Icarus.TransmutableLibrary.MakeTransmutableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e21b0
	struct FTransmutableEnum MakeTransmutableEnum(struct FTransmutableEnum Enum); // Function Icarus.TransmutableLibrary.MakeTransmutableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2130
	struct FTransmutableRowHandle MakeTransmutable(struct FName RowName); // Function Icarus.TransmutableLibrary.MakeTransmutable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2090
	struct FTransmutableRowHandle MakeLiteralTransmutable(struct FTransmutableRowHandle RowHandle); // Function Icarus.TransmutableLibrary.MakeLiteralTransmutable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1e20
	bool IsValidName(struct FName NameValue); // Function Icarus.TransmutableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16e1c70
	struct FTransmutableEnum IntToStruct(int32_t IntValue); // Function Icarus.TransmutableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1ac0
	struct FName IntToName(int32_t IntValue); // Function Icarus.TransmutableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16e1910
	void GetTransmutableStruct(struct FTransmutableRowHandle RowHandle, struct FTransmutableData Transmutable, enum class EValid Paths); // Function Icarus.TransmutableLibrary.GetTransmutableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1430
	bool EqualEqual_FTransmutableRowHandleFTransmutableRowHandle(struct FTransmutableRowHandle RowHandleA, struct FTransmutableRowHandle RowHandleB); // Function Icarus.TransmutableLibrary.EqualEqual_FTransmutableRowHandleFTransmutableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e0d70
	bool EqualEqual_EnumEnum(struct FTransmutableEnum A, struct FTransmutableEnum B); // Function Icarus.TransmutableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e0aa0
	struct FTransmutableRowHandle CastToTransmutableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TransmutableLibrary.CastToTransmutableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e0740
	void BreakTransmutableEnum(struct FTransmutableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TransmutableLibrary.BreakTransmutableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e0320
	void AddRowToTransmutableTable(struct FName Name, struct FTransmutableData Data, struct FTransmutableRowHandle NewRow); // Function Icarus.TransmutableLibrary.AddRowToTransmutableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16dfca0
};

// Class Icarus.TransmutableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTransmutableTable : UIcarusDataTable {
};

// Class Icarus.TravelQuestsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTravelQuestsLibrary : URowLibrary {

	struct FTravelQuestsRowHandle StructToRowHandle(struct FTravelQuestsEnum EnumValue); // Function Icarus.TravelQuestsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3850
	struct FName StructToName(struct FTravelQuestsEnum EnumValue); // Function Icarus.TravelQuestsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3660
	int32_t StructToInt(struct FTravelQuestsEnum EnumValue); // Function Icarus.TravelQuestsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3480
	struct FTravelQuestsEnum RowHandleToStruct(struct FTravelQuestsRowHandle RowHandle); // Function Icarus.TravelQuestsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e31d0
	void RemoveRowFromTravelQuestsTable(struct FName Name); // Function Icarus.TravelQuestsLibrary.RemoveRowFromTravelQuestsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e3010
	void RefreshConstants(); // Function Icarus.TravelQuestsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16e2f50
	int32_t NumRows(); // Function Icarus.TravelQuestsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2ed0
	bool NotEqual_EnumName(struct FTravelQuestsEnum A, struct FName B); // Function Icarus.TravelQuestsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2cc0
	bool NotEqual_EnumEnum(struct FTravelQuestsEnum A, struct FTravelQuestsEnum B); // Function Icarus.TravelQuestsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e29f0
	struct FTravelQuestsEnum NameToStruct(struct FName NameValue); // Function Icarus.TravelQuestsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e27e0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TravelQuestsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16e2630
	struct FTravelQuestsRowHandle MakeTravelQuestsFromIndex(int32_t Index); // Function Icarus.TravelQuestsLibrary.MakeTravelQuestsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2360
	struct FTravelQuestsEnum MakeTravelQuestsEnum(struct FTravelQuestsEnum Enum); // Function Icarus.TravelQuestsLibrary.MakeTravelQuestsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e22e0
	struct FTravelQuestsRowHandle MakeTravelQuests(struct FName RowName); // Function Icarus.TravelQuestsLibrary.MakeTravelQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2240
	struct FTravelQuestsRowHandle MakeLiteralTravelQuests(struct FTravelQuestsRowHandle RowHandle); // Function Icarus.TravelQuestsLibrary.MakeLiteralTravelQuests // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1ef0
	bool IsValidName(struct FName NameValue); // Function Icarus.TravelQuestsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16e1d00
	struct FTravelQuestsEnum IntToStruct(int32_t IntValue); // Function Icarus.TravelQuestsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1b50
	struct FName IntToName(int32_t IntValue); // Function Icarus.TravelQuestsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16e19a0
	void GetTravelQuestsStruct(struct FTravelQuestsRowHandle RowHandle, struct FTravelQuest TravelQuests, enum class EValid Paths); // Function Icarus.TravelQuestsLibrary.GetTravelQuestsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1610
	bool EqualEqual_FTravelQuestsRowHandleFTravelQuestsRowHandle(struct FTravelQuestsRowHandle RowHandleA, struct FTravelQuestsRowHandle RowHandleB); // Function Icarus.TravelQuestsLibrary.EqualEqual_FTravelQuestsRowHandleFTravelQuestsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e0eb0
	bool EqualEqual_EnumEnum(struct FTravelQuestsEnum A, struct FTravelQuestsEnum B); // Function Icarus.TravelQuestsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e0b90
	struct FTravelQuestsRowHandle CastToTravelQuestsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TravelQuestsLibrary.CastToTravelQuestsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e0860
	void BreakTravelQuestsEnum(struct FTravelQuestsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TravelQuestsLibrary.BreakTravelQuestsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e0480
	void AddRowToTravelQuestsTable(struct FName Name, struct FTravelQuest Data, struct FTravelQuestsRowHandle NewRow); // Function Icarus.TravelQuestsLibrary.AddRowToTravelQuestsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16dff00
};

// Class Icarus.TravelQuestsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTravelQuestsTable : UIcarusDataTable {
};

// Class Icarus.TreeAudioDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTreeAudioDataLibrary : URowLibrary {

	struct FTreeAudioDataRowHandle StructToRowHandle(struct FTreeAudioDataEnum EnumValue); // Function Icarus.TreeAudioDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3900
	struct FName StructToName(struct FTreeAudioDataEnum EnumValue); // Function Icarus.TreeAudioDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3700
	int32_t StructToInt(struct FTreeAudioDataEnum EnumValue); // Function Icarus.TreeAudioDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3520
	struct FTreeAudioDataEnum RowHandleToStruct(struct FTreeAudioDataRowHandle RowHandle); // Function Icarus.TreeAudioDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e3290
	void RemoveRowFromTreeAudioDataTable(struct FName Name); // Function Icarus.TreeAudioDataLibrary.RemoveRowFromTreeAudioDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e3090
	void RefreshConstants(); // Function Icarus.TreeAudioDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16e2f70
	int32_t NumRows(); // Function Icarus.TreeAudioDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2f00
	bool NotEqual_EnumName(struct FTreeAudioDataEnum A, struct FName B); // Function Icarus.TreeAudioDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2db0
	bool NotEqual_EnumEnum(struct FTreeAudioDataEnum A, struct FTreeAudioDataEnum B); // Function Icarus.TreeAudioDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2ae0
	struct FTreeAudioDataEnum NameToStruct(struct FName NameValue); // Function Icarus.TreeAudioDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2870
	int32_t NameToInt(struct FName NameValue); // Function Icarus.TreeAudioDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16e26c0
	struct FTreeAudioDataRowHandle MakeTreeAudioDataFromIndex(int32_t Index); // Function Icarus.TreeAudioDataLibrary.MakeTreeAudioDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2510
	struct FTreeAudioDataEnum MakeTreeAudioDataEnum(struct FTreeAudioDataEnum Enum); // Function Icarus.TreeAudioDataLibrary.MakeTreeAudioDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e2490
	struct FTreeAudioDataRowHandle MakeTreeAudioData(struct FName RowName); // Function Icarus.TreeAudioDataLibrary.MakeTreeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e23f0
	struct FTreeAudioDataRowHandle MakeLiteralTreeAudioData(struct FTreeAudioDataRowHandle RowHandle); // Function Icarus.TreeAudioDataLibrary.MakeLiteralTreeAudioData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1fc0
	bool IsValidName(struct FName NameValue); // Function Icarus.TreeAudioDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16e1d90
	struct FTreeAudioDataEnum IntToStruct(int32_t IntValue); // Function Icarus.TreeAudioDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e1be0
	struct FName IntToName(int32_t IntValue); // Function Icarus.TreeAudioDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16e1a30
	void GetTreeAudioDataStruct(struct FTreeAudioDataRowHandle RowHandle, struct FTreeAudioData TreeAudioData, enum class EValid Paths); // Function Icarus.TreeAudioDataLibrary.GetTreeAudioDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e1790
	bool EqualEqual_FTreeAudioDataRowHandleFTreeAudioDataRowHandle(struct FTreeAudioDataRowHandle RowHandleA, struct FTreeAudioDataRowHandle RowHandleB); // Function Icarus.TreeAudioDataLibrary.EqualEqual_FTreeAudioDataRowHandleFTreeAudioDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e0ff0
	bool EqualEqual_EnumEnum(struct FTreeAudioDataEnum A, struct FTreeAudioDataEnum B); // Function Icarus.TreeAudioDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e0c80
	struct FTreeAudioDataRowHandle CastToTreeAudioDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.TreeAudioDataLibrary.CastToTreeAudioDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e0980
	void BreakTreeAudioDataEnum(struct FTreeAudioDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.TreeAudioDataLibrary.BreakTreeAudioDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e05e0
	void AddRowToTreeAudioDataTable(struct FName Name, struct FTreeAudioData Data, struct FTreeAudioDataRowHandle NewRow); // Function Icarus.TreeAudioDataLibrary.AddRowToTreeAudioDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e0090
};

// Class Icarus.TreeAudioDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UTreeAudioDataTable : UIcarusDataTable {
};

// Class Icarus.TreeBase
// Size: 0x330 (Inherited: 0x2a0)
struct ATreeBase : AIcarusActor {
	bool bHasBeenConstructed; // 0x2a0(0x01)
	bool bHasSpawnArguments; // 0x2a1(0x01)
	bool bDefferTreeConstruction; // 0x2a2(0x01)
	bool bHasBeenModified; // 0x2a3(0x01)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct FMulticastInlineDelegate OnHasBeenModifiedUpdated; // 0x2a8(0x10)
	struct UTreePrimitiveComponent* RootPrimitive; // 0x2b8(0x08)
	struct TArray<struct UTreePrimitiveComponent*> TreePrimitives; // 0x2c0(0x10)
	struct UStaticMeshComponent* ProxyMeshComponent; // 0x2d0(0x08)
	struct FTreeRuntimeConstructArguments SpawnArguments; // 0x2d8(0x38)
	struct TArray<int32_t> RuntimeTreePrimitivesMask; // 0x310(0x10)
	struct UFLODActorComponent* FLODActorComponent; // 0x320(0x08)
	bool bIsResolvingTreeCollision; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)

	bool TransferTreePrimitiveHierarchy(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext DetachContext); // Function Icarus.TreeBase.TransferTreePrimitiveHierarchy // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16e9af0
	void TransferTreePrimitive(struct UTreePrimitiveComponent* Original, struct UTreePrimitiveComponent* New); // Function Icarus.TreeBase.TransferTreePrimitive // (Native|Event|Public|BlueprintEvent) // @ game+0x15751c0
	void SetRootPrimitive(struct UTreePrimitiveComponent* InRootPrimitive); // Function Icarus.TreeBase.SetRootPrimitive // (Final|Native|Public|BlueprintCallable) // @ game+0x16e9660
	void SetHasBeenModified(bool Modified); // Function Icarus.TreeBase.SetHasBeenModified // (Final|Native|Protected|BlueprintCallable) // @ game+0x16e95d0
	void ResolveTreeVisibility(); // Function Icarus.TreeBase.ResolveTreeVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x16e94f0
	void ResolveTreeCollision(); // Function Icarus.TreeBase.ResolveTreeCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x16e94d0
	bool OrphanTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext DetachContext, bool bDestroySelf); // Function Icarus.TreeBase.OrphanTreePrimitive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16e9150
	void OnUpdateTreePrimitiveRuntimeMaskState(struct TArray<struct UTreePrimitiveComponent*> RemovedTreePrimitives); // Function Icarus.TreeBase.OnUpdateTreePrimitiveRuntimeMaskState // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x16e90a0
	void OnTransferTreePrimitiveHierarchy(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext DetachContext, struct ATreeBase* NewTree); // Function Icarus.TreeBase.OnTransferTreePrimitiveHierarchy // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16e8f70
	void OnRep_SpawnArguments(); // Function Icarus.TreeBase.OnRep_SpawnArguments // (Final|Native|Protected) // @ game+0x16e8f50
	void OnRep_RuntimeTreePrimitivesMask(); // Function Icarus.TreeBase.OnRep_RuntimeTreePrimitivesMask // (Final|Native|Public) // @ game+0x16e8f30
	void OnRep_HasBeenModified(); // Function Icarus.TreeBase.OnRep_HasBeenModified // (Final|Native|Protected) // @ game+0x16e8f10
	void OnPreConstructedTreePrimitives(); // Function Icarus.TreeBase.OnPreConstructedTreePrimitives // (Native|Event|Public|BlueprintEvent) // @ game+0x15b36e0
	void OnOrphanTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext DetachContext, bool bDestroyingSelf, struct AIcarusItem* ReplacementItem); // Function Icarus.TreeBase.OnOrphanTreePrimitive // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16e8d70
	void OnHitTree(struct UPrimitiveComponent* Primitive, struct AActor* DamageCauser, struct FVector HitLocation, struct FVector HitNormal); // Function Icarus.TreeBase.OnHitTree // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x16e8bd0
	void OnDetachTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext DetachContext); // Function Icarus.TreeBase.OnDetachTreePrimitive // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x16e8af0
	void OnConstructedTreePrimitives(); // Function Icarus.TreeBase.OnConstructedTreePrimitives // (Native|Event|Public|BlueprintEvent) // @ game+0x8e9630
	struct ATreePrefab* GetTreePrefab(); // Function Icarus.TreeBase.GetTreePrefab // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16e7f30
	bool GetAttachedTreePrimitives(struct UTreePrimitiveComponent* SourceTreePrimitive, struct TArray<enum class ETreePrimitiveType> Types, bool bIncludeSource, bool bIncludeAllDescendants, struct TArray<struct UTreePrimitiveComponent*> OutTreePrimitives); // Function Icarus.TreeBase.GetAttachedTreePrimitives // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e7c00
	bool DetachTreePrimitive(struct UTreePrimitiveComponent* TreePrimitive, struct FTreePrimitiveDetachContext DetachContext); // Function Icarus.TreeBase.DetachTreePrimitive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16e78e0
	void DebugLogHierarchy(); // Function Icarus.TreeBase.DebugLogHierarchy // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x16e78c0
	void ConsumeHit(struct FIcarusDamagePacket DamagePacket); // Function Icarus.TreeBase.ConsumeHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16e75f0
	void AddTreePrimitiveToRuntimeMask(struct UTreePrimitiveComponent* TreePrimitive); // Function Icarus.TreeBase.AddTreePrimitiveToRuntimeMask // (Final|Native|Protected|BlueprintCallable) // @ game+0x16e6db0
};

// Class Icarus.TreePrefab
// Size: 0x350 (Inherited: 0x220)
struct ATreePrefab : AActor {
	struct USceneComponent* RootScene; // 0x220(0x08)
	struct TMap<enum class ETreePrimitiveType, struct FItemRewardsRowHandle> TreePrimitiveTypesToItemRewards; // 0x228(0x50)
	struct ATreeBase* RuntimeTreeClass; // 0x278(0x08)
	struct UTreePrimitiveComponent* RuntimeTreePrimitiveClass; // 0x280(0x08)
	char pad_288[0xc8]; // 0x288(0xc8)

	void OnCreatedTreeRuntime(struct ATreeBase* TreeBase); // Function Icarus.TreePrefab.OnCreatedTreeRuntime // (Native|Event|Public|BlueprintEvent) // @ game+0x16e8a60
	struct ATreeBase* CreateTreeRuntime(struct FTreeRuntimeCreateArguments Args); // Function Icarus.TreePrefab.CreateTreeRuntime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16e77a0
	bool ConstructTreePrimitives(struct ATreeBase* TreeRuntime, struct FTreeRuntimeConstructArguments Args); // Function Icarus.TreePrefab.ConstructTreePrimitives // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16e74d0
};

// Class Icarus.TreePrimitiveComponent
// Size: 0x510 (Inherited: 0x4d0)
struct UTreePrimitiveComponent : UStaticMeshComponent {
	float CalculatedMass; // 0x4d0(0x04)
	float CalculatedDescendantsMass; // 0x4d4(0x04)
	float CalculatedTotalConnectedMass; // 0x4d8(0x04)
	char pad_4DC[0x4]; // 0x4dc(0x04)
	struct TArray<struct FTreePrimitiveReplacementDescription> ReplacementDescriptions; // 0x4e0(0x10)
	bool bDestroyOnOrphan; // 0x4f0(0x01)
	char pad_4F1[0x3]; // 0x4f1(0x03)
	struct FName CollisionProfileWhenActive; // 0x4f4(0x08)
	struct FTreePrimitivePersistentData PersistentData; // 0x4fc(0x04)
	struct FName TreePrimitiveName; // 0x500(0x08)
	enum class ETreePrimitiveType TreePrimitiveType; // 0x508(0x01)
	char pad_509[0x7]; // 0x509(0x07)

	void Transfer(struct UTreePrimitiveComponent* Source); // Function Icarus.TreePrimitiveComponent.Transfer // (Native|Event|Public|BlueprintEvent) // @ game+0x16e9a60
	bool ShouldTreePrimivieAffectNavigation(); // Function Icarus.TreePrimitiveComponent.ShouldTreePrimivieAffectNavigation // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x16e9840
	void SetVirtualTextureRenderPassType(enum class ERuntimeVirtualTextureMainPassType InType); // Function Icarus.TreePrimitiveComponent.SetVirtualTextureRenderPassType // (Final|Native|Public|BlueprintCallable) // @ game+0x16e96f0
	void SetupCollisionProfile(bool bEnabled, bool bIsDynamic); // Function Icarus.TreePrimitiveComponent.SetupCollisionProfile // (Final|Native|Public|BlueprintCallable) // @ game+0x16e9770
	bool ReplaceTreePrimitiveWithItem(struct FTreePrimitiveDetachContext DetachContext, struct AIcarusItem* OutItemActor); // Function Icarus.TreePrimitiveComponent.ReplaceTreePrimitiveWithItem // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x16e93d0
	void RecalculateMass(); // Function Icarus.TreePrimitiveComponent.RecalculateMass // (Final|Native|Public|BlueprintCallable) // @ game+0x16e9310
	void InitializePostConstruction(); // Function Icarus.TreePrimitiveComponent.InitializePostConstruction // (Native|Event|Public|BlueprintEvent) // @ game+0x15d6e70
	void Construct(struct UStaticMeshComponent* MeshComponent); // Function Icarus.TreePrimitiveComponent.Construct // (Native|Event|Public|BlueprintEvent) // @ game+0x16e7440
	bool CanSupportTreeHierarchy(); // Function Icarus.TreePrimitiveComponent.CanSupportTreeHierarchy // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x16e6fa0
};

// Class Icarus.TreeRecorderComponent
// Size: 0x170 (Inherited: 0x150)
struct UTreeRecorderComponent : UActorStateRecorderComponent {
	struct FName TreePrefabClassName; // 0x148(0x08)
	struct TArray<int32_t> TreePrimitiveMask; // 0x150(0x10)
	struct FName RootName; // 0x160(0x08)
	bool bIsPhysicsDynamic; // 0x168(0x01)
};

// Class Icarus.TutorialRuleset
// Size: 0x48 (Inherited: 0x48)
struct UTutorialRuleset : URuleset {
};

// Class Icarus.UMGFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUMGFunctionLibrary : UBlueprintFunctionLibrary {

	struct FString PasteFromClipboard(); // Function Icarus.UMGFunctionLibrary.PasteFromClipboard // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e9290
	struct FText GetTextForKeybind(struct UObject* WorldContextObject, struct FKeybindingsRowHandle Keybinding); // Function Icarus.UMGFunctionLibrary.GetTextForKeybind // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e7de0
	void CopyToClipboard(struct FString Text); // Function Icarus.UMGFunctionLibrary.CopyToClipboard // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e7700
};

// Class Icarus.UsableComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UUsableComponent : UTraitComponent {

	bool GetUsableData(struct FUsableData OutData); // Function Icarus.UsableComponent.GetUsableData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16e7f60
};

// Class Icarus.UsableItemLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUsableItemLibrary : UBlueprintFunctionLibrary {

	bool UseItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct AIcarusPlayerCharacter* Target); // Function Icarus.UsableItemLibrary.UseItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e9be0
	bool CanUseInventoryItem(struct UInventory* SourceInventory, int32_t SourceLocation, struct FUsesEnum Use, struct AIcarusPlayerCharacter* Target); // Function Icarus.UsableItemLibrary.CanUseInventoryItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e71c0
	bool CanUse(struct FUseCondition UseCondition, struct AIcarusPlayerCharacter* Target); // Function Icarus.UsableItemLibrary.CanUse // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e6fd0
};

// Class Icarus.UsableLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUsableLibrary : URowLibrary {

	struct FUsableRowHandle StructToRowHandle(struct FUsableEnum EnumValue); // Function Icarus.UsableLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e99b0
	struct FName StructToName(struct FUsableEnum EnumValue); // Function Icarus.UsableLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e9910
	int32_t StructToInt(struct FUsableEnum EnumValue); // Function Icarus.UsableLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e9870
	struct FUsableEnum RowHandleToStruct(struct FUsableRowHandle RowHandle); // Function Icarus.UsableLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e9510
	void RemoveRowFromUsableTable(struct FName Name); // Function Icarus.UsableLibrary.RemoveRowFromUsableTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16e9350
	void RefreshConstants(); // Function Icarus.UsableLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16e9330
	int32_t NumRows(); // Function Icarus.UsableLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e8a30
	bool NotEqual_EnumName(struct FUsableEnum A, struct FName B); // Function Icarus.UsableLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e8940
	bool NotEqual_EnumEnum(struct FUsableEnum A, struct FUsableEnum B); // Function Icarus.UsableLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e8850
	struct FUsableEnum NameToStruct(struct FName NameValue); // Function Icarus.UsableLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e87c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.UsableLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16e8730
	struct FUsableRowHandle MakeUsableFromIndex(int32_t Index); // Function Icarus.UsableLibrary.MakeUsableFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e86a0
	struct FUsableEnum MakeUsableEnum(struct FUsableEnum Enum); // Function Icarus.UsableLibrary.MakeUsableEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e8620
	struct FUsableRowHandle MakeUsable(struct FName RowName); // Function Icarus.UsableLibrary.MakeUsable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e8580
	struct FUsableRowHandle MakeLiteralUsable(struct FUsableRowHandle RowHandle); // Function Icarus.UsableLibrary.MakeLiteralUsable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e84b0
	bool IsValidName(struct FName NameValue); // Function Icarus.UsableLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16e8420
	struct FUsableEnum IntToStruct(int32_t IntValue); // Function Icarus.UsableLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e8390
	struct FName IntToName(int32_t IntValue); // Function Icarus.UsableLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16e8300
	void GetUsableStruct(struct FUsableRowHandle RowHandle, struct FUsableData Usable, enum class EValid Paths); // Function Icarus.UsableLibrary.GetUsableStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e8130
	bool EqualEqual_FUsableRowHandleFUsableRowHandle(struct FUsableRowHandle RowHandleA, struct FUsableRowHandle RowHandleB); // Function Icarus.UsableLibrary.EqualEqual_FUsableRowHandleFUsableRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e7ac0
	bool EqualEqual_EnumEnum(struct FUsableEnum A, struct FUsableEnum B); // Function Icarus.UsableLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16e79d0
	struct FUsableRowHandle CastToUsableRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.UsableLibrary.CastToUsableRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e7320
	void BreakUsableEnum(struct FUsableEnum Enum, struct FName Name, int32_t Index); // Function Icarus.UsableLibrary.BreakUsableEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16e6e40
	void AddRowToUsableTable(struct FName Name, struct FUsableData Data, struct FUsableRowHandle NewRow); // Function Icarus.UsableLibrary.AddRowToUsableTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16e6b70
};

// Class Icarus.UsableTable
// Size: 0xb8 (Inherited: 0xb8)
struct UUsableTable : UIcarusDataTable {
};

// Class Icarus.UserInterfaceBase
// Size: 0x260 (Inherited: 0x260)
struct UUserInterfaceBase : UUserWidget {

	void WidgetFocusLost(struct UIcarusWidget* Widget); // Function Icarus.UserInterfaceBase.WidgetFocusLost // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void WidgetFocusGained(struct UIcarusWidget* Widget); // Function Icarus.UserInterfaceBase.WidgetFocusGained // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void DisplayIcarusError(struct FErrorCodesEnum OutgoingError); // Function Icarus.UserInterfaceBase.DisplayIcarusError // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
};

// Class Icarus.UsesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUsesLibrary : URowLibrary {

	struct FUsesRowHandle StructToRowHandle(struct FUsesEnum EnumValue); // Function Icarus.UsesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efc80
	struct FName StructToName(struct FUsesEnum EnumValue); // Function Icarus.UsesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efaa0
	int32_t StructToInt(struct FUsesEnum EnumValue); // Function Icarus.UsesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef8c0
	struct FUsesEnum RowHandleToStruct(struct FUsesRowHandle RowHandle); // Function Icarus.UsesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef680
	void RemoveRowFromUsesTable(struct FName Name); // Function Icarus.UsesLibrary.RemoveRowFromUsesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ef500
	void RefreshConstants(); // Function Icarus.UsesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ef4a0
	int32_t NumRows(); // Function Icarus.UsesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef410
	bool NotEqual_EnumName(struct FUsesEnum A, struct FName B); // Function Icarus.UsesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef140
	bool NotEqual_EnumEnum(struct FUsesEnum A, struct FUsesEnum B); // Function Icarus.UsesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eee70
	struct FUsesEnum NameToStruct(struct FName NameValue); // Function Icarus.UsesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eecc0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.UsesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16eeb10
	struct FUsesRowHandle MakeUsesFromIndex(int32_t Index); // Function Icarus.UsesLibrary.MakeUsesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee720
	struct FUsesEnum MakeUsesEnum(struct FUsesEnum Enum); // Function Icarus.UsesLibrary.MakeUsesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee6a0
	struct FUsesRowHandle MakeUses(struct FName RowName); // Function Icarus.UsesLibrary.MakeUses // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee600
	struct FUsesRowHandle MakeLiteralUses(struct FUsesRowHandle RowHandle); // Function Icarus.UsesLibrary.MakeLiteralUses // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee390
	bool IsValidName(struct FName NameValue); // Function Icarus.UsesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ee1e0
	struct FUsesEnum IntToStruct(int32_t IntValue); // Function Icarus.UsesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee030
	struct FName IntToName(int32_t IntValue); // Function Icarus.UsesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16ede80
	void GetUsesStruct(struct FUsesRowHandle RowHandle, struct FUses Uses, enum class EValid Paths); // Function Icarus.UsesLibrary.GetUsesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ed9a0
	bool EqualEqual_FUsesRowHandleFUsesRowHandle(struct FUsesRowHandle RowHandleA, struct FUsesRowHandle RowHandleB); // Function Icarus.UsesLibrary.EqualEqual_FUsesRowHandleFUsesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed5e0
	bool EqualEqual_EnumEnum(struct FUsesEnum A, struct FUsesEnum B); // Function Icarus.UsesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed310
	struct FUsesRowHandle CastToUsesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.UsesLibrary.CastToUsesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ecfb0
	void BreakUsesEnum(struct FUsesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.UsesLibrary.BreakUsesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ecb90
	void AddRowToUsesTable(struct FName Name, struct FUses Data, struct FUsesRowHandle NewRow); // Function Icarus.UsesLibrary.AddRowToUsesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ec590
};

// Class Icarus.UsesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UUsesTable : UIcarusDataTable {
};

// Class Icarus.ValidHitQueriesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UValidHitQueriesLibrary : URowLibrary {

	struct FValidHitQueriesRowHandle StructToRowHandle(struct FValidHitQueriesEnum EnumValue); // Function Icarus.ValidHitQueriesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efd30
	struct FName StructToName(struct FValidHitQueriesEnum EnumValue); // Function Icarus.ValidHitQueriesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efb40
	int32_t StructToInt(struct FValidHitQueriesEnum EnumValue); // Function Icarus.ValidHitQueriesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef960
	struct FValidHitQueriesEnum RowHandleToStruct(struct FValidHitQueriesRowHandle RowHandle); // Function Icarus.ValidHitQueriesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef740
	void RemoveRowFromValidHitQueriesTable(struct FName Name); // Function Icarus.ValidHitQueriesLibrary.RemoveRowFromValidHitQueriesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ef580
	void RefreshConstants(); // Function Icarus.ValidHitQueriesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ef4c0
	int32_t NumRows(); // Function Icarus.ValidHitQueriesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef440
	bool NotEqual_EnumName(struct FValidHitQueriesEnum A, struct FName B); // Function Icarus.ValidHitQueriesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef230
	bool NotEqual_EnumEnum(struct FValidHitQueriesEnum A, struct FValidHitQueriesEnum B); // Function Icarus.ValidHitQueriesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eef60
	struct FValidHitQueriesEnum NameToStruct(struct FName NameValue); // Function Icarus.ValidHitQueriesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eed50
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ValidHitQueriesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16eeba0
	struct FValidHitQueriesRowHandle MakeValidHitQueriesFromIndex(int32_t Index); // Function Icarus.ValidHitQueriesLibrary.MakeValidHitQueriesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee8d0
	struct FValidHitQueriesEnum MakeValidHitQueriesEnum(struct FValidHitQueriesEnum Enum); // Function Icarus.ValidHitQueriesLibrary.MakeValidHitQueriesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee850
	struct FValidHitQueriesRowHandle MakeValidHitQueries(struct FName RowName); // Function Icarus.ValidHitQueriesLibrary.MakeValidHitQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee7b0
	struct FValidHitQueriesRowHandle MakeLiteralValidHitQueries(struct FValidHitQueriesRowHandle RowHandle); // Function Icarus.ValidHitQueriesLibrary.MakeLiteralValidHitQueries // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee460
	bool IsValidName(struct FName NameValue); // Function Icarus.ValidHitQueriesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ee270
	struct FValidHitQueriesEnum IntToStruct(int32_t IntValue); // Function Icarus.ValidHitQueriesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee0c0
	struct FName IntToName(int32_t IntValue); // Function Icarus.ValidHitQueriesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16edf10
	void GetValidHitQueriesStruct(struct FValidHitQueriesRowHandle RowHandle, struct FValidHitQuery ValidHitQueries, enum class EValid Paths); // Function Icarus.ValidHitQueriesLibrary.GetValidHitQueriesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16edb30
	bool EqualEqual_FValidHitQueriesRowHandleFValidHitQueriesRowHandle(struct FValidHitQueriesRowHandle RowHandleA, struct FValidHitQueriesRowHandle RowHandleB); // Function Icarus.ValidHitQueriesLibrary.EqualEqual_FValidHitQueriesRowHandleFValidHitQueriesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed720
	bool EqualEqual_EnumEnum(struct FValidHitQueriesEnum A, struct FValidHitQueriesEnum B); // Function Icarus.ValidHitQueriesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed400
	struct FValidHitQueriesRowHandle CastToValidHitQueriesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ValidHitQueriesLibrary.CastToValidHitQueriesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ed0d0
	void BreakValidHitQueriesEnum(struct FValidHitQueriesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ValidHitQueriesLibrary.BreakValidHitQueriesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16eccf0
	void AddRowToValidHitQueriesTable(struct FName Name, struct FValidHitQuery Data, struct FValidHitQueriesRowHandle NewRow); // Function Icarus.ValidHitQueriesLibrary.AddRowToValidHitQueriesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ec790
};

// Class Icarus.ValidHitQueriesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UValidHitQueriesTable : UIcarusDataTable {
};

// Class Icarus.ValidHitTypesLibrary
// Size: 0x28 (Inherited: 0x28)
struct UValidHitTypesLibrary : URowLibrary {

	struct FValidHitTypesRowHandle StructToRowHandle(struct FValidHitTypesEnum EnumValue); // Function Icarus.ValidHitTypesLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efde0
	struct FName StructToName(struct FValidHitTypesEnum EnumValue); // Function Icarus.ValidHitTypesLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efbe0
	int32_t StructToInt(struct FValidHitTypesEnum EnumValue); // Function Icarus.ValidHitTypesLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16efa00
	struct FValidHitTypesEnum RowHandleToStruct(struct FValidHitTypesRowHandle RowHandle); // Function Icarus.ValidHitTypesLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef800
	void RemoveRowFromValidHitTypesTable(struct FName Name); // Function Icarus.ValidHitTypesLibrary.RemoveRowFromValidHitTypesTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ef600
	void RefreshConstants(); // Function Icarus.ValidHitTypesLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ef4e0
	int32_t NumRows(); // Function Icarus.ValidHitTypesLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef470
	bool NotEqual_EnumName(struct FValidHitTypesEnum A, struct FName B); // Function Icarus.ValidHitTypesLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef320
	bool NotEqual_EnumEnum(struct FValidHitTypesEnum A, struct FValidHitTypesEnum B); // Function Icarus.ValidHitTypesLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ef050
	struct FValidHitTypesEnum NameToStruct(struct FName NameValue); // Function Icarus.ValidHitTypesLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eede0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.ValidHitTypesLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16eec30
	struct FValidHitTypesRowHandle MakeValidHitTypesFromIndex(int32_t Index); // Function Icarus.ValidHitTypesLibrary.MakeValidHitTypesFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eea80
	struct FValidHitTypesEnum MakeValidHitTypesEnum(struct FValidHitTypesEnum Enum); // Function Icarus.ValidHitTypesLibrary.MakeValidHitTypesEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16eea00
	struct FValidHitTypesRowHandle MakeValidHitTypes(struct FName RowName); // Function Icarus.ValidHitTypesLibrary.MakeValidHitTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee960
	struct FValidHitTypesRowHandle MakeLiteralValidHitTypes(struct FValidHitTypesRowHandle RowHandle); // Function Icarus.ValidHitTypesLibrary.MakeLiteralValidHitTypes // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee530
	bool IsValidName(struct FName NameValue); // Function Icarus.ValidHitTypesLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16ee300
	struct FValidHitTypesEnum IntToStruct(int32_t IntValue); // Function Icarus.ValidHitTypesLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ee150
	struct FName IntToName(int32_t IntValue); // Function Icarus.ValidHitTypesLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16edfa0
	void GetValidHitTypesStruct(struct FValidHitTypesRowHandle RowHandle, struct FValidHitType ValidHitTypes, enum class EValid Paths); // Function Icarus.ValidHitTypesLibrary.GetValidHitTypesStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16edd00
	bool EqualEqual_FValidHitTypesRowHandleFValidHitTypesRowHandle(struct FValidHitTypesRowHandle RowHandleA, struct FValidHitTypesRowHandle RowHandleB); // Function Icarus.ValidHitTypesLibrary.EqualEqual_FValidHitTypesRowHandleFValidHitTypesRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed860
	bool EqualEqual_EnumEnum(struct FValidHitTypesEnum A, struct FValidHitTypesEnum B); // Function Icarus.ValidHitTypesLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ed4f0
	struct FValidHitTypesRowHandle CastToValidHitTypesRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.ValidHitTypesLibrary.CastToValidHitTypesRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ed1f0
	void BreakValidHitTypesEnum(struct FValidHitTypesEnum Enum, struct FName Name, int32_t Index); // Function Icarus.ValidHitTypesLibrary.BreakValidHitTypesEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16ece50
	void AddRowToValidHitTypesTable(struct FName Name, struct FValidHitType Data, struct FValidHitTypesRowHandle NewRow); // Function Icarus.ValidHitTypesLibrary.AddRowToValidHitTypesTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16ec9e0
};

// Class Icarus.ValidHitTypesTable
// Size: 0xb8 (Inherited: 0xb8)
struct UValidHitTypesTable : UIcarusDataTable {
};

// Class Icarus.VehicleBase
// Size: 0x3b0 (Inherited: 0x290)
struct AVehicleBase : AWheeledVehicle {
	struct ASeatBase* DriverSeat; // 0x290(0x08)
	struct TArray<struct ASeatBase*> Seats; // 0x298(0x10)
	struct TArray<struct FVehicleSeatSetupData> SeatSetupData; // 0x2a8(0x10)
	float ClientAuthNetUpdates; // 0x2b8(0x04)
	char pad_2BC[0x9]; // 0x2bc(0x09)
	bool bClientAuth; // 0x2c5(0x01)
	char pad_2C6[0x2]; // 0x2c6(0x02)
	struct FRotator ReplicatedAimRotation; // 0x2c8(0x0c)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct USpringArmComponent* SpringArm; // 0x2d8(0x08)
	struct UCameraComponent* Camera; // 0x2e0(0x08)
	bool bUseVehicleSetupData; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	struct FVehicleSetupsRowHandle VehicleSetupData; // 0x2ec(0x18)
	char pad_304[0x4]; // 0x304(0x04)
	struct UInventoryComponent* VehicleInventory; // 0x308(0x08)
	struct UInventory* VehicleComponentInventory; // 0x310(0x08)
	struct TArray<struct FVehicleComponentSlot> VehicleComponentSlots; // 0x318(0x10)
	struct UVehicleComponentModel* VehicleComponentModel; // 0x328(0x08)
	struct TArray<struct AIcarusItem*> ReplicatedVehicleComponents; // 0x330(0x10)
	struct TMap<int32_t, struct UVehicularComponent*> VehicularComponents; // 0x340(0x50)
	bool bDebugOverrideVehicleComponentModel; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct TArray<struct FVehicleConstraintAttachment> VehicleConstraintAttachments; // 0x398(0x10)
	struct UVehicleRecorderComponent* VehicleRecorder; // 0x3a8(0x08)

	void SetAutonomousProxyState(bool bAutonomousProxy); // Function Icarus.VehicleBase.SetAutonomousProxyState // (Final|Native|Public|BlueprintCallable) // @ game+0x16f4690
	void ReplicatePhysicsTargetToServer(struct FRepMovement Target); // Function Icarus.VehicleBase.ReplicatePhysicsTargetToServer // (Net|Native|Event|Protected|NetServer|NetValidate) // @ game+0x16f44b0
	void RemoveConstraintAttachment(struct UPhysicsConstraintComponent* PhysicsConstraint); // Function Icarus.VehicleBase.RemoveConstraintAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x16f43a0
	void OnVehicleInventoryItemRemoved(struct UInventory* Inventory, int32_t RemovedSlotIndex); // Function Icarus.VehicleBase.OnVehicleInventoryItemRemoved // (Final|Native|Protected) // @ game+0x16f42b0
	void OnVehicleInventoryItemAdded(struct UInventory* Inventory, int32_t AddedSlotIndex); // Function Icarus.VehicleBase.OnVehicleInventoryItemAdded // (Final|Native|Protected) // @ game+0x16f41e0
	void OnRep_VehicleConstraintAttachments(); // Function Icarus.VehicleBase.OnRep_VehicleConstraintAttachments // (Native|Event|Protected|BlueprintEvent) // @ game+0x16f41c0
	void OnRep_ReplicatedVehicleComponents(); // Function Icarus.VehicleBase.OnRep_ReplicatedVehicleComponents // (Final|Native|Protected) // @ game+0x16f41a0
	float GetThrottleInput(); // Function Icarus.VehicleBase.GetThrottleInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3500
	float GetOutputEnginePower(); // Function Icarus.VehicleBase.GetOutputEnginePower // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f34a0
	struct UCameraComponent* GetCamera(); // Function Icarus.VehicleBase.GetCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3480
	float GetBrakeInput(); // Function Icarus.VehicleBase.GetBrakeInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3450
	struct USpringArmComponent* GeSpringArm(); // Function Icarus.VehicleBase.GeSpringArm // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3430
	int32_t FindConstraintAttachment(struct UPhysicsConstraintComponent* PhysicsConstraint, struct FVehicleConstraintAttachment OutConstraintAttachment); // Function Icarus.VehicleBase.FindConstraintAttachment // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x16f3350
	struct TArray<struct UVehicularComponent*> FindComponentsOfTypes(struct TArray<enum class EVehicleComponentType> Types); // Function Icarus.VehicleBase.FindComponentsOfTypes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3210
	struct TArray<struct UVehicularComponent*> FindComponentsOfType(enum class EVehicleComponentType Type); // Function Icarus.VehicleBase.FindComponentsOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3130
	void ClearAllInput(); // Function Icarus.VehicleBase.ClearAllInput // (Final|Native|Public|BlueprintCallable) // @ game+0x16f2ee0
	void AddConstraintAttachment(struct UPrimitiveComponent* AttachParent, struct UPrimitiveComponent* AttachedChild, struct UPhysicsConstraintComponent* PhysicsConstraint); // Function Icarus.VehicleBase.AddConstraintAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x16f29c0
};

// Class Icarus.VehicleComponentModel
// Size: 0x458 (Inherited: 0xb0)
struct UVehicleComponentModel : UActorComponent {
	struct FMulticastInlineDelegate OnVehicleMovementUpdatedEvent; // 0xb0(0x10)
	struct FVehicleMovementModel Model; // 0xc0(0x380)
	struct FTimerHandle ModelDirtyTimerHandle; // 0x440(0x08)
	struct FTimerHandle UpdateVehicleMovementTimerHandle; // 0x448(0x08)
	bool bIsInit; // 0x450(0x01)
	bool bModelDirty; // 0x451(0x01)
	char pad_452[0x6]; // 0x452(0x06)

	void SetModelDirty(bool bDelayUntilNextTick); // Function Icarus.VehicleComponentModel.SetModelDirty // (Final|Native|Public|BlueprintCallable) // @ game+0x16f4720
	void OnRep_Model(); // Function Icarus.VehicleComponentModel.OnRep_Model // (Final|Native|Protected) // @ game+0x16f4180
	struct AVehicleBase* GetVehicle(); // Function Icarus.VehicleComponentModel.GetVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3530
};

// Class Icarus.VehicleRecorderComponent
// Size: 0x150 (Inherited: 0x150)
struct UVehicleRecorderComponent : UActorStateRecorderComponent {
};

// Class Icarus.VehicleSetupsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVehicleSetupsLibrary : URowLibrary {

	struct FVehicleSetupsRowHandle StructToRowHandle(struct FVehicleSetupsEnum EnumValue); // Function Icarus.VehicleSetupsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f48f0
	struct FName StructToName(struct FVehicleSetupsEnum EnumValue); // Function Icarus.VehicleSetupsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f4850
	int32_t StructToInt(struct FVehicleSetupsEnum EnumValue); // Function Icarus.VehicleSetupsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f47b0
	struct FVehicleSetupsEnum RowHandleToStruct(struct FVehicleSetupsRowHandle RowHandle); // Function Icarus.VehicleSetupsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f45d0
	void RemoveRowFromVehicleSetupsTable(struct FName Name); // Function Icarus.VehicleSetupsLibrary.RemoveRowFromVehicleSetupsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f4430
	void RefreshConstants(); // Function Icarus.VehicleSetupsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16f4380
	int32_t NumRows(); // Function Icarus.VehicleSetupsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f4130
	bool NotEqual_EnumName(struct FVehicleSetupsEnum A, struct FName B); // Function Icarus.VehicleSetupsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f4040
	bool NotEqual_EnumEnum(struct FVehicleSetupsEnum A, struct FVehicleSetupsEnum B); // Function Icarus.VehicleSetupsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3f50
	struct FVehicleSetupsEnum NameToStruct(struct FName NameValue); // Function Icarus.VehicleSetupsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3ec0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VehicleSetupsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16f3e30
	struct FVehicleSetupsRowHandle MakeVehicleSetupsFromIndex(int32_t Index); // Function Icarus.VehicleSetupsLibrary.MakeVehicleSetupsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3da0
	struct FVehicleSetupsEnum MakeVehicleSetupsEnum(struct FVehicleSetupsEnum Enum); // Function Icarus.VehicleSetupsLibrary.MakeVehicleSetupsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3d20
	struct FVehicleSetupsRowHandle MakeVehicleSetups(struct FName RowName); // Function Icarus.VehicleSetupsLibrary.MakeVehicleSetups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3c80
	struct FVehicleSetupsRowHandle MakeLiteralVehicleSetups(struct FVehicleSetupsRowHandle RowHandle); // Function Icarus.VehicleSetupsLibrary.MakeLiteralVehicleSetups // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3bb0
	bool IsValidName(struct FName NameValue); // Function Icarus.VehicleSetupsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16f3b20
	struct FVehicleSetupsEnum IntToStruct(int32_t IntValue); // Function Icarus.VehicleSetupsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f3a90
	struct FName IntToName(int32_t IntValue); // Function Icarus.VehicleSetupsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16f3a00
	void GetVehicleSetupsStruct(struct FVehicleSetupsRowHandle RowHandle, struct FVehicleSetup VehicleSetups, enum class EValid Paths); // Function Icarus.VehicleSetupsLibrary.GetVehicleSetupsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f3560
	bool EqualEqual_FVehicleSetupsRowHandleFVehicleSetupsRowHandle(struct FVehicleSetupsRowHandle RowHandleA, struct FVehicleSetupsRowHandle RowHandleB); // Function Icarus.VehicleSetupsLibrary.EqualEqual_FVehicleSetupsRowHandleFVehicleSetupsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f2ff0
	bool EqualEqual_EnumEnum(struct FVehicleSetupsEnum A, struct FVehicleSetupsEnum B); // Function Icarus.VehicleSetupsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f2f00
	struct FVehicleSetupsRowHandle CastToVehicleSetupsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VehicleSetupsLibrary.CastToVehicleSetupsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f2dc0
	void BreakVehicleSetupsEnum(struct FVehicleSetupsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VehicleSetupsLibrary.BreakVehicleSetupsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16f2c60
	void AddRowToVehicleSetupsTable(struct FName Name, struct FVehicleSetup Data, struct FVehicleSetupsRowHandle NewRow); // Function Icarus.VehicleSetupsLibrary.AddRowToVehicleSetupsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f2ad0
};

// Class Icarus.VehicleSetupsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVehicleSetupsTable : UIcarusDataTable {
};

// Class Icarus.VehicularComponent
// Size: 0x140 (Inherited: 0xd0)
struct UVehicularComponent : UTraitComponent {
	int32_t AttachedComponentSlotIndex; // 0xd0(0x04)
	char pad_D4[0xc]; // 0xd4(0x0c)
	struct FVehicleComponentSlot AttachedComponentSlot; // 0xe0(0x60)

	void OnRep_AttachedComponentSlotIndex(); // Function Icarus.VehicularComponent.OnRep_AttachedComponentSlotIndex // (Final|Native|Protected) // @ game+0x16f4160
	bool IsFunctional(); // Function Icarus.VehicularComponent.IsFunctional // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1504a50
	bool GetVehicularData(struct FVehicularData OutData); // Function Icarus.VehicularComponent.GetVehicularData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f3700
	struct AVehicleBase* GetOwnerVehicle(); // Function Icarus.VehicularComponent.GetOwnerVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16f34d0
};

// Class Icarus.VehicularLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVehicularLibrary : URowLibrary {

	struct FVehicularRowHandle StructToRowHandle(struct FVehicularEnum EnumValue); // Function Icarus.VehicularLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fa1e0
	struct FName StructToName(struct FVehicularEnum EnumValue); // Function Icarus.VehicularLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fa0a0
	int32_t StructToInt(struct FVehicularEnum EnumValue); // Function Icarus.VehicularLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9f60
	struct FVehicularEnum RowHandleToStruct(struct FVehicularRowHandle RowHandle); // Function Icarus.VehicularLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9de0
	void RemoveRowFromVehicularTable(struct FName Name); // Function Icarus.VehicularLibrary.RemoveRowFromVehicularTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f9ce0
	void RefreshConstants(); // Function Icarus.VehicularLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16f9ca0
	int32_t NumRows(); // Function Icarus.VehicularLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9c20
	bool NotEqual_EnumName(struct FVehicularEnum A, struct FName B); // Function Icarus.VehicularLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9a40
	bool NotEqual_EnumEnum(struct FVehicularEnum A, struct FVehicularEnum B); // Function Icarus.VehicularLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9860
	struct FVehicularEnum NameToStruct(struct FName NameValue); // Function Icarus.VehicularLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9740
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VehicularLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16f9620
	struct FVehicularRowHandle MakeVehicularFromIndex(int32_t Index); // Function Icarus.VehicularLibrary.MakeVehicularFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9350
	struct FVehicularEnum MakeVehicularEnum(struct FVehicularEnum Enum); // Function Icarus.VehicularLibrary.MakeVehicularEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f92d0
	struct FVehicularRowHandle MakeVehicular(struct FName RowName); // Function Icarus.VehicularLibrary.MakeVehicular // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9230
	struct FVehicularRowHandle MakeLiteralVehicular(struct FVehicularRowHandle RowHandle); // Function Icarus.VehicularLibrary.MakeLiteralVehicular // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9090
	bool IsValidName(struct FName NameValue); // Function Icarus.VehicularLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16f8ea0
	struct FVehicularEnum IntToStruct(int32_t IntValue); // Function Icarus.VehicularLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f8d80
	struct FName IntToName(int32_t IntValue); // Function Icarus.VehicularLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16f8c60
	void GetVehicularStruct(struct FVehicularRowHandle RowHandle, struct FVehicularData Vehicular, enum class EValid Paths); // Function Icarus.VehicularLibrary.GetVehicularStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f8740
	bool EqualEqual_FVehicularRowHandleFVehicularRowHandle(struct FVehicularRowHandle RowHandleA, struct FVehicularRowHandle RowHandleB); // Function Icarus.VehicularLibrary.EqualEqual_FVehicularRowHandleFVehicularRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f8400
	bool EqualEqual_EnumEnum(struct FVehicularEnum A, struct FVehicularEnum B); // Function Icarus.VehicularLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f8220
	struct FVehicularRowHandle CastToVehicularRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VehicularLibrary.CastToVehicularRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f7f60
	void BreakVehicularEnum(struct FVehicularEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VehicularLibrary.BreakVehicularEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16f7b40
	void AddRowToVehicularTable(struct FName Name, struct FVehicularData Data, struct FVehicularRowHandle NewRow); // Function Icarus.VehicularLibrary.AddRowToVehicularTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f7540
};

// Class Icarus.VehicularTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVehicularTable : UIcarusDataTable {
};

// Class Icarus.VirtualStats
// Size: 0xb0 (Inherited: 0x28)
struct UVirtualStats : UObject {
	char pad_28[0x88]; // 0x28(0x88)
};

// Class Icarus.VirtualStatFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVirtualStatFunctionLibrary : UBlueprintFunctionLibrary {

	bool IsVirtualStat(struct FStatsEnum Stat); // Function Icarus.VirtualStatFunctionLibrary.IsVirtualStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f8fc0
};

// Class Icarus.VirtualStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVirtualStatsLibrary : UStatsLibrary {

	struct FVirtualStatsEnum MakeVirtualStatsEnum(struct FVirtualStatsEnum Enum); // Function Icarus.VirtualStatsLibrary.MakeVirtualStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f93e0
	bool IsVirtualStatLogging(); // Function Icarus.VirtualStatsLibrary.IsVirtualStatLogging // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9060
	bool Filter(int32_t Index); // Function Icarus.VirtualStatsLibrary.Filter // (Final|Native|Static|Public) // @ game+0x16f8680
	void EnableVirtualStatsLogging(bool bEnable); // Function Icarus.VirtualStatsLibrary.EnableVirtualStatsLogging // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f81a0
	void BreakVirtualStatsEnum(struct FVirtualStatsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VirtualStatsLibrary.BreakVirtualStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16f7ca0
};

// Class Icarus.VocalisationSettingsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVocalisationSettingsLibrary : URowLibrary {

	struct FVocalisationSettingsRowHandle StructToRowHandle(struct FVocalisationSettingsEnum EnumValue); // Function Icarus.VocalisationSettingsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fa290
	struct FName StructToName(struct FVocalisationSettingsEnum EnumValue); // Function Icarus.VocalisationSettingsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fa140
	int32_t StructToInt(struct FVocalisationSettingsEnum EnumValue); // Function Icarus.VocalisationSettingsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fa000
	struct FVocalisationSettingsEnum RowHandleToStruct(struct FVocalisationSettingsRowHandle RowHandle); // Function Icarus.VocalisationSettingsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9ea0
	void RemoveRowFromVocalisationSettingsTable(struct FName Name); // Function Icarus.VocalisationSettingsLibrary.RemoveRowFromVocalisationSettingsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16f9d60
	void RefreshConstants(); // Function Icarus.VocalisationSettingsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16f9cc0
	int32_t NumRows(); // Function Icarus.VocalisationSettingsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9c50
	bool NotEqual_EnumName(struct FVocalisationSettingsEnum A, struct FName B); // Function Icarus.VocalisationSettingsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9b30
	bool NotEqual_EnumEnum(struct FVocalisationSettingsEnum A, struct FVocalisationSettingsEnum B); // Function Icarus.VocalisationSettingsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9950
	struct FVocalisationSettingsEnum NameToStruct(struct FName NameValue); // Function Icarus.VocalisationSettingsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f97d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VocalisationSettingsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16f96b0
	struct FVocalisationSettingsRowHandle MakeVocalisationSettingsFromIndex(int32_t Index); // Function Icarus.VocalisationSettingsLibrary.MakeVocalisationSettingsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9590
	struct FVocalisationSettingsEnum MakeVocalisationSettingsEnum(struct FVocalisationSettingsEnum Enum); // Function Icarus.VocalisationSettingsLibrary.MakeVocalisationSettingsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9510
	struct FVocalisationSettingsRowHandle MakeVocalisationSettings(struct FName RowName); // Function Icarus.VocalisationSettingsLibrary.MakeVocalisationSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9470
	struct FVocalisationSettingsRowHandle MakeLiteralVocalisationSettings(struct FVocalisationSettingsRowHandle RowHandle); // Function Icarus.VocalisationSettingsLibrary.MakeLiteralVocalisationSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f9160
	bool IsValidName(struct FName NameValue); // Function Icarus.VocalisationSettingsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16f8f30
	struct FVocalisationSettingsEnum IntToStruct(int32_t IntValue); // Function Icarus.VocalisationSettingsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f8e10
	struct FName IntToName(int32_t IntValue); // Function Icarus.VocalisationSettingsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16f8cf0
	void GetVocalisationSettingsStruct(struct FVocalisationSettingsRowHandle RowHandle, struct FVocalisationSetting VocalisationSettings, enum class EValid Paths); // Function Icarus.VocalisationSettingsLibrary.GetVocalisationSettingsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f8a00
	bool EqualEqual_FVocalisationSettingsRowHandleFVocalisationSettingsRowHandle(struct FVocalisationSettingsRowHandle RowHandleA, struct FVocalisationSettingsRowHandle RowHandleB); // Function Icarus.VocalisationSettingsLibrary.EqualEqual_FVocalisationSettingsRowHandleFVocalisationSettingsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f8540
	bool EqualEqual_EnumEnum(struct FVocalisationSettingsEnum A, struct FVocalisationSettingsEnum B); // Function Icarus.VocalisationSettingsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16f8310
	struct FVocalisationSettingsRowHandle CastToVocalisationSettingsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VocalisationSettingsLibrary.CastToVocalisationSettingsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f8080
	void BreakVocalisationSettingsEnum(struct FVocalisationSettingsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VocalisationSettingsLibrary.BreakVocalisationSettingsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16f7e00
	void AddRowToVocalisationSettingsTable(struct FName Name, struct FVocalisationSetting Data, struct FVocalisationSettingsRowHandle NewRow); // Function Icarus.VocalisationSettingsLibrary.AddRowToVocalisationSettingsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16f7950
};

// Class Icarus.VocalisationSettingsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVocalisationSettingsTable : UIcarusDataTable {
};

// Class Icarus.VocalisationsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVocalisationsLibrary : URowLibrary {

	struct FVocalisationsRowHandle StructToRowHandle(struct FVocalisationsEnum EnumValue); // Function Icarus.VocalisationsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ffa50
	struct FName StructToName(struct FVocalisationsEnum EnumValue); // Function Icarus.VocalisationsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff870
	int32_t StructToInt(struct FVocalisationsEnum EnumValue); // Function Icarus.VocalisationsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff690
	struct FVocalisationsEnum RowHandleToStruct(struct FVocalisationsRowHandle RowHandle); // Function Icarus.VocalisationsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff450
	void RemoveRowFromVocalisationsTable(struct FName Name); // Function Icarus.VocalisationsLibrary.RemoveRowFromVocalisationsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ff2d0
	void RefreshConstants(); // Function Icarus.VocalisationsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ff270
	int32_t NumRows(); // Function Icarus.VocalisationsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff1e0
	bool NotEqual_EnumName(struct FVocalisationsEnum A, struct FName B); // Function Icarus.VocalisationsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fef10
	bool NotEqual_EnumEnum(struct FVocalisationsEnum A, struct FVocalisationsEnum B); // Function Icarus.VocalisationsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fec40
	struct FVocalisationsEnum NameToStruct(struct FName NameValue); // Function Icarus.VocalisationsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fea90
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VocalisationsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16fe8e0
	struct FVocalisationsRowHandle MakeVocalisationsFromIndex(int32_t Index); // Function Icarus.VocalisationsLibrary.MakeVocalisationsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe4f0
	struct FVocalisationsEnum MakeVocalisationsEnum(struct FVocalisationsEnum Enum); // Function Icarus.VocalisationsLibrary.MakeVocalisationsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe470
	struct FVocalisationsRowHandle MakeVocalisations(struct FName RowName); // Function Icarus.VocalisationsLibrary.MakeVocalisations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe3d0
	struct FVocalisationsRowHandle MakeLiteralVocalisations(struct FVocalisationsRowHandle RowHandle); // Function Icarus.VocalisationsLibrary.MakeLiteralVocalisations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe160
	bool IsValidName(struct FName NameValue); // Function Icarus.VocalisationsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16fdfb0
	struct FVocalisationsEnum IntToStruct(int32_t IntValue); // Function Icarus.VocalisationsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fde00
	struct FName IntToName(int32_t IntValue); // Function Icarus.VocalisationsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16fdc50
	void GetVocalisationsStruct(struct FVocalisationsRowHandle RowHandle, struct FVocalisationData Vocalisations, enum class EValid Paths); // Function Icarus.VocalisationsLibrary.GetVocalisationsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fd6b0
	bool EqualEqual_FVocalisationsRowHandleFVocalisationsRowHandle(struct FVocalisationsRowHandle RowHandleA, struct FVocalisationsRowHandle RowHandleB); // Function Icarus.VocalisationsLibrary.EqualEqual_FVocalisationsRowHandleFVocalisationsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd2f0
	bool EqualEqual_EnumEnum(struct FVocalisationsEnum A, struct FVocalisationsEnum B); // Function Icarus.VocalisationsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd020
	struct FVocalisationsRowHandle CastToVocalisationsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VocalisationsLibrary.CastToVocalisationsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fccc0
	void BreakVocalisationsEnum(struct FVocalisationsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VocalisationsLibrary.BreakVocalisationsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16fc8a0
	void AddRowToVocalisationsTable(struct FName Name, struct FVocalisationData Data, struct FVocalisationsRowHandle NewRow); // Function Icarus.VocalisationsLibrary.AddRowToVocalisationsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fc150
};

// Class Icarus.VocalisationsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVocalisationsTable : UIcarusDataTable {
};

// Class Icarus.VoxelDistributionRegionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVoxelDistributionRegionLibrary : URowLibrary {

	struct FVoxelDistributionRegionRowHandle StructToRowHandle(struct FVoxelDistributionRegionEnum EnumValue); // Function Icarus.VoxelDistributionRegionLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ffb00
	struct FName StructToName(struct FVoxelDistributionRegionEnum EnumValue); // Function Icarus.VoxelDistributionRegionLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff910
	int32_t StructToInt(struct FVoxelDistributionRegionEnum EnumValue); // Function Icarus.VoxelDistributionRegionLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff730
	struct FVoxelDistributionRegionEnum RowHandleToStruct(struct FVoxelDistributionRegionRowHandle RowHandle); // Function Icarus.VoxelDistributionRegionLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff510
	void RemoveRowFromVoxelDistributionRegionTable(struct FName Name); // Function Icarus.VoxelDistributionRegionLibrary.RemoveRowFromVoxelDistributionRegionTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ff350
	void RefreshConstants(); // Function Icarus.VoxelDistributionRegionLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ff290
	int32_t NumRows(); // Function Icarus.VoxelDistributionRegionLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff210
	bool NotEqual_EnumName(struct FVoxelDistributionRegionEnum A, struct FName B); // Function Icarus.VoxelDistributionRegionLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff000
	bool NotEqual_EnumEnum(struct FVoxelDistributionRegionEnum A, struct FVoxelDistributionRegionEnum B); // Function Icarus.VoxelDistributionRegionLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fed30
	struct FVoxelDistributionRegionEnum NameToStruct(struct FName NameValue); // Function Icarus.VoxelDistributionRegionLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16feb20
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VoxelDistributionRegionLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16fe970
	struct FVoxelDistributionRegionRowHandle MakeVoxelDistributionRegionFromIndex(int32_t Index); // Function Icarus.VoxelDistributionRegionLibrary.MakeVoxelDistributionRegionFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe6a0
	struct FVoxelDistributionRegionEnum MakeVoxelDistributionRegionEnum(struct FVoxelDistributionRegionEnum Enum); // Function Icarus.VoxelDistributionRegionLibrary.MakeVoxelDistributionRegionEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe620
	struct FVoxelDistributionRegionRowHandle MakeVoxelDistributionRegion(struct FName RowName); // Function Icarus.VoxelDistributionRegionLibrary.MakeVoxelDistributionRegion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe580
	struct FVoxelDistributionRegionRowHandle MakeLiteralVoxelDistributionRegion(struct FVoxelDistributionRegionRowHandle RowHandle); // Function Icarus.VoxelDistributionRegionLibrary.MakeLiteralVoxelDistributionRegion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe230
	bool IsValidName(struct FName NameValue); // Function Icarus.VoxelDistributionRegionLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16fe040
	struct FVoxelDistributionRegionEnum IntToStruct(int32_t IntValue); // Function Icarus.VoxelDistributionRegionLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fde90
	struct FName IntToName(int32_t IntValue); // Function Icarus.VoxelDistributionRegionLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16fdce0
	void GetVoxelDistributionRegionStruct(struct FVoxelDistributionRegionRowHandle RowHandle, struct FVoxelDistributionRegion VoxelDistributionRegion, enum class EValid Paths); // Function Icarus.VoxelDistributionRegionLibrary.GetVoxelDistributionRegionStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fd840
	bool EqualEqual_FVoxelDistributionRegionRowHandleFVoxelDistributionRegionRowHandle(struct FVoxelDistributionRegionRowHandle RowHandleA, struct FVoxelDistributionRegionRowHandle RowHandleB); // Function Icarus.VoxelDistributionRegionLibrary.EqualEqual_FVoxelDistributionRegionRowHandleFVoxelDistributionRegionRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd430
	bool EqualEqual_EnumEnum(struct FVoxelDistributionRegionEnum A, struct FVoxelDistributionRegionEnum B); // Function Icarus.VoxelDistributionRegionLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd110
	struct FVoxelDistributionRegionRowHandle CastToVoxelDistributionRegionRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VoxelDistributionRegionLibrary.CastToVoxelDistributionRegionRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fcde0
	void BreakVoxelDistributionRegionEnum(struct FVoxelDistributionRegionEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VoxelDistributionRegionLibrary.BreakVoxelDistributionRegionEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16fca00
	void AddRowToVoxelDistributionRegionTable(struct FName Name, struct FVoxelDistributionRegion Data, struct FVoxelDistributionRegionRowHandle NewRow); // Function Icarus.VoxelDistributionRegionLibrary.AddRowToVoxelDistributionRegionTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fc360
};

// Class Icarus.VoxelDistributionRegionTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVoxelDistributionRegionTable : UIcarusDataTable {
};

// Class Icarus.VoxelMaterialMapLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVoxelMaterialMapLibrary : URowLibrary {

	struct FVoxelMaterialMapRowHandle StructToRowHandle(struct FVoxelMaterialMapEnum EnumValue); // Function Icarus.VoxelMaterialMapLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ffbb0
	struct FName StructToName(struct FVoxelMaterialMapEnum EnumValue); // Function Icarus.VoxelMaterialMapLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff9b0
	int32_t StructToInt(struct FVoxelMaterialMapEnum EnumValue); // Function Icarus.VoxelMaterialMapLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff7d0
	struct FVoxelMaterialMapEnum RowHandleToStruct(struct FVoxelMaterialMapRowHandle RowHandle); // Function Icarus.VoxelMaterialMapLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff5d0
	void RemoveRowFromVoxelMaterialMapTable(struct FName Name); // Function Icarus.VoxelMaterialMapLibrary.RemoveRowFromVoxelMaterialMapTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x16ff3d0
	void RefreshConstants(); // Function Icarus.VoxelMaterialMapLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x16ff2b0
	int32_t NumRows(); // Function Icarus.VoxelMaterialMapLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff240
	bool NotEqual_EnumName(struct FVoxelMaterialMapEnum A, struct FName B); // Function Icarus.VoxelMaterialMapLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16ff0f0
	bool NotEqual_EnumEnum(struct FVoxelMaterialMapEnum A, struct FVoxelMaterialMapEnum B); // Function Icarus.VoxelMaterialMapLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fee20
	struct FVoxelMaterialMapEnum NameToStruct(struct FName NameValue); // Function Icarus.VoxelMaterialMapLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16febb0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VoxelMaterialMapLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x16fea00
	struct FVoxelMaterialMapRowHandle MakeVoxelMaterialMapFromIndex(int32_t Index); // Function Icarus.VoxelMaterialMapLibrary.MakeVoxelMaterialMapFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe850
	struct FVoxelMaterialMapEnum MakeVoxelMaterialMapEnum(struct FVoxelMaterialMapEnum Enum); // Function Icarus.VoxelMaterialMapLibrary.MakeVoxelMaterialMapEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe7d0
	struct FVoxelMaterialMapRowHandle MakeVoxelMaterialMap(struct FName RowName); // Function Icarus.VoxelMaterialMapLibrary.MakeVoxelMaterialMap // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe730
	struct FVoxelMaterialMapRowHandle MakeLiteralVoxelMaterialMap(struct FVoxelMaterialMapRowHandle RowHandle); // Function Icarus.VoxelMaterialMapLibrary.MakeLiteralVoxelMaterialMap // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fe300
	bool IsValidName(struct FName NameValue); // Function Icarus.VoxelMaterialMapLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x16fe0d0
	struct FVoxelMaterialMapEnum IntToStruct(int32_t IntValue); // Function Icarus.VoxelMaterialMapLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fdf20
	struct FName IntToName(int32_t IntValue); // Function Icarus.VoxelMaterialMapLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x16fdd70
	void GetVoxelMaterialMapStruct(struct FVoxelMaterialMapRowHandle RowHandle, struct FVoxelMaterialMap VoxelMaterialMap, enum class EValid Paths); // Function Icarus.VoxelMaterialMapLibrary.GetVoxelMaterialMapStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fda70
	bool EqualEqual_FVoxelMaterialMapRowHandleFVoxelMaterialMapRowHandle(struct FVoxelMaterialMapRowHandle RowHandleA, struct FVoxelMaterialMapRowHandle RowHandleB); // Function Icarus.VoxelMaterialMapLibrary.EqualEqual_FVoxelMaterialMapRowHandleFVoxelMaterialMapRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd570
	bool EqualEqual_EnumEnum(struct FVoxelMaterialMapEnum A, struct FVoxelMaterialMapEnum B); // Function Icarus.VoxelMaterialMapLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x16fd200
	struct FVoxelMaterialMapRowHandle CastToVoxelMaterialMapRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VoxelMaterialMapLibrary.CastToVoxelMaterialMapRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fcf00
	void BreakVoxelMaterialMapEnum(struct FVoxelMaterialMapEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VoxelMaterialMapLibrary.BreakVoxelMaterialMapEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x16fcb60
	void AddRowToVoxelMaterialMapTable(struct FName Name, struct FVoxelMaterialMap Data, struct FVoxelMaterialMapRowHandle NewRow); // Function Icarus.VoxelMaterialMapLibrary.AddRowToVoxelMaterialMapTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x16fc620
};

// Class Icarus.VoxelMaterialMapTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVoxelMaterialMapTable : UIcarusDataTable {
};

// Class Icarus.VoxelRecorderComponent
// Size: 0x170 (Inherited: 0x150)
struct UVoxelRecorderComponent : UActorStateRecorderComponent {
	struct FVoxelSaveData VoxelSaveData; // 0x148(0x20)
};

// Class Icarus.VoxelResource
// Size: 0x4b0 (Inherited: 0x2a0)
struct AVoxelResource : AIcarusActor {
	bool bSaveToDatabase; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct UProceduralMeshComponent* GeneratedMeshComponent; // 0x2a8(0x08)
	struct USceneComponent* ReferenceMeshContainer; // 0x2b0(0x08)
	struct UStaticMeshComponent* NavmeshProxyComponent; // 0x2b8(0x08)
	char pad_2C0[0x14]; // 0x2c0(0x14)
	struct FVoxelDistributionRegionRowHandle ResourcePool; // 0x2d4(0x18)
	struct FVoxelSetupDataRowHandle VoxelSetupRow; // 0x2ec(0x18)
	bool bUseMaterialFromRow; // 0x304(0x01)
	char pad_305[0x7]; // 0x305(0x07)
	float VoxelSize; // 0x30c(0x04)
	float VoxelSmoothing; // 0x310(0x04)
	float ExteriorNormalSmoothing; // 0x314(0x04)
	int32_t DebugInfoOutputMode; // 0x318(0x04)
	int32_t VoxelLife; // 0x31c(0x04)
	int32_t VoxelInstanceSeed; // 0x320(0x04)
	bool bUseVoxelCache; // 0x324(0x01)
	bool bUseComplexCache; // 0x325(0x01)
	char pad_326[0x2]; // 0x326(0x02)
	float AutoDestroyPercentage; // 0x328(0x04)
	char pad_32C[0x8]; // 0x32c(0x08)
	float ResourceVolume; // 0x334(0x04)
	float TotalResourceCount; // 0x338(0x04)
	char pad_33C[0xa4]; // 0x33c(0xa4)
	struct TArray<struct FMinedSphere> MinedSpheres; // 0x3e0(0x10)
	char pad_3F0[0x10]; // 0x3f0(0x10)
	struct UMaterialInterface* MiningDecalMaterial; // 0x400(0x08)
	char pad_408[0x84]; // 0x408(0x84)
	bool bUseVertexColourMasks; // 0x48c(0x01)
	char pad_48D[0x3]; // 0x48d(0x03)
	float UVProjectionIslandDetectionRadius; // 0x490(0x04)
	char pad_494[0xe]; // 0x494(0x0e)
	bool bVoxelFullyMined; // 0x4a2(0x01)
	char pad_4A3[0x5]; // 0x4a3(0x05)
	struct UFLODActorComponent* FLODActorComponent; // 0x4a8(0x08)

	void SetupResourceMaterials(struct UMaterialInterface* Material); // Function Icarus.VoxelResource.SetupResourceMaterials // (Event|Public|BlueprintEvent) // @ game+0x1a38c80
	void ResourcesMined(float ResourceMinedCount, struct AIcarusPlayerController* LastHitPlayerController); // Function Icarus.VoxelResource.ResourcesMined // (Native|Event|Public|BlueprintEvent) // @ game+0x15fbe70
	void ReadOrGenerateVoxelCache(); // Function Icarus.VoxelResource.ReadOrGenerateVoxelCache // (Final|Native|Public|BlueprintCallable) // @ game+0x1704b20
	void OnRep_MinedSphereAdded(); // Function Icarus.VoxelResource.OnRep_MinedSphereAdded // (Final|Native|Private) // @ game+0x1704b00
	void Initialise(); // Function Icarus.VoxelResource.Initialise // (Final|Native|Public|BlueprintCallable) // @ game+0x1703c20
	float GetRemainingResources(); // Function Icarus.VoxelResource.GetRemainingResources // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1703740
	struct TArray<struct FVoxelMinedSphere> GetMinedSpheres(); // Function Icarus.VoxelResource.GetMinedSpheres // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x17036c0
	void ChangeDebugCoordinate(struct FIntVector Coordinate); // Function Icarus.VoxelResource.ChangeDebugCoordinate // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x17031d0
	void AddMinedSpheres(struct TArray<struct FVoxelMinedSphere> Spheres); // Function Icarus.VoxelResource.AddMinedSpheres // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17027c0
};

// Class Icarus.VoxelResourceDistribution
// Size: 0xc0 (Inherited: 0xb0)
struct UVoxelResourceDistribution : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)

	void SetDistributionSeed(int32_t Seed); // Function Icarus.VoxelResourceDistribution.SetDistributionSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1704e00
};

// Class Icarus.VoxelSetupDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVoxelSetupDataLibrary : URowLibrary {

	struct FVoxelSetupDataRowHandle StructToRowHandle(struct FVoxelSetupDataEnum EnumValue); // Function Icarus.VoxelSetupDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1705110
	struct FName StructToName(struct FVoxelSetupDataEnum EnumValue); // Function Icarus.VoxelSetupDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704fd0
	int32_t StructToInt(struct FVoxelSetupDataEnum EnumValue); // Function Icarus.VoxelSetupDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704e90
	struct FVoxelSetupDataEnum RowHandleToStruct(struct FVoxelSetupDataRowHandle RowHandle); // Function Icarus.VoxelSetupDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704c80
	void RemoveRowFromVoxelSetupDataTable(struct FName Name); // Function Icarus.VoxelSetupDataLibrary.RemoveRowFromVoxelSetupDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1704b80
	void RefreshConstants(); // Function Icarus.VoxelSetupDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1704b40
	int32_t NumRows(); // Function Icarus.VoxelSetupDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704aa0
	bool NotEqual_EnumName(struct FVoxelSetupDataEnum A, struct FName B); // Function Icarus.VoxelSetupDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17048c0
	bool NotEqual_EnumEnum(struct FVoxelSetupDataEnum A, struct FVoxelSetupDataEnum B); // Function Icarus.VoxelSetupDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17046e0
	struct FVoxelSetupDataEnum NameToStruct(struct FName NameValue); // Function Icarus.VoxelSetupDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17045c0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.VoxelSetupDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17044a0
	struct FVoxelSetupDataRowHandle MakeVoxelSetupDataFromIndex(int32_t Index); // Function Icarus.VoxelSetupDataLibrary.MakeVoxelSetupDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704260
	struct FVoxelSetupDataEnum MakeVoxelSetupDataEnum(struct FVoxelSetupDataEnum Enum); // Function Icarus.VoxelSetupDataLibrary.MakeVoxelSetupDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17041e0
	struct FVoxelSetupDataRowHandle MakeVoxelSetupData(struct FName RowName); // Function Icarus.VoxelSetupDataLibrary.MakeVoxelSetupData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704140
	struct FVoxelSetupDataRowHandle MakeLiteralVoxelSetupData(struct FVoxelSetupDataRowHandle RowHandle); // Function Icarus.VoxelSetupDataLibrary.MakeLiteralVoxelSetupData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703fa0
	bool IsValidName(struct FName NameValue); // Function Icarus.VoxelSetupDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1703e80
	struct FVoxelSetupDataEnum IntToStruct(int32_t IntValue); // Function Icarus.VoxelSetupDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703d60
	struct FName IntToName(int32_t IntValue); // Function Icarus.VoxelSetupDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1703c40
	void GetVoxelSetupDataStruct(struct FVoxelSetupDataRowHandle RowHandle, struct FVoxelSetupData VoxelSetupData, enum class EValid Paths); // Function Icarus.VoxelSetupDataLibrary.GetVoxelSetupDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1703770
	bool EqualEqual_FVoxelSetupDataRowHandleFVoxelSetupDataRowHandle(struct FVoxelSetupDataRowHandle RowHandleA, struct FVoxelSetupDataRowHandle RowHandleB); // Function Icarus.VoxelSetupDataLibrary.EqualEqual_FVoxelSetupDataRowHandleFVoxelSetupDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703440
	bool EqualEqual_EnumEnum(struct FVoxelSetupDataEnum A, struct FVoxelSetupDataEnum B); // Function Icarus.VoxelSetupDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703260
	struct FVoxelSetupDataRowHandle CastToVoxelSetupDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.VoxelSetupDataLibrary.CastToVoxelSetupDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1702f90
	void BreakVoxelSetupDataEnum(struct FVoxelSetupDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.VoxelSetupDataLibrary.BreakVoxelSetupDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1702cd0
	void AddRowToVoxelSetupDataTable(struct FName Name, struct FVoxelSetupData Data, struct FVoxelSetupDataRowHandle NewRow); // Function Icarus.VoxelSetupDataLibrary.AddRowToVoxelSetupDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1702870
};

// Class Icarus.VoxelSetupDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UVoxelSetupDataTable : UIcarusDataTable {
};

// Class Icarus.WaterComponent
// Size: 0x100 (Inherited: 0x100)
struct UWaterComponent : UResourceNetworkComponent {

	bool GetWaterData(struct FWaterData OutData); // Function Icarus.WaterComponent.GetWaterData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1703900
};

// Class Icarus.WaterLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWaterLibrary : URowLibrary {

	struct FWaterRowHandle StructToRowHandle(struct FWaterEnum EnumValue); // Function Icarus.WaterLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17051c0
	struct FName StructToName(struct FWaterEnum EnumValue); // Function Icarus.WaterLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1705070
	int32_t StructToInt(struct FWaterEnum EnumValue); // Function Icarus.WaterLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704f30
	struct FWaterEnum RowHandleToStruct(struct FWaterRowHandle RowHandle); // Function Icarus.WaterLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704d40
	void RemoveRowFromWaterTable(struct FName Name); // Function Icarus.WaterLibrary.RemoveRowFromWaterTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1704c00
	void RefreshConstants(); // Function Icarus.WaterLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1704b60
	int32_t NumRows(); // Function Icarus.WaterLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704ad0
	bool NotEqual_EnumName(struct FWaterEnum A, struct FName B); // Function Icarus.WaterLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17049b0
	bool NotEqual_EnumEnum(struct FWaterEnum A, struct FWaterEnum B); // Function Icarus.WaterLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17047d0
	struct FWaterEnum NameToStruct(struct FName NameValue); // Function Icarus.WaterLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704650
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WaterLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1704530
	struct FWaterRowHandle MakeWaterFromIndex(int32_t Index); // Function Icarus.WaterLibrary.MakeWaterFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704410
	struct FWaterEnum MakeWaterEnum(struct FWaterEnum Enum); // Function Icarus.WaterLibrary.MakeWaterEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704390
	struct FWaterRowHandle MakeWater(struct FName RowName); // Function Icarus.WaterLibrary.MakeWater // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17042f0
	struct FWaterRowHandle MakeLiteralWater(struct FWaterRowHandle RowHandle); // Function Icarus.WaterLibrary.MakeLiteralWater // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1704070
	bool IsValidName(struct FName NameValue); // Function Icarus.WaterLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1703f10
	struct FWaterEnum IntToStruct(int32_t IntValue); // Function Icarus.WaterLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703df0
	struct FName IntToName(int32_t IntValue); // Function Icarus.WaterLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1703cd0
	void GetWaterStruct(struct FWaterRowHandle RowHandle, struct FWaterData Water, enum class EValid Paths); // Function Icarus.WaterLibrary.GetWaterStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1703aa0
	bool EqualEqual_FWaterRowHandleFWaterRowHandle(struct FWaterRowHandle RowHandleA, struct FWaterRowHandle RowHandleB); // Function Icarus.WaterLibrary.EqualEqual_FWaterRowHandleFWaterRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703580
	bool EqualEqual_EnumEnum(struct FWaterEnum A, struct FWaterEnum B); // Function Icarus.WaterLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1703350
	struct FWaterRowHandle CastToWaterRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WaterLibrary.CastToWaterRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17030b0
	void BreakWaterEnum(struct FWaterEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WaterLibrary.BreakWaterEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1702e30
	void AddRowToWaterTable(struct FName Name, struct FWaterData Data, struct FWaterRowHandle NewRow); // Function Icarus.WaterLibrary.AddRowToWaterTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1702af0
};

// Class Icarus.WaterSetupLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWaterSetupLibrary : URowLibrary {

	struct FWaterSetupRowHandle StructToRowHandle(struct FWaterSetupEnum EnumValue); // Function Icarus.WaterSetupLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709ef0
	struct FName StructToName(struct FWaterSetupEnum EnumValue); // Function Icarus.WaterSetupLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709db0
	int32_t StructToInt(struct FWaterSetupEnum EnumValue); // Function Icarus.WaterSetupLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709c70
	struct FWaterSetupEnum RowHandleToStruct(struct FWaterSetupRowHandle RowHandle); // Function Icarus.WaterSetupLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709ad0
	void RemoveRowFromWaterSetupTable(struct FName Name); // Function Icarus.WaterSetupLibrary.RemoveRowFromWaterSetupTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x17099d0
	void RefreshConstants(); // Function Icarus.WaterSetupLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17098a0
	int32_t NumRows(); // Function Icarus.WaterSetupLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709820
	bool NotEqual_EnumName(struct FWaterSetupEnum A, struct FName B); // Function Icarus.WaterSetupLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709640
	bool NotEqual_EnumEnum(struct FWaterSetupEnum A, struct FWaterSetupEnum B); // Function Icarus.WaterSetupLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709460
	struct FWaterSetupEnum NameToStruct(struct FName NameValue); // Function Icarus.WaterSetupLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709340
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WaterSetupLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1709220
	struct FWaterSetupRowHandle MakeWaterSetupFromIndex(int32_t Index); // Function Icarus.WaterSetupLibrary.MakeWaterSetupFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708fe0
	struct FWaterSetupEnum MakeWaterSetupEnum(struct FWaterSetupEnum Enum); // Function Icarus.WaterSetupLibrary.MakeWaterSetupEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708f60
	struct FWaterSetupRowHandle MakeWaterSetup(struct FName RowName); // Function Icarus.WaterSetupLibrary.MakeWaterSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708ec0
	struct FWaterSetupRowHandle MakeLiteralWaterSetup(struct FWaterSetupRowHandle RowHandle); // Function Icarus.WaterSetupLibrary.MakeLiteralWaterSetup // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708d20
	bool IsValidName(struct FName NameValue); // Function Icarus.WaterSetupLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1708c00
	struct FWaterSetupEnum IntToStruct(int32_t IntValue); // Function Icarus.WaterSetupLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708ae0
	struct FName IntToName(int32_t IntValue); // Function Icarus.WaterSetupLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x17089c0
	void GetWaterSetupStruct(struct FWaterSetupRowHandle RowHandle, struct FWaterSetup WaterSetup, enum class EValid Paths); // Function Icarus.WaterSetupLibrary.GetWaterSetupStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1708480
	bool EqualEqual_FWaterSetupRowHandleFWaterSetupRowHandle(struct FWaterSetupRowHandle RowHandleA, struct FWaterSetupRowHandle RowHandleB); // Function Icarus.WaterSetupLibrary.EqualEqual_FWaterSetupRowHandleFWaterSetupRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708080
	bool EqualEqual_EnumEnum(struct FWaterSetupEnum A, struct FWaterSetupEnum B); // Function Icarus.WaterSetupLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1707ea0
	struct FWaterSetupRowHandle CastToWaterSetupRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WaterSetupLibrary.CastToWaterSetupRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1707c60
	void BreakWaterSetupEnum(struct FWaterSetupEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WaterSetupLibrary.BreakWaterSetupEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x17079a0
	void AddRowToWaterSetupTable(struct FName Name, struct FWaterSetup Data, struct FWaterSetupRowHandle NewRow); // Function Icarus.WaterSetupLibrary.AddRowToWaterSetupTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17074d0
};

// Class Icarus.WaterSetupTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWaterSetupTable : UIcarusDataTable {
};

// Class Icarus.WaterTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWaterTable : UIcarusDataTable {
};

// Class Icarus.WeatherActionsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherActionsLibrary : URowLibrary {

	struct FWeatherActionsRowHandle StructToRowHandle(struct FWeatherActionsEnum EnumValue); // Function Icarus.WeatherActionsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709fa0
	struct FName StructToName(struct FWeatherActionsEnum EnumValue); // Function Icarus.WeatherActionsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709e50
	int32_t StructToInt(struct FWeatherActionsEnum EnumValue); // Function Icarus.WeatherActionsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709d10
	struct FWeatherActionsEnum RowHandleToStruct(struct FWeatherActionsRowHandle RowHandle); // Function Icarus.WeatherActionsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709b90
	void RemoveRowFromWeatherActionsTable(struct FName Name); // Function Icarus.WeatherActionsLibrary.RemoveRowFromWeatherActionsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1709a50
	void RefreshConstants(); // Function Icarus.WeatherActionsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x17098c0
	int32_t NumRows(); // Function Icarus.WeatherActionsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709850
	bool NotEqual_EnumName(struct FWeatherActionsEnum A, struct FName B); // Function Icarus.WeatherActionsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709730
	bool NotEqual_EnumEnum(struct FWeatherActionsEnum A, struct FWeatherActionsEnum B); // Function Icarus.WeatherActionsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709550
	struct FWeatherActionsEnum NameToStruct(struct FName NameValue); // Function Icarus.WeatherActionsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17093d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WeatherActionsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17092b0
	struct FWeatherActionsRowHandle MakeWeatherActionsFromIndex(int32_t Index); // Function Icarus.WeatherActionsLibrary.MakeWeatherActionsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709190
	struct FWeatherActionsEnum MakeWeatherActionsEnum(struct FWeatherActionsEnum Enum); // Function Icarus.WeatherActionsLibrary.MakeWeatherActionsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709110
	struct FWeatherActionsRowHandle MakeWeatherActions(struct FName RowName); // Function Icarus.WeatherActionsLibrary.MakeWeatherActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1709070
	struct FWeatherActionsRowHandle MakeLiteralWeatherActions(struct FWeatherActionsRowHandle RowHandle); // Function Icarus.WeatherActionsLibrary.MakeLiteralWeatherActions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708df0
	bool IsValidName(struct FName NameValue); // Function Icarus.WeatherActionsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1708c90
	struct FWeatherActionsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherActionsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1708b70
	struct FName IntToName(int32_t IntValue); // Function Icarus.WeatherActionsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1708a50
	void GetWeatherActionsStruct(struct FWeatherActionsRowHandle RowHandle, struct FIcarusWeatherActionData WeatherActions, enum class EValid Paths); // Function Icarus.WeatherActionsLibrary.GetWeatherActionsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1708640
	bool EqualEqual_FWeatherActionsRowHandleFWeatherActionsRowHandle(struct FWeatherActionsRowHandle RowHandleA, struct FWeatherActionsRowHandle RowHandleB); // Function Icarus.WeatherActionsLibrary.EqualEqual_FWeatherActionsRowHandleFWeatherActionsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17081c0
	bool EqualEqual_EnumEnum(struct FWeatherActionsEnum A, struct FWeatherActionsEnum B); // Function Icarus.WeatherActionsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1707f90
	struct FWeatherActionsRowHandle CastToWeatherActionsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WeatherActionsLibrary.CastToWeatherActionsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1707d80
	void BreakWeatherActionsEnum(struct FWeatherActionsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WeatherActionsLibrary.BreakWeatherActionsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1707b00
	void AddRowToWeatherActionsTable(struct FName Name, struct FIcarusWeatherActionData Data, struct FWeatherActionsRowHandle NewRow); // Function Icarus.WeatherActionsLibrary.AddRowToWeatherActionsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1707680
};

// Class Icarus.WeatherActionsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherActionsTable : UIcarusDataTable {
};

// Class Icarus.WeatherAudioComponent
// Size: 0x200 (Inherited: 0x200)
struct UWeatherAudioComponent : USceneComponent {
};

// Class Icarus.WeatherController
// Size: 0x2d0 (Inherited: 0x220)
struct AWeatherController : AInfo {
	struct FMulticastSparseDelegate WeatherUpdated; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	struct FMulticastInlineDelegate OnWeatherEventStarted; // 0x228(0x10)
	struct FMulticastInlineDelegate OnWeatherEventCompleted; // 0x238(0x10)
	float UpdateCycle; // 0x248(0x04)
	float CurrentUpdateTime; // 0x24c(0x04)
	struct TMap<struct FName, struct FActorCollection> BiomeToActor; // 0x250(0x50)
	struct TArray<struct FActiveWeatherInfo> CurrentWeather; // 0x2a0(0x10)
	struct TArray<struct FActiveWeatherInfo> WeatherToRemove; // 0x2b0(0x10)
	struct UWeatherControllerRecorderComponent* Recorder; // 0x2c0(0x08)
	struct UIcarusStatContainer* StatContainer; // 0x2c8(0x08)

	void WeatherEventCompleted(struct UIcarusWeatherAction* ActionComplete); // Function Icarus.WeatherController.WeatherEventCompleted // (Final|Native|Private) // @ game+0x170a1c0
	void UpdateWeather(float Delta); // Function Icarus.WeatherController.UpdateWeather // (Final|Native|Private) // @ game+0x170a140
	bool UnregisterActor(struct AIcarusActor* Actor, struct FBiomesRowHandle Biome); // Function Icarus.WeatherController.UnregisterActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170a050
	void SetWorldStats(); // Function Icarus.WeatherController.SetWorldStats // (Final|Native|Protected) // @ game+0x1709c50
	void RestoreWeatherFromDatabase(struct FBiomesRowHandle BiomeRow, struct FWeatherEventsRowHandle WeatherRow, int32_t StartTime); // Function Icarus.WeatherController.RestoreWeatherFromDatabase // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1a38c80
	bool RegisterActor(struct AIcarusActor* Actor, struct FBiomesRowHandle Biome); // Function Icarus.WeatherController.RegisterActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17098e0
	void OnRep_CurrentWeather(); // Function Icarus.WeatherController.OnRep_CurrentWeather // (Final|Native|Private) // @ game+0x1709880
	bool HasActiveStorm(struct FBiomesRowHandle BiomeRow); // Function Icarus.WeatherController.HasActiveStorm // (Final|Native|Public|HasOutParms) // @ game+0x1708910
	struct FWeatherEventsRowHandle GetWeatherEventForBiome(struct FBiomesRowHandle Biome, bool bHasWeatherEvent); // Function Icarus.WeatherController.GetWeatherEventForBiome // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17087e0
	struct FActiveWeatherInfo GetActiveWeatherInfoForBiome(struct FBiomesRowHandle Biome, enum class EValid OutValidity); // Function Icarus.WeatherController.GetActiveWeatherInfoForBiome // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1708300
	bool AddWeatherEvent(struct FBiomesRowHandle Biome, struct FWeatherEventsRowHandle Event, int32_t StartTime); // Function Icarus.WeatherController.AddWeatherEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1707810
};

// Class Icarus.WeatherControllerRecorderComponent
// Size: 0xe8 (Inherited: 0xd8)
struct UWeatherControllerRecorderComponent : UIcarusStateRecorderComponent {
	struct TArray<struct FRecordedWeatherEvent> LatestWeatherEvents; // 0xd8(0x10)
};

// Class Icarus.WeatherEventsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherEventsLibrary : URowLibrary {

	struct FWeatherEventsRowHandle StructToRowHandle(struct FWeatherEventsEnum EnumValue); // Function Icarus.WeatherEventsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1710660
	struct FName StructToName(struct FWeatherEventsEnum EnumValue); // Function Icarus.WeatherEventsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1710520
	int32_t StructToInt(struct FWeatherEventsEnum EnumValue); // Function Icarus.WeatherEventsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17103e0
	struct FWeatherEventsEnum RowHandleToStruct(struct FWeatherEventsRowHandle RowHandle); // Function Icarus.WeatherEventsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170f020
	void RemoveRowFromWeatherEventsTable(struct FName Name); // Function Icarus.WeatherEventsLibrary.RemoveRowFromWeatherEventsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x170ef20
	void RefreshConstants(); // Function Icarus.WeatherEventsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x170eee0
	int32_t NumRows(); // Function Icarus.WeatherEventsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ee60
	bool NotEqual_EnumName(struct FWeatherEventsEnum A, struct FName B); // Function Icarus.WeatherEventsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ec80
	bool NotEqual_EnumEnum(struct FWeatherEventsEnum A, struct FWeatherEventsEnum B); // Function Icarus.WeatherEventsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170eaa0
	struct FWeatherEventsEnum NameToStruct(struct FName NameValue); // Function Icarus.WeatherEventsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e980
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WeatherEventsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x170e860
	struct FWeatherEventsRowHandle MakeWeatherEventsFromIndex(int32_t Index); // Function Icarus.WeatherEventsLibrary.MakeWeatherEventsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e620
	struct FWeatherEventsEnum MakeWeatherEventsEnum(struct FWeatherEventsEnum Enum); // Function Icarus.WeatherEventsLibrary.MakeWeatherEventsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e5a0
	struct FWeatherEventsRowHandle MakeWeatherEvents(struct FName RowName); // Function Icarus.WeatherEventsLibrary.MakeWeatherEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e500
	struct FWeatherEventsRowHandle MakeLiteralWeatherEvents(struct FWeatherEventsRowHandle RowHandle); // Function Icarus.WeatherEventsLibrary.MakeLiteralWeatherEvents // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e360
	bool IsValidName(struct FName NameValue); // Function Icarus.WeatherEventsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x170e240
	struct FWeatherEventsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherEventsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e120
	struct FName IntToName(int32_t IntValue); // Function Icarus.WeatherEventsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x170e000
	void GetWeatherEventsStruct(struct FWeatherEventsRowHandle RowHandle, struct FIcarusWeatherEvent WeatherEvents, enum class EValid Paths); // Function Icarus.WeatherEventsLibrary.GetWeatherEventsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170d730
	bool EqualEqual_FWeatherEventsRowHandleFWeatherEventsRowHandle(struct FWeatherEventsRowHandle RowHandleA, struct FWeatherEventsRowHandle RowHandleB); // Function Icarus.WeatherEventsLibrary.EqualEqual_FWeatherEventsRowHandleFWeatherEventsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cd10
	bool EqualEqual_EnumEnum(struct FWeatherEventsEnum A, struct FWeatherEventsEnum B); // Function Icarus.WeatherEventsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cb30
	struct FWeatherEventsRowHandle CastToWeatherEventsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WeatherEventsLibrary.CastToWeatherEventsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170c8f0
	void BreakWeatherEventsEnum(struct FWeatherEventsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WeatherEventsLibrary.BreakWeatherEventsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x170c630
	void AddRowToWeatherEventsTable(struct FName Name, struct FIcarusWeatherEvent Data, struct FWeatherEventsRowHandle NewRow); // Function Icarus.WeatherEventsLibrary.AddRowToWeatherEventsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170bce0
};

// Class Icarus.WeatherEventsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherEventsTable : UIcarusDataTable {
};

// Class Icarus.WeatherManagerComponent
// Size: 0x168 (Inherited: 0xb0)
struct UWeatherManagerComponent : UActorComponent {
	struct TArray<struct FWeatherGameplayData> GameplayWeatherArray; // 0xb0(0x10)
	char pad_C0[0xa0]; // 0xc0(0xa0)
	struct FMulticastSparseDelegate WeatherGameplayUpdated; // 0x160(0x01)
	struct FMulticastSparseDelegate WeatherVisualUpdated; // 0x161(0x01)
	char pad_162[0x6]; // 0x162(0x06)

	void SetWindStrength(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetWindStrength // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17102f0
	void SetWindSpeed(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetWindSpeed // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1710200
	void SetWindGust(struct FBiomesEnum Biome, float WindGust); // Function Icarus.WeatherManagerComponent.SetWindGust // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1710110
	void SetWindForce(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetWindForce // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1710020
	void SetWindDirection(struct FBiomesEnum Biome, struct FVector Direction); // Function Icarus.WeatherManagerComponent.SetWindDirection // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x170ff20
	void SetWeatherWarningMessage(struct FBiomesEnum Biome, struct FText Message); // Function Icarus.WeatherManagerComponent.SetWeatherWarningMessage // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170fdd0
	void SetVisualWeather(struct FBiomesEnum Biome, struct FWeatherVisualData VisualData); // Function Icarus.WeatherManagerComponent.SetVisualWeather // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170fcb0
	void SetThunderAmount(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetThunderAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170fbc0
	void SetTemperatureModifier(struct FBiomesEnum Biome, int32_t Amount); // Function Icarus.WeatherManagerComponent.SetTemperatureModifier // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170fad0
	void SetSnowStormAmount(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetSnowStormAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f9e0
	void SetSnowAmount(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetSnowAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f8f0
	void SetSandAmount(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetSandAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f800
	void SetRainAmount(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetRainAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f710
	void SetGameplayWeather(struct FBiomesEnum Biome, struct FWeatherGameplayData GameplayData); // Function Icarus.WeatherManagerComponent.SetGameplayWeather // (Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f560
	void SetFogExtinction(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetFogExtinction // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f470
	void SetFogDensity(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetFogDensity // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f380
	void SetDebris(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetDebris // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f290
	void SetCloudyAmount(struct FBiomesEnum Biome, float Amount); // Function Icarus.WeatherManagerComponent.SetCloudyAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170f1a0
	void OnRep_GameplayWeatherArray(); // Function Icarus.WeatherManagerComponent.OnRep_GameplayWeatherArray // (Final|Native|Protected) // @ game+0x170eec0
	float GetWindStrength(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetWindStrength // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170df50
	float GetWindSpeed(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetWindSpeed // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170dea0
	float GetWindGust(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetWindGust // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170ddf0
	float GetWindForce(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetWindForce // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170dd40
	struct FVector GetWindDirection(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetWindDirection // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x170dc80
	struct FText GetWeatherWarningMessage(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetWeatherWarningMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170db70
	struct FWeatherVisualData GetVisualWeather(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetVisualWeather // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d670
	float GetThunderAmount(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetThunderAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d5c0
	int32_t GetTemperatureModifier(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetTemperatureModifier // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d510
	float GetSnowStormAmount(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetSnowStormAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d460
	float GetSnowAmount(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetSnowAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d3b0
	float GetSandAmount(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetSandAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d300
	float GetRainAmount(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetRainAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d250
	float GetFogExtinction(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetFogExtinction // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d1a0
	float GetFogDensity(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetFogDensity // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d0f0
	float GetDebris(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetDebris // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170d040
	float GetCloudyAmount(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.GetCloudyAmount // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170cf90
	struct FWeatherGameplayData BP_GetGameplayWeather(struct FBiomesEnum Biome); // Function Icarus.WeatherManagerComponent.BP_GetGameplayWeather // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x170c500
};

// Class Icarus.WeatherPoolsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeatherPoolsLibrary : URowLibrary {

	struct FWeatherPoolsRowHandle StructToRowHandle(struct FWeatherPoolsEnum EnumValue); // Function Icarus.WeatherPoolsLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1710710
	struct FName StructToName(struct FWeatherPoolsEnum EnumValue); // Function Icarus.WeatherPoolsLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17105c0
	int32_t StructToInt(struct FWeatherPoolsEnum EnumValue); // Function Icarus.WeatherPoolsLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1710480
	struct FWeatherPoolsEnum RowHandleToStruct(struct FWeatherPoolsRowHandle RowHandle); // Function Icarus.WeatherPoolsLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170f0e0
	void RemoveRowFromWeatherPoolsTable(struct FName Name); // Function Icarus.WeatherPoolsLibrary.RemoveRowFromWeatherPoolsTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x170efa0
	void RefreshConstants(); // Function Icarus.WeatherPoolsLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x170ef00
	int32_t NumRows(); // Function Icarus.WeatherPoolsLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ee90
	bool NotEqual_EnumName(struct FWeatherPoolsEnum A, struct FName B); // Function Icarus.WeatherPoolsLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ed70
	bool NotEqual_EnumEnum(struct FWeatherPoolsEnum A, struct FWeatherPoolsEnum B); // Function Icarus.WeatherPoolsLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170eb90
	struct FWeatherPoolsEnum NameToStruct(struct FName NameValue); // Function Icarus.WeatherPoolsLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ea10
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WeatherPoolsLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x170e8f0
	struct FWeatherPoolsRowHandle MakeWeatherPoolsFromIndex(int32_t Index); // Function Icarus.WeatherPoolsLibrary.MakeWeatherPoolsFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e7d0
	struct FWeatherPoolsEnum MakeWeatherPoolsEnum(struct FWeatherPoolsEnum Enum); // Function Icarus.WeatherPoolsLibrary.MakeWeatherPoolsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e750
	struct FWeatherPoolsRowHandle MakeWeatherPools(struct FName RowName); // Function Icarus.WeatherPoolsLibrary.MakeWeatherPools // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e6b0
	struct FWeatherPoolsRowHandle MakeLiteralWeatherPools(struct FWeatherPoolsRowHandle RowHandle); // Function Icarus.WeatherPoolsLibrary.MakeLiteralWeatherPools // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e430
	bool IsValidName(struct FName NameValue); // Function Icarus.WeatherPoolsLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x170e2d0
	struct FWeatherPoolsEnum IntToStruct(int32_t IntValue); // Function Icarus.WeatherPoolsLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170e1b0
	struct FName IntToName(int32_t IntValue); // Function Icarus.WeatherPoolsLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x170e090
	void GetWeatherPoolsStruct(struct FWeatherPoolsRowHandle RowHandle, struct FIcarusWeatherPoolData WeatherPools, enum class EValid Paths); // Function Icarus.WeatherPoolsLibrary.GetWeatherPoolsStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170d9e0
	bool EqualEqual_FWeatherPoolsRowHandleFWeatherPoolsRowHandle(struct FWeatherPoolsRowHandle RowHandleA, struct FWeatherPoolsRowHandle RowHandleB); // Function Icarus.WeatherPoolsLibrary.EqualEqual_FWeatherPoolsRowHandleFWeatherPoolsRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170ce50
	bool EqualEqual_EnumEnum(struct FWeatherPoolsEnum A, struct FWeatherPoolsEnum B); // Function Icarus.WeatherPoolsLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x170cc20
	struct FWeatherPoolsRowHandle CastToWeatherPoolsRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WeatherPoolsLibrary.CastToWeatherPoolsRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170ca10
	void BreakWeatherPoolsEnum(struct FWeatherPoolsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WeatherPoolsLibrary.BreakWeatherPoolsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x170c790
	void AddRowToWeatherPoolsTable(struct FName Name, struct FIcarusWeatherPoolData Data, struct FWeatherPoolsRowHandle NewRow); // Function Icarus.WeatherPoolsLibrary.AddRowToWeatherPoolsTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x170c2d0
};

// Class Icarus.WeatherPoolsTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeatherPoolsTable : UIcarusDataTable {
};

// Class Icarus.WeightComponent
// Size: 0xf0 (Inherited: 0xd0)
struct UWeightComponent : UTraitComponent {
	struct TArray<struct UShapeComponent*> WeightSpreadingShapes; // 0xd0(0x10)
	struct TArray<struct AActor*> AboveActors; // 0xe0(0x10)

	bool GetWeightData(struct FWeightData OutData); // Function Icarus.WeightComponent.GetWeightData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x17146e0
};

// Class Icarus.WeightedListFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeightedListFunctionLibrary : UBlueprintFunctionLibrary {

	void Roll(int32_t UID, float NewAccumulated); // Function Icarus.WeightedListFunctionLibrary.Roll // (Final|Native|Static|Private) // @ game+0x1715de0
	bool RemoveList(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.RemoveList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1715c50
	struct FRandomStream InitStream(); // Function Icarus.WeightedListFunctionLibrary.InitStream // (Final|Native|Static|Private|HasDefaults) // @ game+0x1714c80
	struct TMap<int32_t, struct FStoredElement> InitListMap(); // Function Icarus.WeightedListFunctionLibrary.InitListMap // (Final|Native|Static|Private) // @ game+0x1714b90
	struct FWeightedListElement GetSelectedElement(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.GetSelectedElement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1714600
	float GetRoll(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.GetRoll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1714570
	int32_t CreateNewList(int32_t Seed); // Function Icarus.WeightedListFunctionLibrary.CreateNewList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1713ff0
	bool ClearList(int32_t UID); // Function Icarus.WeightedListFunctionLibrary.ClearList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1713f60
	bool AddElement(int32_t UID, struct FWeightedListElement NewElement); // Function Icarus.WeightedListFunctionLibrary.AddElement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1713460
};

// Class Icarus.WeightLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWeightLibrary : URowLibrary {

	struct FWeightRowHandle StructToRowHandle(struct FWeightEnum EnumValue); // Function Icarus.WeightLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17162a0
	struct FName StructToName(struct FWeightEnum EnumValue); // Function Icarus.WeightLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1716160
	int32_t StructToInt(struct FWeightEnum EnumValue); // Function Icarus.WeightLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1716020
	struct FWeightEnum RowHandleToStruct(struct FWeightRowHandle RowHandle); // Function Icarus.WeightLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715ea0
	void RemoveRowFromWeightTable(struct FName Name); // Function Icarus.WeightLibrary.RemoveRowFromWeightTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1715ce0
	void RefreshConstants(); // Function Icarus.WeightLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1715c10
	int32_t NumRows(); // Function Icarus.WeightLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715bb0
	bool NotEqual_EnumName(struct FWeightEnum A, struct FName B); // Function Icarus.WeightLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17159d0
	bool NotEqual_EnumEnum(struct FWeightEnum A, struct FWeightEnum B); // Function Icarus.WeightLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17157f0
	struct FWeightEnum NameToStruct(struct FName NameValue); // Function Icarus.WeightLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17156d0
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WeightLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x17155b0
	struct FWeightRowHandle MakeWeightFromIndex(int32_t Index); // Function Icarus.WeightLibrary.MakeWeightFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17152e0
	struct FWeightEnum MakeWeightEnum(struct FWeightEnum Enum); // Function Icarus.WeightLibrary.MakeWeightEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715260
	struct FWeightRowHandle MakeWeight(struct FName RowName); // Function Icarus.WeightLibrary.MakeWeight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17151c0
	struct FWeightRowHandle MakeLiteralWeight(struct FWeightRowHandle RowHandle); // Function Icarus.WeightLibrary.MakeLiteralWeight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715020
	bool IsValidName(struct FName NameValue); // Function Icarus.WeightLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1714f00
	struct FWeightEnum IntToStruct(int32_t IntValue); // Function Icarus.WeightLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714de0
	struct FName IntToName(int32_t IntValue); // Function Icarus.WeightLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1714cc0
	void GetWeightStruct(struct FWeightRowHandle RowHandle, struct FWeightData Weight, enum class EValid Paths); // Function Icarus.WeightLibrary.GetWeightStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1714880
	bool EqualEqual_FWeightRowHandleFWeightRowHandle(struct FWeightRowHandle RowHandleA, struct FWeightRowHandle RowHandleB); // Function Icarus.WeightLibrary.EqualEqual_FWeightRowHandleFWeightRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714260
	bool EqualEqual_EnumEnum(struct FWeightEnum A, struct FWeightEnum B); // Function Icarus.WeightLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714080
	struct FWeightRowHandle CastToWeightRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WeightLibrary.CastToWeightRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1713d20
	void BreakWeightEnum(struct FWeightEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WeightLibrary.BreakWeightEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1713900
	void AddRowToWeightTable(struct FName Name, struct FWeightData Data, struct FWeightRowHandle NewRow); // Function Icarus.WeightLibrary.AddRowToWeightTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x17135a0
};

// Class Icarus.WeightTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWeightTable : UIcarusDataTable {
};

// Class Icarus.WorldDataLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWorldDataLibrary : URowLibrary {

	struct FWorldDataRowHandle StructToRowHandle(struct FWorldDataEnum EnumValue); // Function Icarus.WorldDataLibrary.StructToRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1716350
	struct FName StructToName(struct FWorldDataEnum EnumValue); // Function Icarus.WorldDataLibrary.StructToName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1716200
	int32_t StructToInt(struct FWorldDataEnum EnumValue); // Function Icarus.WorldDataLibrary.StructToInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17160c0
	struct FWorldDataEnum RowHandleToStruct(struct FWorldDataRowHandle RowHandle); // Function Icarus.WorldDataLibrary.RowHandleToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715f60
	void RemoveRowFromWorldDataTable(struct FName Name); // Function Icarus.WorldDataLibrary.RemoveRowFromWorldDataTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1715d60
	void RefreshConstants(); // Function Icarus.WorldDataLibrary.RefreshConstants // (Final|Native|Static|Public) // @ game+0x1715c30
	int32_t NumRows(); // Function Icarus.WorldDataLibrary.NumRows // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715be0
	bool NotEqual_EnumName(struct FWorldDataEnum A, struct FName B); // Function Icarus.WorldDataLibrary.NotEqual_EnumName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715ac0
	bool NotEqual_EnumEnum(struct FWorldDataEnum A, struct FWorldDataEnum B); // Function Icarus.WorldDataLibrary.NotEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17158e0
	struct FWorldDataEnum NameToStruct(struct FName NameValue); // Function Icarus.WorldDataLibrary.NameToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715760
	int32_t NameToInt(struct FName NameValue); // Function Icarus.WorldDataLibrary.NameToInt // (Final|Native|Static|Public) // @ game+0x1715640
	struct FWorldDataRowHandle MakeWorldDataFromIndex(int32_t Index); // Function Icarus.WorldDataLibrary.MakeWorldDataFromIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715490
	struct FWorldDataEnum MakeWorldDataEnum(struct FWorldDataEnum Enum); // Function Icarus.WorldDataLibrary.MakeWorldDataEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715410
	struct FWorldDataRowHandle MakeWorldData(struct FName RowName); // Function Icarus.WorldDataLibrary.MakeWorldData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715370
	struct FWorldDataRowHandle MakeLiteralWorldData(struct FWorldDataRowHandle RowHandle); // Function Icarus.WorldDataLibrary.MakeLiteralWorldData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17150f0
	bool IsValidName(struct FName NameValue); // Function Icarus.WorldDataLibrary.IsValidName // (Final|Native|Static|Public) // @ game+0x1714f90
	struct FWorldDataEnum IntToStruct(int32_t IntValue); // Function Icarus.WorldDataLibrary.IntToStruct // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714e70
	struct FName IntToName(int32_t IntValue); // Function Icarus.WorldDataLibrary.IntToName // (Final|Native|Static|Public) // @ game+0x1714d50
	void GetWorldDataStruct(struct FWorldDataRowHandle RowHandle, struct FWorldData WorldData, enum class EValid Paths); // Function Icarus.WorldDataLibrary.GetWorldDataStruct // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1714a10
	bool EqualEqual_FWorldDataRowHandleFWorldDataRowHandle(struct FWorldDataRowHandle RowHandleA, struct FWorldDataRowHandle RowHandleB); // Function Icarus.WorldDataLibrary.EqualEqual_FWorldDataRowHandleFWorldDataRowHandle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17143a0
	bool EqualEqual_EnumEnum(struct FWorldDataEnum A, struct FWorldDataEnum B); // Function Icarus.WorldDataLibrary.EqualEqual_EnumEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1714170
	struct FWorldDataRowHandle CastToWorldDataRowHandle(struct FRowHandle RowHandle, enum class EValid Paths); // Function Icarus.WorldDataLibrary.CastToWorldDataRowHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1713e40
	void BreakWorldDataEnum(struct FWorldDataEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WorldDataLibrary.BreakWorldDataEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1713a60
	void AddRowToWorldDataTable(struct FName Name, struct FWorldData Data, struct FWorldDataRowHandle NewRow); // Function Icarus.WorldDataLibrary.AddRowToWorldDataTable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1713790
};

// Class Icarus.WorldDataTable
// Size: 0xb8 (Inherited: 0xb8)
struct UWorldDataTable : UIcarusDataTable {
};

// Class Icarus.WorldObserverSubsystem
// Size: 0x50 (Inherited: 0x30)
struct UWorldObserverSubsystem : UWorldSubsystem {
	struct FMulticastInlineDelegate OnTreeChopped; // 0x30(0x10)
	struct FMulticastInlineDelegate OnAnimalKilled; // 0x40(0x10)
};

// Class Icarus.WorldStatsLibrary
// Size: 0x28 (Inherited: 0x28)
struct UWorldStatsLibrary : UStatsLibrary {

	struct FWorldStatsEnum MakeWorldStatsEnum(struct FWorldStatsEnum Enum); // Function Icarus.WorldStatsLibrary.MakeWorldStatsEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1715520
	bool Filter(int32_t Index); // Function Icarus.WorldStatsLibrary.Filter // (Final|Native|Static|Public) // @ game+0x17144e0
	void BreakWorldStatsEnum(struct FWorldStatsEnum Enum, struct FName Name, int32_t Index); // Function Icarus.WorldStatsLibrary.BreakWorldStatsEnum // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1713bc0
};

// Class Icarus.WorldStatsSubsystem
// Size: 0x40 (Inherited: 0x30)
struct UWorldStatsSubsystem : UWorldSubsystem {
	char pad_30[0x10]; // 0x30(0x10)

	void AddWorldStats(struct FProspectListRowHandle ProspectRowHandle); // Function Icarus.WorldStatsSubsystem.AddWorldStats // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x17166e0
};

// Class Icarus.WriteStorageCallbackProxy
// Size: 0x98 (Inherited: 0x30)
struct UWriteStorageCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFail; // 0x40(0x10)
	char pad_50[0x48]; // 0x50(0x48)

	struct UWriteStorageCallbackProxy* WriteStorage(struct FString KeyName, struct FString Contents); // Function Icarus.WriteStorageCallbackProxy.WriteStorage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1716790
};

