// BlueprintGeneratedClass HabFunctionLibrary.HabFunctionLibrary_C
// Size: 0x28 (Inherited: 0x28)
struct UHabFunctionLibrary_C : UBlueprintFunctionLibrary {

	struct FString HandStateToString(struct FHabHandStateStruct HandState, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.HandStateToString // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	struct FVector ConditionallyFilterUpDirection(struct FVector Vector, struct FVector UpAxis, bool IgnoreUp, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.ConditionallyFilterUpDirection // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	bool HasEnoughMassToBeRelevant(struct UPrimitiveComponent* Component, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.HasEnoughMassToBeRelevant // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	void HitToHandState(enum class ESpaceHandGripMode HandMode, bool Reaching, struct FHitResult Hit, float Distance, struct UObject* __WorldContext, struct FHabHandStateStruct HandState); // Function HabFunctionLibrary.HabFunctionLibrary_C.HitToHandState // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	struct FVector GetHandStateWorldNormal(struct FHabHandStateStruct State, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.GetHandStateWorldNormal // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	struct FVector GetHandStateWorldLocation(struct FHabHandStateStruct State, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.GetHandStateWorldLocation // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	struct FName GetHabCharacterShoulderName(bool ForLeftHand, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.GetHabCharacterShoulderName // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	struct FName GetHabCharacterWristName(bool ForLeftHand, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.GetHabCharacterWristName // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	bool IsTouchOrStableGrip(struct FHabHandStateStruct HandState, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.IsTouchOrStableGrip // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	void GetAutoOrientUpAxis(struct AIcarusPlayerCharacter* Character, struct FHabHandStateStruct HandState, bool ForLeftHand, struct FVector UpAxis, struct UObject* __WorldContext, bool Success); // Function HabFunctionLibrary.HabFunctionLibrary_C.GetAutoOrientUpAxis // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1a05090
	void GetAutoOrientLocationAndDirection(struct AIcarusPlayerCharacter* Character, struct FHabHandStateStruct HandState, bool ForLeftHand, struct FVector DesiredHeadLocation, struct FVector DesiredFacingDirection, struct UObject* __WorldContext, bool FoundLocationSuccessfully); // Function HabFunctionLibrary.HabFunctionLibrary_C.GetAutoOrientLocationAndDirection // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1a05090
	bool IsStableGrip(struct FHabHandStateStruct HandState, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.IsStableGrip // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1a05090
	void FindBestGripTransform(struct UPrimitiveComponent* GripTargetComponent, bool ForLeftHand, struct FVector TargetLocation, struct FRotator TargetRotation, struct UObject* __WorldContext, struct FTransform BestTransform); // Function HabFunctionLibrary.HabFunctionLibrary_C.FindBestGripTransform // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1a05090
	struct FHabHandStateStruct MakeHandStateFromGripTarget(struct UPrimitiveComponent* GripTarget, struct FVector TargetLocation, struct FRotator TargetRotation, bool Reaching, float HandDistance, float Created, struct UObject* __WorldContext); // Function HabFunctionLibrary.HabFunctionLibrary_C.MakeHandStateFromGripTarget // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1a05090
};

